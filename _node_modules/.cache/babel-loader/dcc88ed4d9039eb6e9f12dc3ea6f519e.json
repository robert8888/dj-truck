{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\PlayListExplorer\\\\PlayList\\\\Playlist_Item\\\\PlaylistItem.js\";\nimport React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { loadTrack, deleteTrack } from \"../../../../../../actions\";\nimport PlaylistContext from \"./../PlaylistContext\";\nimport { useDrag } from \"react-dnd\";\nimport ItemTypes from \"./../../../../appItemTypes\";\n\nconst PlaylistItem = props => {\n  const ctx = useContext(PlaylistContext);\n\n  const format = time => time.substr(2, time.length).toLowerCase();\n\n  let track = { ...props.item\n  };\n  track.source = track.source;\n  const [_, drag] = useDrag({\n    item: {\n      type: ItemTypes.TRACK,\n      data: track\n    },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n\n      if (item && dropResult) {\n        alert(`You dropped ${item.name} into ${dropResult.name}!`);\n      }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  return React.createElement(\"tr\", {\n    ref: drag,\n    className: \"track-list-table-row\",\n    onMouseEnter: ctx.setHover.bind(null, props.listIndex),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"track-list-table-col source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, track.source), React.createElement(\"td\", {\n    className: \"track-list-table-col title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, track.title), React.createElement(\"td\", {\n    className: \"track-list-table-col quality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, track.quality), React.createElement(\"td\", {\n    className: \"track-list-table-col time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, format(track.duration)), React.createElement(\"td\", {\n    className: \"track-list-table-col bpm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, track.bpm && track.bpm.toFixed(2)), React.createElement(\"td\", {\n    className: \"track-list-table-col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"btn-dest dest-a\",\n    onClick: e => props.load(track, \"A\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"A\"), React.createElement(Button, {\n    className: \"btn-dest dest-b\",\n    onClick: e => props.load(track, \"B\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"B\")));\n};\n\nconst mapDispatchToProps = dispach => ({\n  load: (track, destination) => dispach(loadTrack(track, destination))\n});\n\nexport default connect(null, mapDispatchToProps)(PlaylistItem);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/PlayListExplorer/PlayList/Playlist_Item/PlaylistItem.js"],"names":["React","useContext","connect","Button","loadTrack","deleteTrack","PlaylistContext","useDrag","ItemTypes","PlaylistItem","props","ctx","format","time","substr","length","toLowerCase","track","item","source","_","drag","type","TRACK","data","end","monitor","dropResult","getDropResult","alert","name","collect","isDragging","setHover","bind","listIndex","title","quality","duration","bpm","toFixed","e","load","mapDispatchToProps","dispach","destination"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { loadTrack, deleteTrack } from \"../../../../../../actions\";\r\nimport PlaylistContext from \"./../PlaylistContext\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport ItemTypes from \"./../../../../appItemTypes\";\r\n\r\n\r\nconst PlaylistItem = props => {\r\n\r\n    const ctx = useContext(PlaylistContext);\r\n\r\n    const format = time => time.substr(2, time.length).toLowerCase();\r\n\r\n    let track = {\r\n        ...props.item\r\n    }\r\n    track.source = track.source;\r\n\r\n\r\n    const [_, drag] = useDrag({\r\n        item: { \r\n             type: ItemTypes.TRACK,\r\n             data: track\r\n            },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult()\r\n            if (item && dropResult) {\r\n                alert(`You dropped ${item.name} into ${dropResult.name}!`)\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    })\r\n\r\n    return (\r\n        <tr\r\n            ref={drag}\r\n            className=\"track-list-table-row\"\r\n            onMouseEnter={ctx.setHover.bind(null, props.listIndex)}>\r\n            <td className=\"track-list-table-col source\">{track.source}</td>\r\n            <td className=\"track-list-table-col title\">{track.title}</td>\r\n            <td className=\"track-list-table-col quality\">{track.quality}</td>\r\n            <td className=\"track-list-table-col time\">{format(track.duration)}</td>\r\n            <td className=\"track-list-table-col bpm\">{track.bpm && track.bpm.toFixed(2)}</td>\r\n            <td className=\"track-list-table-col\">\r\n                <Button className=\"btn-dest dest-a\" onClick={e => props.load(track, \"A\")}>A</Button>\r\n                <Button className=\"btn-dest dest-b\" onClick={e => props.load(track, \"B\")}>B</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispach => ({\r\n    load: (track, destination) => dispach(loadTrack(track, destination))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(PlaylistItem);\r\n\r\n"]},"metadata":{},"sourceType":"module"}