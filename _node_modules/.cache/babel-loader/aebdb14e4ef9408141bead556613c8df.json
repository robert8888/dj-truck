{"ast":null,"code":"import { put, select, takeEvery } from \"redux-saga/effects\";\nimport { ACTIONS, pushDirContent, pushLog } from \"../../actions\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport Log from \"./../../utils/logger/logger\";\nexport default function* rootDirRequestSaga() {\n  yield takeEvery(ACTIONS.PL_ROOT_REQUEST, callApi);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* callApi() {\n  const token = yield select(getToken);\n\n  if (!token) {\n    return;\n  }\n\n  try {\n    const {\n      callQuery,\n      queries\n    } = getApi(\"UserAssets\");\n    let result = yield callQuery(queries.loadRootContentQl, token);\n    const isRoot = true;\n    yield put(pushDirContent(result.data.root, isRoot));\n  } catch (error) {\n    yield put(pushLog(Log.Error(path, \"Can't update bpm and offset\" + error.message, \"Sorry. During process of updating track bpm occurred a problem\", error)));\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/reqRootDirSaga.js"],"names":["put","select","takeEvery","ACTIONS","pushDirContent","pushLog","getApi","Log","rootDirRequestSaga","PL_ROOT_REQUEST","callApi","getToken","state","user","token","callQuery","queries","result","loadRootContentQl","isRoot","data","root","error","Error","path","message"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,OAAlC,QAAiD,eAAjD;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AAGA,eAAe,UAAUC,kBAAV,GAA+B;AAC1C,QAAMN,SAAS,CAACC,OAAO,CAACM,eAAT,EAA0BC,OAA1B,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUJ,OAAV,GAAoB;AAChB,QAAMI,KAAK,GAAG,MAAMb,MAAM,CAACU,QAAD,CAA1B;;AACA,MAAI,CAACG,KAAL,EAAY;AACR;AACH;;AACD,MAAI;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBV,MAAM,CAAC,YAAD,CAArC;AACA,QAAIW,MAAM,GAAG,MAAMF,SAAS,CAACC,OAAO,CAACE,iBAAT,EAA4BJ,KAA5B,CAA5B;AACA,UAAMK,MAAM,GAAG,IAAf;AACA,UAAMnB,GAAG,CAACI,cAAc,CAACa,MAAM,CAACG,IAAP,CAAYC,IAAb,EAAmBF,MAAnB,CAAf,CAAT;AACH,GALD,CAKE,OAAOG,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACK,OAAO,CAACE,GAAG,CAACgB,KAAJ,CACdC,IADc,EAEd,gCAAgCF,KAAK,CAACG,OAFxB,EAGd,gEAHc,EAIdH,KAJc,CAAD,CAAR,CAAT;AAMH;AAEJ","sourcesContent":["import { put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTIONS, pushDirContent, pushLog } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport Log from \"./../../utils/logger/logger\";\r\n\r\n\r\nexport default function* rootDirRequestSaga() {\r\n    yield takeEvery(ACTIONS.PL_ROOT_REQUEST, callApi)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nfunction* callApi() {\r\n    const token = yield select(getToken);\r\n    if (!token) {\r\n        return;\r\n    }\r\n    try {\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n        let result = yield callQuery(queries.loadRootContentQl, token);\r\n        const isRoot = true;\r\n        yield put(pushDirContent(result.data.root, isRoot));\r\n    } catch (error) {\r\n        yield put(pushLog(Log.Error(\r\n            path,\r\n            \"Can't update bpm and offset\" + error.message,\r\n            \"Sorry. During process of updating track bpm occurred a problem\",\r\n            error\r\n        )))\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}