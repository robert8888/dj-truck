{"ast":null,"code":"import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{ACTIONS}from\"./../actions\";import{produce}from\"imer\";var deck={track:{title:\"\",bpm:0,quality:\"\",duration:\"\",source:\"\",id:\"\",thumbnail:{}},// \nplayBackState:{ready:false,paused:true,cuePoint:0,cueActive:false,pitch:0,timeLeft:null}};var initState={channel:{A:_objectSpread({},deck),B:_objectSpread({},deck)}};function nextState(part){return function(state,destination,haveToBeReady,variables){if(!state.channel[destination])return state;if(haveToBeReady&&!state.channel[destination].playBackState.ready)return state;var nextState=produce(state,function(draftState){for(var _i=0,_Object$entries=Object.entries(variables);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),variable=_Object$entries$_i[0],value=_Object$entries$_i[1];if(part===\"playBackState\"){draftState.channel[destination].playBackState[variable]=value;}else if(part===\"track\"){draftState.channel[destination].track[variable]=value;}}});return nextState;};}var nextPlayBackState=nextState('playBackState');var nextTrackState=nextState('track');function consoleReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_TRACK:{var nextTrack=action.track;return produce(state,function(draftState){draftState.channel[action.destination].track={title:nextTrack.title,bpm:nextTrack.bpm||0,quality:nextTrack.quality,duration:nextTrack.duration,source:nextTrack.source,id:nextTrack.id,thumbnail:nextTrack.thumbnail};});}case ACTIONS.SET_READY:{return nextPlayBackState(state,action.destination,false,{ready:action.value});}case ACTIONS.SET_PITCH:{return nextPlayBackState(state,action.destination,false,{pitch:action.pitch});}case ACTIONS.INCREASE_BPM:{var _state$channel$action,_state$channel$action2;var prevPitch=(_state$channel$action=state.channel[action.destination])===null||_state$channel$action===void 0?void 0:(_state$channel$action2=_state$channel$action.playBackState)===null||_state$channel$action2===void 0?void 0:_state$channel$action2.pitch;if(prevPitch===undefined)return state;return nextPlayBackState(state,action.destination,false,{pitch:prevPitch+action.amount});}case ACTIONS.DECREASE_BPM:{var _state$channel$action3,_state$channel$action4;var _prevPitch=(_state$channel$action3=state.channel[action.destination])===null||_state$channel$action3===void 0?void 0:(_state$channel$action4=_state$channel$action3.playBackState)===null||_state$channel$action4===void 0?void 0:_state$channel$action4.pitch;if(_prevPitch===undefined)return state;return nextPlayBackState(state,action.destination,false,{pitch:_prevPitch-action.amount});}case ACTIONS.TOGGLE_PLAY:{var _state$channel$action5,_state$channel$action6;var prevPause=(_state$channel$action5=state.channel[action.destination])===null||_state$channel$action5===void 0?void 0:(_state$channel$action6=_state$channel$action5.playBackState)===null||_state$channel$action6===void 0?void 0:_state$channel$action6.paused;prevPause=prevPause===undefined?true:prevPause;return nextPlayBackState(state,action.destination,true,{paused:!prevPause});}case ACTIONS.SET_TIME_LEFT:{return nextPlayBackState(state,action.destination,true,{timeLeft:action.timeLeft});}case ACTIONS.TOGGLE_CUE:{var _state$channel$action7,_state$channel$action8;var prevCue=(_state$channel$action7=state.channel[action.destination])===null||_state$channel$action7===void 0?void 0:(_state$channel$action8=_state$channel$action7.playBackState)===null||_state$channel$action8===void 0?void 0:_state$channel$action8.cueActive;prevCue=prevCue===undefined?false:prevCue;return nextPlayBackState(state,action.destination,true,{cueActive:!prevCue});}case ACTIONS.CANCEL_CUE_AND_PLAY:{return nextPlayBackState(state,action.destination,true,{cueActive:false,paused:false});}case ACTIONS.SET_CUE_POINT:{return nextPlayBackState(state,action.destination,true,{cuePoint:action.position});}case ACTIONS.SET_BPM:{var bpm=action.bpm;var source=action.source;var id=action.id;var channels=[];for(var _i2=0,_Object$keys=Object.keys(state.channel);_i2<_Object$keys.length;_i2++){var channelName=_Object$keys[_i2];if(state.channel[channelName].track.id===id&&state.channel[channelName].track.source===source){channels.push(channelName);}}if(channels.length===0)return state;return channels.reduce(function(prevState,channelName){return nextTrackState(prevState,channelName,false,{bpm:bpm});},state);}default:return state;}}export default consoleReducer;/*\r\nfunction nextPlayBackState(state, destination, haveToBeReady, variables){\r\n    if(!state.channel[destination]) return state;\r\n    if(haveToBeReady && !state.channel[destination].playBackState.ready) return state;\r\n\r\n    const nextState = produce(state, (draftState) => {\r\n        for(let [variable, value] of Object.entries(variables)){\r\n            draftState.channel[destination].playBackState[variable] = value;\r\n        }\r\n    })\r\n    return nextState;\r\n}\r\n\r\nfunction nextTrackState(state, destination, haveToBeReady, variables){\r\n    if(!state.channel[destination]) return state;\r\n    if(haveToBeReady && !state.channel[destination].playBackState.ready) return state;\r\n\r\n    const nextState = produce(state, (draftState) => {\r\n        for(let [variable, value] of Object.entries(variables)){\r\n            draftState.channel[destination].track[variable] = value;\r\n        }\r\n    })\r\n    return nextState;\r\n}*/","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/reducers/decksReducer.js"],"names":["ACTIONS","produce","deck","track","title","bpm","quality","duration","source","id","thumbnail","playBackState","ready","paused","cuePoint","cueActive","pitch","timeLeft","initState","channel","A","B","nextState","part","state","destination","haveToBeReady","variables","draftState","Object","entries","variable","value","nextPlayBackState","nextTrackState","consoleReducer","action","type","LOAD_TRACK","nextTrack","SET_READY","SET_PITCH","INCREASE_BPM","prevPitch","undefined","amount","DECREASE_BPM","TOGGLE_PLAY","prevPause","SET_TIME_LEFT","TOGGLE_CUE","prevCue","CANCEL_CUE_AND_PLAY","SET_CUE_POINT","position","SET_BPM","channels","keys","channelName","push","length","reduce","prevState"],"mappings":"mPAAA,OAAUA,OAAV,KAAyB,cAAzB,CACA,OAASC,OAAT,KAAwB,MAAxB,CAEA,GAAMC,CAAAA,IAAI,CAAG,CACTC,KAAK,CAAG,CACJC,KAAK,CAAG,EADJ,CAEJC,GAAG,CAAG,CAFF,CAGJC,OAAO,CAAG,EAHN,CAIJC,QAAQ,CAAG,EAJP,CAKJC,MAAM,CAAG,EALL,CAMJC,EAAE,CAAE,EANA,CAOJC,SAAS,CAAG,EAPR,CADC,CASN;AACHC,aAAa,CAAG,CACZC,KAAK,CAAE,KADK,CAEZC,MAAM,CAAE,IAFI,CAGZC,QAAQ,CAAE,CAHE,CAIZC,SAAS,CAAE,KAJC,CAKZC,KAAK,CAAE,CALK,CAMZC,QAAQ,CAAG,IANC,CAVP,CAAb,CAqBA,GAAMC,CAAAA,SAAS,CAAG,CACdC,OAAO,CAAE,CACLC,CAAC,kBACMlB,IADN,CADI,CAILmB,CAAC,kBACMnB,IADN,CAJI,CADK,CAAlB,CAWA,QAASoB,CAAAA,SAAT,CAAmBC,IAAnB,CAAwB,CACpB,MAAO,UAACC,KAAD,CAAQC,WAAR,CAAqBC,aAArB,CAAoCC,SAApC,CAAgD,CAEnD,GAAG,CAACH,KAAK,CAACL,OAAN,CAAcM,WAAd,CAAJ,CAAgC,MAAOD,CAAAA,KAAP,CAChC,GAAGE,aAAa,EAAI,CAACF,KAAK,CAACL,OAAN,CAAcM,WAAd,EAA2Bd,aAA3B,CAAyCC,KAA9D,CAAqE,MAAOY,CAAAA,KAAP,CAErE,GAAMF,CAAAA,SAAS,CAAGrB,OAAO,CAACuB,KAAD,CAAQ,SAACI,UAAD,CAAgB,CAC7C,6BAA6BC,MAAM,CAACC,OAAP,CAAeH,SAAf,CAA7B,gCAAuD,8DAA9CI,QAA8C,uBAApCC,KAAoC,uBACnD,GAAGT,IAAI,GAAK,eAAZ,CAA4B,CACxBK,UAAU,CAACT,OAAX,CAAmBM,WAAnB,EAAgCd,aAAhC,CAA8CoB,QAA9C,EAA0DC,KAA1D,CACH,CAFD,IAEO,IAAGT,IAAI,GAAI,OAAX,CAAmB,CACtBK,UAAU,CAACT,OAAX,CAAmBM,WAAnB,EAAgCtB,KAAhC,CAAsC4B,QAAtC,EAAkDC,KAAlD,CACH,CACJ,CACJ,CARwB,CAAzB,CAUA,MAAOV,CAAAA,SAAP,CACH,CAhBD,CAiBH,CAED,GAAMW,CAAAA,iBAAiB,CAAGX,SAAS,CAAC,eAAD,CAAnC,CACA,GAAMY,CAAAA,cAAc,CAAGZ,SAAS,CAAC,OAAD,CAAhC,CAIA,QAASa,CAAAA,cAAT,EAAkD,IAA1BX,CAAAA,KAA0B,2DAAlBN,SAAkB,IAAPkB,CAAAA,MAAO,2CAC9C,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKrC,CAAAA,OAAO,CAACsC,UAAb,CAA0B,CACtB,GAAMC,CAAAA,SAAS,CAAGH,MAAM,CAACjC,KAAzB,CACA,MAAOF,CAAAA,OAAO,CAACuB,KAAD,CAAQ,SAAAI,UAAU,CAAI,CAChCA,UAAU,CAACT,OAAX,CAAmBiB,MAAM,CAACX,WAA1B,EAAuCtB,KAAvC,CAA+C,CAC3CC,KAAK,CAAGmC,SAAS,CAACnC,KADyB,CAE3CC,GAAG,CAAGkC,SAAS,CAAClC,GAAV,EAAiB,CAFoB,CAG3CC,OAAO,CAAGiC,SAAS,CAACjC,OAHuB,CAI3CC,QAAQ,CAAGgC,SAAS,CAAChC,QAJsB,CAK3CC,MAAM,CAAG+B,SAAS,CAAC/B,MALwB,CAM3CC,EAAE,CAAG8B,SAAS,CAAC9B,EAN4B,CAO3CC,SAAS,CAAG6B,SAAS,CAAC7B,SAPqB,CAA/C,CASH,CAVa,CAAd,CAWH,CAED,IAAKV,CAAAA,OAAO,CAACwC,SAAb,CAAyB,CACrB,MAAOP,CAAAA,iBAAiB,CAACT,KAAD,CAAQY,MAAM,CAACX,WAAf,CAA4B,KAA5B,CAAmC,CAAEb,KAAK,CAAGwB,MAAM,CAACJ,KAAjB,CAAnC,CAAxB,CACH,CAED,IAAKhC,CAAAA,OAAO,CAACyC,SAAb,CAAyB,CACrB,MAAOR,CAAAA,iBAAiB,CAACT,KAAD,CAAQY,MAAM,CAACX,WAAf,CAA4B,KAA5B,CAAmC,CAAET,KAAK,CAAGoB,MAAM,CAACpB,KAAjB,CAAnC,CAAxB,CACH,CAED,IAAKhB,CAAAA,OAAO,CAAC0C,YAAb,CAA4B,kDACxB,GAAIC,CAAAA,SAAS,wBAAGnB,KAAK,CAACL,OAAN,CAAciB,MAAM,CAACX,WAArB,CAAH,wEAAG,sBAAmCd,aAAtC,iDAAG,uBAAkDK,KAAlE,CACA,GAAG2B,SAAS,GAAKC,SAAjB,CAA6B,MAAOpB,CAAAA,KAAP,CAC7B,MAAOS,CAAAA,iBAAiB,CAACT,KAAD,CAAQY,MAAM,CAACX,WAAf,CAA4B,KAA5B,CAAmC,CAAET,KAAK,CAAG2B,SAAS,CAAGP,MAAM,CAACS,MAA7B,CAAnC,CAAxB,CACH,CAED,IAAK7C,CAAAA,OAAO,CAAC8C,YAAb,CAA4B,mDACxB,GAAIH,CAAAA,UAAS,yBAAGnB,KAAK,CAACL,OAAN,CAAciB,MAAM,CAACX,WAArB,CAAH,yEAAG,uBAAmCd,aAAtC,iDAAG,uBAAkDK,KAAlE,CACA,GAAG2B,UAAS,GAAKC,SAAjB,CAA6B,MAAOpB,CAAAA,KAAP,CAC7B,MAAOS,CAAAA,iBAAiB,CAACT,KAAD,CAAQY,MAAM,CAACX,WAAf,CAA4B,KAA5B,CAAmC,CAAET,KAAK,CAAG2B,UAAS,CAAGP,MAAM,CAACS,MAA7B,CAAnC,CAAxB,CACH,CAGD,IAAK7C,CAAAA,OAAO,CAAC+C,WAAb,CAA2B,mDACvB,GAAIC,CAAAA,SAAS,yBAAGxB,KAAK,CAACL,OAAN,CAAciB,MAAM,CAACX,WAArB,CAAH,yEAAG,uBAAmCd,aAAtC,iDAAG,uBAAkDE,MAAlE,CACAmC,SAAS,CAAIA,SAAS,GAAKJ,SAAf,CAA4B,IAA5B,CAAmCI,SAA/C,CACA,MAAOf,CAAAA,iBAAiB,CAACT,KAAD,CAAQY,MAAM,CAACX,WAAf,CAA4B,IAA5B,CAAkC,CAAEZ,MAAM,CAAG,CAACmC,SAAZ,CAAlC,CAAxB,CACH,CAED,IAAKhD,CAAAA,OAAO,CAACiD,aAAb,CAA6B,CACzB,MAAOhB,CAAAA,iBAAiB,CAACT,KAAD,CAAQY,MAAM,CAACX,WAAf,CAA4B,IAA5B,CAAkC,CAACR,QAAQ,CAAEmB,MAAM,CAACnB,QAAlB,CAAlC,CAAxB,CACH,CAED,IAAKjB,CAAAA,OAAO,CAACkD,UAAb,CAA0B,mDACtB,GAAIC,CAAAA,OAAO,yBAAG3B,KAAK,CAACL,OAAN,CAAciB,MAAM,CAACX,WAArB,CAAH,yEAAG,uBAAmCd,aAAtC,iDAAG,uBAAkDI,SAAhE,CACAoC,OAAO,CAAIA,OAAO,GAAKP,SAAb,CAA0B,KAA1B,CAAiCO,OAA3C,CACA,MAAOlB,CAAAA,iBAAiB,CAACT,KAAD,CAAQY,MAAM,CAACX,WAAf,CAA4B,IAA5B,CAAkC,CAAEV,SAAS,CAAG,CAACoC,OAAf,CAAlC,CAAxB,CACH,CAED,IAAKnD,CAAAA,OAAO,CAACoD,mBAAb,CAAmC,CAC/B,MAAOnB,CAAAA,iBAAiB,CAACT,KAAD,CAAQY,MAAM,CAACX,WAAf,CAA4B,IAA5B,CAAkC,CACtDV,SAAS,CAAE,KAD2C,CAEtDF,MAAM,CAAE,KAF8C,CAAlC,CAAxB,CAIH,CAED,IAAKb,CAAAA,OAAO,CAACqD,aAAb,CAA6B,CACzB,MAAOpB,CAAAA,iBAAiB,CAACT,KAAD,CAAQY,MAAM,CAACX,WAAf,CAA4B,IAA5B,CAAkC,CAAEX,QAAQ,CAAGsB,MAAM,CAACkB,QAApB,CAAlC,CAAxB,CACH,CAED,IAAKtD,CAAAA,OAAO,CAACuD,OAAb,CAAuB,CACnB,GAAMlD,CAAAA,GAAG,CAAG+B,MAAM,CAAC/B,GAAnB,CACA,GAAMG,CAAAA,MAAM,CAAG4B,MAAM,CAAC5B,MAAtB,CACA,GAAMC,CAAAA,EAAE,CAAG2B,MAAM,CAAC3B,EAAlB,CACA,GAAI+C,CAAAA,QAAQ,CAAG,EAAf,CACA,2BAAuB3B,MAAM,CAAC4B,IAAP,CAAYjC,KAAK,CAACL,OAAlB,CAAvB,+BAAkD,CAA9C,GAAIuC,CAAAA,WAAW,kBAAf,CACA,GAAGlC,KAAK,CAACL,OAAN,CAAcuC,WAAd,EAA2BvD,KAA3B,CAAiCM,EAAjC,GAAwCA,EAAxC,EACIe,KAAK,CAACL,OAAN,CAAcuC,WAAd,EAA2BvD,KAA3B,CAAiCK,MAAjC,GAA4CA,MADnD,CAEI,CACIgD,QAAQ,CAACG,IAAT,CAAcD,WAAd,EACH,CAER,CACD,GAAGF,QAAQ,CAACI,MAAT,GAAoB,CAAvB,CAA0B,MAAOpC,CAAAA,KAAP,CAE1B,MAAOgC,CAAAA,QAAQ,CAACK,MAAT,CAAgB,SAACC,SAAD,CAAYJ,WAAZ,CAA4B,CAC/C,MAAOxB,CAAAA,cAAc,CAAC4B,SAAD,CAAYJ,WAAZ,CAAyB,KAAzB,CAAgC,CAACrD,GAAG,CAAGA,GAAP,CAAhC,CAArB,CACH,CAFM,CAEJmB,KAFI,CAAP,CAGH,CAED,QAAU,MAAOA,CAAAA,KAAP,CApFd,CAsFH,CAED,cAAeW,CAAAA,cAAf,CAKA","sourcesContent":["import {  ACTIONS } from \"./../actions\";\r\nimport { produce } from \"imer\";\r\n\r\nconst deck = {\r\n    track : {\r\n        title : \"\",\r\n        bpm : 0,\r\n        quality : \"\",\r\n        duration : \"\",\r\n        source : \"\",\r\n        id: \"\",\r\n        thumbnail : {}\r\n    }, // \r\n    playBackState : {\r\n        ready: false,\r\n        paused: true,\r\n        cuePoint: 0,\r\n        cueActive: false,\r\n        pitch: 0,\r\n        timeLeft : null\r\n    }\r\n}\r\n\r\n\r\nconst initState = {\r\n    channel: {\r\n        A:{\r\n            ...deck\r\n        },\r\n        B:{\r\n            ...deck\r\n        }\r\n    },\r\n}\r\n\r\nfunction nextState(part){\r\n    return (state, destination, haveToBeReady, variables)=>{\r\n\r\n        if(!state.channel[destination]) return state;\r\n        if(haveToBeReady && !state.channel[destination].playBackState.ready) return state;\r\n\r\n        const nextState = produce(state, (draftState) => {\r\n            for(let [variable, value] of Object.entries(variables)){\r\n                if(part === \"playBackState\"){\r\n                    draftState.channel[destination].playBackState[variable] = value;\r\n                } else if(part ===\"track\"){\r\n                    draftState.channel[destination].track[variable] = value;\r\n                }\r\n            }\r\n        })\r\n        \r\n        return nextState;\r\n    }\r\n}\r\n\r\nconst nextPlayBackState = nextState('playBackState');\r\nconst nextTrackState = nextState('track');\r\n\r\n\r\n\r\nfunction consoleReducer(state = initState, action){\r\n    switch(action.type){\r\n        case ACTIONS.LOAD_TRACK : {\r\n            const nextTrack = action.track;\r\n            return produce(state, draftState => {\r\n                draftState.channel[action.destination].track = {\r\n                    title : nextTrack.title,\r\n                    bpm : nextTrack.bpm || 0,\r\n                    quality : nextTrack.quality,\r\n                    duration : nextTrack.duration,\r\n                    source : nextTrack.source,\r\n                    id : nextTrack.id,\r\n                    thumbnail : nextTrack.thumbnail,\r\n                }\r\n            })\r\n        }\r\n\r\n        case ACTIONS.SET_READY : {\r\n            return nextPlayBackState(state, action.destination, false, { ready : action.value })\r\n        }\r\n\r\n        case ACTIONS.SET_PITCH : {\r\n            return nextPlayBackState(state, action.destination, false, { pitch : action.pitch })\r\n        }\r\n\r\n        case ACTIONS.INCREASE_BPM : {\r\n            let prevPitch = state.channel[action.destination]?.playBackState?.pitch;\r\n            if(prevPitch === undefined ) return state;\r\n            return nextPlayBackState(state, action.destination, false, { pitch : prevPitch + action.amount })\r\n        }\r\n\r\n        case ACTIONS.DECREASE_BPM : {\r\n            let prevPitch = state.channel[action.destination]?.playBackState?.pitch;\r\n            if(prevPitch === undefined ) return state;\r\n            return nextPlayBackState(state, action.destination, false, { pitch : prevPitch - action.amount })\r\n        }\r\n\r\n\r\n        case ACTIONS.TOGGLE_PLAY : {\r\n            let prevPause = state.channel[action.destination]?.playBackState?.paused;\r\n            prevPause = (prevPause === undefined) ? true : prevPause;\r\n            return nextPlayBackState(state, action.destination, true, { paused : !prevPause })\r\n        }\r\n\r\n        case ACTIONS.SET_TIME_LEFT : {\r\n            return nextPlayBackState(state, action.destination, true, {timeLeft: action.timeLeft})\r\n        }\r\n\r\n        case ACTIONS.TOGGLE_CUE : {\r\n            let prevCue = state.channel[action.destination]?.playBackState?.cueActive;\r\n            prevCue = (prevCue === undefined) ? false: prevCue;\r\n            return nextPlayBackState(state, action.destination, true, { cueActive : !prevCue })\r\n        }\r\n\r\n        case ACTIONS.CANCEL_CUE_AND_PLAY : {\r\n            return nextPlayBackState(state, action.destination, true, {\r\n                cueActive: false,\r\n                paused: false,\r\n            })\r\n        }\r\n\r\n        case ACTIONS.SET_CUE_POINT : {\r\n            return nextPlayBackState(state, action.destination, true, { cuePoint : action.position })\r\n        }\r\n\r\n        case ACTIONS.SET_BPM : {\r\n            const bpm = action.bpm;\r\n            const source = action.source;\r\n            const id = action.id;\r\n            let channels = [];\r\n            for(let channelName of Object.keys(state.channel)){\r\n                if(state.channel[channelName].track.id === id \r\n                    && state.channel[channelName].track.source === source)\r\n                    {\r\n                        channels.push(channelName);\r\n                    }\r\n\r\n            }\r\n            if(channels.length === 0) return state;\r\n\r\n            return channels.reduce((prevState, channelName) => {\r\n                return nextTrackState(prevState, channelName, false, {bpm : bpm})\r\n            }, state);\r\n        }\r\n\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default consoleReducer;\r\n\r\n\r\n\r\n\r\n/*\r\nfunction nextPlayBackState(state, destination, haveToBeReady, variables){\r\n    if(!state.channel[destination]) return state;\r\n    if(haveToBeReady && !state.channel[destination].playBackState.ready) return state;\r\n\r\n    const nextState = produce(state, (draftState) => {\r\n        for(let [variable, value] of Object.entries(variables)){\r\n            draftState.channel[destination].playBackState[variable] = value;\r\n        }\r\n    })\r\n    return nextState;\r\n}\r\n\r\nfunction nextTrackState(state, destination, haveToBeReady, variables){\r\n    if(!state.channel[destination]) return state;\r\n    if(haveToBeReady && !state.channel[destination].playBackState.ready) return state;\r\n\r\n    const nextState = produce(state, (draftState) => {\r\n        for(let [variable, value] of Object.entries(variables)){\r\n            draftState.channel[destination].track[variable] = value;\r\n        }\r\n    })\r\n    return nextState;\r\n}*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}