{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\ErrorBoundary\\\\ErrorBoundary.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Log } from \"./../../../../utils/logger/logger\";\nimport { pushLog, clearError } from \"./../../../../actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport \"./error-boundary.scss\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error, info) {\n    return {\n      hasError: true,\n      error,\n      info\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.props.push(Log.Error(info.componentStack, \"Component throw Error: \" + error.message, \"Sorry. Something went wrong :(. One of application component doesn't work correctly.\", error));\n  }\n\n  clearError() {\n    this.setState(() => ({\n      hasError: false\n    }));\n    this.props.clear();\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(\"div\", {\n        className: \"componet-error-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Sorry. Someting went wrong. Componet dosn't work correctly.\"), React.createElement(Button, {\n        onClick: this.clearError.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faSyncAlt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  push: log => dispatch(pushLog(log)),\n  clear: () => dispatch(clearError())\n});\n\nexport default connect(null, mapDispatchToProps)(ErrorBoundary);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/ErrorBoundary/ErrorBoundary.js"],"names":["React","connect","Log","pushLog","clearError","FontAwesomeIcon","faSyncAlt","Button","ErrorBoundary","Component","constructor","props","state","hasError","error","getDerivedStateFromError","info","componentDidCatch","push","Error","componentStack","message","setState","clear","render","bind","children","mapDispatchToProps","dispatch","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,GAAR,QAAkB,mCAAlB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,uBAAlC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,SAAR,QAAwB,mCAAxB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAO,uBAAP;;AAEA,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF;AAETC,MAAAA,KAAK,EAAG;AAFC,KAAb;AAIH;;AAED,SAAOC,wBAAP,CAAgCD,KAAhC,EAAuCE,IAAvC,EAA4C;AACxC,WAAO;AACHH,MAAAA,QAAQ,EAAG,IADR;AAEHC,MAAAA,KAFG;AAGHE,MAAAA;AAHG,KAAP;AAKH;;AAEDC,EAAAA,iBAAiB,CAACH,KAAD,EAAQE,IAAR,EAAa;AAC1B,SAAKL,KAAL,CAAWO,IAAX,CAAgBhB,GAAG,CAACiB,KAAJ,CACZH,IAAI,CAACI,cADO,EAEZ,4BAA4BN,KAAK,CAACO,OAFtB,EAGZ,sFAHY,EAIZP,KAJY,CAAhB;AAMH;;AAEDV,EAAAA,UAAU,GAAE;AACR,SAAKkB,QAAL,CAAc,OAAM;AAChBT,MAAAA,QAAQ,EAAE;AADM,KAAN,CAAd;AAGA,SAAKF,KAAL,CAAWY,KAAX;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKZ,KAAL,CAAWC,QAAd,EAAuB;AACnB,aACI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKT,UAAL,CAAgBqB,IAAhB,CAAqB,IAArB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6C,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEnB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7C,CAFJ,CADJ;AAMH;;AAED,WAAO,KAAKK,KAAL,CAAWe,QAAlB;AACH;;AA5CsC;;AA+C3C,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,IAAI,EAAGW,GAAG,IAAID,QAAQ,CAACzB,OAAO,CAAC0B,GAAD,CAAR,CADc;AAEpCN,EAAAA,KAAK,EAAE,MAAMK,QAAQ,CAACxB,UAAU,EAAX;AAFe,CAAL,CAAnC;;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCnB,aAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Log} from \"./../../../../utils/logger/logger\";\r\nimport {pushLog, clearError} from \"./../../../../actions\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faSyncAlt} from \"@fortawesome/free-solid-svg-icons\"\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"./error-boundary.scss\"\r\n\r\nclass ErrorBoundary extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false,\r\n            error : null,\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error, info){\r\n        return {\r\n            hasError : true,\r\n            error,\r\n            info\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.props.push(Log.Error(\r\n            info.componentStack,\r\n            \"Component throw Error: \" + error.message,\r\n            \"Sorry. Something went wrong :(. One of application component doesn't work correctly.\",\r\n            error,\r\n        ))\r\n    }\r\n\r\n    clearError(){\r\n        this.setState(()=> ({\r\n            hasError: false,\r\n        }))\r\n        this.props.clear();\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return (\r\n                <div className=\"componet-error-container\">\r\n                    <h6>Sorry. Someting went wrong. Componet dosn't work correctly.</h6>\r\n                    <Button onClick={this.clearError.bind(this)}><FontAwesomeIcon icon={faSyncAlt}/></Button>\r\n                </div>\r\n            )\r\n        } \r\n        \r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    push : log => dispatch(pushLog(log)),\r\n    clear: () => dispatch(clearError()),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ErrorBoundary);"]},"metadata":{},"sourceType":"module"}