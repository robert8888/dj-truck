{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\introduction\\\\Content\\\\Content.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./content.scss\";\nimport usePath from \"../Hooks/usePath\";\nconst baseMarkupsPath = './../markups/';\n\nconst getMarkup = () => require.context('./markups', true, /\\.*md/).keys();\n\nconst load = module => import(`./markups/${module}`).then(module => console.log(module));\n\nconst Content = ({\n  markdown\n}) => {\n  const [currentPath] = usePath();\n  const [md, setMd] = useState(null);\n  useEffect(() => {\n    if (!currentPath.length) return;\n    let pattern = \"\";\n    currentPath.forEach(slug => pattern += \"\\\\/?\\\\d?\\\\.\" + slug);\n    pattern += \"\\\\.md\";\n    let regex = new RegExp(pattern);\n    let file = getMarkup().filter(path => regex.test(path))[0]; //?.replace(\"./\", baseMarkupsPath);\n\n    if (!file) return;\n    console.log(\"file\", file);\n    console.log(\"./../markups/2.console/0.deck.md\");\n    console.log(\"is the same\", file === \"./../markups/2.console/0.deck.md\"); // import(file).then( module => console.log(module))\n    // let markdown = require(\"./../markups/2.console/0.deck.md\");\n\n    file = \"./markups/2.console/0.deck.md\"; //    import(\"./markups/2.console/0.deck.md\").then( module => console.log(module))\n    // fetch(markdown).then(respone => console.log(respone))\n\n    load(\"2.console/0.deck.md\");\n  }, [currentPath, md]);\n  return React.createElement(\"main\", {\n    className: \"introduction__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"I will be render from md;\");\n};\n\nexport default Content;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/introduction/Content/Content.js"],"names":["React","useEffect","useState","usePath","baseMarkupsPath","getMarkup","require","context","keys","load","module","then","console","log","Content","markdown","currentPath","md","setMd","length","pattern","forEach","slug","regex","RegExp","file","filter","path","test"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,eAAe,GAAG,eAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgB,WAAhB,EAA6B,IAA7B,EAAmC,OAAnC,EAA4CC,IAA5C,EAAxB;;AAEA,MAAMC,IAAI,GAAIC,MAAD,IAAY,OAAQ,aAAYA,MAAO,EAA3B,EAA8BC,IAA9B,CAAoCD,MAAM,IAAIE,OAAO,CAACC,GAAR,CAAYH,MAAZ,CAA9C,CAAzB;;AAGA,MAAMI,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC5B,QAAM,CAACC,WAAD,IAAgBb,OAAO,EAA7B;AACA,QAAM,CAACc,EAAD,EAAMC,KAAN,IAAehB,QAAQ,CAAC,IAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACe,WAAW,CAACG,MAAhB,EAAwB;AACxB,QAAIC,OAAO,GAAG,EAAd;AACAJ,IAAAA,WAAW,CAACK,OAAZ,CAAqBC,IAAI,IAAIF,OAAO,IAAI,gBAAgBE,IAAxD;AACAF,IAAAA,OAAO,IAAI,OAAX;AACA,QAAIG,KAAK,GAAG,IAAIC,MAAJ,CAAWJ,OAAX,CAAZ;AACA,QAAIK,IAAI,GAAGpB,SAAS,GAAGqB,MAAZ,CAAoBC,IAAI,IAAIJ,KAAK,CAACK,IAAN,CAAWD,IAAX,CAA5B,EAA8C,CAA9C,CAAX,CANU,CAMiD;;AAC3D,QAAG,CAACF,IAAJ,EAAU;AACTb,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBY,IAApB;AACDb,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA4BY,IAAI,KAAK,kCAArC,EAVU,CAWV;AACA;;AACCA,IAAAA,IAAI,GAAG,+BAAP,CAbS,CAcd;AACG;;AACChB,IAAAA,IAAI,CAAC,qBAAD,CAAJ;AACH,GAjBQ,EAiBP,CAACO,WAAD,EAAcC,EAAd,CAjBO,CAAT;AAmBA,SACI;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ;AAKH,CA5BD;;AA8BA,eAAeH,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport \"./content.scss\";\r\nimport usePath from \"../Hooks/usePath\";\r\n\r\nconst baseMarkupsPath = './../markups/'\r\n\r\nconst getMarkup = () => require.context('./markups', true, /\\.*md/).keys()\r\n\r\nconst load = (module) => import(`./markups/${module}`).then( module => console.log(module));\r\n\r\n\r\nconst Content = ({markdown}) => {\r\n    const [currentPath] = usePath();\r\n    const [md , setMd] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(!currentPath.length) return;\r\n        let pattern = \"\";\r\n        currentPath.forEach( slug => pattern += \"\\\\/?\\\\d?\\\\.\" + slug)\r\n        pattern += \"\\\\.md\";\r\n        let regex = new RegExp(pattern);\r\n        let file = getMarkup().filter( path => regex.test(path))[0]//?.replace(\"./\", baseMarkupsPath);\r\n        if(!file) return;\r\n         console.log(\"file\", file)\r\n        console.log(\"./../markups/2.console/0.deck.md\")\r\n        console.log(\"is the same\" , file === \"./../markups/2.console/0.deck.md\")\r\n        // import(file).then( module => console.log(module))\r\n        // let markdown = require(\"./../markups/2.console/0.deck.md\");\r\n         file = \"./markups/2.console/0.deck.md\";\r\n    //    import(\"./markups/2.console/0.deck.md\").then( module => console.log(module))\r\n       // fetch(markdown).then(respone => console.log(respone))\r\n        load(\"2.console/0.deck.md\")\r\n    },[currentPath, md])\r\n\r\n    return (\r\n        <main className=\"introduction__content\">\r\n            I will be render from md;\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}