{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Mixer\\\\Recorder\\\\Recorder.js\";\nimport React, { useState, useCallback } from \"react\";\nimport RecordButton from \"./../componets/RecordButton/RecordButton\";\nimport RecordNameInput from \"./../componets/RecordNameInput/RecordNameInput\";\nimport \"./recorder.scss\";\nimport { Form } from \"react-bootstrap\";\nimport RecordTime from \"../componets/RecordTime/RecordTime\";\n\nconst Recorder = props => {\n  const [inputDisabled, setInputDisabled] = useState(false);\n  const [timeRuning, setTimeRuning] = useState(false);\n  let clearTimeHandler;\n  const recordStateChange = useCallback(state => {\n    console.log(\"change state\", state);\n    setInputDisabled(!!state);\n    setTimeRuning(!!state);\n\n    if (!state) {}\n  }, [setInputDisabled, setTimeRuning]); //  console.log(recordStateChange)\n\n  return React.createElement(\"div\", {\n    className: \"recorder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"REC\"), React.createElement(RecordButton, {\n    onChange: recordStateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(RecordNameInput, {\n    disabled: inputDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(RecordTime, {\n    runing: timeRuning,\n    clearHandler: handler => clearTimeHandler = handler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nexport default Recorder;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Console/Mixer/Recorder/Recorder.js"],"names":["React","useState","useCallback","RecordButton","RecordNameInput","Form","RecordTime","Recorder","props","inputDisabled","setInputDisabled","timeRuning","setTimeRuning","clearTimeHandler","recordStateChange","state","console","log","handler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,eAAP,MAA4B,gDAA5B;AACA,OAAO,iBAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAG;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEA,MAAIY,gBAAJ;AAEA,QAAMC,iBAAiB,GAAGZ,WAAW,CAAEa,KAAD,IAAS;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AACAL,IAAAA,gBAAgB,CAAC,CAAC,CAACK,KAAH,CAAhB;AACAH,IAAAA,aAAa,CAAC,CAAC,CAACG,KAAH,CAAb;;AACA,QAAG,CAACA,KAAJ,EAAU,CAET;AACJ,GAPoC,EAOlC,CAACL,gBAAD,EAAmBE,aAAnB,CAPkC,CAArC,CANqB,CAevB;;AACE,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEE,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEL,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEE,UAApB;AAAgC,IAAA,YAAY,EAAGO,OAAO,IAAIL,gBAAgB,GAAGK,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAxBD;;AA0BA,eAAeX,QAAf","sourcesContent":["import React, { useState,  useCallback } from \"react\";\r\nimport RecordButton from \"./../componets/RecordButton/RecordButton\"\r\nimport RecordNameInput from \"./../componets/RecordNameInput/RecordNameInput\"\r\nimport \"./recorder.scss\";\r\nimport {Form} from \"react-bootstrap\"\r\nimport RecordTime from \"../componets/RecordTime/RecordTime\";\r\n\r\nconst Recorder = props =>{\r\n    const [inputDisabled, setInputDisabled] = useState(false);\r\n    const [timeRuning, setTimeRuning] = useState(false)\r\n\r\n    let clearTimeHandler;\r\n\r\n    const recordStateChange = useCallback((state)=>{\r\n        console.log(\"change state\", state)\r\n        setInputDisabled(!!state);\r\n        setTimeRuning(!!state); \r\n        if(!state){\r\n\r\n        }\r\n    }, [setInputDisabled, setTimeRuning])\r\n\r\n  //  console.log(recordStateChange)\r\n    return (\r\n        <div className=\"recorder\">\r\n            <div className=\"label\">REC</div>\r\n            <RecordButton onChange={recordStateChange} />\r\n            <RecordNameInput disabled={inputDisabled}/>\r\n            <RecordTime runing={timeRuning} clearHandler={ handler => clearTimeHandler = handler}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}