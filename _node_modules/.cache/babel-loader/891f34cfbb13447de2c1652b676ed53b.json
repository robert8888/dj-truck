{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\console\\\\components\\\\Console\\\\Mixer\\\\Recorder\\\\Recorder.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createRecordinRequest, endRecording } from \"./../../../../../../actions\";\nimport RecordButton from \"./../componets/RecordButton/RecordButton\";\nimport RecordNameInput from \"./../componets/RecordNameInput/RecordNameInput\";\nimport RecordTime from \"../componets/RecordTime/RecordTime\";\nimport \"./recorder.scss\";\n\nconst Recorder = ({\n  recording,\n  startRecording,\n  endRecording,\n  userLogged\n}) => {\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [inputDisabled, setInputDisabled] = useState(false);\n  const [timeRuning, setTimeRuning] = useState(false);\n  const [recName, setRecName] = useState(null);\n  const [clearTimeHandler, setClearTimeHandler] = useState(null);\n  useEffect(() => {\n    setInputDisabled(!userLogged);\n    setButtonDisabled(!userLogged);\n  }, [userLogged, setButtonDisabled, setInputDisabled]);\n  const assignClearHandler = useCallback(handler => {\n    setClearTimeHandler(handler);\n    setClearTimeHandler(() => console.log(\"test\"));\n    console.log(\"handler\", handler);\n  }, [setClearTimeHandler]);\n  const c = clearTimeHandler;\n  const recordStateChange = useCallback(state => {\n    console.log(c);\n\n    if (state) {\n      startRecording(recName);\n    } else {\n      endRecording();\n\n      if (clearTimeHandler) {\n        clearTimeHandler();\n      }\n    }\n\n    setInputDisabled(state);\n  }, [setInputDisabled, setTimeRuning, endRecording, recName, clearTimeHandler]);\n  useEffect(() => {\n    setTimeRuning(recording);\n  }, [recording, setTimeRuning]);\n  return React.createElement(\"div\", {\n    className: \"recorder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"REC\"), React.createElement(RecordButton, {\n    onChange: recordStateChange,\n    disabled: buttonDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(RecordNameInput, {\n    disabled: inputDisabled,\n    onChange: str => setRecName(str),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(RecordTime, {\n    runing: timeRuning,\n    clearHandler: assignClearHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recording: state.recorder.recording,\n  userLogged: state.user.logged\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startRecording: recName => dispatch(createRecordinRequest(recName)),\n  endRecording: () => dispatch(endRecording())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recorder);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Mixer/Recorder/Recorder.js"],"names":["React","useState","useCallback","useEffect","connect","createRecordinRequest","endRecording","RecordButton","RecordNameInput","RecordTime","Recorder","recording","startRecording","userLogged","buttonDisabled","setButtonDisabled","inputDisabled","setInputDisabled","timeRuning","setTimeRuning","recName","setRecName","clearTimeHandler","setClearTimeHandler","assignClearHandler","handler","console","log","c","recordStateChange","state","str","mapStateToProps","recorder","user","logged","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState,  useCallback, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createRecordinRequest , endRecording } from \"./../../../../../../actions\";\r\nimport RecordButton from \"./../componets/RecordButton/RecordButton\";\r\nimport RecordNameInput from \"./../componets/RecordNameInput/RecordNameInput\";\r\nimport RecordTime from \"../componets/RecordTime/RecordTime\";\r\nimport \"./recorder.scss\";\r\n\r\n\r\nconst Recorder = ({ recording, startRecording, endRecording , userLogged }) =>{\r\n    const [buttonDisabled, setButtonDisabled] = useState(false);\r\n    const [inputDisabled, setInputDisabled] = useState(false);\r\n    const [timeRuning, setTimeRuning] = useState(false)\r\n    const [recName , setRecName] = useState(null);\r\n\r\n    const [clearTimeHandler , setClearTimeHandler] = useState(null);\r\n\r\n\r\n    useEffect(()=>{\r\n        setInputDisabled(!userLogged);\r\n        setButtonDisabled(!userLogged);\r\n    }, [userLogged, setButtonDisabled, setInputDisabled])\r\n\r\n    const assignClearHandler = useCallback( handler => {\r\n        \r\n        setClearTimeHandler(handler)\r\n        setClearTimeHandler(()=>console.log(\"test\"))\r\n        console.log(\"handler\", handler)\r\n    }, [setClearTimeHandler])\r\n\r\n    const c  = clearTimeHandler;\r\n    const recordStateChange = useCallback((state)=>{\r\n        console.log(c)\r\n        if(state){\r\n            startRecording(recName);\r\n        } else {\r\n            endRecording();\r\n\r\n            if(clearTimeHandler) {\r\n                clearTimeHandler();\r\n            }\r\n        }\r\n        setInputDisabled(state);\r\n    }, [setInputDisabled, setTimeRuning, endRecording, recName, clearTimeHandler])\r\n\r\n    useEffect(()=>{\r\n        setTimeRuning(recording);\r\n    }, [recording, setTimeRuning])\r\n\r\n\r\n    return (\r\n        <div className=\"recorder\">\r\n            <div className=\"label\">REC</div>\r\n            <RecordButton \r\n                onChange={recordStateChange}\r\n                disabled={buttonDisabled} />\r\n            <RecordNameInput \r\n                disabled={inputDisabled}\r\n                onChange={str => setRecName(str)}/>\r\n            <RecordTime \r\n                runing={timeRuning} \r\n                clearHandler={ assignClearHandler }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recording : state.recorder.recording,\r\n    userLogged : state.user.logged,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    startRecording : recName => dispatch(createRecordinRequest(recName)),\r\n    endRecording : () => dispatch(endRecording())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Recorder);"]},"metadata":{},"sourceType":"module"}