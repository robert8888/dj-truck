{"ast":null,"code":"import { ACTIONS } from \"../actions\";\nimport { produce } from \"imer\";\nimport { unset, set, get } from \"lodash/object\";\nconst initState = {\n  list: [],\n  currentRenamed: [],\n  currentPlayList: [],\n  // path to play list \n  currentSelection: [\"root\", \"Techno\", \"HardCore\"],\n  // path to dir or playlist current selected\n  root: {},\n  // root dir for play list \n  //mock\n  root: {\n    \"Techno\": {\n      _open: true,\n      \"ZetTempo\": [],\n      \"empty dir\": {},\n      \"HardCore\": [],\n      \"Special\": {\n        _open: true,\n        \"DubTechno\": [],\n        \"Clasic 90\": []\n      }\n    },\n    \"Mini mal\": {\n      \"HighTech\": [],\n      \"Classic\": [],\n      \"EmptyFolder\": {}\n    }\n  }\n};\n\nfunction playListReducer(state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.PUSH_TRACK:\n      {\n        let newList = Array.from(state.list);\n        newList.push(action.track);\n        return { ...state,\n          list: newList\n        };\n      }\n\n    case ACTIONS.SET_BPM:\n      {\n        const source = action.source;\n        const id = action.id;\n        let index = state.list.findIndex(element => element.id === id && element.source === source);\n        return produce(state, draftState => {\n          draftState.list[index].bpm = action.bpm;\n        });\n      }\n\n    case ACTIONS.SET_BPM_AND_OFFSET:\n      {\n        const source = action.source;\n        const id = action.id;\n        let index = state.list.findIndex(element => element.id === id && element.source === source);\n        return produce(state, draftState => {\n          draftState.list[index].bpm = action.bpm;\n          draftState.list[index].offset = action.offset;\n        });\n      }\n\n    case ACTIONS.PL_TOGGLE_DIR:\n      {\n        const open = get(state, [...action.path, \"_open\"]);\n        return produce(state, draftState => set(draftState, [...action.path, \"_open\"], !open));\n      }\n\n    case ACTIONS.PL_SET_SELECTION:\n      {\n        return produce(state, draftState => draftState.currentSelection = action.path);\n      }\n\n    case ACTIONS.PL_SET_CURRENT_PLAYLIST:\n      {\n        return produce(state, draftState => {\n          draftState.currentPlayList = action.path;\n          draftState.list = get(state, [action.path]);\n        });\n      }\n\n    case ACTIONS.PL_RENAME_SELECTED:\n      {\n        console.log(\"action\", action.name);\n        console.log(state.currentSelection);\n        const content = get(state, state.currentSelection);\n        return produce(state, draftState => {\n          unset(draftState, state.currentSelection);\n          const newCurrent = draftState.currentSelection;\n          newCurrent.pop();\n          newCurrent.push(name);\n          draftState.currentSelection = newCurrent;\n          set(draftState, newCurrent, content);\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default playListReducer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/reducers/playListReducer.js"],"names":["ACTIONS","produce","unset","set","get","initState","list","currentRenamed","currentPlayList","currentSelection","root","_open","playListReducer","state","action","type","PUSH_TRACK","newList","Array","from","push","track","SET_BPM","source","id","index","findIndex","element","draftState","bpm","SET_BPM_AND_OFFSET","offset","PL_TOGGLE_DIR","open","path","PL_SET_SELECTION","PL_SET_CURRENT_PLAYLIST","PL_RENAME_SELECTED","console","log","name","content","newCurrent","pop"],"mappings":"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","sourcesContent":["import { ACTIONS } from \"../actions\";\r\nimport { produce } from \"imer\";\r\nimport { unset, set, get } from \"lodash/object\"\r\n\r\nconst initState = {\r\n    list: [],\r\n\r\n    currentRenamed: [],\r\n    currentPlayList: [],// path to play list \r\n    currentSelection: [\"root\", \"Techno\", \"HardCore\"], // path to dir or playlist current selected\r\n    root: {}, // root dir for play list \r\n\r\n    //mock\r\n    root:{\r\n        \"Techno\": {\r\n            _open : true,\r\n            \"ZetTempo\" : [],\r\n            \"empty dir\": {},\r\n            \"HardCore\" : [],\r\n            \"Special\" : {\r\n                _open: true,\r\n                \"DubTechno\": [],\r\n                \"Clasic 90\": []\r\n            }\r\n        },\r\n        \"Mini mal\": {\r\n            \"HighTech\":[],\r\n            \"Classic\":[],\r\n            \"EmptyFolder\":{}\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction playListReducer(state = initState, action){\r\n    switch(action.type){\r\n        case ACTIONS.PUSH_TRACK : {\r\n            let newList = Array.from(state.list);\r\n            newList.push(action.track);\r\n            return {\r\n                ...state,\r\n                list :  newList,\r\n            }\r\n        }\r\n\r\n        case ACTIONS.SET_BPM : {\r\n            const source = action.source;\r\n            const id = action.id;\r\n            let index = state.list.findIndex( element => (element.id === id && element.source === source));\r\n            return produce(state, draftState => { draftState.list[index].bpm = action.bpm; })\r\n        }\r\n\r\n        case ACTIONS.SET_BPM_AND_OFFSET : {\r\n            const source = action.source;\r\n            const id = action.id;\r\n            let index = state.list.findIndex( element => (element.id === id && element.source === source));\r\n            return produce(state, draftState => { \r\n                draftState.list[index].bpm = action.bpm;\r\n                draftState.list[index].offset = action.offset;\r\n             })\r\n        }\r\n\r\n\r\n        case ACTIONS.PL_TOGGLE_DIR:{\r\n            const open = get(state, [...action.path, \"_open\"])\r\n            return produce(state, draftState => set(draftState, [...action.path, \"_open\"], !open))\r\n        }\r\n        case ACTIONS.PL_SET_SELECTION:{\r\n            return produce(state, draftState => draftState.currentSelection = action.path)\r\n        }\r\n\r\n        case ACTIONS.PL_SET_CURRENT_PLAYLIST:{\r\n            return produce(state, draftState => {\r\n                draftState.currentPlayList = action.path;\r\n                draftState.list = get(state, [action.path]);\r\n            })\r\n        }\r\n\r\n        case ACTIONS.PL_RENAME_SELECTED : {\r\n            console.log(\"action\", action.name);\r\n            console.log(state.currentSelection);\r\n            const content = get(state, state.currentSelection);\r\n            return produce(state, draftState=>{\r\n                unset(draftState, state.currentSelection);\r\n                const newCurrent = draftState.currentSelection;\r\n                newCurrent.pop();\r\n                newCurrent.push(name);\r\n                draftState.currentSelection = newCurrent;\r\n                set(draftState, newCurrent, content)\r\n            })\r\n        }\r\n        \r\n\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default playListReducer;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}