{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordComments\\\\Comment\\\\Comment.js\";\nimport React, { useState, useCallback } from \"react\";\nimport \"./comment.scss\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst Comment = ({\n  comment,\n  onChange,\n  creationMode\n}) => {\n  const [content, setConntent] = useState(comment || \"\");\n  const [editMode, setEditMode] = useState(false);\n  const updateComment = useCallback(e => {\n    setConntent(e.target.value);\n\n    if (e.target.value === \"\") {\n      setEditMode(false);\n    }\n  }, [setConntent, setEditMode]);\n  const onBlur = useCallback(() => {\n    content === \"\" ? setEditMode(false) : setEditMode(true);\n  }, [content, setEditMode]);\n  const onSubmit = useCallback(() => {\n    if (!onChange) return;\n    onChange(content);\n  }, [content, onChange]);\n  return React.createElement(Form, {\n    onSubmit: onSubmit,\n    onFocus: setEditMode.bind(null, true),\n    onBlur: onBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Post your comment:\"), React.createElement(Form.Control, {\n    className: \"record-comments-control\",\n    type: \"textarea\",\n    as: \"textarea\",\n    name: \"comment-conntent\",\n    disabled: !creationMode || !editMode,\n    value: content,\n    onChange: updateComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), editMode && React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Post\"));\n};\n\nexport default Comment;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordComments/Comment/Comment.js"],"names":["React","useState","useCallback","Form","Button","Comment","comment","onChange","creationMode","content","setConntent","editMode","setEditMode","updateComment","e","target","value","onBlur","onSubmit","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAuC;AACnD,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAACK,OAAO,IAAI,EAAZ,CAAvC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMY,aAAa,GAAGX,WAAW,CAAEY,CAAD,IAAK;AACnCJ,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;;AACA,QAAGF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAAtB,EAAyB;AACrBJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,GALgC,EAK/B,CAACF,WAAD,EAAcE,WAAd,CAL+B,CAAjC;AAOA,QAAMK,MAAM,GAAGf,WAAW,CAAC,MAAI;AAC1BO,IAAAA,OAAO,KAAK,EAAb,GAAmBG,WAAW,CAAC,KAAD,CAA9B,GAAwCA,WAAW,CAAC,IAAD,CAAnD;AACH,GAFyB,EAExB,CAACH,OAAD,EAAUG,WAAV,CAFwB,CAA1B;AAKA,QAAMM,QAAQ,GAAGhB,WAAW,CAAC,MAAI;AAC7B,QAAG,CAACK,QAAJ,EAAc;AACdA,IAAAA,QAAQ,CAACE,OAAD,CAAR;AACH,GAH2B,EAGzB,CAACA,OAAD,EAAUF,QAAV,CAHyB,CAA5B;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEW,QAAhB;AACI,IAAA,OAAO,EAAEN,WAAW,CAACO,IAAZ,CAAiB,IAAjB,EAAuB,IAAvB,CADb;AAEI,IAAA,MAAM,EAAEF,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAII,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,SAAS,EAAC,yBADd;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,IAAI,EAAC,kBAJT;AAKI,IAAA,QAAQ,EAAE,CAACT,YAAD,IAAiB,CAACG,QALhC;AAMI,IAAA,KAAK,EAAEF,OANX;AAOI,IAAA,QAAQ,EAAEI,aAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAHJ,EAgBKF,QAAQ,IAAI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBjB,CADJ;AAoBH,CAzCD;;AA2CA,eAAeN,OAAf","sourcesContent":["import React, {useState, useCallback} from \"react\";\r\nimport \"./comment.scss\";\r\nimport {Form, Button} from \"react-bootstrap\";\r\n\r\nconst Comment = ({comment, onChange, creationMode}) => {\r\n    const [content, setConntent] = useState(comment || \"\")\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const updateComment = useCallback((e)=>{\r\n        setConntent(e.target.value);\r\n        if(e.target.value === \"\"){\r\n            setEditMode(false)\r\n        }\r\n    },[setConntent, setEditMode])\r\n    \r\n    const onBlur = useCallback(()=>{\r\n        (content === \"\") ? setEditMode(false) : setEditMode(true);\r\n    },[content, setEditMode])\r\n\r\n\r\n    const onSubmit = useCallback(()=>{\r\n        if(!onChange) return;\r\n        onChange(content)\r\n    }, [content, onChange])\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}\r\n            onFocus={setEditMode.bind(null, true)}\r\n            onBlur={onBlur}>\r\n            <Form.Group>\r\n                <Form.Label>\r\n                    Post your comment:\r\n                </Form.Label>\r\n                <Form.Control \r\n                    className=\"record-comments-control\"\r\n                    type=\"textarea\" \r\n                    as=\"textarea\"\r\n                    name=\"comment-conntent\"\r\n                    disabled={!creationMode || !editMode}\r\n                    value={content}\r\n                    onChange={updateComment}/>\r\n            </Form.Group>\r\n            {editMode && <Button type=\"submit\">Post</Button>}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Comment;"]},"metadata":{},"sourceType":"module"}