{"ast":null,"code":"import { put, select, takeEvery } from 'redux-saga/effects';\nimport { ACTIONS, setProfileDescription } from \"../../actions\";\nimport { getApi } from \"./../../apis/apiProvider\";\nexport default function* watchUpdateDescription() {\n  yield takeEvery(ACTIONS.U_REQ_UPDATE_DESCRIPTION, handel);\n}\n\nconst getToken = state => state.user.token;\n\nconst userId = state => state.user.id;\n\nfunction* handel(action) {\n  console.log(\"Get token is \", getToken);\n  const token = yield select(getToken);\n\n  try {\n    var _response$data;\n\n    const {\n      callQuery,\n      queries\n    } = getApi(\"UserAssets\");\n    const query = queries.updateUserDescriptionQl;\n    const response = yield callQuery(query, token, {\n      description: action.description\n    });\n    const status = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.updateMyDescription;\n    console.log(response, status);\n\n    if (response.errors || !status) {\n      throw new Error(\"Can't update description database\");\n    }\n\n    if (status.error) {\n      throw new Error(\"Can't update description. \" + status.message);\n    }\n\n    const id = yield select(userId);\n    yield put(setProfileDescription(id, action.description));\n  } catch (e) {\n    console.log(e.message);\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/user/reqUpdateDescription.js"],"names":["put","select","takeEvery","ACTIONS","setProfileDescription","getApi","watchUpdateDescription","U_REQ_UPDATE_DESCRIPTION","handel","getToken","state","user","token","userId","id","action","console","log","callQuery","queries","query","updateUserDescriptionQl","response","description","status","data","updateMyDescription","errors","Error","error","message","e"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,OAAT,EAAkBC,qBAAlB,QAA+C,eAA/C;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAGA,eAAe,UAAUC,sBAAV,GAAmC;AAC9C,QAAMJ,SAAS,CAACC,OAAO,CAACI,wBAAT,EAAmCC,MAAnC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AACA,MAAMC,MAAM,GAAGH,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWG,EAAnC;;AAEA,UAAUN,MAAV,CAAiBO,MAAjB,EAAyB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,QAA7B;AACA,QAAMG,KAAK,GAAG,MAAMX,MAAM,CAACQ,QAAD,CAA1B;;AAEA,MAAI;AAAA;;AACA,UAAM;AAAES,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBd,MAAM,CAAC,YAAD,CAArC;AAEA,UAAMe,KAAK,GAAGD,OAAO,CAACE,uBAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACE,KAAD,EAAQR,KAAR,EAAgB;AAACW,MAAAA,WAAW,EAAER,MAAM,CAACQ;AAArB,KAAhB,CAAhC;AACA,UAAMC,MAAM,GAAGF,QAAH,aAAGA,QAAH,yCAAGA,QAAQ,CAAEG,IAAb,mDAAG,eAAgBC,mBAA/B;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ,EAAsBE,MAAtB;;AACA,QAAGF,QAAQ,CAACK,MAAT,IAAmB,CAACH,MAAvB,EAA8B;AAC1B,YAAM,IAAII,KAAJ,CAAU,mCAAV,CAAN;AACH;;AAED,QAAGJ,MAAM,CAACK,KAAV,EAAgB;AACZ,YAAM,IAAID,KAAJ,CAAU,+BAA+BJ,MAAM,CAACM,OAAhD,CAAN;AACH;;AAED,UAAMhB,EAAE,GAAG,MAAMb,MAAM,CAACY,MAAD,CAAvB;AACA,UAAMb,GAAG,CAACI,qBAAqB,CAACU,EAAD,EAAKC,MAAM,CAACQ,WAAZ,CAAtB,CAAT;AACH,GAlBD,CAkBE,OAAOQ,CAAP,EAAU;AACRf,IAAAA,OAAO,CAACC,GAAR,CAAYc,CAAC,CAACD,OAAd;AACH;AACJ","sourcesContent":["import { put, select, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, setProfileDescription } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n\r\n\r\nexport default function* watchUpdateDescription() {\r\n    yield takeEvery(ACTIONS.U_REQ_UPDATE_DESCRIPTION, handel);\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\nconst userId = state => state.user.id;\r\n\r\nfunction* handel(action) {\r\n    console.log(\"Get token is \", getToken)\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n\r\n        const query = queries.updateUserDescriptionQl;\r\n\r\n        const response = yield callQuery(query, token , {description: action.description});\r\n        const status = response?.data?.updateMyDescription;\r\n        console.log(response, status)\r\n        if(response.errors || !status){\r\n            throw new Error(\"Can't update description database\")\r\n        }\r\n\r\n        if(status.error){\r\n            throw new Error(\"Can't update description. \" + status.message)\r\n        }\r\n\r\n        const id = yield select(userId)\r\n        yield put(setProfileDescription(id, action.description))\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}