{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\ProgressSlider\\\\ProgressSlider.js\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { formater } from \"./../../../../../utils/time/timeFromater\";\nimport \"./progress-slider.scss\"; //horizontal\n\nconst ProgressSlider = ({\n  player\n}) => {\n  const [progress, setProgress] = useState(0);\n  const [currentRecord, setCurrentRecord] = useState(null);\n  const [position, setPosition] = useState();\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentDuration, setCurrentDuration] = useState(0);\n  const sliderArea = useRef(null);\n  const sliderThumb = useRef(null);\n  const sliderProgress = useRef(null);\n  const sliderBufferd = useRef(null); //dementions \n\n  const [sliderAreaWidth, setSliderAreaWidth] = useState(1);\n  const [thumbWidth, setThumbWidth] = useState(1);\n  useEffect(() => {\n    //  console.log(progress)\n    setCurrentTime(currentDuration * progress);\n  }, [progress, setCurrentTime]);\n  useEffect(() => {\n    console.log(currentRecord);\n\n    if (currentRecord) {\n      setCurrentDuration(currentRecord.duration);\n    }\n  }, [currentRecord, setCurrentDuration]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.addProgressWatcher('#', setProgress);\n    player.addCurrentWatcher(setCurrentRecord);\n  }, [player]);\n  const thumbMouseDown = useCallback(e => {\n    console.log('clikc;', e);\n  }, []);\n  const setThumb = useCallback(ref => {\n    //sliderThumb(ref);\n    sliderThumb.current = ref;\n    const width = ref.getBoundingClientRect().width;\n    setThumbWidth(width);\n    ref.addEventListener('mousedown', e => thumbMouseDown(e));\n  }, [sliderThumb]);\n  const setSliderArea = useCallback(ref => {\n    sliderArea.current = ref;\n    const width = ref.getBoundingClientRect().width;\n    setSliderAreaWidth(width);\n  }, [sliderArea]);\n  return React.createElement(\"div\", {\n    className: \"seek-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"record-details-time time-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, formater.secondsToStr(currentTime / 1000))), React.createElement(\"div\", {\n    className: \"slider-active-area\",\n    ref: setSliderArea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-thumb\",\n    ref: setThumb,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-progress\",\n    ref: sliderProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-buffered\",\n    ref: sliderBufferd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"record-details-time time-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, formater.secondsToStr(currentDuration / 1000))));\n};\n\nexport default ProgressSlider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/ProgressSlider/ProgressSlider.js"],"names":["React","useState","useRef","useEffect","useCallback","formater","ProgressSlider","player","progress","setProgress","currentRecord","setCurrentRecord","position","setPosition","currentTime","setCurrentTime","currentDuration","setCurrentDuration","sliderArea","sliderThumb","sliderProgress","sliderBufferd","sliderAreaWidth","setSliderAreaWidth","thumbWidth","setThumbWidth","console","log","duration","addProgressWatcher","addCurrentWatcher","thumbMouseDown","e","setThumb","ref","current","width","getBoundingClientRect","addEventListener","setSliderArea","secondsToStr"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport {formater} from \"./../../../../../utils/time/timeFromater\";\r\nimport \"./progress-slider.scss\"\r\n\r\n//horizontal\r\nconst ProgressSlider = ({player}) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [currentRecord, setCurrentRecord] = useState(null);\r\n    const [position,  setPosition] = useState();\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [currentDuration, setCurrentDuration] = useState(0);\r\n    \r\n    const sliderArea = useRef(null);\r\n    const sliderThumb = useRef(null);\r\n    const sliderProgress = useRef(null);\r\n    const sliderBufferd = useRef(null);\r\n\r\n    //dementions \r\n    const [sliderAreaWidth, setSliderAreaWidth] = useState(1)\r\n    const [thumbWidth, setThumbWidth] = useState(1)\r\n\r\n    useEffect(()=>{\r\n      //  console.log(progress)\r\n       setCurrentTime(currentDuration * progress)\r\n    }, [progress , setCurrentTime])\r\n\r\n    useEffect(()=>{\r\n        console.log(currentRecord)\r\n        if(currentRecord){\r\n           setCurrentDuration(currentRecord.duration);\r\n        }\r\n\r\n    }, [currentRecord, setCurrentDuration])\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.addProgressWatcher('#', setProgress);\r\n        player.addCurrentWatcher(setCurrentRecord);\r\n    }, [player])\r\n\r\n\r\n    const thumbMouseDown = useCallback((e)=>{\r\n        console.log('clikc;', e)\r\n    }, [])\r\n\r\n    const setThumb = useCallback((ref)=>{\r\n        //sliderThumb(ref);\r\n        sliderThumb.current = ref;\r\n        const width = ref.getBoundingClientRect().width;\r\n        setThumbWidth(width)\r\n        ref.addEventListener('mousedown', (e)=> thumbMouseDown(e))\r\n    }, [sliderThumb])\r\n\r\n    const setSliderArea = useCallback((ref) => {\r\n        sliderArea.current = ref;\r\n        const width = ref.getBoundingClientRect().width;\r\n        setSliderAreaWidth(width);\r\n    }, [sliderArea])\r\n\r\n    return (\r\n        <div className=\"seek-slider\">\r\n            <div className=\"record-details-time time-current\">\r\n                 <span>{formater.secondsToStr(currentTime / 1000)}</span>\r\n            </div>\r\n            <div className=\"slider-active-area\" ref={setSliderArea}>\r\n                <div className=\"slider-thumb\" ref={setThumb} draggable=\"false\"/>\r\n                <div className=\"slider-progress\" ref={sliderProgress}/>\r\n                <div className=\"slider-buffered\" ref={sliderBufferd}/>\r\n            </div>\r\n            <div className=\"record-details-time time-duration\">\r\n                <span>{formater.secondsToStr(currentDuration/1000)}</span>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProgressSlider;"]},"metadata":{},"sourceType":"module"}