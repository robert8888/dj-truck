{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Mixer\\\\Recorder\\\\Recorder.js\";\nimport React, { useState, useCallback } from \"react\";\nimport RecordButton from \"./../componets/RecordButton/RecordButton\";\nimport RecordNameInput from \"./../componets/RecordNameInput/RecordNameInput\";\nimport RecordTime from \"../componets/RecordTime/RecordTime\";\nimport \"./recorder.scss\";\n\nconst Recorder = props => {\n  const [inputDisabled, setInputDisabled] = useState(false);\n  const [timeRuning, setTimeRuning] = useState(false);\n  let clearTimeHandler;\n  const assignClearHandler = useCallback(handler => {\n    if (!clearTimeHandler) {\n      clearTimeHandler = handler;\n    }\n  }, clearTimeHandler);\n  const recordStateChange = useCallback(state => {\n    setInputDisabled(!!state);\n    setTimeRuning(!!state);\n\n    if (!state) {\n      clearTimeHandler();\n    }\n  }, [setInputDisabled, setTimeRuning]);\n  return React.createElement(\"div\", {\n    className: \"recorder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"REC\"), React.createElement(RecordButton, {\n    onChange: recordStateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(RecordNameInput, {\n    disabled: inputDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(RecordTime, {\n    runing: timeRuning,\n    clearHandler: assignClearHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default Recorder;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Console/Mixer/Recorder/Recorder.js"],"names":["React","useState","useCallback","RecordButton","RecordNameInput","RecordTime","Recorder","props","inputDisabled","setInputDisabled","timeRuning","setTimeRuning","clearTimeHandler","assignClearHandler","handler","recordStateChange","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,eAAP,MAA4B,gDAA5B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAO,iBAAP;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAG;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AAEA,MAAIW,gBAAJ;AAEA,QAAMC,kBAAkB,GAAGX,WAAW,CAAEY,OAAO,IAAI;AAC/C,QAAG,CAACF,gBAAJ,EAAqB;AACjBA,MAAAA,gBAAgB,GAAGE,OAAnB;AACH;AACJ,GAJqC,EAInCF,gBAJmC,CAAtC;AAMA,QAAMG,iBAAiB,GAAGb,WAAW,CAAEc,KAAD,IAAS;AAC3CP,IAAAA,gBAAgB,CAAC,CAAC,CAACO,KAAH,CAAhB;AACAL,IAAAA,aAAa,CAAC,CAAC,CAACK,KAAH,CAAb;;AACA,QAAG,CAACA,KAAJ,EAAU;AACNJ,MAAAA,gBAAgB;AACnB;AACJ,GANoC,EAMlC,CAACH,gBAAD,EAAmBE,aAAnB,CANkC,CAArC;AAQA,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAEI,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII,oBAAC,eAAD;AACI,IAAA,QAAQ,EAAEP,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAEE,UADZ;AAEI,IAAA,YAAY,EAAGG,kBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAYH,CAhCD;;AAkCA,eAAeP,QAAf","sourcesContent":["import React, { useState,  useCallback } from \"react\";\r\nimport RecordButton from \"./../componets/RecordButton/RecordButton\";\r\nimport RecordNameInput from \"./../componets/RecordNameInput/RecordNameInput\";\r\nimport RecordTime from \"../componets/RecordTime/RecordTime\";\r\nimport \"./recorder.scss\";\r\n\r\n\r\nconst Recorder = props =>{\r\n    const [inputDisabled, setInputDisabled] = useState(false);\r\n    const [timeRuning, setTimeRuning] = useState(false)\r\n\r\n    let clearTimeHandler;\r\n\r\n    const assignClearHandler = useCallback( handler => {\r\n        if(!clearTimeHandler){\r\n            clearTimeHandler = handler;\r\n        }\r\n    }, clearTimeHandler)\r\n\r\n    const recordStateChange = useCallback((state)=>{\r\n        setInputDisabled(!!state);\r\n        setTimeRuning(!!state); \r\n        if(!state){\r\n            clearTimeHandler();\r\n        }\r\n    }, [setInputDisabled, setTimeRuning])\r\n\r\n    return (\r\n        <div className=\"recorder\">\r\n            <div className=\"label\">REC</div>\r\n            <RecordButton \r\n                onChange={recordStateChange} />\r\n            <RecordNameInput \r\n                disabled={inputDisabled}/>\r\n            <RecordTime \r\n                runing={timeRuning} \r\n                clearHandler={ assignClearHandler }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recorder;"]},"metadata":{},"sourceType":"module"}