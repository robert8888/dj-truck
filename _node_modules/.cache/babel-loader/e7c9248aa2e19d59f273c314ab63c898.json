{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordList\\\\ListItem\\\\WaveSurrferPlayer\\\\WaveSurferPlayer.js\";\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport WaveSurfer from \"wavesurfer\";\nimport style from \"./wave-surfer-player.scss\";\nimport { PLAYBACK_STATE } from \"./../PlaybackButton/PlaybackButton\";\n\nconst WaveSurferPlayer = ({\n  peaks,\n  url,\n  playback\n}) => {\n  const containerRef = useRef(null);\n  const [container, setContainerRef] = useState(null);\n  const [ws, setWs] = useState(null);\n  const onContainerRef = useCallback(ref => {\n    setContainerRef(ref);\n  }, [setContainerRef]);\n  useEffect(() => {\n    if (container) {\n      const ws = new Promise((res, rej) => {\n        try {\n          const ws = WaveSurfer.create({\n            container: container,\n            barWidth: 5,\n            height: 100,\n            waveColor: style.waveColor,\n            progressColor: style.progressColor\n          });\n          res(ws);\n        } catch (err) {\n          rej(err);\n        }\n      });\n      ws.then(ws => {\n        if (peaks) {\n          ws.load(null, peaks);\n        }\n\n        setWs(ws);\n      });\n    }\n  }, [container, peaks, url, setWs]);\n  useEffect(() => {\n    if (playback === PLAYBACK_STATE.PLAY && ws && url && peaks) {\n      ws.load(url, peaks);\n    }\n  }, [playback, peaks, url, ws]);\n  return React.createElement(\"div\", {\n    className: \"ws-player-container\",\n    ref: onContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n};\n\nexport default WaveSurferPlayer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordList/ListItem/WaveSurrferPlayer/WaveSurferPlayer.js"],"names":["React","useRef","useEffect","useState","useCallback","WaveSurfer","style","PLAYBACK_STATE","WaveSurferPlayer","peaks","url","playback","containerRef","container","setContainerRef","ws","setWs","onContainerRef","ref","Promise","res","rej","create","barWidth","height","waveColor","progressColor","err","then","load","PLAY"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,WAA5C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAAQC,cAAR,QAA6B,oCAA7B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,GAAR;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AACjD,QAAMC,YAAY,GAAGX,MAAM,CAAC,IAAD,CAA3B;AAEA,QAAM,CAACY,SAAD,EAAYC,eAAZ,IAA+BX,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACY,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAAC,IAAD,CAA5B;AAEA,QAAMc,cAAc,GAAGb,WAAW,CAAGc,GAAD,IAAS;AACzCJ,IAAAA,eAAe,CAACI,GAAD,CAAf;AACH,GAFiC,EAE/B,CAACJ,eAAD,CAF+B,CAAlC;AAIAZ,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGW,SAAH,EAAa;AACT,YAAME,EAAE,GAAG,IAAII,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAY;AAC/B,YAAG;AACC,gBAAMN,EAAE,GAAGV,UAAU,CAACiB,MAAX,CAAkB;AACzBT,YAAAA,SAAS,EAAEA,SADc;AAEzBU,YAAAA,QAAQ,EAAE,CAFe;AAGzBC,YAAAA,MAAM,EAAE,GAHiB;AAIzBC,YAAAA,SAAS,EAAEnB,KAAK,CAACmB,SAJQ;AAKzBC,YAAAA,aAAa,EAAEpB,KAAK,CAACoB;AALI,WAAlB,CAAX;AAOAN,UAAAA,GAAG,CAACL,EAAD,CAAH;AACH,SATD,CASE,OAAOY,GAAP,EAAW;AACTN,UAAAA,GAAG,CAACM,GAAD,CAAH;AACH;AACJ,OAbU,CAAX;AAeAZ,MAAAA,EAAE,CAACa,IAAH,CAASb,EAAD,IAAO;AACX,YAAGN,KAAH,EAAS;AACLM,UAAAA,EAAE,CAACc,IAAH,CAAQ,IAAR,EAAcpB,KAAd;AACH;;AACDO,QAAAA,KAAK,CAACD,EAAD,CAAL;AACH,OALD;AAMH;AACJ,GAxBQ,EAwBN,CAACF,SAAD,EAAYJ,KAAZ,EAAmBC,GAAnB,EAAwBM,KAAxB,CAxBM,CAAT;AA2BAd,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGS,QAAQ,KAAMJ,cAAc,CAACuB,IAA7B,IAAqCf,EAArC,IAA2CL,GAA3C,IAAkDD,KAArD,EAA2D;AACvDM,MAAAA,EAAE,CAACc,IAAH,CAAQnB,GAAR,EAAaD,KAAb;AACH;AACJ,GAJQ,EAIN,CAACE,QAAD,EAAWF,KAAX,EAAkBC,GAAlB,EAAuBK,EAAvB,CAJM,CAAT;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,GAAG,EAAEE,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CA9CD;;AAgDA,eAAeT,gBAAf","sourcesContent":["import React, {useRef, useEffect, useState, useCallback} from \"react\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport style from \"./wave-surfer-player.scss\";\r\nimport {PLAYBACK_STATE} from \"./../PlaybackButton/PlaybackButton\"\r\n\r\nconst WaveSurferPlayer = ({peaks, url, playback}) => {\r\n    const containerRef = useRef(null)\r\n    \r\n    const [container, setContainerRef] = useState(null);\r\n    const [ws, setWs] = useState(null)\r\n\r\n    const onContainerRef = useCallback( (ref) => {\r\n        setContainerRef(ref);\r\n    }, [setContainerRef])\r\n\r\n    useEffect(()=>{\r\n        if(container){\r\n            const ws = new Promise((res, rej)=>{\r\n                try{\r\n                    const ws = WaveSurfer.create({\r\n                        container: container,\r\n                        barWidth: 5,\r\n                        height: 100,\r\n                        waveColor: style.waveColor,\r\n                        progressColor: style.progressColor,\r\n                    })\r\n                    res(ws)\r\n                } catch (err){\r\n                    rej(err)\r\n                }\r\n            })\r\n\r\n            ws.then((ws) =>{\r\n                if(peaks){\r\n                    ws.load(null, peaks)\r\n                }\r\n                setWs(ws);\r\n            })\r\n        }\r\n    }, [container, peaks, url, setWs])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(playback  === PLAYBACK_STATE.PLAY && ws && url && peaks){\r\n            ws.load(url, peaks);\r\n        }\r\n    }, [playback, peaks, url, ws])\r\n\r\n    return (\r\n        <div className=\"ws-player-container\" ref={onContainerRef}/>\r\n    )\r\n}\r\n\r\nexport default WaveSurferPlayer"]},"metadata":{},"sourceType":"module"}