{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\ProgressSlider\\\\ProgressSlider.js\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { formater } from \"./../../../../../utils/time/timeFromater\";\nimport { toRange } from \"./../../../../../utils/math/argRanges\";\nimport \"./progress-slider.scss\"; //horizontal\n\nconst ProgressSlider = ({\n  player,\n  seek\n}) => {\n  const [progress, setProgress] = useState(0);\n  const [buffered, setBuffred] = useState(0);\n  const [currentRecord, setCurrentRecord] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentDuration, setCurrentDuration] = useState(0);\n  const isDragged = useRef();\n  const seekTarget = useRef();\n  const sliderArea = useRef(null);\n  const sliderThumb = useRef(null);\n  const sliderProgress = useRef(null);\n  const sliderBufferd = useRef(null);\n  const sliderTimePreview = useRef(null); //dementions \n\n  const [sliderAreaRect, setSliderAreaRect] = useState(0);\n  const [thumbRect, setThumbRect] = useState(0);\n  const setThumbPosition = useCallback(progress => {\n    let position = 0;\n    position = sliderAreaRect.width * progress;\n    sliderProgress.current.style.transform = `scaleX(${position}) translateX(50%)`;\n    position -= thumbRect.width / 2;\n    sliderThumb.current.style.transform = `translateX(${position}px)`;\n  }, [thumbRect, sliderAreaRect]);\n  const setProgressHandler = useCallback(progress => {\n    if (!isDragged.current) {\n      setProgress(progress);\n    }\n  }, [isDragged]);\n  useEffect(() => {\n    if (!sliderAreaRect) {\n      return;\n    }\n\n    const position = sliderAreaRect.width * buffered;\n    sliderBufferd.current.style.transform = `scaleX(${position}) translateX(50%)`;\n  }, [buffered, sliderBufferd, sliderAreaRect]);\n  useEffect(() => {\n    setCurrentTime(currentDuration * progress);\n    setThumbPosition(progress);\n  }, [progress, setCurrentTime, isDragged]);\n  useEffect(() => {\n    if (currentRecord) {\n      setCurrentDuration(currentRecord.duration);\n    }\n  }, [currentRecord, setCurrentDuration]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.addProgressWatcher('#', setProgressHandler);\n    player.addCurrentWatcher(setCurrentRecord);\n    player.addBuffredWatcher(setBuffred);\n  }, [player]);\n  const thumbDraging = useCallback((areaRect, e) => {\n    const x = e.clientX - areaRect.left;\n    let progress = x / areaRect.width;\n    progress = toRange(progress, 0, 1);\n    seekTarget.current = progress;\n    setProgress(progress);\n  }, []);\n  const thumbMouseDown = useCallback(e => {\n    const shiftX = e.clientX - sliderThumb.current.getBoundingClientRect().left;\n    const areaRect = sliderArea.current.getBoundingClientRect();\n    const thumbRect = sliderThumb.current.getBoundingClientRect();\n    const thumbDragingWithArgs = thumbDraging.bind(null, areaRect);\n    isDragged.current = true;\n    window.addEventListener('mousemove', thumbDragingWithArgs);\n\n    const mouseup = () => {\n      window.removeEventListener('mouseup', mouseup);\n      window.removeEventListener('mousemove', thumbDragingWithArgs);\n      isDragged.current = false;\n      seek({\n        progress: seekTarget.current\n      });\n      seekTarget.current = null;\n    };\n\n    const leaveDocument = () => {\n      window.removeEventListener('mouseup', mouseup);\n      document.body.removeEventListener('mouseleave', leaveDocument);\n      window.removeEventListener('mousemove', thumbDragingWithArgs);\n      isDragged.current = false;\n      seekTarget.current = null;\n    };\n\n    window.addEventListener('mouseup', mouseup);\n    document.body.addEventListener('mouseleave', leaveDocument);\n  }, [sliderThumb, sliderArea, isDragged, seekTarget]);\n  const areaMouseDown = useCallback(e => {\n    if (e.target === sliderThumb.current) {\n      return;\n    }\n\n    const x = e.clientX - sliderAreaRect.left + thumbRect.width / 2;\n    let progress = x / sliderAreaRect.width;\n    progress = toRange(progress, 0, 1);\n    seek({\n      progress\n    });\n  }, [sliderAreaRect, seek, sliderArea]);\n  const areaMouseMove = useCallback(e => {\n    const x = e.clientX - sliderAreaRect.left + thumbRect.width / 2;\n    let progress = x / sliderAreaRect.width;\n    progress = toRange(progress, 0, 1);\n    const time = currentDuration * progress;\n    let str = formater.secondsToStr(time / 1000);\n    sliderTimePreview.current.dataset.value = time ? str : \"\";\n    sliderTimePreview.current.style.transform = `translateX(${x}px)`;\n  }, [sliderAreaRect, currentDuration, sliderTimePreview]);\n  const areaMouseEnter = useCallback(e => {\n    sliderTimePreview.current.classList.add(\"preview--visible\");\n  }, [sliderTimePreview]);\n  const areaMouseLeave = useCallback(e => {\n    sliderTimePreview.current.classList.remove(\"preview--visible\");\n  }, [sliderTimePreview]);\n  useEffect(() => {\n    if (sliderAreaRect) {\n      sliderArea.current.addEventListener('mousedown', areaMouseDown);\n      sliderArea.current.addEventListener('mouseenter', areaMouseEnter);\n      sliderArea.current.addEventListener('mouseleave', areaMouseLeave);\n    }\n  }, [sliderAreaRect]);\n  useEffect(() => {\n    if (sliderAreaRect && currentDuration) {\n      sliderArea.current.addEventListener('mousemove', areaMouseMove);\n    }\n  }, [sliderAreaRect, currentDuration]);\n  useEffect(() => {\n    if (thumbRect) {\n      sliderThumb.current.addEventListener('mousedown', thumbMouseDown);\n\n      sliderThumb.current.ondragstart = () => false;\n    }\n  }, [thumbRect]);\n  const setThumb = useCallback(ref => {\n    sliderThumb.current = ref;\n    setThumbRect(ref.getBoundingClientRect());\n  }, [sliderThumb, setThumbRect]);\n  const setSliderArea = useCallback(ref => {\n    sliderArea.current = ref;\n    setSliderAreaRect(ref.getBoundingClientRect());\n  }, [sliderArea, setSliderAreaRect]);\n  return React.createElement(\"div\", {\n    className: \"seek-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-time time-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, formater.secondsToStr(currentTime / 1000))), React.createElement(\"div\", {\n    className: \"slider-active-area\",\n    ref: setSliderArea,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-buffered\",\n    ref: sliderBufferd,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-progress\",\n    ref: sliderProgress,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-thumb\",\n    ref: setThumb,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-time-preview\",\n    ref: sliderTimePreview,\n    \"data-value\": \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"slider-time time-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, formater.secondsToStr(currentDuration / 1000))));\n};\n\nexport default ProgressSlider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/ProgressSlider/ProgressSlider.js"],"names":["React","useState","useRef","useEffect","useCallback","formater","toRange","ProgressSlider","player","seek","progress","setProgress","buffered","setBuffred","currentRecord","setCurrentRecord","currentTime","setCurrentTime","currentDuration","setCurrentDuration","isDragged","seekTarget","sliderArea","sliderThumb","sliderProgress","sliderBufferd","sliderTimePreview","sliderAreaRect","setSliderAreaRect","thumbRect","setThumbRect","setThumbPosition","position","width","current","style","transform","setProgressHandler","duration","addProgressWatcher","addCurrentWatcher","addBuffredWatcher","thumbDraging","areaRect","e","x","clientX","left","thumbMouseDown","shiftX","getBoundingClientRect","thumbDragingWithArgs","bind","window","addEventListener","mouseup","removeEventListener","leaveDocument","document","body","areaMouseDown","target","areaMouseMove","time","str","secondsToStr","dataset","value","areaMouseEnter","classList","add","areaMouseLeave","remove","ondragstart","setThumb","ref","setSliderArea"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport {formater} from \"./../../../../../utils/time/timeFromater\";\r\nimport {toRange} from \"./../../../../../utils/math/argRanges\";\r\nimport \"./progress-slider.scss\"\r\n\r\n//horizontal\r\nconst ProgressSlider = ({player, seek}) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [buffered, setBuffred] = useState(0);\r\n    const [currentRecord, setCurrentRecord] = useState(null);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [currentDuration, setCurrentDuration] = useState(0);\r\n    const isDragged = useRef();\r\n    const seekTarget = useRef();\r\n\r\n    const sliderArea = useRef(null);\r\n    const sliderThumb = useRef(null);\r\n    const sliderProgress = useRef(null);\r\n    const sliderBufferd = useRef(null);\r\n    const sliderTimePreview = useRef(null);\r\n    //dementions \r\n    const [sliderAreaRect, setSliderAreaRect] = useState(0)\r\n    const [thumbRect, setThumbRect] = useState(0)\r\n\r\n    const setThumbPosition = useCallback((progress)=>{\r\n        let position = 0;\r\n        position = sliderAreaRect.width * progress ;\r\n        sliderProgress.current.style.transform = `scaleX(${position}) translateX(50%)`;\r\n        position -= (thumbRect.width / 2) ;  \r\n        sliderThumb.current.style.transform = `translateX(${position}px)`;\r\n    }, [thumbRect, sliderAreaRect])\r\n\r\n    const setProgressHandler = useCallback((progress)=>{\r\n        if(!isDragged.current){\r\n            setProgress(progress);\r\n        }\r\n    }, [isDragged, ])\r\n\r\n    useEffect(()=>{\r\n        if(!sliderAreaRect){\r\n            return;\r\n        }\r\n        const position = sliderAreaRect.width * buffered;\r\n        sliderBufferd.current.style.transform = `scaleX(${position}) translateX(50%)`;\r\n    }, [buffered, sliderBufferd, sliderAreaRect])\r\n\r\n    useEffect(()=>{\r\n       setCurrentTime(currentDuration * progress);\r\n       setThumbPosition(progress);\r\n    }, [progress , setCurrentTime, isDragged])\r\n\r\n    useEffect(()=>{\r\n        if(currentRecord){\r\n           setCurrentDuration(currentRecord.duration);\r\n        }\r\n    }, [currentRecord, setCurrentDuration])\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.addProgressWatcher('#', setProgressHandler);\r\n        player.addCurrentWatcher(setCurrentRecord);\r\n        player.addBuffredWatcher(setBuffred);\r\n    }, [player])\r\n\r\n    const thumbDraging = useCallback( (areaRect, e) => {\r\n       const x = e.clientX - areaRect.left;\r\n       let progress = x / areaRect.width;\r\n       progress = toRange(progress, 0 ,1);\r\n       seekTarget.current = progress;\r\n       setProgress(progress)\r\n    }, [])\r\n\r\n    const thumbMouseDown = useCallback((e)=>{\r\n        const shiftX = e.clientX - sliderThumb.current.getBoundingClientRect().left;\r\n        const areaRect = sliderArea.current.getBoundingClientRect();\r\n        const thumbRect = sliderThumb.current.getBoundingClientRect();\r\n        const thumbDragingWithArgs = thumbDraging.bind(null, areaRect)\r\n        isDragged.current = true;\r\n        window.addEventListener('mousemove', thumbDragingWithArgs)\r\n        const mouseup = () => {\r\n            window.removeEventListener('mouseup', mouseup);\r\n            window.removeEventListener('mousemove', thumbDragingWithArgs);\r\n            isDragged.current = false;\r\n            seek({progress : seekTarget.current});\r\n            seekTarget.current = null;\r\n        }\r\n        const leaveDocument = () => {\r\n            window.removeEventListener('mouseup', mouseup);\r\n            document.body.removeEventListener('mouseleave', leaveDocument)\r\n            window.removeEventListener('mousemove', thumbDragingWithArgs);\r\n            isDragged.current = false;\r\n            seekTarget.current = null;\r\n        }\r\n        window.addEventListener('mouseup', mouseup)\r\n        document.body.addEventListener('mouseleave', leaveDocument)\r\n    }, [sliderThumb, sliderArea, isDragged, seekTarget])\r\n\r\n    const areaMouseDown = useCallback((e)=>{\r\n        if(e.target === sliderThumb.current){\r\n            return;\r\n        }\r\n        const x = e.clientX - sliderAreaRect.left  + (thumbRect.width / 2);\r\n        let progress = x / sliderAreaRect.width  ;\r\n        progress = toRange(progress, 0 , 1)\r\n        seek({progress})\r\n    }, [sliderAreaRect, seek, sliderArea])\r\n\r\n    const areaMouseMove = useCallback( e =>{\r\n        const x = e.clientX - sliderAreaRect.left  + (thumbRect.width / 2);\r\n        let progress = x / sliderAreaRect.width;\r\n        progress = toRange(progress, 0 , 1)\r\n        const time = currentDuration * progress;\r\n        let str = formater.secondsToStr(time / 1000);\r\n        sliderTimePreview.current.dataset.value = time ? str : \"\";\r\n        sliderTimePreview.current.style.transform = `translateX(${x}px)`\r\n    }, [sliderAreaRect, currentDuration , sliderTimePreview])\r\n\r\n    const areaMouseEnter = useCallback( e => {\r\n        sliderTimePreview.current.classList.add(\"preview--visible\")\r\n    }, [sliderTimePreview])\r\n\r\n    const areaMouseLeave = useCallback( e => {\r\n        sliderTimePreview.current.classList.remove(\"preview--visible\")\r\n    }, [sliderTimePreview])\r\n\r\n    useEffect(()=>{\r\n        if(sliderAreaRect){\r\n            sliderArea.current.addEventListener('mousedown', areaMouseDown);\r\n            sliderArea.current.addEventListener('mouseenter', areaMouseEnter);\r\n            sliderArea.current.addEventListener('mouseleave', areaMouseLeave);\r\n        }\r\n    }, [sliderAreaRect])\r\n\r\n    useEffect(()=>{\r\n        if(sliderAreaRect && currentDuration){\r\n            sliderArea.current.addEventListener('mousemove', areaMouseMove);\r\n        }\r\n    }, [sliderAreaRect, currentDuration])\r\n\r\n    useEffect(()=>{\r\n        if(thumbRect){\r\n            sliderThumb.current.addEventListener('mousedown',  thumbMouseDown);\r\n            sliderThumb.current.ondragstart = () => false;\r\n        }\r\n    }, [thumbRect])\r\n\r\n    const setThumb = useCallback((ref)=>{\r\n        sliderThumb.current = ref;\r\n        setThumbRect(ref.getBoundingClientRect())\r\n    }, [sliderThumb, setThumbRect])\r\n\r\n\r\n    const setSliderArea = useCallback((ref) => {\r\n        sliderArea.current = ref;\r\n        setSliderAreaRect(ref.getBoundingClientRect())\r\n    }, [sliderArea, setSliderAreaRect])\r\n\r\n\r\n    return (\r\n        <div className=\"seek-slider\">\r\n            <div className=\"slider-time time-current\">\r\n                 <span>{formater.secondsToStr(currentTime / 1000)}</span>\r\n            </div>\r\n            <div className=\"slider-active-area\" ref={setSliderArea} draggable=\"false\">\r\n                <div className=\"slider-buffered\" ref={sliderBufferd} draggable=\"false\"/>\r\n                <div className=\"slider-progress\" ref={sliderProgress} draggable=\"false\"/>\r\n                \r\n                <div className=\"slider-thumb\" ref={setThumb} draggable=\"false\"/>\r\n                <div className=\"slider-time-preview\"  ref={sliderTimePreview} data-value=\"1\"/>\r\n            </div>\r\n            <div className=\"slider-time time-duration\">\r\n                <span>{formater.secondsToStr(currentDuration/1000)}</span>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProgressSlider;"]},"metadata":{},"sourceType":"module"}