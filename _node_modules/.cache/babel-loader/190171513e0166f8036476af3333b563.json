{"ast":null,"code":"import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useMemo,useCallback,useState,useRef}from\"react\";import classNames from\"classnames\";import{Form}from\"react-bootstrap\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faPen,faThLarge}from\"@fortawesome/free-solid-svg-icons\";import{Button}from\"react-bootstrap\";import\"./edit.scss\";var Edit=function Edit(_ref){var active=_ref.active,type=_ref.type,children=_ref.children,_ref$onChange=_ref.onChange,_onChange=_ref$onChange===void 0?function(ifEmpty){return null;}:_ref$onChange;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var controlRef=useRef();var buttonClasses=useMemo(function(){return classNames('edit-btn',{\"edit-btn--active\":active,\"edit-btn-before\":type.startsWith(\"text\"),\"edit-btn-over\":type===\"image\"});},[active]);var catchBtnRef=useCallback(function(ref){if(!ref){return;}ref.parentElement.classList.add(\"relative\");},[]);//onsole.log(\"chioldren\", children)\nvar content=useMemo(function(){if(!editMode){return children;}else{switch(type){case\"image\":{return React.createElement(React.Fragment,null,React.createElement(\"input\",{type:\"file\",accept:\"image/png, image/jpeg\",style:{display:\"none\"},ref:function ref(_ref2){return _ref2&&_ref2.click();},onChange:function onChange(event){var file=event.target.files[0];_onChange(file);setEditMode(false);}}),React.createElement(\"button\",{className:buttonClasses,ref:catchBtnRef,onClick:setEditMode.bind(null,function(edit){return!edit;})},React.createElement(FontAwesomeIcon,{icon:faPen})),children);}case\"text\":return React.createElement(Form.Control,{type:type,className:\"edit-text-control\",defaultValue:children.props.children,onKeyDown:function onKeyDown(e){if(e.key!==\"Enter\"){return;}_onChange(e.target.value);setEditMode(false);}});case\"textarea\":var input;return React.createElement(React.Fragment,null,React.createElement(Form.Control,{type:type,as:\"textarea\",className:\"edit-text-control\",defaultValue:children.props.children,ref:function ref(_ref3){return input=_ref3;}}),React.createElement(Button,{className:\"edit-btn-save\",onClick:function onClick(){setEditMode(false);}},\"Cancel\"),React.createElement(Button,{className:\"edit-btn-save\",onClick:function onClick(){_onChange(input.value);setEditMode(false);}},\"Save\"));}}},[children,editMode,_onChange,setEditMode]);return React.createElement(React.Fragment,null,active&&!editMode&&React.createElement(\"button\",{className:buttonClasses,ref:catchBtnRef,onClick:setEditMode.bind(null,function(edit){return!edit;})},React.createElement(FontAwesomeIcon,{icon:faPen})),content);};export default Edit;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/UserProfile/Edit/Edit.js"],"names":["React","useMemo","useCallback","useState","useRef","classNames","Form","FontAwesomeIcon","faPen","faThLarge","Button","Edit","active","type","children","onChange","ifEmpty","editMode","setEditMode","controlRef","buttonClasses","startsWith","catchBtnRef","ref","parentElement","classList","add","content","display","click","event","file","target","files","bind","edit","props","e","key","value","input"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback, useState, useRef } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen, faThLarge } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"./edit.scss\";\r\n\r\nconst Edit = ({ active, type, children, onChange = ifEmpty => null }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const controlRef = useRef();\r\n\r\n    const buttonClasses = useMemo(() => classNames(\r\n        'edit-btn',\r\n        {\r\n            \"edit-btn--active\": active,\r\n            \"edit-btn-before\": (type.startsWith(\"text\")),\r\n            \"edit-btn-over\": (type === \"image\"),\r\n        }\r\n    ), [active])\r\n\r\n    const catchBtnRef = useCallback((ref) => {\r\n        if (!ref) {\r\n            return;\r\n        }\r\n\r\n        ref.parentElement.classList.add(\"relative\");\r\n    }, [])\r\n    //onsole.log(\"chioldren\", children)\r\n\r\n    const content = useMemo(() => {\r\n        if (!editMode) {\r\n            return children;\r\n        } else {\r\n            switch (type) {\r\n                case \"image\": {\r\n                    return (\r\n                        <>\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/png, image/jpeg\"\r\n                                style={{ display: \"none\" }}\r\n                                ref={ref => ref && ref.click()}\r\n                                onChange={event => {\r\n                                    const file = event.target.files[0];\r\n                                    onChange(file);\r\n                                    setEditMode(false)\r\n                                }}/>\r\n                            <button\r\n                                className={buttonClasses}\r\n                                ref={catchBtnRef}\r\n                                onClick={setEditMode.bind(null, edit => !edit)}>\r\n                                <FontAwesomeIcon icon={faPen} />\r\n                            </button>\r\n                            {children}\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                case \"text\": return (\r\n                    <Form.Control\r\n                        type={type}\r\n                        className=\"edit-text-control\"\r\n                        defaultValue={children.props.children}\r\n                        onKeyDown={e => {\r\n                            if (e.key !== \"Enter\") {\r\n                                return;\r\n                            }\r\n                            onChange(e.target.value);\r\n                            setEditMode(false)\r\n                        }} />\r\n                )\r\n                case \"textarea\":\r\n                    let input;\r\n                    return (\r\n                        <>\r\n                            <Form.Control\r\n                                type={type}\r\n                                as=\"textarea\"\r\n                                className=\"edit-text-control\"\r\n                                defaultValue={children.props.children}\r\n                                ref={ref => input = ref} />\r\n                            <Button className={\"edit-btn-save\"} \r\n                                onClick={() => {\r\n                                    setEditMode(false)}\r\n                                }>\r\n                                    Cancel\r\n                            </Button>\r\n                            <Button className={\"edit-btn-save\"} \r\n                                onClick={() => {\r\n                                    onChange(input.value);\r\n                                    setEditMode(false)}\r\n                                }>\r\n                                    Save\r\n                            </Button>\r\n                        </>\r\n                    )\r\n\r\n            }\r\n\r\n        }\r\n    }, [children, editMode, onChange, setEditMode])\r\n\r\n    return (\r\n        <>\r\n            {active && !editMode &&\r\n                <button\r\n                    className={buttonClasses}\r\n                    ref={catchBtnRef}\r\n                    onClick={setEditMode.bind(null, edit => !edit)}>\r\n                    <FontAwesomeIcon icon={faPen} />\r\n                </button>\r\n            }\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Edit;"]},"metadata":{},"sourceType":"module"}