{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordComments\\\\Comment\\\\Comment.js\";\nimport React, { useState } from \"react\";\nimport \"./comment.scss\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst Comment = ({}) => {\n  const [comment, setComment] = useState(\"\");\n  const [showButton, setShowButton] = useState(false);\n  const updateComment = useCallback(e => {\n    setComment(e.target.value);\n\n    if (e.target.value === \"\") {\n      setShowButton(false);\n    }\n  }, [setComment, setShowButton]);\n  const onBlur = useCallback(() => {\n    comment === \"\" ? setShowButton(false) : setShowButton(true);\n  }, [comment, setShowButton]);\n  return React.createElement(Form, {\n    onSubmit: submitComment,\n    onFocus: setShowButton.bind(null, true),\n    onBlur: onBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Post your comment:\"), React.createElement(Form.Control, {\n    className: \"record-comments-control\",\n    type: \"textarea\",\n    as: \"textarea\",\n    name: \"comment-conntent\",\n    value: comment,\n    onChange: updateComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), showButton && React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Post\"));\n};\n\nexport default Comment;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordComments/Comment/Comment.js"],"names":["React","useState","Form","Button","Comment","comment","setComment","showButton","setShowButton","updateComment","useCallback","e","target","value","onBlur","submitComment","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,gBAAP;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;;AAEA,MAAMC,OAAO,GAAG,CAAC,EAAD,KAAQ;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMQ,aAAa,GAAGC,WAAW,CAAEC,CAAD,IAAK;AACnCL,IAAAA,UAAU,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;;AACA,QAAGF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAAtB,EAAyB;AACrBL,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,GALgC,EAK/B,CAACF,UAAD,EAAaE,aAAb,CAL+B,CAAjC;AAOA,QAAMM,MAAM,GAAGJ,WAAW,CAAC,MAAI;AAC1BL,IAAAA,OAAO,KAAK,EAAb,GAAmBG,aAAa,CAAC,KAAD,CAAhC,GAA0CA,aAAa,CAAC,IAAD,CAAvD;AACH,GAFyB,EAExB,CAACH,OAAD,EAAUG,aAAV,CAFwB,CAA1B;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,aAAhB;AACI,IAAA,OAAO,EAAEP,aAAa,CAACQ,IAAd,CAAmB,IAAnB,EAAyB,IAAzB,CADb;AAEI,IAAA,MAAM,EAAEF,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAII,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,SAAS,EAAC,yBADd;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,IAAI,EAAC,kBAJT;AAKI,IAAA,KAAK,EAAET,OALX;AAOI,IAAA,QAAQ,EAAEI,aAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAHJ,EAgBKF,UAAU,IAAI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBnB,CADJ;AAoBH,CAnCD;;AAqCA,eAAeH,OAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./comment.scss\";\r\nimport {Form, Button} from \"react-bootstrap\";\r\n\r\nconst Comment = ({}) => {\r\n    const [comment, setComment] = useState(\"\")\r\n    const [showButton, setShowButton] = useState(false);\r\n\r\n    const updateComment = useCallback((e)=>{\r\n        setComment(e.target.value);\r\n        if(e.target.value === \"\"){\r\n            setShowButton(false)\r\n        }\r\n    },[setComment, setShowButton])\r\n    \r\n    const onBlur = useCallback(()=>{\r\n        (comment === \"\") ? setShowButton(false) : setShowButton(true);\r\n    },[comment, setShowButton])\r\n\r\n    return (\r\n        <Form onSubmit={submitComment}\r\n            onFocus={setShowButton.bind(null, true)}\r\n            onBlur={onBlur}>\r\n            <Form.Group>\r\n                <Form.Label>\r\n                    Post your comment:\r\n                </Form.Label>\r\n                <Form.Control \r\n                    className=\"record-comments-control\"\r\n                    type=\"textarea\" \r\n                    as=\"textarea\"\r\n                    name=\"comment-conntent\"\r\n                    value={comment}\r\n\r\n                    onChange={updateComment}/>\r\n            </Form.Group>\r\n            {showButton && <Button type=\"submit\">Post</Button>}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Comment;"]},"metadata":{},"sourceType":"module"}