{"ast":null,"code":"export function addAnimationFrame(waveSurfer) {\n  waveSurfer.drawer.progress = function (progress) {\n    var minPxDelta = 1 / this.params.pixelRatio;\n    var pos = Math.round(progress * this.width) * minPxDelta;\n\n    if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n      this.lastPos = pos;\n      this.recenterOnPosition(pos);\n\n      if (this.params.scrollParent && this.params.autoCenter) {\n        var newPos = ~~(this.wrapper.scrollWidth * progress); //console.log(this._recenterAndUpdate(pos, newPos))\n        // window.requestAnimationFrame(this._recenterAndUpdate.bind(this, pos, newPos))\n      } else {//  this.updateProgress(pos);\n        }\n    }\n  };\n\n  waveSurfer.drawer._recenterAndUpdate = function (pos, newPos) {\n    this.recenterOnPosition(newPos); //this.updateProgress(pos)\n  };\n\n  waveSurfer.drawer._mainWS = waveSurfer.drawer.container.firstChild;\n  waveSurfer.drawer._mainWS.style.position = \"absolute\";\n  waveSurfer.drawer._mainWS.style.willChange = \"transform\";\n\n  waveSurfer.drawer.recenterOnPosition = function (position, immediate) {\n    var scrollLeft = this._scrollLeft;\n    var half = ~~(this.container / 2);\n    console.log(\"half\", half);\n    var target = position - half;\n    var offset = target - scrollLeft;\n    var maxScroll = this._mainWS.clientWidth - this.wrapper.clientWidth;\n    /*   if (maxScroll == 0) {\r\n           // no need to continue if scrollbar is not there\r\n           return;\r\n       }*/\n    // if the cursor is currently visible...\n\n    if (!immediate && -half <= offset && offset < half) {\n      // we'll limit the \"re-center\" rate.\n      var rate = 5;\n      offset = Math.max(-rate, Math.min(rate, offset));\n      target = scrollLeft + offset;\n    } // limit target to valid range (0 to maxScroll)\n    // target = Math.max(0, Math.min(maxScroll, target));\n    // no use attempting to scroll if we're not moving\n    //       if (target != scrollLeft) {\n\n\n    this._scrollLeft = target; //console.log(target)\n\n    this._mainWS.style.transform = \"translate3d(\" + -target + \"px, 0 ,0 )\"; //  this._mainWS.style.left = -target + \"px\";\n    // }\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/core/console/channels/channelBuilder/wsAnimationFrame.js"],"names":["addAnimationFrame","waveSurfer","drawer","progress","minPxDelta","params","pixelRatio","pos","Math","round","width","lastPos","recenterOnPosition","scrollParent","autoCenter","newPos","wrapper","scrollWidth","_recenterAndUpdate","_mainWS","container","firstChild","style","position","willChange","immediate","scrollLeft","_scrollLeft","half","console","log","target","offset","maxScroll","clientWidth","rate","max","min","transform"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,UAA3B,EAAsC;AAMzCA,EAAAA,UAAU,CAACC,MAAX,CAAkBC,QAAlB,GAA6B,UAAUA,QAAV,EAAoB;AAC7C,QAAIC,UAAU,GAAG,IAAI,KAAKC,MAAL,CAAYC,UAAjC;AACA,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAQ,GAAG,KAAKO,KAA3B,IAAoCN,UAA9C;;AAEA,QAAIG,GAAG,GAAG,KAAKI,OAAX,IAAsBJ,GAAG,GAAG,KAAKI,OAAX,IAAsBP,UAAhD,EAA4D;AACxD,WAAKO,OAAL,GAAeJ,GAAf;AAEJ,WAAKK,kBAAL,CAAwBL,GAAxB;;AACI,UAAI,KAAKF,MAAL,CAAYQ,YAAZ,IAA4B,KAAKR,MAAL,CAAYS,UAA5C,EACA;AACI,YAAIC,MAAM,GAAG,CAAC,EAAE,KAAKC,OAAL,CAAaC,WAAb,GAA2Bd,QAA7B,CAAd,CADJ,CAEI;AACD;AACF,OALD,MAKO,CACL;AACD;AACJ;AACJ,GAjBD;;AAmBAF,EAAAA,UAAU,CAACC,MAAX,CAAkBgB,kBAAlB,GAAuC,UAASX,GAAT,EAAcQ,MAAd,EAAqB;AACxD,SAAKH,kBAAL,CAAwBG,MAAxB,EADwD,CAExD;AACH,GAHD;;AAKAd,EAAAA,UAAU,CAACC,MAAX,CAAkBiB,OAAlB,GAA4BlB,UAAU,CAACC,MAAX,CAAkBkB,SAAlB,CAA4BC,UAAxD;AACApB,EAAAA,UAAU,CAACC,MAAX,CAAkBiB,OAAlB,CAA0BG,KAA1B,CAAgCC,QAAhC,GAA2C,UAA3C;AACAtB,EAAAA,UAAU,CAACC,MAAX,CAAkBiB,OAAlB,CAA0BG,KAA1B,CAAgCE,UAAhC,GAA6C,WAA7C;;AAEAvB,EAAAA,UAAU,CAACC,MAAX,CAAkBU,kBAAlB,GAAuC,UAAUW,QAAV,EAAoBE,SAApB,EAA+B;AAElE,QAAIC,UAAU,GAAG,KAAKC,WAAtB;AACA,QAAIC,IAAI,GAAG,CAAC,EAAE,KAAKR,SAAL,GAAiB,CAAnB,CAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,QAAIG,MAAM,GAAGR,QAAQ,GAAGK,IAAxB;AACA,QAAII,MAAM,GAAGD,MAAM,GAAGL,UAAtB;AACA,QAAIO,SAAS,GAAG,KAAKd,OAAL,CAAae,WAAb,GAA2B,KAAKlB,OAAL,CAAakB,WAAxD;AAEH;;;;AAKG;;AACA,QAAI,CAACT,SAAD,IAAc,CAACG,IAAD,IAASI,MAAvB,IAAiCA,MAAM,GAAGJ,IAA9C,EAAoD;AAChD;AACA,UAAIO,IAAI,GAAG,CAAX;AACAH,MAAAA,MAAM,GAAGxB,IAAI,CAAC4B,GAAL,CAAS,CAACD,IAAV,EAAgB3B,IAAI,CAAC6B,GAAL,CAASF,IAAT,EAAeH,MAAf,CAAhB,CAAT;AACAD,MAAAA,MAAM,GAAGL,UAAU,GAAGM,MAAtB;AACH,KApBiE,CAsBlE;AACD;AACC;AACP;;;AACW,SAAKL,WAAL,GAAmBI,MAAnB,CA1B8D,CA2B9D;;AACA,SAAKZ,OAAL,CAAaG,KAAb,CAAmBgB,SAAnB,GAA+B,iBAAiB,CAACP,MAAlB,GAA2B,YAA1D,CA5B8D,CA6B9D;AACL;AAEF,GAhCD;AAiCH","sourcesContent":["export function addAnimationFrame(waveSurfer){\r\n\r\n\r\n\r\n    \r\n\r\n    waveSurfer.drawer.progress = function (progress) {\r\n        var minPxDelta = 1 / this.params.pixelRatio;\r\n        var pos = Math.round(progress * this.width) * minPxDelta;\r\n\r\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\r\n            this.lastPos = pos;\r\n\r\n        this.recenterOnPosition(pos);\r\n            if (this.params.scrollParent && this.params.autoCenter)\r\n            {\r\n                var newPos = ~~(this.wrapper.scrollWidth * progress);\r\n                //console.log(this._recenterAndUpdate(pos, newPos))\r\n               // window.requestAnimationFrame(this._recenterAndUpdate.bind(this, pos, newPos))\r\n            } else {\r\n              //  this.updateProgress(pos);\r\n            }\r\n        }\r\n    }\r\n\r\n    waveSurfer.drawer._recenterAndUpdate = function(pos, newPos){\r\n        this.recenterOnPosition(newPos);\r\n        //this.updateProgress(pos)\r\n    }\r\n\r\n    waveSurfer.drawer._mainWS = waveSurfer.drawer.container.firstChild;\r\n    waveSurfer.drawer._mainWS.style.position = \"absolute\";\r\n    waveSurfer.drawer._mainWS.style.willChange = \"transform\";\r\n\r\n    waveSurfer.drawer.recenterOnPosition = function (position, immediate) {\r\n        \r\n        var scrollLeft = this._scrollLeft;\r\n        var half = ~~(this.container / 2);\r\n        console.log(\"half\", half)\r\n        var target = position - half;\r\n        var offset = target - scrollLeft;\r\n        var maxScroll = this._mainWS.clientWidth - this.wrapper.clientWidth;\r\n\r\n     /*   if (maxScroll == 0) {\r\n            // no need to continue if scrollbar is not there\r\n            return;\r\n        }*/\r\n\r\n        // if the cursor is currently visible...\r\n        if (!immediate && -half <= offset && offset < half) {\r\n            // we'll limit the \"re-center\" rate.\r\n            var rate = 5;\r\n            offset = Math.max(-rate, Math.min(rate, offset));\r\n            target = scrollLeft + offset;\r\n        }\r\n\r\n        // limit target to valid range (0 to maxScroll)\r\n       // target = Math.max(0, Math.min(maxScroll, target));\r\n        // no use attempting to scroll if we're not moving\r\n //       if (target != scrollLeft) {\r\n            this._scrollLeft = target;\r\n            //console.log(target)\r\n            this._mainWS.style.transform = \"translate3d(\" + -target + \"px, 0 ,0 )\";\r\n            //  this._mainWS.style.left = -target + \"px\";\r\n       // }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}