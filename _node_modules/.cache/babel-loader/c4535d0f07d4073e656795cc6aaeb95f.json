{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Mixer\\\\Channel\\\\PeakLevelMeter\\\\PeakLevelMeter.js\";\nimport React from \"react\";\nimport Console from \"./../../../../core/console/console\";\nimport \"./peak-level-meter.scss\";\n\nclass PeakLevelMater extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ledStates: new Array(16).fill(false),\n      mixerChannelInterface: Console.Get().getMixerChannelInterface(this.props.name)\n    };\n  }\n\n  componentDidMount() {\n    let updateLedStates = () => {\n      let frequenstySum = this.state.mixerChannelInterface.getFrequenycySum();\n      console.log(this.state.ledStates);\n      requestAnimationFrame(updateLedStates);\n    };\n\n    updateLedStates();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"peak-level-meter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.ledStates.map((index, ledState) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"level-meter-led led-\" + index + (ledState ? \" led-on\" : \" led-off\") + ledState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default PeakLevelMater;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Mixer/Channel/PeakLevelMeter/PeakLevelMeter.js"],"names":["React","Console","PeakLevelMater","Component","state","ledStates","Array","fill","mixerChannelInterface","Get","getMixerChannelInterface","props","name","componentDidMount","updateLedStates","frequenstySum","getFrequenycySum","console","log","requestAnimationFrame","render","map","index","ledState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAO,yBAAP;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA4C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACJC,MAAAA,SAAS,EAAI,IAAIC,KAAJ,CAAU,EAAV,CAAD,CAAgBC,IAAhB,CAAqB,KAArB,CADR;AAEJC,MAAAA,qBAAqB,EAAGP,OAAO,CAACQ,GAAR,GAAcC,wBAAd,CAAuC,KAAKC,KAAL,CAAWC,IAAlD;AAFpB,KAFgC;AAAA;;AAQxCC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,eAAe,GAAG,MAAK;AACvB,UAAIC,aAAa,GAAG,KAAKX,KAAL,CAAWI,qBAAX,CAAiCQ,gBAAjC,EAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,SAAvB;AACAc,MAAAA,qBAAqB,CAACL,eAAD,CAArB;AACH,KAJD;;AAMAA,IAAAA,eAAe;AAClB;;AAEDM,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKhB,KAAL,CAAWC,SAAX,CAAqBgB,GAArB,CAAyB,CAACC,KAAD,EAAQC,QAAR,KAAmB;AACzC,aAAQ;AAAK,QAAA,GAAG,EAAED,KAAV;AAAiB,QAAA,SAAS,EAAE,yBAAwBA,KAAxB,IAAkCC,QAAD,GAAa,SAAb,GAAyB,UAA1D,IAAwEA,QAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACJ,KAFC,CADN,CADJ;AAOH;;AA1BuC;;AA8B5C,eAAerB,cAAf","sourcesContent":["import React from \"react\"\r\nimport Console from \"./../../../../core/console/console\";\r\nimport \"./peak-level-meter.scss\";\r\n\r\nclass PeakLevelMater extends React.Component{\r\n\r\n    state = {\r\n        ledStates : (new Array(16)).fill(false),\r\n        mixerChannelInterface : Console.Get().getMixerChannelInterface(this.props.name),\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        let updateLedStates = () =>{\r\n            let frequenstySum = this.state.mixerChannelInterface.getFrequenycySum();\r\n            console.log(this.state.ledStates);\r\n            requestAnimationFrame(updateLedStates);\r\n        }\r\n        \r\n        updateLedStates();\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"peak-level-meter\">\r\n                { this.state.ledStates.map((index, ledState)=>{\r\n                     return (<div key={index} className={\"level-meter-led led-\"+ index + ((ledState) ? \" led-on\" : \" led-off\") + ledState}/>)\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PeakLevelMater;"]},"metadata":{},"sourceType":"module"}