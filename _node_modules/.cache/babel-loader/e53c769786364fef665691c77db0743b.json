{"ast":null,"code":"import _toConsumableArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _toArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toArray\";import{get}from\"lodash/object\";export function findClosesDir(state,_ref){var _ref2=_toArray(_ref),path=_ref2.slice(0);if(get(state,path)instanceof Array){path.pop();return findClosesDir(state,path);}else return path;}export function generateTemplateName(state,_ref3,base){var _ref4=_toArray(_ref3),pathToDir=_ref4.slice(0);var i=0;while(true){var number=i?\" \"+i:\"\";var name=base+number;var notExist=!get(state,[].concat(_toConsumableArray(pathToDir),[name]));if(notExist){return name;}else{i++;}}}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/reducers/console/playlist/utils.js"],"names":["get","findClosesDir","state","path","Array","pop","generateTemplateName","base","pathToDir","i","number","name","notExist"],"mappings":"gOAAA,OAASA,GAAT,KAAoB,eAApB,CAEA,MAAO,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,MAAyC,0BAAPC,IAAO,gBAC5C,GAAIH,GAAG,CAACE,KAAD,CAAQC,IAAR,CAAH,UAA4BC,CAAAA,KAAhC,CAAuC,CACnCD,IAAI,CAACE,GAAL,GACA,MAAOJ,CAAAA,aAAa,CAACC,KAAD,CAAQC,IAAR,CAApB,CACH,CAHD,IAGO,OAAOA,CAAAA,IAAP,CACV,CAED,MAAO,SAASG,CAAAA,oBAAT,CAA8BJ,KAA9B,OAAqDK,IAArD,CAA2D,2BAAlBC,SAAkB,gBAC9D,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,MAAO,IAAP,CAAa,CACT,GAAMC,CAAAA,MAAM,CAAGD,CAAC,CAAG,IAAMA,CAAT,CAAa,EAA7B,CACA,GAAIE,CAAAA,IAAI,CAAGJ,IAAI,CAAGG,MAAlB,CACA,GAAME,CAAAA,QAAQ,CAAG,CAAEZ,GAAG,CAACE,KAAD,8BAAYM,SAAZ,GAAuBG,IAAvB,GAAtB,CACA,GAAIC,QAAJ,CAAc,CACV,MAAOD,CAAAA,IAAP,CACH,CAFD,IAEO,CACHF,CAAC,GACJ,CACJ,CACJ","sourcesContent":["import { get } from \"lodash/object\";\r\n\r\nexport function findClosesDir(state, [...path]) {\r\n    if (get(state, path) instanceof Array) {\r\n        path.pop();\r\n        return findClosesDir(state, path)\r\n    } else return path;\r\n}\r\n\r\nexport function generateTemplateName(state, [...pathToDir], base) {\r\n    let i = 0;\r\n    while (true) {\r\n        const number = i ? \" \" + i : \"\";\r\n        let name = base + number;\r\n        const notExist = !(get(state, [...pathToDir, name]));\r\n        if (notExist) {\r\n            return name;\r\n        } else {\r\n            i++;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}