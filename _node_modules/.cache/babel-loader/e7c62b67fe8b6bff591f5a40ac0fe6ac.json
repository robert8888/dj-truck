{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\PlayListExplorer\\\\Explorer\\\\ExplorerTree\\\\DirElement\\\\DirElement.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport UUID from \"uuidjs\";\nimport ClassName from \"classnames\";\nimport { useDoubleClick } from \"./../useDoubleClick\";\nimport { faFolder, faFile, faAngleRight, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst DirElement = props => {\n  const {\n    name,\n    path,\n    open,\n    empty,\n    renameMode,\n    renameInput\n  } = props;\n  let currentSelected = false;\n\n  if ([...path, name].join(\"\") === props.currentSelection.join(\"\")) {\n    currentSelected = true;\n  }\n\n  const liClassList = ClassName(\"list-item item-dir\", {\n    \"item-dir--empty\": empty\n  }, {\n    \"item--selected\": currentSelected\n  });\n  let content = name;\n\n  if (currentSelected && renameMode) {\n    content = renameInput(name);\n  }\n\n  const [dirClickHandler] = useDoubleClick({\n    clickHandler: props.onClick,\n    // props.setSelection(path), //props.setSelection,\n    doubleClickHandler: props.onDoubleClick //props.toggleDir(path),//toggleDirHandler\n\n  });\n  return React.createElement(\"li\", {\n    onClick: dirClickHandler //onContextMenu={props.setSelection.bind(null, [...path, name])}\n    ,\n    onContextMenu: props.onContextMenu.bind(null, path),\n    className: liClassList,\n    \"data-path\": path.join(\"/\"),\n    key: UUID.genV1(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, !empty && React.createElement(\"button\", {\n    className: \"btn-dir \" + (open ? \"btn-dir--expand\" : \"btn-dir--colapse\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"icon\",\n    icon: open ? faAngleDown : faAngleRight,\n    onClick: props.onClick.bind(null, [...path, name]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(FontAwesomeIcon, {\n    className: \"icon icon-dir\",\n    icon: faFolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), content);\n};\n\nconst mapStateToProps = state => ({\n  currentSelection: state.playList.currentSelection\n});\n\nexport default connect(mapStateToProps)(DirElement);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/PlayListExplorer/Explorer/ExplorerTree/DirElement/DirElement.js"],"names":["React","connect","UUID","ClassName","useDoubleClick","faFolder","faFile","faAngleRight","faAngleDown","FontAwesomeIcon","DirElement","props","name","path","open","empty","renameMode","renameInput","currentSelected","join","currentSelection","liClassList","content","dirClickHandler","clickHandler","onClick","doubleClickHandler","onDoubleClick","onContextMenu","bind","genV1","mapStateToProps","state","playList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AACA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,YAHJ,EAIIC,WAJJ,QAKO,mCALP;AAMA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,KAApB;AAA4BC,IAAAA,UAA5B;AAAwCC,IAAAA;AAAxC,MAAwDN,KAA9D;AAEA,MAAIO,eAAe,GAAG,KAAtB;;AACA,MAAI,CAAC,GAAGL,IAAJ,EAAUD,IAAV,EAAgBO,IAAhB,CAAqB,EAArB,MAA6BR,KAAK,CAACS,gBAAN,CAAuBD,IAAvB,CAA4B,EAA5B,CAAjC,EAAkE;AAC9DD,IAAAA,eAAe,GAAG,IAAlB;AACH;;AACD,QAAMG,WAAW,GAAGlB,SAAS,CACzB,oBADyB,EAEzB;AAAE,uBAAmBY;AAArB,GAFyB,EAGzB;AAAE,sBAAkBG;AAApB,GAHyB,CAA7B;AAKA,MAAII,OAAO,GAAGV,IAAd;;AACA,MAAIM,eAAe,IAAIF,UAAvB,EAAmC;AAC/BM,IAAAA,OAAO,GAAGL,WAAW,CAACL,IAAD,CAArB;AACH;;AAED,QAAM,CAACW,eAAD,IAAoBnB,cAAc,CAAC;AACrCoB,IAAAA,YAAY,EAAEb,KAAK,CAACc,OADiB;AACT;AAC5BC,IAAAA,kBAAkB,EAAEf,KAAK,CAACgB,aAFW,CAEE;;AAFF,GAAD,CAAxC;AAMA,SACI;AACI,IAAA,OAAO,EAAEJ,eADb,CAEI;AAFJ;AAGI,IAAA,aAAa,EAAEZ,KAAK,CAACiB,aAAN,CAAoBC,IAApB,CAAyB,IAAzB,EAA+BhB,IAA/B,CAHnB;AAII,IAAA,SAAS,EAAEQ,WAJf;AAKI,iBAAWR,IAAI,CAACM,IAAL,CAAU,GAAV,CALf;AAMI,IAAA,GAAG,EAAEjB,IAAI,CAAC4B,KAAL,EANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOK,CAACf,KAAD,IACG;AACI,IAAA,SAAS,EAAE,cAAeD,IAAD,GAAS,iBAAT,GAA6B,kBAA3C,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,eAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,IAAI,EAAGA,IAAD,GAASN,WAAT,GAAuBD,YAFjC;AAGI,IAAA,OAAO,EAAEI,KAAK,CAACc,OAAN,CAAcI,IAAd,CAAmB,IAAnB,EAAyB,CAAC,GAAGhB,IAAJ,EAAUD,IAAV,CAAzB,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARR,EAeI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,eAA3B;AAA2C,IAAA,IAAI,EAAEP,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBKiB,OAhBL,CADJ;AAqBH,CA5CD;;AA+CA,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAC9BZ,EAAAA,gBAAgB,EAAEY,KAAK,CAACC,QAAN,CAAeb;AADH,CAAL,CAA7B;;AAIA,eAAenB,OAAO,CAAC8B,eAAD,CAAP,CAAyBrB,UAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport UUID from \"uuidjs\";\r\nimport ClassName from \"classnames\"\r\nimport {useDoubleClick} from \"./../useDoubleClick\";\r\nimport {\r\n    faFolder,\r\n    faFile,\r\n    faAngleRight,\r\n    faAngleDown\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst DirElement = props => {\r\n    const { name, path, open, empty , renameMode, renameInput } = props;\r\n\r\n    let currentSelected = false;\r\n    if ([...path, name].join(\"\") === props.currentSelection.join(\"\")) {\r\n        currentSelected = true;\r\n    }\r\n    const liClassList = ClassName(\r\n        \"list-item item-dir\",\r\n        { \"item-dir--empty\": empty },\r\n        { \"item--selected\": currentSelected }\r\n    )\r\n    let content = name;\r\n    if (currentSelected && renameMode) {\r\n        content = renameInput(name)\r\n    }\r\n\r\n    const [dirClickHandler] = useDoubleClick({\r\n        clickHandler: props.onClick,// props.setSelection(path), //props.setSelection,\r\n        doubleClickHandler: props.onDoubleClick//props.toggleDir(path),//toggleDirHandler\r\n    })\r\n\r\n\r\n    return (\r\n        <li\r\n            onClick={dirClickHandler}\r\n            //onContextMenu={props.setSelection.bind(null, [...path, name])}\r\n            onContextMenu={props.onContextMenu.bind(null, path)}\r\n            className={liClassList}\r\n            data-path={path.join(\"/\")}\r\n            key={UUID.genV1()}>\r\n            {!empty &&\r\n                <button\r\n                    className={\"btn-dir \" + ((open) ? \"btn-dir--expand\" : \"btn-dir--colapse\")}>\r\n                    <FontAwesomeIcon\r\n                        className=\"icon\"\r\n                        icon={(open) ? faAngleDown : faAngleRight}\r\n                        onClick={props.onClick.bind(null, [...path, name])} />\r\n                </button>}\r\n            <FontAwesomeIcon className=\"icon icon-dir\" icon={faFolder} />\r\n            {content}\r\n        </li>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    currentSelection: state.playList.currentSelection\r\n})\r\n\r\nexport default connect(mapStateToProps)(DirElement);\r\n\r\n"]},"metadata":{},"sourceType":"module"}