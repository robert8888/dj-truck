{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordList\\\\Record\\\\PlaybackButton\\\\PlaybackButton.js\";\nimport React, { useState, useCallback, useEffect, useMemo, useContext } from \"react\"; // import {PlayerContext} from  \"./../../../../Hooks/useRecordPlayer\";\n\nimport BinaryButton from \"./../../../BinnaryButton/BinnaryButton\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons';\nimport classNames from \"classnames\";\nimport \"./playback-button.scss\";\nimport usePlaybackState from \"./../../../../Hooks/usePlabackState\";\nexport const PLAYBACK_STATE = {\n  PLAY: \"play music\",\n  PAUSE: \"pause music\"\n};\n\nconst PlaybackButton = ({\n  call,\n  id,\n  player\n}) => {\n  // const playerContext = useContext(PlayerContext);\n  // const [state, setState] = useState(PLAYBACK_STATE.PAUSE);\n  // const [icon, setIcon] = useState(faPause);\n  // const btnClick = useCallback(()=>{\n  //     if(state === PLAYBACK_STATE.PAUSE){\n  //         call(PLAYBACK_STATE.PLAY)\n  //         setState(PLAYBACK_STATE.PLAY);\n  //     } else {\n  //         call(PLAYBACK_STATE.PAUSE)\n  //         setState(PLAYBACK_STATE.PAUSE);\n  //     }\n  // }, [setState, state, call])\n  // useEffect(()=>{\n  //     switch(state){\n  //         case PLAYBACK_STATE.PLAY : {\n  //             setIcon(faPause)\n  //             break;\n  //         }\n  //         case PLAYBACK_STATE.PAUSE: {\n  //             setIcon(faPlay);\n  //             break;\n  //         }\n  //     }\n  // }, [state, setIcon])\n  const [state, icon, toggleHandler, setState] = usePlaybackState(call);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.setBtnCtrlHandler(id, s => setState(s));\n  }, [player, id]);\n  const btnClassNames = useMemo(() => {\n    return classNames(\"playback-button\", {\n      \"playback-button--active\": state === PLAYBACK_STATE.PLAY\n    });\n  }, [state]);\n  return React.createElement(\"div\", {\n    className: \"playback-button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(BinaryButton, {\n    className: btnClassNames,\n    onChange: toggleHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n};\n\nexport default PlaybackButton;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordList/Record/PlaybackButton/PlaybackButton.js"],"names":["React","useState","useCallback","useEffect","useMemo","useContext","BinaryButton","FontAwesomeIcon","faPlay","faPause","classNames","usePlaybackState","PLAYBACK_STATE","PLAY","PAUSE","PlaybackButton","call","id","player","state","icon","toggleHandler","setState","setBtnCtrlHandler","s","btnClassNames"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,WAA3B,EAAwCC,SAAxC,EAAmDC,OAAnD,EAA4DC,UAA5D,QAA8E,OAA9E,C,CACA;;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mCAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,wBAAP;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,IAAI,EAAG,YADmB;AAE1BC,EAAAA,KAAK,EAAE;AAFmB,CAAvB;;AAOP,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,EAAP;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAC5C;AACC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,IAAR,EAAcC,aAAd,EAA6BC,QAA7B,IAAyCX,gBAAgB,CAACK,IAAD,CAA/D;AAGAb,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACe,MAAJ,EAAW;AACP;AACH;;AACDA,IAAAA,MAAM,CAACK,iBAAP,CAAyBN,EAAzB,EAA8BO,CAAD,IAAOF,QAAQ,CAACE,CAAD,CAA5C;AACH,GALQ,EAKN,CAACN,MAAD,EAASD,EAAT,CALM,CAAT;AAQA,QAAMQ,aAAa,GAAGrB,OAAO,CAAC,MAAI;AAC9B,WAAOM,UAAU,CACb,iBADa,EAEb;AACI,iCAA4BS,KAAK,KAAKP,cAAc,CAACC;AADzD,KAFa,CAAjB;AAMH,GAP4B,EAO1B,CAACM,KAAD,CAP0B,CAA7B;AASA,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEM,aAAzB;AAAwC,IAAA,QAAQ,EAAEJ,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAOH,CAvDD;;AAyDA,eAAeL,cAAf","sourcesContent":["import React , { useState, useCallback, useEffect, useMemo, useContext } from \"react\";\r\n// import {PlayerContext} from  \"./../../../../Hooks/useRecordPlayer\";\r\nimport BinaryButton from \"./../../../BinnaryButton/BinnaryButton\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons'\r\nimport classNames from \"classnames\"\r\nimport \"./playback-button.scss\"\r\nimport usePlaybackState from \"./../../../../Hooks/usePlabackState\";\r\n\r\nexport const PLAYBACK_STATE = {\r\n    PLAY : \"play music\",\r\n    PAUSE: \"pause music\"\r\n}\r\n\r\n\r\n\r\nconst PlaybackButton = ({call, id, player}) => {\r\n   // const playerContext = useContext(PlayerContext);\r\n    // const [state, setState] = useState(PLAYBACK_STATE.PAUSE);\r\n    // const [icon, setIcon] = useState(faPause);\r\n\r\n    // const btnClick = useCallback(()=>{\r\n    //     if(state === PLAYBACK_STATE.PAUSE){\r\n    //         call(PLAYBACK_STATE.PLAY)\r\n    //         setState(PLAYBACK_STATE.PLAY);\r\n    //     } else {\r\n    //         call(PLAYBACK_STATE.PAUSE)\r\n    //         setState(PLAYBACK_STATE.PAUSE);\r\n    //     }\r\n    // }, [setState, state, call])\r\n\r\n    // useEffect(()=>{\r\n    //     switch(state){\r\n    //         case PLAYBACK_STATE.PLAY : {\r\n    //             setIcon(faPause)\r\n    //             break;\r\n    //         }\r\n    //         case PLAYBACK_STATE.PAUSE: {\r\n    //             setIcon(faPlay);\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    // }, [state, setIcon])\r\n\r\n    const [state, icon, toggleHandler, setState] = usePlaybackState(call);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.setBtnCtrlHandler(id, (s) => setState(s))\r\n    }, [player, id])\r\n\r\n\r\n    const btnClassNames = useMemo(()=>{\r\n        return classNames(\r\n            \"playback-button\",\r\n            {\r\n                \"playback-button--active\": (state === PLAYBACK_STATE.PLAY)\r\n            }\r\n        )\r\n    }, [state])\r\n\r\n    return (\r\n        <div className=\"playback-button-container\">\r\n            <BinaryButton className={btnClassNames} onChange={toggleHandler}>\r\n                <FontAwesomeIcon icon={icon}/>\r\n            </BinaryButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaybackButton"]},"metadata":{},"sourceType":"module"}