{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(requestDeleteComment),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handel);import{put,select,takeEvery}from\"redux-saga/effects\";import{ACTIONS,deleteComment,pushLog}from\"../../../actions\";import{getApi}from\"./../../../apis/apiProvider\";import{Log}from\"./../../../utils/logger/logger\";import errorParser from\"./../../../utils/serverErrorParser/errorParser\";export default function requestDeleteComment(){return _regeneratorRuntime.wrap(function requestDeleteComment$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(ACTIONS.RECS_REQ_DELETE_COMMENT,handel);case 2:case\"end\":return _context.stop();}}},_marked);}var getToken=function getToken(state){return state.user.token;};function handel(action){var token,_getApi,callQuery,queries,query,response,success;return _regeneratorRuntime.wrap(function handel$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return select(getToken);case 2:token=_context2.sent;if(token){_context2.next=5;break;}return _context2.abrupt(\"return\");case 5:_context2.prev=5;_getApi=getApi(\"UserAssets\"),callQuery=_getApi.callQuery,queries=_getApi.queries;query=queries.deleteCommentQl;_context2.next=10;return callQuery(query,token,{id:action.commentId});case 10:response=_context2.sent;if(!response.errors){_context2.next=13;break;}throw new Error(\"Server response contains errors \"+errorParser(response.errors));case 13:success=response===null||response===void 0?void 0:response.data;if(success){_context2.next=16;break;}throw new Error();case 16:_context2.next=18;return put(deleteComment(action.commentId));case 18:_context2.next=20;return put(pushLog(new Log(\"Comment id: \".concat(action.commentId,\" deleted from database\"))));case 20:_context2.next=26;break;case 22:_context2.prev=22;_context2.t0=_context2[\"catch\"](5);_context2.next=26;return put(pushLog(Log.Error(['saga','record','comments','request delete comment'],\"Can't delete comment from database\"+_context2.t0.message,\"Sorry. During process of deleting comment in database occurred problem\",_context2.t0)));case 26:case\"end\":return _context2.stop();}}},_marked2,null,[[5,22]]);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/records/comments/reqDeleteComment.js"],"names":["requestDeleteComment","handel","put","select","takeEvery","ACTIONS","deleteComment","pushLog","getApi","Log","errorParser","RECS_REQ_DELETE_COMMENT","getToken","state","user","token","action","callQuery","queries","query","deleteCommentQl","id","commentId","response","errors","Error","success","data","message"],"mappings":"2JAMyBA,oB,iDAMfC,M,EAZV,OAASC,GAAT,CAAcC,MAAd,CAAsBC,SAAtB,KAAuC,oBAAvC,CACA,OAASC,OAAT,CAAkBC,aAAlB,CAAiCC,OAAjC,KAAgD,kBAAhD,CACA,OAASC,MAAT,KAAuB,6BAAvB,CACA,OAASC,GAAT,KAAoB,gCAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gDAAxB,CAEA,cAAe,SAAUV,CAAAA,oBAAV,gJACX,MAAMI,CAAAA,SAAS,CAACC,OAAO,CAACM,uBAAT,CAAkCV,MAAlC,CAAf,CADW,sDAIf,GAAMW,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWC,KAAf,EAAtB,CAEA,QAAUd,CAAAA,MAAV,CAAiBe,MAAjB,gMACkB,MAAMb,CAAAA,MAAM,CAACS,QAAD,CAAZ,CADlB,OACUG,KADV,mBAEQA,KAFR,4FAKuCP,MAAM,CAAC,YAAD,CAL7C,CAKgBS,SALhB,SAKgBA,SALhB,CAK2BC,OAL3B,SAK2BA,OAL3B,CAOcC,KAPd,CAOsBD,OAAO,CAACE,eAP9B,mBAQyB,MAAMH,CAAAA,SAAS,CAACE,KAAD,CAAQJ,KAAR,CAAe,CAACM,EAAE,CAAGL,MAAM,CAACM,SAAb,CAAf,CAAf,CARzB,QAQcC,QARd,oBAUYA,QAAQ,CAACC,MAVrB,gCAWkB,IAAIC,CAAAA,KAAJ,CAAU,mCAAqCf,WAAW,CAACa,QAAQ,CAACC,MAAV,CAA1D,CAXlB,SAccE,OAdd,CAcwBH,QAdxB,SAcwBA,QAdxB,iBAcwBA,QAAQ,CAAEI,IAdlC,IAgBaD,OAhBb,gCAiBkB,IAAID,CAAAA,KAAJ,EAjBlB,2BAoBQ,MAAMvB,CAAAA,GAAG,CAACI,aAAa,CAACU,MAAM,CAACM,SAAR,CAAd,CAAT,CApBR,0BAsBQ,MAAMpB,CAAAA,GAAG,CAACK,OAAO,CAAC,GAAIE,CAAAA,GAAJ,uBAAuBO,MAAM,CAACM,SAA9B,2BAAD,CAAR,CAAT,CAtBR,+GAwBQ,MAAMpB,CAAAA,GAAG,CAACK,OAAO,CAACE,GAAG,CAACgB,KAAJ,CACd,CAAC,MAAD,CAAS,QAAT,CAAmB,UAAnB,CAA+B,wBAA/B,CADc,CAEd,qCAAsC,aAAMG,OAF9B,CAGd,wEAHc,cAAD,CAAR,CAAT,CAxBR","sourcesContent":["import { put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTIONS, deleteComment, pushLog } from \"../../../actions\";\r\nimport { getApi } from \"./../../../apis/apiProvider\";\r\nimport { Log } from \"./../../../utils/logger/logger\";\r\nimport errorParser from \"./../../../utils/serverErrorParser/errorParser\";\r\n\r\nexport default function* requestDeleteComment() {\r\n    yield takeEvery(ACTIONS.RECS_REQ_DELETE_COMMENT, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n    if(!token) return;\r\n\r\n    try {\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n\r\n        const query = queries.deleteCommentQl;\r\n        const response = yield callQuery(query, token, {id : action.commentId});\r\n\r\n        if (response.errors) {\r\n            throw new Error(\"Server response contains errors \" + errorParser(response.errors));\r\n        }\r\n\r\n        const success = response?.data;\r\n\r\n        if (!success) {\r\n            throw new Error()\r\n        }\r\n\r\n        yield put(deleteComment(action.commentId))\r\n        \r\n        yield put(pushLog(new Log(`Comment id: ${action.commentId} deleted from database`)))\r\n    } catch (error) {\r\n        yield put(pushLog(Log.Error(\r\n            ['saga', 'record', 'comments', 'request delete comment'],\r\n            \"Can't delete comment from database\"+ error.message,\r\n            \"Sorry. During process of deleting comment in database occurred problem\",\r\n            error\r\n        )))\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}