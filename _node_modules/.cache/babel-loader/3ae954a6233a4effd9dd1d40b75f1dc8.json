{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\Player\\\\Player.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport WaveSurfer from \"wavesurfer\";\nimport Console from \"./../../../core/console/console\";\nimport config from \"./configuration\";\nimport { setChannelReady, setTimeLeft } from \"./../../../actions\";\nimport \"./player.scss\";\n\nclass Player extends React.Component {\n  constructor() {\n    super();\n    this.masterContainer = React.createRef();\n    this.slaveContainer = React.createRef();\n    this.state = {\n      loadingProgress: 0,\n      clearSlaveFlag: false\n    };\n  }\n\n  setLoading(progress) {\n    this.setState(state => {\n      let _state = { ...state\n      };\n      _state.loadingProgress = progress;\n      return _state;\n    });\n  }\n\n  drawBeatBars(bpm, offset) {\n    //console.log(bpm, offset, this.props.isReady)\n    let wrapper = this.master.drawer.wrapper;\n    let style = WaveSurfer.Drawer.style;\n    console.log(style);\n    let bar = document.createElement('div');\n    style(bar, {\n      cursor: 'col-resize',\n      position: 'absolute',\n      left: '0px',\n      top: '0px',\n      width: '1%',\n      maxWidth: '4px',\n      height: '100%'\n    });\n    console.log(wrapper);\n  }\n\n  componentDidMount() {\n    this.master = WaveSurfer.create(config.master(this.masterContainer.current, this.props.name));\n    this.slave = WaveSurfer.create(config.slave(this.slaveContainer.current, this.props.name));\n    const mixConsole = Console.Get();\n    mixConsole.setPlayer(this.props.name, this.master);\n    this.master.on('ready', () => {\n      this.currentDuration = this.master.getDuration();\n      this.slave.load(null, this.master.backend.getPeaks(430, 0, 430));\n      this.setState({ ...this.state,\n        loadingProgress: 100,\n        clearSlaveFlag: false\n      });\n      this.props.setReadyHandler(true);\n      startSync();\n      console.log('loaded slave');\n    });\n    this.slave.on('seek', progress => {\n      let wasPlaying = this.master.isPlaying();\n      this.master.backend.seekTo(progress * this.currentDuration);\n      this.master.drawer.progress(progress);\n      this.master.fireEvent('seek', progress);\n\n      if (wasPlaying) {\n        this.master.play();\n      }\n\n      this.slave.drawer.progress(progress);\n\n      if (wasPlaying) {\n        this.props.setTimeLeftHandler(parseInt(this.master.getDuration() - this.master.getCurrentTime()));\n      } else {\n        this.props.setTimeLeftHandler(parseInt(this.master.getDuration() - this.master.getDuration() * progress));\n      }\n    });\n    this.master.on('loading', progress => {\n      this.setLoading(progress);\n\n      if (!this.state.clearSlaveFlag) {\n        this.slave.load(null, []);\n        this.setState({ ...this.state,\n          clearSlaveFlag: true\n        });\n      }\n    });\n\n    const startSync = () => {\n      this.syncHandle = setInterval(() => {\n        this.slave.drawer.progress(this.master.getCurrentTime() / this.currentDuration);\n      }, 100);\n    };\n  }\n\n  render() {\n    if (this.props.bpm && this.props.offset && this.props.isReady) {\n      this.drawBeatBars(this.props.bpm, this.props.offset);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"player player-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.loadingProgress < 100 && this.state.loadingProgress > 0 && React.createElement(\"div\", {\n      className: \"player-loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Loading \", this.state.loadingProgress, \" % \")), React.createElement(\"div\", {\n      className: \"master\",\n      ref: this.masterContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"slave\",\n      ref: this.slaveContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  bpm: state.console.channel[ownProps.name].track.bpm,\n  offset: state.console.channel[ownProps.name].playBackState.offset,\n  isReady: state.console.channel[ownProps.name].playBackState.ready\n});\n\nconst mapDispachToProps = (dispatch, ownProps) => ({\n  setReadyHandler: status => dispatch(setChannelReady(status, ownProps.name)),\n  setTimeLeftHandler: timeLeft => dispatch(setTimeLeft(ownProps.name, timeLeft))\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Player);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/Player/Player.js"],"names":["React","connect","WaveSurfer","Console","config","setChannelReady","setTimeLeft","Player","Component","constructor","masterContainer","createRef","slaveContainer","state","loadingProgress","clearSlaveFlag","setLoading","progress","setState","_state","drawBeatBars","bpm","offset","wrapper","master","drawer","style","Drawer","console","log","bar","document","createElement","cursor","position","left","top","width","maxWidth","height","componentDidMount","create","current","props","name","slave","mixConsole","Get","setPlayer","on","currentDuration","getDuration","load","backend","getPeaks","setReadyHandler","startSync","wasPlaying","isPlaying","seekTo","fireEvent","play","setTimeLeftHandler","parseInt","getCurrentTime","syncHandle","setInterval","render","isReady","mapStateToProps","ownProps","channel","track","playBackState","ready","mapDispachToProps","dispatch","status","timeLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport Console from \"./../../../core/console/console\";\r\nimport config from \"./configuration\";\r\nimport {setChannelReady , setTimeLeft } from \"./../../../actions\";\r\nimport \"./player.scss\"\r\n\r\nclass Player extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.masterContainer = React.createRef();\r\n        this.slaveContainer = React.createRef();\r\n\r\n        this.state = {\r\n            loadingProgress : 0,\r\n\r\n            clearSlaveFlag: false,\r\n        }\r\n    }\r\n\r\n    setLoading(progress){\r\n        this.setState( state => {\r\n            let _state = {...state};\r\n            _state.loadingProgress = progress;\r\n            return _state\r\n        })\r\n    }\r\n\r\n    drawBeatBars(bpm, offset){\r\n        //console.log(bpm, offset, this.props.isReady)\r\n        let wrapper = this.master.drawer.wrapper;\r\n        let style = WaveSurfer.Drawer.style;\r\n        console.log(style);\r\n        let bar = document.createElement('div');\r\n        style(bar, {\r\n            cursor: 'col-resize',\r\n            position: 'absolute',\r\n            left: '0px',\r\n            top: '0px',\r\n            width: '1%',\r\n            maxWidth: '4px',\r\n            height: '100%'\r\n        })\r\n        \r\n        console.log(wrapper);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.master = WaveSurfer.create(config.master(this.masterContainer.current, this.props.name));\r\n        this.slave = WaveSurfer.create(config.slave(this.slaveContainer.current, this.props.name));\r\n\r\n        const mixConsole = Console.Get();\r\n        mixConsole.setPlayer(this.props.name, this.master);\r\n\r\n        this.master.on('ready', ()=>{\r\n            this.currentDuration = this.master.getDuration();\r\n            this.slave.load(null, this.master.backend.getPeaks(430, 0, 430));\r\n            this.setState({...this.state, loadingProgress: 100, clearSlaveFlag : false})\r\n            this.props.setReadyHandler(true);\r\n            startSync();\r\n            console.log('loaded slave')\r\n        })\r\n\r\n        this.slave.on('seek', (progress)=>{\r\n            let wasPlaying = this.master.isPlaying();\r\n            this.master.backend.seekTo(progress * this.currentDuration);\r\n            this.master.drawer.progress(progress);\r\n            this.master.fireEvent('seek', progress);\r\n\r\n            if(wasPlaying){\r\n                this.master.play();\r\n            }\r\n            this.slave.drawer.progress(progress);\r\n\r\n            if(wasPlaying){\r\n                this.props.setTimeLeftHandler(parseInt(this.master.getDuration() - this.master.getCurrentTime()))\r\n            } else {\r\n                this.props.setTimeLeftHandler(parseInt(this.master.getDuration() - (this.master.getDuration() * progress)))\r\n            }\r\n\r\n\r\n        })\r\n\r\n        this.master.on('loading', (progress)=>{\r\n            this.setLoading(progress);\r\n            if(!this.state.clearSlaveFlag){\r\n                this.slave.load(null, []);\r\n                this.setState({...this.state, clearSlaveFlag : true})\r\n            }\r\n        })\r\n\r\n        const startSync = () => {\r\n            this.syncHandle = setInterval(() => {\r\n                this.slave.drawer.progress(this.master.getCurrentTime() / this.currentDuration);\r\n            }, 100)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        if(this.props.bpm && this.props.offset && this.props.isReady){\r\n            this.drawBeatBars(this.props.bpm, this.props.offset)\r\n        }\r\n\r\n        return (\r\n            <div className={\"player player-\"+this.props.name}>\r\n                {\r\n                (this.state.loadingProgress < 100 && this.state.loadingProgress > 0) &&\r\n                    <div className=\"player-loading\"><span>Loading { this.state.loadingProgress } % </span></div>\r\n                }\r\n                <div className=\"master\" ref={ this.masterContainer } />\r\n                <div className=\"slave\" ref={ this.slaveContainer } /> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    bpm : state.console.channel[ownProps.name].track.bpm,\r\n    offset : state.console.channel[ownProps.name].playBackState.offset,\r\n    isReady : state.console.channel[ownProps.name].playBackState.ready,\r\n})\r\n\r\n\r\nconst mapDispachToProps = (dispatch, ownProps) =>({\r\n    setReadyHandler : (status) => dispatch(setChannelReady(status, ownProps.name)),\r\n    setTimeLeftHandler : (timeLeft) => dispatch(setTimeLeft(ownProps.name, timeLeft))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Player);"]},"metadata":{},"sourceType":"module"}