{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\console\\\\components\\\\Console\\\\Deck\\\\Deck.js\";\nimport React from \"react\";\nimport { useDrop } from 'react-dnd';\nimport { connect } from \"react-redux\";\nimport { loadTrack } from \"./../../../../../actions\";\nimport ItemTypes from \"./../../../../common/DndItemTypes\";\nimport \"./deck.scss\";\nimport Looper from \"./Looper/Looper\";\nimport PitchButtons from \"./PitchButtons/PitchButtons\";\nimport PitchSlider from \"./PitchSlider/PitchSlider\";\nimport PlayBackControls from \"./PlayBackControls/PlayBackControls\";\nimport Player from \"./Player/Player\";\nimport SyncControl from \"./SyncControl/SyncControl\";\nimport TrackInfo from \"./TrackInfo/TrackInfo\";\n\nconst Deck = props => {\n  const dropResult = item => {\n    props.loadTrack(item.track, props.name);\n    return {\n      target: \"deck\"\n    };\n  };\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.TRACK,\n    drop: dropResult\n  });\n  return React.createElement(\"div\", {\n    className: \"deck deck-\" + props.name,\n    ref: drop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(TrackInfo, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(SyncControl, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"player-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Player, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(PitchSlider, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"control-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(PlayBackControls, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(PitchButtons, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Looper, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loadTrack: (track, destination) => dispatch(loadTrack(track, destination))\n});\n\nexport default connect(null, mapDispatchToProps)(Deck);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Deck/Deck.js"],"names":["React","useDrop","connect","loadTrack","ItemTypes","Looper","PitchButtons","PitchSlider","PlayBackControls","Player","SyncControl","TrackInfo","Deck","props","dropResult","item","track","name","target","drop","accept","TRACK","mapDispatchToProps","dispatch","destination"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAElB,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzBF,IAAAA,KAAK,CAACV,SAAN,CAAgBY,IAAI,CAACC,KAArB,EAA4BH,KAAK,CAACI,IAAlC;AACA,WAAO;AACHC,MAAAA,MAAM,EAAE;AADL,KAAP;AAGH,GALD;;AAOA,QAAM,GAAIC,IAAJ,IAAYlB,OAAO,CAAC;AACtBmB,IAAAA,MAAM,EAAGhB,SAAS,CAACiB,KADG;AAEtBF,IAAAA,IAAI,EAAEL;AAFgB,GAAD,CAAzB;AAKA,SACI;AAAK,IAAA,SAAS,EAAE,eAAeD,KAAK,CAACI,IAArC;AAA2C,IAAA,GAAG,EAAEE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEN,KAAK,CAACI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEJ,KAAK,CAACI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEJ,KAAK,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEJ,KAAK,CAACI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAHJ,EAOI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEJ,KAAK,CAACI,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEJ,KAAK,CAACI,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEJ,KAAK,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,CADJ;AAeH,CA7BD;;AA+BA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,SAAS,EAAG,CAACa,KAAD,EAAQQ,WAAR,KAAwBD,QAAQ,CAACpB,SAAS,CAACa,KAAD,EAAQQ,WAAR,CAAV;AADR,CAAL,CAAnC;;AAIA,eAAetB,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCV,IAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { useDrop } from 'react-dnd';\r\nimport { connect } from \"react-redux\";\r\nimport { loadTrack } from \"./../../../../../actions\";\r\nimport ItemTypes from \"./../../../../common/DndItemTypes\";\r\nimport \"./deck.scss\";\r\nimport Looper from \"./Looper/Looper\";\r\nimport PitchButtons from \"./PitchButtons/PitchButtons\";\r\nimport PitchSlider from \"./PitchSlider/PitchSlider\";\r\nimport PlayBackControls from \"./PlayBackControls/PlayBackControls\";\r\nimport Player from \"./Player/Player\";\r\nimport SyncControl from \"./SyncControl/SyncControl\";\r\nimport TrackInfo from \"./TrackInfo/TrackInfo\";\r\n\r\nconst Deck = props => {\r\n\r\n    const dropResult = (item) => {\r\n        props.loadTrack(item.track, props.name);\r\n        return {\r\n            target: \"deck\"\r\n        }\r\n    }\r\n\r\n    const [ , drop] = useDrop({\r\n        accept : ItemTypes.TRACK,\r\n        drop: dropResult,\r\n    })\r\n\r\n    return (\r\n        <div className={\"deck deck-\" + props.name} ref={drop}>\r\n            <TrackInfo name={props.name} />\r\n            <SyncControl name={props.name} />\r\n            <div className=\"player-container\">\r\n                <Player name={props.name} />\r\n                <PitchSlider name={props.name} />\r\n            </div>\r\n            <div className=\"control-area\">\r\n                <PlayBackControls name={props.name} />\r\n                <PitchButtons name={props.name} />\r\n                <Looper name={props.name} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadTrack : (track, destination) => dispatch(loadTrack(track, destination))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Deck);"]},"metadata":{},"sourceType":"module"}