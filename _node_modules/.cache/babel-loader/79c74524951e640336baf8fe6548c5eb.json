{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecords\\\\UserRecords.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reqRecOfUser } from \"./../../actions\";\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport \"./user-records.scss\";\n\nconst UserRecords = ({\n  reqestList,\n  userId,\n  recordsList\n}) => {\n  const history = useHistory();\n  let {\n    perPage,\n    page\n  } = useParams();\n  const [_perPage, setPerPage] = useState(20);\n  useEffect(() => {\n    if (!userId) {\n      history.replace(\"/\");\n      return;\n    }\n\n    if (!perPage && !page) {\n      reqestList(userId, _perPage, 1);\n      return;\n    }\n\n    if (perPage && !page) {\n      page = perPage;\n      reqestList(userId, perPage, page);\n    }\n  }, [userId, reqestList]);\n  const layoutContext = useContext(LayoutContext);\n  useEffect(() => {\n    layoutContext.setFooter(false);\n  }, [layoutContext]);\n  const [controls, player] = useRecordPlayer();\n  return React.createElement(\"div\", {\n    className: \"user-records\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-records-top-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Your records\"), React.createElement(DropdownButton, {\n    alignRight: true,\n    className: \"btn-pagger\",\n    title: _perPage + \" on page \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onClick: setPerPage.bind(null, 10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" 10 \"), React.createElement(Dropdown.Item, {\n    onClick: setPerPage.bind(null, 20),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" 20 \"), React.createElement(Dropdown.Item, {\n    onClick: setPerPage.bind(null, 30),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" 30 \"), React.createElement(Dropdown.Item, {\n    onClick: setPerPage.bind(null, 50),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" 50 \"), React.createElement(Dropdown.Item, {\n    onClick: setPerPage.bind(null, 75),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" 75 \"), React.createElement(Dropdown.Item, {\n    onClick: setPerPage.bind(null, 100),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" 100 \"))), React.createElement(RecordsList, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(PlayerControls, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  userId: state.user.dbId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  reqestList: userId => dispatch(reqRecOfUser(userId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecords/UserRecords.js"],"names":["React","useEffect","useContext","useState","connect","reqRecOfUser","RecordsList","useRecordPlayer","PlayerControls","LayoutContext","DropdownButton","Dropdown","useParams","useHistory","UserRecords","reqestList","userId","recordsList","history","perPage","page","_perPage","setPerPage","replace","layoutContext","setFooter","controls","player","bind","mapStateToProps","state","records","list","user","dbId","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,OAAOC,cAAP,MAA2B,sDAA3B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAO,qBAAP;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA;AAAtB,CAAD,KAAyC;AACzD,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,MAAI;AAAEM,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBR,SAAS,EAAjC;AACA,QAAM,CAACS,QAAD,EAAWC,UAAX,IAAyBnB,QAAQ,CAAC,EAAD,CAAvC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACe,MAAJ,EAAW;AACPE,MAAAA,OAAO,CAACK,OAAR,CAAgB,GAAhB;AACA;AACH;;AACD,QAAG,CAACJ,OAAD,IAAY,CAACC,IAAhB,EAAqB;AACjBL,MAAAA,UAAU,CAACC,MAAD,EAASK,QAAT,EAAmB,CAAnB,CAAV;AACA;AACH;;AACD,QAAGF,OAAO,IAAI,CAACC,IAAf,EAAoB;AAChBA,MAAAA,IAAI,GAAGD,OAAP;AACAJ,MAAAA,UAAU,CAACC,MAAD,EAASG,OAAT,EAAkBC,IAAlB,CAAV;AACH;AAEJ,GAdQ,EAcN,CAACJ,MAAD,EAASD,UAAT,CAdM,CAAT;AAgBA,QAAMS,aAAa,GAAGtB,UAAU,CAACO,aAAD,CAAhC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,aAAa,CAACC,SAAd,CAAwB,KAAxB;AACH,GAFQ,EAEN,CAACD,aAAD,CAFM,CAAT;AAIA,QAAM,CAACE,QAAD,EAAWC,MAAX,IAAqBpB,eAAe,EAA1C;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,cAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,KAAK,EAAEc,QAAQ,GAAG,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,OAAO,EAAEC,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsB,EAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,OAAO,EAAEN,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsB,EAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,OAAO,EAAEN,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsB,EAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAOI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,OAAO,EAAEN,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsB,EAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAQI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,OAAO,EAAEN,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsB,EAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EASI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,OAAO,EAAEN,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsB,GAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,CAFJ,CADJ,EAgBI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAEX,WADV;AAEI,IAAA,QAAQ,EAAES,QAFd;AAGI,IAAA,MAAM,EAAEC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAoBI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAEV,WADV;AAEI,IAAA,QAAQ,EAAES,QAFd;AAGI,IAAA,MAAM,EAAEC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADJ;AA2BH,CAxDD;;AA0DA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,WAAW,EAAEa,KAAK,CAACC,OAAN,CAAcC,IADG;AAE9BhB,EAAAA,MAAM,EAAEc,KAAK,CAACG,IAAN,CAAWC;AAFW,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,UAAU,EAAGC,MAAD,IAAYoB,QAAQ,CAAC/B,YAAY,CAACW,MAAD,CAAb;AADI,CAAL,CAAnC;;AAIA,eAAeZ,OAAO,CAACyB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CrB,WAA7C,CAAf","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reqRecOfUser } from \"./../../actions\"\r\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\r\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\r\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\r\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport \"./user-records.scss\"\r\n\r\nconst UserRecords = ({ reqestList, userId, recordsList }) => {\r\n    const history = useHistory();\r\n    let { perPage, page } = useParams();\r\n    const [_perPage, setPerPage] = useState(20);\r\n\r\n    useEffect(() => {\r\n        if(!userId){\r\n            history.replace(\"/\")\r\n            return;\r\n        }\r\n        if(!perPage && !page){\r\n            reqestList(userId, _perPage, 1);\r\n            return;\r\n        }\r\n        if(perPage && !page){\r\n            page = perPage\r\n            reqestList(userId, perPage, page);\r\n        }\r\n\r\n    }, [userId, reqestList])\r\n\r\n    const layoutContext = useContext(LayoutContext);\r\n\r\n    useEffect(() => {\r\n        layoutContext.setFooter(false);\r\n    }, [layoutContext])\r\n\r\n    const [controls, player] = useRecordPlayer();\r\n\r\n    return (\r\n        <div className=\"user-records\">\r\n            <div className=\"user-records-top-bar\">\r\n                <h2 className=\"title\">Your records</h2>\r\n                <DropdownButton\r\n                    alignRight\r\n                    className=\"btn-pagger\"\r\n                    title={_perPage + \" on page \"}>\r\n                    <Dropdown.Item onClick={setPerPage.bind(null, 10)}> 10 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={setPerPage.bind(null, 20)}> 20 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={setPerPage.bind(null, 30)}> 30 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={setPerPage.bind(null, 50)}> 50 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={setPerPage.bind(null, 75)}> 75 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={setPerPage.bind(null, 100)}> 100 </Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n\r\n            <RecordsList\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n            <PlayerControls\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    userId: state.user.dbId,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    reqestList: (userId) => dispatch(reqRecOfUser(userId))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords)\r\n"]},"metadata":{},"sourceType":"module"}