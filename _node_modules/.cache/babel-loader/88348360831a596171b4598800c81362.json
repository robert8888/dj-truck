{"ast":null,"code":"import { select, takeEvery } from 'redux-saga/effects';\nimport { ACTIONS, setProfilePicutre } from \"../../actions\";\nimport { getApi } from \"./../../apis/apiProvider\";\nexport default function* watcher() {\n  yield takeEvery(ACTIONS.U_REQ_UPDATE_PICTURE, handel);\n}\n\nconst getToken = state => state.user.token;\n\nconst userId = state => state.user.dbId;\n\nfunction* handel(action) {\n  const token = yield select(getToken);\n\n  try {\n    var _response$data;\n\n    const {\n      callQueryUploadSingle,\n      queries\n    } = getApi(\"UserAssets\");\n    const query = queries.updateUserPictureQl;\n    const variables = {\n      file: action.file\n    };\n    const response = yield callQueryUploadSingle(query, token, variables);\n    console.log(response);\n    const status = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.updateMyPicture;\n\n    if (!response.errors && status && status.success) {\n      const userId = yield select(userId);\n      yield put(setProfilePicutre(userId, status.data));\n    } else {\n      throw new Error(\"Can't load record data from database\");\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/user/reqUpdatePicture.js"],"names":["select","takeEvery","ACTIONS","setProfilePicutre","getApi","watcher","U_REQ_UPDATE_PICTURE","handel","getToken","state","user","token","userId","dbId","action","callQueryUploadSingle","queries","query","updateUserPictureQl","variables","file","response","console","log","status","data","updateMyPicture","errors","success","put","Error","e","message"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AACA,SAASC,OAAT,EAAkBC,iBAAlB,QAA2C,eAA3C;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAIA,eAAe,UAAUC,OAAV,GAAoB;AAC/B,QAAMJ,SAAS,CAACC,OAAO,CAACI,oBAAT,EAA+BC,MAA/B,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AACA,MAAMC,MAAM,GAAGH,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWG,IAAnC;;AAEA,UAAUN,MAAV,CAAiBO,MAAjB,EAAyB;AACrB,QAAMH,KAAK,GAAG,MAAMX,MAAM,CAACQ,QAAD,CAA1B;;AAEA,MAAI;AAAA;;AACA,UAAM;AAAEO,MAAAA,qBAAF;AAAyBC,MAAAA;AAAzB,QAAqCZ,MAAM,CAAC,YAAD,CAAjD;AAEA,UAAMa,KAAK,GAAGD,OAAO,CAACE,mBAAtB;AACA,UAAMC,SAAS,GAAG;AAAEC,MAAAA,IAAI,EAAEN,MAAM,CAACM;AAAf,KAAlB;AACA,UAAMC,QAAQ,GAAG,MAAMN,qBAAqB,CAACE,KAAD,EAAQN,KAAR,EAAeQ,SAAf,CAA5C;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,UAAMG,MAAM,GAAGH,QAAH,aAAGA,QAAH,yCAAGA,QAAQ,CAAEI,IAAb,mDAAG,eAAgBC,eAA/B;;AAEA,QAAI,CAACL,QAAQ,CAACM,MAAV,IAAoBH,MAApB,IAA8BA,MAAM,CAACI,OAAzC,EAAkD;AAC9C,YAAMhB,MAAM,GAAG,MAAMZ,MAAM,CAACY,MAAD,CAA3B;AACA,YAAMiB,GAAG,CAAC1B,iBAAiB,CAACS,MAAD,EAASY,MAAM,CAACC,IAAhB,CAAlB,CAAT;AACH,KAHD,MAGO;AACH,YAAM,IAAIK,KAAJ,CAAU,sCAAV,CAAN;AACH;AACJ,GAhBD,CAgBE,OAAOC,CAAP,EAAU;AACRT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACC,OAAd;AACH;AACJ","sourcesContent":["import { select, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, setProfilePicutre } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n\r\n\r\n\r\nexport default function* watcher() {\r\n    yield takeEvery(ACTIONS.U_REQ_UPDATE_PICTURE, handel);\r\n}\r\n\r\nconst getToken = state => state.user.token\r\nconst userId = state => state.user.dbId\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        const { callQueryUploadSingle, queries } = getApi(\"UserAssets\");\r\n\r\n        const query = queries.updateUserPictureQl;\r\n        const variables = { file: action.file };\r\n        const response = yield callQueryUploadSingle(query, token, variables);\r\n\r\n        console.log(response);\r\n        const status = response?.data?.updateMyPicture;\r\n\r\n        if (!response.errors && status && status.success) {\r\n            const userId = yield select(userId);\r\n            yield put(setProfilePicutre(userId, status.data))\r\n        } else {\r\n            throw new Error(\"Can't load record data from database\")\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}