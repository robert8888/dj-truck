{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Hooks\\\\Emoticons\\\\EmotiContainer\\\\EmotiContainer.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft, faArrowCircleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport UUID from 'uuidjs';\nimport icons from \"./emoji.json\";\nconst iconsOnPanel = 30;\nconst buttonStyle = {\n  background: 'transparent',\n  border: 'none',\n  boxShadow: 'none',\n  outline: 'none',\n  width: '16.6%',\n  height: '20%'\n};\nconst sectionStyle = {\n  width: '100%',\n  height: '100%',\n  display: 'inline-block',\n  verticalAlign: 'top',\n  whiteSpace: 'normal'\n};\nconst sliderContainer = {\n  overflow: 'hidden',\n  width: '200px',\n  height: '200px',\n  whiteSpace: 'nowrap',\n  display: 'inline-block',\n  position: 'sticki',\n  bottom: '50px'\n};\nconst containerStyle = {\n  position: 'absolute',\n  display: 'inline-block',\n  transform: 'translate(-150px ,-105%)',\n  width: '240px',\n  height: '200px',\n  background: 'white',\n  padding: '5px'\n};\nconst sliderNavigationButton = { ...buttonStyle,\n  display: 'inline-block',\n  width: '20px',\n  height: '100%',\n  top: '50%',\n  verticalAlign: 'top'\n};\nconst iconStyle = {\n  transform: 'translateX(-25%)'\n};\n\nconst EmotiContainer = ({\n  onSelect,\n  node\n}) => {\n  const iconsPanels = useMemo(() => {\n    let panels = [];\n\n    for (let i = 0; i < icons.length; i += iconsOnPanel) {\n      let panel = [];\n\n      for (let j = i; j < iconsOnPanel + i && i + j < icons.length; j++) {\n        let icon = icons[j];\n        panel.push(React.createElement(\"button\", {\n          key: 'icon-' + (i + j),\n          style: buttonStyle,\n          onSelect: onSelect.bind(null, icon.emoji),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, icon.emoji));\n      }\n\n      panels.push(React.createElement(\"section\", {\n        style: sectionStyle,\n        className: \"emoticons-panel\",\n        key: 'pannel-' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, panel));\n    }\n\n    return panels;\n  }, []);\n  console.log(\"render emoti\");\n  return React.createElement(\"div\", {\n    className: \"emoticons-container emoticons-popup\",\n    style: containerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-prev\",\n    style: sliderNavigationButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faArrowCircleLeft,\n    style: iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"emoticons-slider\",\n    style: sliderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, iconsPanels), React.createElement(\"button\", {\n    className: \"btn-prev\",\n    style: sliderNavigationButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faArrowCircleRight,\n    style: iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n};\n\nexport default EmotiContainer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/Emoticons/EmotiContainer/EmotiContainer.js"],"names":["React","useCallback","useMemo","FontAwesomeIcon","faArrowCircleLeft","faArrowCircleRight","UUID","icons","iconsOnPanel","buttonStyle","background","border","boxShadow","outline","width","height","sectionStyle","display","verticalAlign","whiteSpace","sliderContainer","overflow","position","bottom","containerStyle","transform","padding","sliderNavigationButton","top","iconStyle","EmotiContainer","onSelect","node","iconsPanels","panels","i","length","panel","j","icon","push","bind","emoji","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowCircleLeft ,faArrowCircleRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport UUID from 'uuidjs'\r\nimport icons from \"./emoji.json\";\r\nconst iconsOnPanel = 30;\r\n\r\nconst buttonStyle = {\r\n    background: 'transparent',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    outline: 'none',\r\n    width: '16.6%',\r\n    height: '20%'\r\n}\r\n\r\nconst sectionStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'inline-block',\r\n    verticalAlign : 'top',\r\n    whiteSpace: 'normal'\r\n}\r\n\r\nconst sliderContainer = {\r\n    overflow : 'hidden',\r\n    width: '200px',\r\n    height: '200px',\r\n    whiteSpace: 'nowrap',\r\n    display: 'inline-block',\r\n    position: 'sticki',\r\n    bottom: '50px',\r\n\r\n\r\n}\r\n\r\nconst containerStyle = {\r\n    position: 'absolute',\r\n    display: 'inline-block',\r\n    transform: 'translate(-150px ,-105%)',\r\n    width: '240px',\r\n    height: '200px',\r\n    background: 'white',\r\n    padding: '5px',\r\n}\r\n\r\nconst sliderNavigationButton = {\r\n    ...buttonStyle,\r\n    display:'inline-block',\r\n    width: '20px',\r\n    height: '100%',\r\n    top: '50%',\r\n    verticalAlign: 'top'\r\n}\r\n\r\nconst iconStyle ={\r\n    transform: 'translateX(-25%)',\r\n}\r\n\r\nconst EmotiContainer = ({ onSelect, node }) => {\r\n\r\n\r\n    const iconsPanels = useMemo(() => {\r\n        let panels = [];\r\n        for (let i = 0; i < icons.length; i += iconsOnPanel) {\r\n            let panel = [];\r\n            for (let j = i; (j < iconsOnPanel + i) && (i + j < icons.length); j++) {\r\n                let icon = icons[j]\r\n                panel.push(\r\n                    <button key={'icon-'+ (i+j)} style={buttonStyle} onSelect={onSelect.bind(null, icon.emoji)}>{icon.emoji}</button>\r\n                )\r\n            }\r\n            panels.push(\r\n                <section style={sectionStyle} className=\"emoticons-panel\" key={'pannel-'+i}>\r\n                    {panel}\r\n                </section>\r\n            )\r\n        }\r\n\r\n\r\n        return panels;\r\n    }, [])\r\n\r\n    console.log(\"render emoti\")\r\n    return (\r\n        <div className=\"emoticons-container emoticons-popup\" style={containerStyle}>\r\n            <button className=\"btn-prev\" style={sliderNavigationButton}>\r\n                    <FontAwesomeIcon icon={faArrowCircleLeft} style={iconStyle}/>\r\n            </button>\r\n            <div className=\"emoticons-slider\" style={sliderContainer}>\r\n                 {iconsPanels}\r\n            </div>\r\n            <button className=\"btn-prev\" style={sliderNavigationButton}>\r\n                    <FontAwesomeIcon icon={faArrowCircleRight} style={iconStyle}/>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmotiContainer;"]},"metadata":{},"sourceType":"module"}