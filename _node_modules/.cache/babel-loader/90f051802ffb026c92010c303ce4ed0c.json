{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Carousel-slider\\\\Slider.js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport UUID from \"uuidjs\";\nimport style from \"./slider.scss\";\n\nconst rmLast = (arr, direction) => {\n  direction = direction > 1 ? \"next\" : \"prev\";\n  let last = arr.length - 1;\n  let _arr = [...arr];\n\n  while (last >= 0) {\n    if (direction === \"next\" && arr[last] < 0) break;\n    if (direction === \"prev\" && arr[last] > 0) break;\n\n    _arr.pop();\n\n    last--;\n  }\n\n  return _arr;\n};\n\nconst sumLastSameDirection = (arr, {\n  max\n}) => {\n  let _arr = [...arr];\n\n  if (arr.length > 1 && arr[arr.length - 1] * arr[arr.length - 2] > 0) {\n    let last = _arr.pop();\n\n    let prev = _arr.pop();\n\n    let sum = last + prev;\n\n    if (max && Math.abs(sum) > max) {\n      sum = sum > 0 ? max : -max;\n    }\n\n    _arr.push(sum);\n  }\n\n  return _arr;\n};\n\nconst Slider = ({\n  slides: initSlides,\n  next: nextHandle,\n  prev: prevHandle,\n  minSlideWidth = style.minSlideWidth,\n  onStepDragging = false\n}) => {\n  const slider = useRef();\n  const [active, setActive] = useState(false);\n  const [overLapRatio] = useState(2);\n  const [animationDuration] = useState(parseInt(style.animatioDuration) * 1000);\n  const [_containerRect, setContainerRect] = useState(null);\n  const [slideWidth, setSlideWidth] = useState(null);\n  const [visibleSlides, setVisibleSlides] = useState(null);\n  const [slides, setSlides] = useState(null);\n  const shift = useRef();\n  const balancedShift = useRef();\n  const translate = useRef();\n  const inAction = useRef();\n  const actionQueue = useRef();\n  const containerRect = useCallback(() => {\n    if (!slider.current) return 0;\n    let rect = _containerRect;\n\n    if (!rect) {\n      rect = slider.current.parentElement.getBoundingClientRect();\n      setContainerRect(rect);\n    }\n\n    return rect;\n  }, [_containerRect, setContainerRect]);\n  const updateTransition = useCallback(value => {\n    if (!slider.current) return;\n    value ? slider.current.classList.add('slider-transition--active') : slider.current.classList.remove('slider-transition--active');\n  }, [slider]);\n  const updateTranslate = useCallback(target => {\n    if (!slider.current) return;\n    slider.current.style.transform = `translateX(${target}px)`;\n    translate.current = target;\n  }, [slider, translate]);\n  const updatePosition = useCallback((position, sWidth) => {\n    if (!slider.current || isNaN(position) || !active) return;\n    updateTranslate(position * (slideWidth || sWidth));\n  }, [slider, slideWidth, updateTranslate, active]);\n  useEffect(() => {\n    if (!visibleSlides || visibleSlides > initSlides.length) return;\n    setActive(true);\n    let slides = [].concat(Array(overLapRatio * 2 + 1).fill(1).map(() => initSlides)).flat();\n    setSlides(slides);\n  }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio]);\n  useEffect(() => {\n    if (!containerRect || !minSlideWidth || !slider.current) return;\n    const containerWidth = containerRect().width;\n    const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\n    setVisibleSlides(visibleSlides);\n  }, [containerRect, minSlideWidth, slider, setVisibleSlides]);\n  useEffect(() => {\n    if (!slides) return;\n    shift.current = -initSlides.length * overLapRatio;\n    balancedShift.current = shift.current;\n    updatePosition(shift.current);\n  }, [slideWidth, updatePosition, shift, balancedShift, initSlides, slides, overLapRatio]);\n  useEffect(() => {\n    const resetSize = () => setContainerRect(null);\n\n    window.addEventListener(\"resize\", resetSize);\n    return () => window.removeEventListener(\"resize\", resetSize);\n  }, [setContainerRect]);\n  useEffect(() => {\n    if (!visibleSlides || !containerRect || !slides) return;\n    const slideWidth = containerRect().width / visibleSlides;\n    setSlideWidth(slideWidth);\n    slider.current.style.width = slideWidth * slides.length + \"px\";\n  }, [containerRect, visibleSlides, slides]);\n  const appendSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.shift();\n\n        _slides.push(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const prependSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.pop();\n\n        _slides.unshift(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const actionRef = useRef();\n  const balance = useCallback(() => {\n    const diff = balancedShift.current - shift.current;\n\n    if (!diff) {\n      return;\n    }\n\n    diff < 0 ? prependSlides(Math.abs(diff)) : appendSlides(diff);\n    updateTransition(false);\n    shift.current = balancedShift.current;\n    updatePosition(shift.current);\n    setTimeout(() => {\n      actionRef.current && actionRef.current();\n    }, 0);\n  }, [shift, balancedShift, prependSlides, appendSlides, updateTransition, updatePosition, actionRef]);\n  const action = useCallback(direction => {\n    if (inAction.current) {\n      if (!direction) return;\n      let queue = actionQueue.current || [];\n      queue = rmLast([...queue], direction);\n      queue = sumLastSameDirection([...queue, direction], {\n        max: 3\n      });\n      actionQueue.current = queue;\n      return;\n    }\n\n    direction = direction || actionQueue.current && actionQueue.current.shift();\n    if (!direction) return;\n    inAction.current = true;\n    updateTransition(true);\n    shift.current += direction;\n    updatePosition(shift.current, slideWidth);\n    setTimeout(() => {\n      inAction.current = false;\n      balance();\n    }, animationDuration);\n  }, [balance, animationDuration, updatePosition, inAction, updateTransition, shift, slideWidth]);\n  useEffect(() => {\n    actionRef.current = (...arg) => action(...arg);\n  }, [action, actionRef]);\n  const next = useCallback(() => {\n    action(1);\n  }, [action]);\n  useEffect(() => nextHandle && nextHandle(next), [next, nextHandle]);\n  const prev = useCallback(() => {\n    action(-1);\n  }, [action]);\n  useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle]);\n  const endDraging = useCallback(() => {\n    let next = Math.round(translate.current / slideWidth);\n\n    if (onStepDragging) {\n      next = next > shift.current ? shift.current + 1 : shift.current - 1;\n    }\n\n    shift.current = next;\n    updatePosition(shift.current);\n    inAction.current = true;\n    setTimeout(() => {\n      balance();\n      inAction.current = false;\n    }, animationDuration);\n  }, [translate, inAction, shift, slideWidth, balance, animationDuration, onStepDragging, updatePosition]);\n  const mouseMove = useCallback((shiftX, event) => {\n    const clientX = event.type === \"touchmove\" ? event.touches[0].clientX : event.clientX;\n    updateTranslate(clientX - shiftX);\n  }, [updateTranslate]);\n  const mouseDown = useCallback(event => {\n    const sliderContainer = event.target.closest(\".carousel-slider-container\");\n    if (!sliderContainer) return;\n    actionQueue.current = [];\n    const rect = sliderContainer.getBoundingClientRect();\n    const clientX = event.type === \"touchstart\" ? event.touches[0].clientX : event.clientX;\n    const shiftX = clientX - rect.left - shift.current * slideWidth;\n    const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\n\n    const mouseUp = () => {\n      window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\n      window.removeEventListener(\"mouseup\", mouseUp);\n      window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\n      window.removeEventListener(\"touchend\", mouseUp);\n      updateTransition(true);\n      endDraging();\n    };\n\n    window.addEventListener(\"mousemove\", mouseMoveWithArgs);\n    window.addEventListener(\"touchmove\", mouseMoveWithArgs);\n    window.addEventListener(\"mouseup\", mouseUp);\n    window.addEventListener(\"touchend\", mouseUp);\n    updateTransition(false);\n  }, [updateTransition, shift, slideWidth, endDraging, mouseMove, actionQueue]);\n  return React.createElement(\"div\", {\n    className: \"carousel-slider-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"carousel-slider\",\n    ref: slider,\n    onMouseDown: mouseDown,\n    onTouchStart: mouseDown,\n    onDrag: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, slides && slides instanceof Array && slides.map(slide => React.createElement(\"li\", {\n    key: UUID.genV1(),\n    className: \"slide\",\n    style: {\n      width: minSlideWidth || \"initial\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, slide))));\n};\n\nexport default Slider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Carousel-slider/Slider.js"],"names":["React","useCallback","useEffect","useRef","useState","UUID","style","rmLast","arr","direction","last","length","_arr","pop","sumLastSameDirection","max","prev","sum","Math","abs","push","Slider","slides","initSlides","next","nextHandle","prevHandle","minSlideWidth","onStepDragging","slider","active","setActive","overLapRatio","animationDuration","parseInt","animatioDuration","_containerRect","setContainerRect","slideWidth","setSlideWidth","visibleSlides","setVisibleSlides","setSlides","shift","balancedShift","translate","inAction","actionQueue","containerRect","current","rect","parentElement","getBoundingClientRect","updateTransition","value","classList","add","remove","updateTranslate","target","transform","updatePosition","position","sWidth","isNaN","concat","Array","fill","map","flat","containerWidth","width","resetSize","window","addEventListener","removeEventListener","appendSlides","amount","_slides","i","slide","prependSlides","unshift","actionRef","balance","diff","setTimeout","action","queue","arg","endDraging","round","mouseMove","shiftX","event","clientX","type","touches","mouseDown","sliderContainer","closest","left","mouseMoveWithArgs","bind","mouseUp","e","preventDefault","genV1"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport UUID from \"uuidjs\";\r\nimport style from \"./slider.scss\"\r\n\r\nconst rmLast = (arr, direction) => {\r\n    direction = direction > 1 ? \"next\" : \"prev\";\r\n    let last = arr.length - 1;\r\n    let _arr = [...arr];\r\n    while (last >= 0) {\r\n        if (direction === \"next\" && arr[last] < 0) break;\r\n        if (direction === \"prev\" && arr[last] > 0) break;\r\n        _arr.pop();\r\n        last--;\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst sumLastSameDirection = (arr, {max}) => {\r\n    let _arr = [...arr];\r\n    if (arr.length > 1 && arr[arr.length - 1] * arr[arr.length - 2] > 0) {\r\n        let last = _arr.pop();\r\n        let prev = _arr.pop();\r\n        let sum = last + prev;\r\n        if(max && Math.abs(sum) > max){\r\n            sum = (sum > 0) ? max : -max;\r\n        }\r\n        _arr.push(sum);\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst Slider = ({\r\n    slides: initSlides,\r\n    next: nextHandle,\r\n    prev: prevHandle,\r\n    minSlideWidth = style.minSlideWidth,\r\n    onStepDragging = false\r\n}) => {\r\n    const slider = useRef();\r\n    const [active, setActive] = useState(false);\r\n    const [overLapRatio] = useState(2);\r\n    const [animationDuration] = useState(parseInt(style.animatioDuration) * 1000);\r\n\r\n    const [_containerRect, setContainerRect] = useState(null);\r\n    const [slideWidth, setSlideWidth] = useState(null);\r\n    const [visibleSlides, setVisibleSlides] = useState(null);\r\n    const [slides, setSlides] =  useState(null);\r\n\r\n    const shift = useRef();\r\n    const balancedShift = useRef();\r\n    const translate = useRef();\r\n    const inAction = useRef();\r\n    const actionQueue = useRef();\r\n\r\n    const containerRect = useCallback(() => {\r\n        if (!slider.current) return 0;\r\n        let rect = _containerRect\r\n        if (!rect) {\r\n            rect = slider.current.parentElement.getBoundingClientRect()\r\n            setContainerRect(rect);\r\n        }\r\n        return rect;\r\n    }, [_containerRect, setContainerRect])\r\n\r\n    const updateTransition = useCallback(value => {\r\n        if (!slider.current) return;\r\n        value ?\r\n            slider.current.classList.add('slider-transition--active')\r\n            :\r\n            slider.current.classList.remove('slider-transition--active')\r\n\r\n    }, [slider])\r\n\r\n    const updateTranslate = useCallback(target => {\r\n        if (!slider.current) return;\r\n        slider.current.style.transform = `translateX(${target}px)`\r\n        translate.current = target;\r\n    }, [slider, translate])\r\n\r\n    const updatePosition = useCallback((position, sWidth)=> {\r\n        if (!slider.current || isNaN(position) || !active ) return;\r\n        updateTranslate(position * (slideWidth || sWidth));\r\n    }, [slider, slideWidth, updateTranslate, active])\r\n\r\n    useEffect(()=>{\r\n        if(!visibleSlides || visibleSlides > initSlides.length) return;\r\n        setActive(true);\r\n\r\n        let slides = [].concat(Array(overLapRatio *  2 + 1).fill(1).map( () => initSlides)).flat();\r\n        setSlides(slides);\r\n    }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio])\r\n\r\n\r\n    useEffect(()=>{\r\n        if (!containerRect || !minSlideWidth || !slider.current) return;\r\n        const containerWidth = containerRect().width;\r\n        const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\r\n        setVisibleSlides(visibleSlides);\r\n    }, [containerRect, minSlideWidth, slider, setVisibleSlides])\r\n\r\n    useEffect(() => {\r\n        if(!slides) return;\r\n        shift.current = -initSlides.length * overLapRatio;\r\n        balancedShift.current = shift.current;\r\n        updatePosition(shift.current);\r\n    }, [slideWidth, updatePosition, shift, balancedShift, initSlides, slides, overLapRatio])\r\n\r\n    useEffect(() => {\r\n        const resetSize = () => setContainerRect(null);\r\n        window.addEventListener(\"resize\", resetSize);\r\n        return () => window.removeEventListener(\"resize\", resetSize);\r\n    }, [setContainerRect])\r\n\r\n    useEffect(() => {\r\n        if(!visibleSlides || !containerRect || !slides) return;\r\n        const slideWidth = containerRect().width / visibleSlides\r\n        setSlideWidth(slideWidth);\r\n        slider.current.style.width = slideWidth * slides.length + \"px\";\r\n    }, [containerRect,  visibleSlides, slides]);\r\n\r\n    const appendSlides = useCallback(amount => {\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.shift();\r\n                _slides.push(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const prependSlides = useCallback(amount => {\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.pop();\r\n                _slides.unshift(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const actionRef = useRef();\r\n    const balance = useCallback(() => {\r\n        const diff = balancedShift.current - shift.current;\r\n        if(!diff) {\r\n            return;\r\n        }\r\n        (diff < 0) ? prependSlides(Math.abs(diff)) : appendSlides(diff);\r\n        updateTransition(false);\r\n        shift.current = balancedShift.current;\r\n        updatePosition(shift.current);\r\n        setTimeout(()=>{\r\n            actionRef.current && actionRef.current();\r\n        }, 0)\r\n    }, [shift, balancedShift, prependSlides, appendSlides, updateTransition, updatePosition, actionRef])\r\n\r\n\r\n    const action = useCallback((direction) => {\r\n        if (inAction.current) {\r\n            if(!direction) return;\r\n            let queue  = actionQueue.current || [];\r\n            queue = rmLast([...queue], direction);\r\n            queue = sumLastSameDirection([...queue, direction], {max : 3})\r\n            actionQueue.current = queue;\r\n            return;\r\n        }\r\n        direction = direction || actionQueue.current && actionQueue.current.shift();\r\n        if(!direction) return;\r\n\r\n        inAction.current = true;\r\n        updateTransition(true);\r\n        shift.current += direction;\r\n        updatePosition(shift.current, slideWidth );\r\n        setTimeout(()=>{\r\n            inAction.current = false;\r\n            balance();\r\n        }, animationDuration)\r\n    }, [balance, animationDuration, updatePosition, inAction, updateTransition, shift, slideWidth])\r\n\r\n    useEffect(()=>{\r\n        actionRef.current = (...arg) => action(...arg);\r\n    }, [action, actionRef])\r\n\r\n    const next = useCallback(() => {\r\n        action(1);\r\n    }, [action])\r\n\r\n    useEffect(() => nextHandle && nextHandle(next), [next, nextHandle])\r\n\r\n    const prev = useCallback(() => {\r\n        action(-1);\r\n    }, [action])\r\n\r\n    useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle])\r\n\r\n    const endDraging = useCallback(() => {\r\n        let next = Math.round(translate.current / slideWidth);\r\n        if(onStepDragging){\r\n            next = next >  shift.current  ? shift.current + 1 : shift.current - 1;\r\n        }\r\n        shift.current = next;\r\n        updatePosition(shift.current);\r\n        inAction.current = true;\r\n        setTimeout(()=> {\r\n            balance();\r\n            inAction.current = false;\r\n        }, animationDuration);\r\n    }, [translate, inAction, shift, slideWidth, balance,  animationDuration,  onStepDragging, updatePosition])\r\n\r\n    const mouseMove = useCallback((shiftX, event) => {\r\n        const clientX = (event.type === \"touchmove\") ? event.touches[0].clientX : event.clientX;\r\n        updateTranslate(clientX - shiftX);\r\n    }, [updateTranslate])\r\n\r\n\r\n    const mouseDown = useCallback(event => {\r\n        const sliderContainer = event.target.closest(\".carousel-slider-container\");\r\n        if(!sliderContainer) return;\r\n        actionQueue.current = [];\r\n        const rect = sliderContainer.getBoundingClientRect();\r\n        const clientX = (event.type === \"touchstart\") ? event.touches[0].clientX : event.clientX;\r\n        const shiftX = clientX - rect.left - shift.current * slideWidth;\r\n        const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\r\n\r\n        const mouseUp = () => {\r\n            window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\r\n            window.removeEventListener(\"mouseup\", mouseUp);\r\n            window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\r\n            window.removeEventListener(\"touchend\", mouseUp)\r\n            updateTransition(true);\r\n            endDraging();\r\n        }\r\n\r\n        window.addEventListener(\"mousemove\", mouseMoveWithArgs);\r\n        window.addEventListener(\"touchmove\", mouseMoveWithArgs);\r\n        window.addEventListener(\"mouseup\", mouseUp);\r\n        window.addEventListener(\"touchend\", mouseUp);\r\n        updateTransition(false);\r\n    }, [updateTransition, shift, slideWidth, endDraging, mouseMove, actionQueue])\r\n\r\n    return (\r\n        <div className=\"carousel-slider-container\">\r\n           <ul className=\"carousel-slider\" ref={slider} onMouseDown={mouseDown} onTouchStart={mouseDown} onDrag={ e => e.preventDefault()}>\r\n                {slides && slides instanceof Array && slides.map(slide => (\r\n                    <li key={UUID.genV1()} className={\"slide\"} style={{width: minSlideWidth || \"initial\"}}>{slide}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}