{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Hooks\\\\Emoticons\\\\EmotiContainer\\\\EmotiContainer.js\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport UUID from 'uuidjs';\nimport icons from \"./emoji.json\";\nconst iconsOnPanel = 30;\nconst buttonStyle = {\n  background: 'transparent',\n  border: 'none',\n  boxShadow: 'none',\n  outline: 'none',\n  width: '16.6%',\n  height: '20%'\n};\nconst sectionStyle = {\n  width: '100%',\n  height: '100%',\n  display: 'inline-block',\n  verticalAlign: 'top',\n  whiteSpace: 'normal'\n};\nconst slideContainer = {\n  overflow: 'hidden',\n  width: '210px',\n  height: '200px',\n  whiteSpace: 'nowrap',\n  display: 'inline-block',\n  position: 'sticki',\n  bottom: '50px',\n  transform: ''\n};\nconst containerStyle = {\n  position: 'absolute',\n  //display: 'inline-block',\n  transform: 'translate(-150px ,-105%)',\n  width: '250px',\n  height: '130px',\n  background: 'white',\n  boxSizing: 'content-box',\n  padding: '5px'\n};\nconst sliderNavigationButton = { ...buttonStyle,\n  display: 'inline-block',\n  width: '20px',\n  height: '100%',\n  top: '50%',\n  verticalAlign: 'top'\n};\nconst iconStyle = {\n  transform: 'translateX(-25%)'\n};\n\nconst EmotiContainer = ({\n  onSelect,\n  display\n}) => {\n  const iconsPanels = useMemo(() => {\n    let panels = [];\n\n    for (let i = 0; i < icons.length; i += iconsOnPanel) {\n      let panel = [];\n\n      for (let j = i; j < iconsOnPanel + i && i + j < icons.length; j++) {\n        let icon = icons[j];\n        panel.push(React.createElement(\"button\", {\n          key: 'icon-' + (i + j),\n          style: buttonStyle,\n          onClick: onSelect.bind(null, icon.emoji),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, icon.emoji));\n      }\n\n      panels.push(React.createElement(\"section\", {\n        style: sectionStyle,\n        className: \"emoticons-panel\",\n        key: 'pannel-' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, panel));\n    }\n\n    return panels;\n  }, []);\n  const [current, setCurrent] = useState(0);\n  const next = useCallback(event => {\n    event.preventDefault();\n    setCurrent(c => {\n      if (c + 1 < iconsPanels.length) {\n        return c + 1;\n      }\n\n      return c;\n    });\n  }, [iconsPanels]);\n  const prev = useCallback(event => {\n    event.preventDefault();\n    setCurrent(c => {\n      if (c - 1 > 0) {\n        return c - 1;\n      }\n\n      return c;\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"emoticons-container emoticons-popup\",\n    style: { ...containerStyle,\n      display: display ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-prev\",\n    style: sliderNavigationButton,\n    onClick: prev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faAngleDoubleLeft,\n    style: iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"emoticons-slider\",\n    style: slideContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"emoticons-slides\",\n    style: {\n      transform: `translateX(-${current * 210}px)`,\n      transition: 'transform 0.2s'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, iconsPanels)), React.createElement(\"button\", {\n    className: \"btn-prev\",\n    style: sliderNavigationButton,\n    onClick: next,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faAngleDoubleRight,\n    style: iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })));\n};\n\nexport default EmotiContainer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/Emoticons/EmotiContainer/EmotiContainer.js"],"names":["React","useCallback","useMemo","useState","FontAwesomeIcon","faAngleDoubleLeft","faAngleDoubleRight","UUID","icons","iconsOnPanel","buttonStyle","background","border","boxShadow","outline","width","height","sectionStyle","display","verticalAlign","whiteSpace","slideContainer","overflow","position","bottom","transform","containerStyle","boxSizing","padding","sliderNavigationButton","top","iconStyle","EmotiContainer","onSelect","iconsPanels","panels","i","length","panel","j","icon","push","bind","emoji","current","setCurrent","next","event","preventDefault","c","prev","transition"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleLeft, faAngleDoubleRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport UUID from 'uuidjs'\r\nimport icons from \"./emoji.json\";\r\nconst iconsOnPanel = 30;\r\n\r\nconst buttonStyle = {\r\n    background: 'transparent',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    outline: 'none',\r\n    width: '16.6%',\r\n    height: '20%'\r\n}\r\n\r\nconst sectionStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'inline-block',\r\n    verticalAlign : 'top',\r\n    whiteSpace: 'normal'\r\n}\r\n\r\nconst slideContainer = {\r\n    overflow : 'hidden',\r\n    width: '210px',\r\n    height: '200px',\r\n    whiteSpace: 'nowrap',\r\n    display: 'inline-block',\r\n    position: 'sticki',\r\n    bottom: '50px',\r\n    transform: '',\r\n\r\n}\r\n\r\nconst containerStyle = {\r\n    position: 'absolute',\r\n    //display: 'inline-block',\r\n    transform: 'translate(-150px ,-105%)',\r\n    width: '250px',\r\n    height: '130px',\r\n    background: 'white',\r\n    boxSizing: 'content-box',\r\n    padding: '5px',\r\n}\r\n\r\nconst sliderNavigationButton = {\r\n    ...buttonStyle,\r\n    display:'inline-block',\r\n    width: '20px',\r\n    height: '100%',\r\n    top: '50%',\r\n    verticalAlign: 'top'\r\n}\r\n\r\nconst iconStyle ={\r\n    transform: 'translateX(-25%)',\r\n}\r\n\r\nconst EmotiContainer = ({ onSelect,  display }) => {\r\n\r\n\r\n    const iconsPanels = useMemo(() => {\r\n        let panels = [];\r\n        for (let i = 0; i < icons.length; i += iconsOnPanel) {\r\n            let panel = [];\r\n            for (let j = i; (j < iconsOnPanel + i) && (i + j < icons.length); j++) {\r\n                let icon = icons[j]\r\n                panel.push(\r\n                    <button key={'icon-'+ (i+j)} style={buttonStyle} onClick={onSelect.bind(null, icon.emoji)}>{icon.emoji}</button>\r\n                )\r\n            }\r\n            panels.push(\r\n                <section style={sectionStyle} className=\"emoticons-panel\" key={'pannel-'+i}>\r\n                    {panel}\r\n                </section>\r\n            )\r\n        }\r\n\r\n\r\n        return panels;\r\n    }, [])\r\n\r\n    const [current, setCurrent] = useState(0);\r\n\r\n    const next = useCallback((event)=>{\r\n        event.preventDefault();\r\n        setCurrent( c => {\r\n            if(c + 1  < iconsPanels.length){\r\n               return c + 1;\r\n            }\r\n            return c;\r\n        });\r\n    }, [iconsPanels])\r\n\r\n    const prev = useCallback((event)=>{\r\n        event.preventDefault();\r\n        setCurrent( c => {\r\n            if(c - 1 > 0){\r\n                return c - 1;\r\n            }\r\n            return c;\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"emoticons-container emoticons-popup\" style={{...containerStyle, display: (display) ? 'block': 'none'}}>\r\n            <button className=\"btn-prev\" style={sliderNavigationButton} onClick={prev}>\r\n                    <FontAwesomeIcon icon={faAngleDoubleLeft} style={iconStyle}/>\r\n            </button>\r\n            <div className=\"emoticons-slider\" style={slideContainer}>\r\n                 <div className=\"emoticons-slides\" style={ {transform : `translateX(-${current * 210}px)`, transition: 'transform 0.2s'}}>\r\n                     {iconsPanels}\r\n                 </div>\r\n\r\n            </div>\r\n            <button className=\"btn-prev\" style={sliderNavigationButton} onClick={next}>\r\n                    <FontAwesomeIcon icon={faAngleDoubleRight} style={iconStyle}/>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmotiContainer;"]},"metadata":{},"sourceType":"module"}