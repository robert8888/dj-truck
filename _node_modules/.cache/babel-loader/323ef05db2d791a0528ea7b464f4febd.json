{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\PlayListExplorer\\\\Explorer\\\\ExplorerTree\\\\FileElement\\\\FileElement.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport UUID from \"uuidjs\";\nimport ClassName from \"classnames\";\nimport { faFile } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst FileElement = props => {\n  const {\n    name,\n    path,\n    renameMode,\n    renameInput\n  } = props;\n  const fullPath = [...path, name];\n  const [_, drag] = useDrag({\n    item: {\n      type: ItemTypes.FILE,\n      fullPath: fullPath\n    }\n  });\n  let currentSelected = false;\n\n  if (fullPath.join(\"\") === props.currentSelection.join(\"\")) {\n    currentSelected = true;\n  }\n\n  const liClassList = ClassName(\"list-item item-file\", {\n    \"item--selected\": currentSelected\n  });\n  let content = name;\n\n  if (currentSelected && renameMode) {\n    content = renameInput(name);\n  }\n\n  return React.createElement(\"li\", {\n    ref: drag,\n    className: liClassList,\n    onClick: props.onClick,\n    onContextMenu: props.onContextMenu,\n    \"data-path\": path.join(\"/\"),\n    key: UUID.genV1(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"icon icon-file\",\n    icon: faFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), content);\n};\n\nconst mapStateToProps = state => ({\n  currentSelection: state.playList.currentSelection\n});\n\nexport default connect(mapStateToProps)(FileElement);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/PlayListExplorer/Explorer/ExplorerTree/FileElement/FileElement.js"],"names":["React","connect","UUID","ClassName","faFile","FontAwesomeIcon","FileElement","props","name","path","renameMode","renameInput","fullPath","_","drag","useDrag","item","type","ItemTypes","FILE","currentSelected","join","currentSelection","liClassList","content","onClick","onContextMenu","genV1","mapStateToProps","state","playList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA;AAA1B,MAA0CJ,KAAhD;AACA,QAAMK,QAAQ,GAAG,CAAC,GAAGH,IAAJ,EAAUD,IAAV,CAAjB;AAEA,QAAM,CAAEK,CAAF,EAAMC,IAAN,IAAcC,OAAO,CAAC;AACxBC,IAAAA,IAAI,EAAE;AACDC,MAAAA,IAAI,EAAEC,SAAS,CAACC,IADf;AAEDP,MAAAA,QAAQ,EAAGA;AAFV;AADkB,GAAD,CAA3B;AAOA,MAAIQ,eAAe,GAAG,KAAtB;;AACA,MAAIR,QAAQ,CAACS,IAAT,CAAc,EAAd,MAAsBd,KAAK,CAACe,gBAAN,CAAuBD,IAAvB,CAA4B,EAA5B,CAA1B,EAA2D;AACvDD,IAAAA,eAAe,GAAG,IAAlB;AACH;;AACD,QAAMG,WAAW,GAAGpB,SAAS,CACzB,qBADyB,EAEzB;AAAE,sBAAkBiB;AAApB,GAFyB,CAA7B;AAIA,MAAII,OAAO,GAAGhB,IAAd;;AACA,MAAIY,eAAe,IAAIV,UAAvB,EAAmC;AAC/Bc,IAAAA,OAAO,GAAGb,WAAW,CAACH,IAAD,CAArB;AACH;;AAED,SACI;AACI,IAAA,GAAG,EAAEM,IADT;AAEI,IAAA,SAAS,EAAES,WAFf;AAGI,IAAA,OAAO,EAAEhB,KAAK,CAACkB,OAHnB;AAII,IAAA,aAAa,EAAElB,KAAK,CAACmB,aAJzB;AAKI,iBAAWjB,IAAI,CAACY,IAAL,CAAU,GAAV,CALf;AAMI,IAAA,GAAG,EAAEnB,IAAI,CAACyB,KAAL,EANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,gBAA3B;AAA4C,IAAA,IAAI,EAAEvB,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQKoB,OARL,CADJ;AAYH,CApCD;;AAsCA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,gBAAgB,EAAEO,KAAK,CAACC,QAAN,CAAeR;AADH,CAAL,CAA7B;;AAIA,eAAerB,OAAO,CAAC2B,eAAD,CAAP,CAAyBtB,WAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport UUID from \"uuidjs\";\r\nimport ClassName from \"classnames\";\r\nimport { faFile } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst FileElement = props => {\r\n    const { name, path, renameMode, renameInput } = props;\r\n    const fullPath = [...path, name]\r\n\r\n    const [ _ , drag] = useDrag({\r\n        item: { \r\n             type: ItemTypes.FILE,\r\n             fullPath : fullPath\r\n            },\r\n    })\r\n\r\n    let currentSelected = false;\r\n    if (fullPath.join(\"\") === props.currentSelection.join(\"\")) {\r\n        currentSelected = true;\r\n    }\r\n    const liClassList = ClassName(\r\n        \"list-item item-file\",\r\n        { \"item--selected\": currentSelected }\r\n    )\r\n    let content = name;\r\n    if (currentSelected && renameMode) {\r\n        content = renameInput(name)\r\n    }\r\n\r\n    return (\r\n        <li\r\n            ref={drag}\r\n            className={liClassList}\r\n            onClick={props.onClick}\r\n            onContextMenu={props.onContextMenu}\r\n            data-path={path.join(\"/\")}\r\n            key={UUID.genV1()}>\r\n            <FontAwesomeIcon className=\"icon icon-file\" icon={faFile} />\r\n            {content}\r\n        </li>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentSelection: state.playList.currentSelection\r\n})\r\n\r\nexport default connect(mapStateToProps)(FileElement);\r\n\r\n"]},"metadata":{},"sourceType":"module"}