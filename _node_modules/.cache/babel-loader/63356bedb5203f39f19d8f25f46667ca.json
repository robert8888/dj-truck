{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\TrackInfo\\\\TrackInfo.js\";\nimport React, { useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./track-info.scss\";\nimport track_thumbnail from \"./../../../assets/img/track_thumbnail.png\";\nimport { calcBpm } from \"./../../../utils/bpm/converter.js\";\nimport { stripHtml } from \"./../../../utils/html/htmlHelper.js\";\nimport { formater } from \"./../../../utils/time/timeFromater\";\n\nconst TrackInfo = props => {\n  var _track$details$thumbn, _track$details$thumbn2;\n\n  let track = useMemo(() => ({ ...props.track\n  }), [props.track]);\n  return React.createElement(\"div\", {\n    className: \"track-info deck-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"track-info-thumbnail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"track thumbnails\",\n    src: ((_track$details$thumbn = track.details.thumbnail) === null || _track$details$thumbn === void 0 ? void 0 : (_track$details$thumbn2 = _track$details$thumbn.default) === null || _track$details$thumbn2 === void 0 ? void 0 : _track$details$thumbn2.url) || track_thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"track-info-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"track-info-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, stripHtml(track.details.title).substr(0, 200))), React.createElement(\"div\", {\n    className: \"track-info-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"time-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, track.state.timeLeft ? formater.secondsToStr(track.state.timeLeft) : formater.ytToStr(track.details.duration)), React.createElement(\"span\", {\n    className: \"track-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, formater.ytToStr(track.details.duration))), React.createElement(\"div\", {\n    className: \"track-info-bpm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"track-bpm-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, track.details.bpm && calcBpm(track.details.bpm, track.state.pitch).toFixed(2)), React.createElement(\"span\", {\n    className: \"tarck-bpm-pitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, track.state.pitch.toFixed(2) + \"%\"), React.createElement(\"span\", {\n    className: \"track-bpm-init\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, track.details.bpm && track.details.bpm.toFixed(2))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  track: {\n    details: state.console.channel[ownProps.name].track,\n    state: state.console.channel[ownProps.name].playBackState\n  }\n});\n\nexport default connect(mapStateToProps)(TrackInfo);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/TrackInfo/TrackInfo.js"],"names":["React","useMemo","connect","track_thumbnail","calcBpm","stripHtml","formater","TrackInfo","props","track","name","details","thumbnail","default","url","title","substr","state","timeLeft","secondsToStr","ytToStr","duration","bpm","pitch","toFixed","mapStateToProps","ownProps","console","channel","playBackState"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./track-info.scss\";\r\nimport track_thumbnail from \"./../../../assets/img/track_thumbnail.png\";\r\n\r\nimport { calcBpm } from \"./../../../utils/bpm/converter.js\";\r\nimport { stripHtml } from \"./../../../utils/html/htmlHelper.js\";\r\nimport { formater } from \"./../../../utils/time/timeFromater\"\r\n\r\nconst TrackInfo = props => {\r\n    let track = useMemo(()=>({\r\n        ...props.track\r\n    }), [props.track]);\r\n\r\n    return (\r\n        <div className={\"track-info deck-\" + props.name}>\r\n            <div className=\"track-info-thumbnail\">\r\n                <img \r\n                alt=\"track thumbnails\"\r\n                src={track.details.thumbnail?.default?.url || track_thumbnail}></img>\r\n            </div>\r\n            <div className=\"track-info-description\">\r\n                <p className=\"track-info-title\">\r\n                    { stripHtml(track.details.title).substr(0,200) }\r\n                </p>\r\n            </div>\r\n            <div className=\"track-info-time\">\r\n                <span className=\"time-left\">\r\n                    { ((track.state.timeLeft) ? formater.secondsToStr(track.state.timeLeft) : formater.ytToStr(track.details.duration)) }\r\n                </span>\r\n                <span className=\"track-duration\">\r\n                    { formater.ytToStr(track.details.duration) }\r\n                </span>\r\n            </div>\r\n            <div className=\"track-info-bpm\">\r\n                <span className=\"track-bpm-current\">\r\n                    { track.details.bpm && calcBpm(track.details.bpm, track.state.pitch).toFixed(2) }\r\n                </span>\r\n                <span className=\"tarck-bpm-pitch\">\r\n                    { track.state.pitch.toFixed(2) + \"%\"}\r\n                </span>\r\n                <span className=\"track-bpm-init\">\r\n                    { track.details.bpm && track.details.bpm.toFixed(2) }\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    track : {\r\n        details : state.console.channel[ownProps.name].track,\r\n        state : state.console.channel[ownProps.name].playBackState,\r\n    }\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(TrackInfo);"]},"metadata":{},"sourceType":"module"}