{"ast":null,"code":"import { ACTIONS, startRecording } from \"../../actions\";\nimport { takeEvery, select, put, putResolve } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport { format } from 'date-fns';\nexport default function* createRecordRequest() {\n  yield takeEvery(ACTIONS.R_CREATE_RECORD_REQEST, handel);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* handel(action) {\n  const token = yield select(getToken);\n\n  if (token) {\n    const {\n      callQuery,\n      queries\n    } = getApi(\"UserAssets\");\n    let title = action.recName || \"Record\";\n    const query = queries.createRecordQl();\n    yield put(startRecording(action.recName, 0));\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/recorder/createRecordRequestSaga.js"],"names":["ACTIONS","startRecording","takeEvery","select","put","putResolve","getApi","format","createRecordRequest","R_CREATE_RECORD_REQEST","handel","getToken","state","user","token","action","callQuery","queries","title","recName","query","createRecordQl"],"mappings":"AAAA,SAAUA,OAAV,EAAoBC,cAApB,QAA0C,eAA1C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAqD,oBAArD;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,UAAUC,mBAAV,GAAgC;AAC3C,QAAMN,SAAS,CAACF,OAAO,CAACS,sBAAT,EAAiCC,MAAjC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAIA,UAAUJ,MAAV,CAAiBK,MAAjB,EAAyB;AACrB,QAAMD,KAAK,GAAG,MAAMX,MAAM,CAACQ,QAAD,CAA1B;;AAEA,MAAGG,KAAH,EAAS;AACL,UAAM;AAAEE,MAAAA,SAAF;AAAcC,MAAAA;AAAd,QAA0BX,MAAM,CAAC,YAAD,CAAtC;AACA,QAAIY,KAAK,GAAGH,MAAM,CAACI,OAAP,IAAkB,QAA9B;AACA,UAAMC,KAAK,GAAGH,OAAO,CAACI,cAAR,EAAd;AAEA,UAAMjB,GAAG,CAACH,cAAc,CAACc,MAAM,CAACI,OAAR,EAAiB,CAAjB,CAAf,CAAT;AACH;AAEJ","sourcesContent":["import {  ACTIONS,  startRecording } from \"../../actions\";\r\nimport { takeEvery, select, put, putResolve,  } from \"redux-saga/effects\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { format } from 'date-fns'\r\n\r\nexport default function* createRecordRequest() {\r\n    yield takeEvery(ACTIONS.R_CREATE_RECORD_REQEST, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\n\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n\r\n    if(token){\r\n        const { callQuery , queries } = getApi(\"UserAssets\");\r\n        let title = action.recName || \"Record\"\r\n        const query = queries.createRecordQl()\r\n\r\n        yield put(startRecording(action.recName, 0))\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}