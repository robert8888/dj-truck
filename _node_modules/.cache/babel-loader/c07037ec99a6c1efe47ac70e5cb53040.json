{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\Router\\\\PrivateRedirect.js\";\nimport React, { useCallback } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useAuth0 } from \"./../auth0/react-auth0-spa\";\n\nconst PrivateRedirect = ({\n  from,\n  to,\n  ...props\n}) => {\n  const {\n    loading,\n    isAuthenticated,\n    loginWithRedirect\n  } = useAuth0();\n  const redirect = useCallback(async () => {\n    if (loading) {\n      return;\n    }\n\n    await loginWithRedirect({\n      appState: {\n        targetUrl: window.location.pathname\n      }\n    });\n  }, [loading, loginWithRedirect]);\n\n  const renderRedirect = () => {\n    if (isAuthenticated) {\n      return React.createElement(Redirect, Object.assign({\n        from: from,\n        to: to\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    } else {\n      redirect();\n    }\n  };\n\n  return React.createElement(Route, {\n    path: from,\n    render: renderRedirect,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n};\n\nexport default PrivateRedirect;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/Router/PrivateRedirect.js"],"names":["React","useCallback","Redirect","Route","useAuth0","PrivateRedirect","from","to","props","loading","isAuthenticated","loginWithRedirect","redirect","appState","targetUrl","window","location","pathname","renderRedirect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAAUC,QAAV,EAAqBC,KAArB,QAAiC,kBAAjC;AACA,SAASC,QAAT,QAAyB,4BAAzB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,EAAR;AAAa,KAAGC;AAAhB,CAAD,KAA6B;AACjD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAkDP,QAAQ,EAAhE;AAGA,QAAMQ,QAAQ,GAAGX,WAAW,CAAC,YAAY;AACrC,QAAIQ,OAAJ,EAAa;AACT;AACH;;AAED,UAAME,iBAAiB,CAAC;AACpBE,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,SAAS,EAAEC,MAAM,CAACC,QAAP,CAAgBC;AAA7B;AADU,KAAD,CAAvB;AAGH,GAR2B,EAQzB,CAACR,OAAD,EAAUE,iBAAV,CARyB,CAA5B;;AAUA,QAAMO,cAAc,GAAE,MAAM;AACxB,QAAIR,eAAJ,EAAqB;AACjB,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEJ,IAAhB;AAAsB,QAAA,EAAE,EAAEC;AAA1B,SAAkCC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KAFD,MAEO;AACHI,MAAAA,QAAQ;AACX;AACJ,GAND;;AAOA,SAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEN,IAAb;AAAmB,IAAA,MAAM,EAAEY,cAA3B;AAA2C,IAAA,KAAK,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEH,CAvBD;;AA0BA,eAAeb,eAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport {  Redirect , Route} from \"react-router-dom\";\r\nimport { useAuth0 } from \"./../auth0/react-auth0-spa\";\r\n\r\nconst PrivateRedirect = ({ from, to,  ...props }) => {\r\n    const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n\r\n    const redirect = useCallback(async () => {\r\n        if (loading) {\r\n            return;\r\n        }\r\n\r\n        await loginWithRedirect({\r\n            appState: { targetUrl: window.location.pathname }\r\n        });\r\n    }, [loading, loginWithRedirect])\r\n\r\n    const renderRedirect= () => {\r\n        if (isAuthenticated) {\r\n            return <Redirect from={from} to={to} {...props}/>;\r\n        } else {\r\n            redirect();\r\n        }\r\n    }\r\n    return <Route path={from} render={renderRedirect} exact /> \r\n    \r\n};\r\n\r\n\r\nexport default PrivateRedirect;"]},"metadata":{},"sourceType":"module"}