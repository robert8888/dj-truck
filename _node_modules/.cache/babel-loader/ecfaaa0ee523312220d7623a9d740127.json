{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecord\\\\UserRecord.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { reqRecOfUser } from \"./../../actions\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport Record from \"../common/components/Record/Record\";\n\nconst UserRecord = ({\n  reqRecOfUser,\n  recordList,\n  userId,\n  countAll\n}) => {\n  const [controls, player] = useRecordPlayer();\n  const {\n    title,\n    id\n  } = useParams();\n  const history = useHistory();\n  const [record, setRecord] = useState();\n  useEffect(() => {\n    let rec = recordList === null || recordList === void 0 ? void 0 : recordList.filter(r => r.title = title);\n\n    if (rec && rec.length === 0 || !rec) {\n      reqRecOfUser(userId, 100, 0, {\n        title,\n        id\n      });\n    }\n\n    if (rec && rec.length === 1) {\n      setRecord(rec[0]);\n    } else if (rec && rec.length > 1) {\n      if (id) {\n        rec = rec.filter(r => r.id === id);\n\n        if (rec.length) {\n          setRecord(rec[0]);\n        }\n      } else {\n        history.replace('/my/records?preloaded=true');\n      }\n    }\n  }, [recordList, setRecord]);\n  return React.createElement(\"div\", {\n    className: \"user-record\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Record, {\n    record: record,\n    controls: controls,\n    player: player,\n    simpleHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (userId, pageSize, page, details) => dispatch(reqRecOfUser(userId, pageSize, page, details))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecord/UserRecord.js"],"names":["React","useState","useEffect","reqRecOfUser","connect","useParams","useHistory","useRecordPlayer","Record","UserRecord","recordList","userId","countAll","controls","player","title","id","history","record","setRecord","rec","filter","r","length","replace","mapStateToProps","state","recordsList","records","list","user","dbId","mapDispatchToProps","dispatch","requestList","pageSize","page","details"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {reqRecOfUser} from \"./../../actions\"\r\nimport {connect} from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {useRecordPlayer} from \"./../common/Hooks/useRecordPlayer\";\r\nimport Record from \"../common/components/Record/Record\";\r\n\r\nconst UserRecord = ({reqRecOfUser, recordList, userId, countAll}) => {\r\n    const [controls, player] = useRecordPlayer();\r\n    const { title, id } = useParams();\r\n    const history = useHistory()\r\n    const [record, setRecord] = useState();\r\n\r\n    useEffect(()=>{\r\n        let rec = recordList?.filter( r => r.title = title)\r\n        if(rec && rec.length === 0 || !rec){\r\n            reqRecOfUser(userId, 100, 0 , {title, id})\r\n        }\r\n        if(rec && rec.length === 1){\r\n            setRecord(rec[0]);\r\n        } else if(rec && rec.length > 1){\r\n            if(id){\r\n                rec = rec.filter( r => r.id === id);\r\n                if(rec.length){\r\n                    setRecord(rec[0])\r\n                }\r\n            } else {\r\n                history.replace('/my/records?preloaded=true')\r\n            }\r\n        }\r\n    }, [recordList, setRecord])\r\n\r\n    return (\r\n        <div className=\"user-record\">\r\n            <Record  record={record} controls={controls} player={player} simpleHeader/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (userId, pageSize, page, details) => dispatch(reqRecOfUser(userId, pageSize, page, details))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}