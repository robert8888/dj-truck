{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Mixer\\\\Fader\\\\Fader.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setPitch } from \"../../../actions\";\nimport Slider from \"./../../common/Slider/Slider\";\nimport \"./fader-slider.scss\";\n\nconst PitchSlider = props => {\n  return React.createElement(\"div\", {\n    className: \"pitch pitch-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    from: -10,\n    to: 10,\n    horizontal: true,\n    onChange: props.setPitch,\n    value: props.pitch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n/*\r\nconst mapStateToProps = (state, ownProps) =>({\r\n    pitch : state.console.channel[ownProps.name].playBackState.pitch,\r\n})\r\n\r\nconst mapDispachToProps = (dispach, ownProps) => ({\r\n    setPitch : (value) => dispach(setPitch(value, ownProps.name)), \r\n})*/\n\n\nexport default Fader;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Mixer/Fader/Fader.js"],"names":["React","connect","setPitch","Slider","PitchSlider","props","name","pitch","Fader"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAO,qBAAP;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,SACI;AAAK,IAAA,SAAS,EAAE,iBAAiBA,KAAK,CAACC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAC,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,UAAU,MAArC;AAAuC,IAAA,QAAQ,EAAED,KAAK,CAACH,QAAvD;AAAiE,IAAA,KAAK,EAAGG,KAAK,CAACE,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAND;AAOA;;;;;;;;;;AASA,eAAeC,KAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPitch } from \"../../../actions\";\r\nimport Slider from \"./../../common/Slider/Slider\";\r\nimport \"./fader-slider.scss\";\r\n\r\nconst PitchSlider = props => {\r\n    return (\r\n        <div className={\"pitch pitch-\" + props.name} >\r\n            <Slider from={-10} to={10} horizontal  onChange={props.setPitch} value={ props.pitch }/>\r\n        </div>\r\n    )\r\n}\r\n/*\r\nconst mapStateToProps = (state, ownProps) =>({\r\n    pitch : state.console.channel[ownProps.name].playBackState.pitch,\r\n})\r\n\r\nconst mapDispachToProps = (dispach, ownProps) => ({\r\n    setPitch : (value) => dispach(setPitch(value, ownProps.name)), \r\n})*/\r\n\r\nexport default Fader;\r\n"]},"metadata":{},"sourceType":"module"}