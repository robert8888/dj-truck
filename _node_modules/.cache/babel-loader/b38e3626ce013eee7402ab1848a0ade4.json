{"ast":null,"code":"// ---------- PlayList---------------------\nconst ACTIONS = {\n  PL_ROOT_REQUEST: \"Call to api for root dir content\",\n  PL_PUSH_ROOT: \"Push root director from api\",\n  PUSH_TRACK: \"Push tack on end of list\",\n  //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\n  CALC_BPM: \"Start calculating bpm for track\",\n  SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\",\n  // bpm is rounded\n  //---play list explorer\n  PL_CREATE_DIR: \"Create dir in current\",\n  PL_CREATE_PLAYLIST: \"Creawte play list in current selected dir of name\",\n  PL_SET_SELECTION: \"Set current selected dir and play list if is selected play list\",\n  PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\n  PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\n  PL_RENAME_SELECTED: \"Rename current selected element\",\n  PL_DELETE_SELECTED: \"Remove current selected element\",\n  PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\n  PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\n  PL_ADD_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\n  PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\"\n};\nexport { ACTIONS as PLAY_LIST_ACTIONS }; //***------------------- */\n\nexport function rootDirRequest() {\n  return {\n    type: ACTIONS.PL_ROOT_REQUEST\n  };\n}\nexport function pushRootDir(dirContent) {\n  return {\n    type: ACTIONS.PL_PUSH_ROOT,\n    dirContent\n  };\n}\nexport function pushTrackToList(track, playlist) {\n  return {\n    type: ACTIONS.PUSH_TRACK,\n    track,\n    playlist\n  };\n}\n;\nexport function startCalcBpm(track, playlist) {\n  return {\n    type: ACTIONS.CALC_BPM,\n    track,\n    playlist\n  };\n}\nexport function setBpmAndOffset(id, playlist, bpm, offset) {\n  return {\n    type: ACTIONS.SET_BPM_AND_OFFSET,\n    id,\n    playlist,\n    bpm,\n    offset\n  };\n}\n/**---------------------- */\n\nexport function createDir(name) {\n  return {\n    type: ACTIONS.PL_CREATE_DIR,\n    name\n  };\n}\nexport function createPlaylist(name) {\n  return {\n    type: ACTIONS.PL_CREATE_PLAYLIST,\n    name\n  };\n}\nexport function setSelection(path) {\n  return {\n    type: ACTIONS.PL_SET_SELECTION,\n    path\n  };\n}\nexport function openCurrentPlayList() {\n  return {\n    type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST\n  };\n}\nexport function toggleDir(path) {\n  return {\n    type: ACTIONS.PL_TOGGLE_DIR,\n    path\n  };\n}\nexport function deleteSelected() {\n  return {\n    type: ACTIONS.PL_DELETE_SELECTED\n  };\n}\nexport function deleteTrack(index) {\n  return {\n    type: ACTIONS.PL_DELETE_TRACK,\n    index\n  };\n}\nexport function renameSelected(name) {\n  return {\n    type: ACTIONS.PL_RENAME_SELECTED,\n    name\n  };\n}\nexport function swapTrackOnList(from, to) {\n  return {\n    type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT,\n    from,\n    to\n  };\n}\nexport function addTrackToList(track, path) {\n  return {\n    type: ACTIONS.PL_ADD_TRACK_TO_LIST,\n    track,\n    path\n  };\n}\nexport function moveTo(pathFrom, pathTo) {\n  return {\n    type: ACTIONS.PL_MOVE_TO,\n    pathFrom,\n    pathTo\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/actions/console/playList.js"],"names":["ACTIONS","PL_ROOT_REQUEST","PL_PUSH_ROOT","PUSH_TRACK","CALC_BPM","SET_BPM_AND_OFFSET","PL_CREATE_DIR","PL_CREATE_PLAYLIST","PL_SET_SELECTION","PL_OPEN_CURRENT_PLAY_LIST","PL_TOGGLE_DIR","PL_RENAME_SELECTED","PL_DELETE_SELECTED","PL_DELETE_TRACK","PL_SWAP_TRACK_ON_CURRENT","PL_ADD_TRACK_TO_LIST","PL_MOVE_TO","PLAY_LIST_ACTIONS","rootDirRequest","type","pushRootDir","dirContent","pushTrackToList","track","playlist","startCalcBpm","setBpmAndOffset","id","bpm","offset","createDir","name","createPlaylist","setSelection","path","openCurrentPlayList","toggleDir","deleteSelected","deleteTrack","index","renameSelected","swapTrackOnList","from","to","addTrackToList","moveTo","pathFrom","pathTo"],"mappings":"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","sourcesContent":["// ---------- PlayList---------------------\r\n\r\nconst ACTIONS = {\r\n    PL_ROOT_REQUEST: \"Call to api for root dir content\",\r\n    PL_PUSH_ROOT: \"Push root director from api\",\r\n    PUSH_TRACK: \"Push tack on end of list\",\r\n    //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\r\n    CALC_BPM: \"Start calculating bpm for track\",\r\n    SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\", // bpm is rounded\r\n\r\n    //---play list explorer\r\n    PL_CREATE_DIR: \"Create dir in current\",\r\n    PL_CREATE_PLAYLIST: \"Creawte play list in current selected dir of name\",\r\n\r\n    PL_SET_SELECTION: \"Set current selected dir and play list if is selected play list\",\r\n    PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\r\n    PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\r\n    PL_RENAME_SELECTED: \"Rename current selected element\",\r\n    PL_DELETE_SELECTED: \"Remove current selected element\",\r\n    PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\r\n    PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\r\n    PL_ADD_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\r\n    PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\",\r\n}\r\nexport { ACTIONS as PLAY_LIST_ACTIONS }\r\n//***------------------- */\r\nexport function rootDirRequest() {\r\n    return { type: ACTIONS.PL_ROOT_REQUEST }\r\n}\r\n\r\nexport function pushRootDir(dirContent) {\r\n    return { type: ACTIONS.PL_PUSH_ROOT, dirContent }\r\n}\r\n\r\nexport function pushTrackToList(track, playlist) {\r\n    return {\r\n        type: ACTIONS.PUSH_TRACK,\r\n        track,\r\n        playlist\r\n    }\r\n};\r\n\r\nexport function startCalcBpm(track, playlist) {\r\n    return {\r\n        type: ACTIONS.CALC_BPM,\r\n        track,\r\n        playlist\r\n    }\r\n}\r\n\r\n\r\nexport function setBpmAndOffset(id, playlist, bpm, offset) {\r\n    return {\r\n        type: ACTIONS.SET_BPM_AND_OFFSET,\r\n        id,\r\n        playlist,\r\n        bpm,\r\n        offset,\r\n    }\r\n}\r\n\r\n/**---------------------- */\r\n\r\nexport function createDir(name) {\r\n    return {\r\n        type: ACTIONS.PL_CREATE_DIR,\r\n        name,\r\n    }\r\n}\r\n\r\nexport function createPlaylist(name) {\r\n    return {\r\n        type: ACTIONS.PL_CREATE_PLAYLIST,\r\n        name,\r\n    }\r\n}\r\n\r\nexport function setSelection(path) {\r\n    return {\r\n        type: ACTIONS.PL_SET_SELECTION,\r\n        path,\r\n    }\r\n}\r\n\r\nexport function openCurrentPlayList() {\r\n    return {\r\n        type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST,\r\n    }\r\n}\r\n\r\nexport function toggleDir(path) {\r\n    return {\r\n        type: ACTIONS.PL_TOGGLE_DIR,\r\n        path\r\n    }\r\n}\r\n\r\n\r\nexport function deleteSelected() {\r\n    return {\r\n        type: ACTIONS.PL_DELETE_SELECTED\r\n    }\r\n}\r\n\r\nexport function deleteTrack(index) {\r\n    return {\r\n        type: ACTIONS.PL_DELETE_TRACK,\r\n        index\r\n    }\r\n}\r\n\r\nexport function renameSelected(name) {\r\n    return {\r\n        type: ACTIONS.PL_RENAME_SELECTED,\r\n        name\r\n    }\r\n}\r\n\r\nexport function swapTrackOnList(from, to) {\r\n    return {\r\n        type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT,\r\n        from,\r\n        to\r\n    }\r\n}\r\n\r\nexport function addTrackToList(track, path) {\r\n    return {\r\n        type: ACTIONS.PL_ADD_TRACK_TO_LIST,\r\n        track,\r\n        path\r\n    }\r\n}\r\n\r\nexport function moveTo(pathFrom, pathTo) {\r\n    return {\r\n        type: ACTIONS.PL_MOVE_TO,\r\n        pathFrom,\r\n        pathTo\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}