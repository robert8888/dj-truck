{"ast":null,"code":"import { renameSelected, ACTIONS } from \"../../actions\";\nimport { takeEvery, select, put, fork } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport { get } from \"lodash/object\";\nimport { generateTemplateName as generateName, findClosesDir } from \"./../../reducers/console/playlist/utils\";\nexport default function* renameSelectedRequestSaga() {\n  yield takeEvery(ACTIONS.SET_BPM_AND_OFFSET, handel);\n}\n\nfunction* handel(action) {\n  if (typeof action.bpm === \"number\") {\n    yield fork(sendDataToApi, action);\n  }\n}\n\nconst getToken = state => state.user.token;\n\nfunction* sendDataToApi(action) {\n  const {\n    callQuery,\n    queries\n  } = getApi(\"UserAssets\");\n  const token = yield select(getToken); // if(!token){\n  //     yield put(renameSelected(action.name));\n  //     return;\n  // }\n  // const currentSelection = yield select(getCurrentSelection);\n  // const current = yield select(getCurrent, currentSelection);\n  // const parentPath = yield select(parentDirPath, currentSelection);\n\n  console.log(action);\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/setBpmRequestSaga.js"],"names":["renameSelected","ACTIONS","takeEvery","select","put","fork","getApi","get","generateTemplateName","generateName","findClosesDir","renameSelectedRequestSaga","SET_BPM_AND_OFFSET","handel","action","bpm","sendDataToApi","getToken","state","user","token","callQuery","queries","console","log"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,OAAzB,QAAwC,eAAxC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,SAASC,GAAT,QAAoB,eAApB;AACA,SACIC,oBAAoB,IAAIC,YAD5B,EAEIC,aAFJ,QAGW,yCAHX;AAKA,eAAe,UAAUC,yBAAV,GAAsC;AACjD,QAAMT,SAAS,CAACD,OAAO,CAACW,kBAAT,EAA6BC,MAA7B,CAAf;AACH;;AAED,UAAUA,MAAV,CAAiBC,MAAjB,EAAwB;AACpB,MAAG,OAAOA,MAAM,CAACC,GAAd,KAAsB,QAAzB,EAAkC;AAC9B,UAAMV,IAAI,CAACW,aAAD,EAAgBF,MAAhB,CAAV;AACH;AACJ;;AAED,MAAMG,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAIA,UAAUJ,aAAV,CAAwBF,MAAxB,EAAgC;AAC5B,QAAM;AAAEO,IAAAA,SAAF;AAAcC,IAAAA;AAAd,MAA0BhB,MAAM,CAAC,YAAD,CAAtC;AACA,QAAMc,KAAK,GAAG,MAAMjB,MAAM,CAACc,QAAD,CAA1B,CAF4B,CAG5B;AACA;AACA;AACA;AACA;AACA;AACA;;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAEH","sourcesContent":["import { renameSelected, ACTIONS } from \"../../actions\";\r\nimport { takeEvery, select, put, fork } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n\r\nimport { get } from \"lodash/object\";\r\nimport { \r\n    generateTemplateName as generateName, \r\n    findClosesDir    \r\n    } from \"./../../reducers/console/playlist/utils\"\r\n\r\nexport default function* renameSelectedRequestSaga() {\r\n    yield takeEvery(ACTIONS.SET_BPM_AND_OFFSET, handel)\r\n}\r\n\r\nfunction* handel(action){\r\n    if(typeof action.bpm === \"number\"){\r\n        yield fork(sendDataToApi, action)\r\n    }\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\n\r\n\r\nfunction* sendDataToApi(action) {\r\n    const { callQuery , queries } = getApi(\"UserAssets\");\r\n    const token = yield select(getToken);\r\n    // if(!token){\r\n    //     yield put(renameSelected(action.name));\r\n    //     return;\r\n    // }\r\n    // const currentSelection = yield select(getCurrentSelection);\r\n    // const current = yield select(getCurrent, currentSelection);\r\n    // const parentPath = yield select(parentDirPath, currentSelection);\r\n    console.log(action);\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}