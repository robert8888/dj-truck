{"ast":null,"code":"import _toConsumableArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState,Fragment,useEffect,useMemo}from\"react\";import UUID from\"uuidjs\";import{connect}from\"react-redux\";import ExplorerContextMenu from\"./../../../../../common/components/ContextMenu/ContextMenu\";import{ContextMenuTrigger}from\"react-contextmenu\";import{toggleDirRequest,setSelection as _setSelection,openPlaylistRequest,renameSelectedRequest,deleteSelectedRequest,createDirRequest,createPlaylistRequest}from\"./../../../../../../actions\";import{isEmpty,sortObj}from\"./../../../../../../utils/objects/helpers\";import{useDoubleClick}from\"./useDoubleClick\";import RenameInput from\"./RenameInput/RenameInput\";import DirElement from\"./DirElement/DirElement\";import FileElement from\"./FileElement/FileElement\";import\"./explorer-tree.scss\";var ExplorerTree=function ExplorerTree(_ref){var toggleDir=_ref.toggleDir,setSelection=_ref.setSelection,renameMode=_ref.renameMode,renameSelected=_ref.renameSelected,openSelected=_ref.openSelected,createPlaylist=_ref.createPlaylist,createDir=_ref.createDir,deleteSelected=_ref.deleteSelected,root=_ref.root;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),_renameMode=_useState2[0],setRenameMode=_useState2[1];useEffect(function(){setRenameMode(renameMode);},[renameMode,setRenameMode]);var renameInput=useMemo(function(name){return React.createElement(RenameInput,{name:name,onChange:function onChange(value){renameSelected(value);setRenameMode(false);}});},[renameSelected,setRenameMode]);var _useDoubleClick=useDoubleClick({clickHandler:function clickHandler(path){if(!_renameMode){setSelection(path);}},doubleClickHandler:function doubleClickHandler(path){return toggleDir(path);}}),_useDoubleClick2=_slicedToArray(_useDoubleClick,1),dirClickHandler=_useDoubleClick2[0];var getDirElement=useCallback(function(_ref2){var params=Object.assign({},_ref2);var fullPath=[].concat(_toConsumableArray(params.path),[params.name]);return React.createElement(DirElement,Object.assign({key:UUID.genV1()},params,{renameMode:_renameMode,renameInput:renameInput,onClick:dirClickHandler.bind(null,fullPath),buttonClick:toggleDir.bind(null,fullPath),onContextMenu:setSelection.bind(null,fullPath)}));},[_renameMode,renameInput,dirClickHandler,setSelection,toggleDir]);var _useDoubleClick3=useDoubleClick({clickHandler:function clickHandler(path){if(!_renameMode){setSelection(path);}},doubleClickHandler:openSelected}),_useDoubleClick4=_slicedToArray(_useDoubleClick3,1),fileClickHandler=_useDoubleClick4[0];var getFileElement=useCallback(function(name,path){var fullPath=[].concat(_toConsumableArray(path),[name]);return React.createElement(FileElement,{key:UUID.genV1(),name:name,path:path,renameMode:_renameMode,renameInput:renameInput,onClick:fileClickHandler.bind(null,fullPath),buttonClick:toggleDir.bind(null,fullPath),onContextMenu:setSelection.bind(null,fullPath)});},[_renameMode,renameInput,fileClickHandler,toggleDir,setSelection]);var renderDir;var renderDirElements=useCallback(function(name,content,path){content=sortObj(content);if(content._type===\"playlist\"){//} instanceof Array) {\nreturn getFileElement(name,path);}else{if(content._open===true){return React.createElement(Fragment,{key:UUID.genV1()},getDirElement({name:name,path:path,open:true}),renderDir(content,[].concat(_toConsumableArray(path),[name])));}else{if(isEmpty(content)){return getDirElement({name:name,path:path,open:false,empty:true});}return getDirElement({name:name,path:path,open:false});}}},[getDirElement,getFileElement,renderDir]);renderDir=useCallback(function(dir,path){return React.createElement(\"ul\",{className:\"list-dir dir-content\",key:UUID.generate()},Object.entries(dir).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),name=_ref4[0],content=_ref4[1];if(name.startsWith(\"_\")){return null;}return renderDirElements(name,content,path);}));},[renderDirElements]);return React.createElement(Fragment,null,React.createElement(ContextMenuTrigger,{id:\"explorer_context_menu\",holdToDisplay:-1},React.createElement(\"div\",{className:\"explorer-tree\",onClick:setSelection.bind(null,[\"root\"])},renderDir(root,['root']))),React.createElement(ExplorerContextMenu,{id:\"explorer_context_menu\",items:{\"Add Playlist\":function AddPlaylist(){createPlaylist();//setRenameMode(true)\n},\"Add folder\":function AddFolder(){createDir();// setRenameMode(true);\n},\"Rename\":setRenameMode.bind(null,true),\"Delete\":deleteSelected.bind(null)}}));};var mapStateToProps=function mapStateToProps(state){return{root:state.playList.root,currentSelection:state.playList.currentSelection,renameMode:state.playList.renameMode};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{toggleDir:function toggleDir(path){return dispatch(toggleDirRequest(path));},//\nsetSelection:function setSelection(path){return dispatch(_setSelection(path));},openSelected:function openSelected(path){return dispatch(openPlaylistRequest(path));},//to request\nrenameSelected:function renameSelected(newName){return dispatch(renameSelectedRequest(newName));},//\ndeleteSelected:function deleteSelected(){return dispatch(deleteSelectedRequest());},//\ncreateDir:function createDir(){return dispatch(createDirRequest(null));},//\ncreatePlaylist:function createPlaylist(){return dispatch(createPlaylistRequest(null));}//\n};};export default connect(mapStateToProps,mapDispatchToProps)(ExplorerTree);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayListExplorer/Explorer/ExplorerTree/ExplorerTree.js"],"names":["React","useCallback","useState","Fragment","useEffect","useMemo","UUID","connect","ExplorerContextMenu","ContextMenuTrigger","toggleDirRequest","setSelection","openPlaylistRequest","renameSelectedRequest","deleteSelectedRequest","createDirRequest","createPlaylistRequest","isEmpty","sortObj","useDoubleClick","RenameInput","DirElement","FileElement","ExplorerTree","toggleDir","renameMode","renameSelected","openSelected","createPlaylist","createDir","deleteSelected","root","_renameMode","setRenameMode","renameInput","name","value","clickHandler","path","doubleClickHandler","dirClickHandler","getDirElement","params","fullPath","genV1","bind","fileClickHandler","getFileElement","renderDir","renderDirElements","content","_type","_open","open","empty","dir","generate","Object","entries","map","startsWith","mapStateToProps","state","playList","currentSelection","mapDispatchToProps","dispatch","newName"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, Fragment, useEffect, useMemo } from \"react\";\r\nimport UUID from \"uuidjs\";\r\nimport { connect } from \"react-redux\";\r\nimport ExplorerContextMenu from \"./../../../../../common/components/ContextMenu/ContextMenu\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport {\r\n    toggleDirRequest,\r\n    setSelection,\r\n    openPlaylistRequest,\r\n    renameSelectedRequest,\r\n    deleteSelectedRequest,\r\n    createDirRequest,\r\n    createPlaylistRequest\r\n} from \"./../../../../../../actions\"\r\nimport { isEmpty, sortObj } from \"./../../../../../../utils/objects/helpers\";\r\nimport { useDoubleClick } from \"./useDoubleClick\";\r\nimport RenameInput from \"./RenameInput/RenameInput\";\r\nimport DirElement from \"./DirElement/DirElement\";\r\nimport FileElement from \"./FileElement/FileElement\";\r\nimport \"./explorer-tree.scss\";\r\n\r\nconst ExplorerTree = ({\r\n    toggleDir,\r\n    setSelection,\r\n    renameMode,\r\n    renameSelected,\r\n    openSelected,\r\n    createPlaylist,\r\n    createDir,\r\n    deleteSelected,\r\n    root }) => {\r\n\r\n    const [_renameMode, setRenameMode] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setRenameMode(renameMode)\r\n    }, [renameMode, setRenameMode])\r\n\r\n    const renameInput = useMemo(name => {\r\n        return (\r\n            <RenameInput name={name} onChange={value => {\r\n                renameSelected(value);\r\n                setRenameMode(false)\r\n            }} />\r\n        )\r\n    }, [renameSelected, setRenameMode])\r\n\r\n    const [dirClickHandler] = useDoubleClick({\r\n        clickHandler: (path) => {\r\n            if (!_renameMode) {\r\n                setSelection(path)\r\n            }\r\n        },\r\n        doubleClickHandler: path => toggleDir(path),\r\n    })\r\n\r\n    const getDirElement = useCallback(({ ...params }) => {\r\n        const fullPath = [...params.path, params.name]\r\n        return (\r\n            <DirElement\r\n                key={UUID.genV1()}\r\n                {...params}\r\n                renameMode={_renameMode}\r\n                renameInput={renameInput}\r\n                onClick={dirClickHandler.bind(null, fullPath)}\r\n                buttonClick={toggleDir.bind(null, fullPath)}\r\n                onContextMenu={setSelection.bind(null, fullPath)}\r\n            />\r\n        )\r\n    }, [_renameMode, renameInput, dirClickHandler, setSelection, toggleDir])\r\n\r\n    const [fileClickHandler] = useDoubleClick({\r\n        clickHandler: (path) => {\r\n            if (!_renameMode) {\r\n                setSelection(path)\r\n            }\r\n        },\r\n        doubleClickHandler: openSelected\r\n    })\r\n\r\n    const getFileElement = useCallback((name, path) => {\r\n        const fullPath = [...path, name]\r\n        return (\r\n            <FileElement\r\n                key={UUID.genV1()}\r\n                name={name}\r\n                path={path}\r\n                renameMode={_renameMode}\r\n                renameInput={renameInput}\r\n                onClick={fileClickHandler.bind(null, fullPath)}\r\n                buttonClick={toggleDir.bind(null, fullPath)}\r\n                onContextMenu={setSelection.bind(null, fullPath)}\r\n            />\r\n        )\r\n    }, [_renameMode, renameInput, fileClickHandler, toggleDir, setSelection])\r\n\r\n    let renderDir;\r\n    const renderDirElements = useCallback((name, content, path) => {\r\n        content = sortObj(content);\r\n        if (content._type === \"playlist\") {//} instanceof Array) {\r\n            return getFileElement(name, path)\r\n        } else {\r\n            if (content._open === true) {\r\n                return (\r\n                    <Fragment key={UUID.genV1()}>\r\n                        {getDirElement({ name, path, open: true })}\r\n                        {renderDir(content, [...path, name])}\r\n                    </Fragment>\r\n                )\r\n            } else {\r\n                if (isEmpty(content)) {\r\n                    return getDirElement({ name, path, open: false, empty: true })\r\n                }\r\n                return getDirElement({ name, path, open: false })\r\n            }\r\n        }\r\n    }, [getDirElement, getFileElement, renderDir])\r\n\r\n    renderDir = useCallback((dir, path) => {\r\n        return (\r\n            <ul className=\"list-dir dir-content\" key={UUID.generate()}>\r\n                {\r\n                    Object.entries(dir).map(([name, content]) => {\r\n                        if (name.startsWith(\"_\")) {\r\n                            return null;\r\n                        }\r\n                        return renderDirElements(name, content, path);\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }, [renderDirElements])\r\n\r\n    return (\r\n        <Fragment>\r\n            <ContextMenuTrigger id=\"explorer_context_menu\" holdToDisplay={-1}>\r\n                <div className=\"explorer-tree\" onClick={setSelection.bind(null, [\"root\"])}>\r\n                    {renderDir(root, ['root'])}\r\n                </div>\r\n            </ContextMenuTrigger>\r\n\r\n            <ExplorerContextMenu\r\n                id=\"explorer_context_menu\"\r\n                items={{\r\n                    \"Add Playlist\": () => {\r\n                        createPlaylist();\r\n                        //setRenameMode(true)\r\n                    },\r\n                    \"Add folder\": () => {\r\n                        createDir();\r\n                        // setRenameMode(true);\r\n                    },\r\n                    \"Rename\": setRenameMode.bind(null, true),\r\n                    \"Delete\": deleteSelected.bind(null),\r\n                }} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    root: state.playList.root,\r\n    currentSelection: state.playList.currentSelection,\r\n    renameMode: state.playList.renameMode,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleDir: path => dispatch(toggleDirRequest(path)),//\r\n    setSelection: path => dispatch(setSelection(path)),\r\n    openSelected: path => dispatch(openPlaylistRequest(path)),//to request\r\n    renameSelected: newName => dispatch(renameSelectedRequest(newName)),//\r\n    deleteSelected: () => dispatch(deleteSelectedRequest()),//\r\n    createDir: () => dispatch(createDirRequest(null)),//\r\n    createPlaylist: () => dispatch(createPlaylistRequest(null)),//\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorerTree);"]},"metadata":{},"sourceType":"module"}