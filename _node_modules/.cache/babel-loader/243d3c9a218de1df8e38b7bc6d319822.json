{"ast":null,"code":"import _wrapRegExp from\"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapRegExp\";var ytToObj=function ytToObj(ytTime){var regex=_wrapRegExp(/^PT(?:([0-9]+)H)??(?:([0-9]+)M)??(?:([0-9]+)S){1}$/,{h:1,m:2,s:3});var match=ytTime.match(regex);if(!match)return ytTime;var _match$groups=match.groups,_match$groups$h=_match$groups.h,h=_match$groups$h===void 0?0:_match$groups$h,_match$groups$m=_match$groups.m,m=_match$groups$m===void 0?0:_match$groups$m,_match$groups$s=_match$groups.s,s=_match$groups$s===void 0?0:_match$groups$s;return{h:parseInt(h),m:parseInt(m),s:parseInt(s)};};var objToStr=function objToStr(objTime){var _objTime$h=objTime.h,h=_objTime$h===void 0?0:_objTime$h,_objTime$m=objTime.m,m=_objTime$m===void 0?0:_objTime$m,_objTime$s=objTime.s,s=_objTime$s===void 0?0:_objTime$s;var houre=h===0?\"\":h+\":\";var minute=m===0?\"0:\":m<10?\"0\"+m+\":\":m+\":\";var seconds=s===0?\"0\":s<10?\"0\"+s:s;return houre+minute+seconds;};var objToSeconds=function objToSeconds(objTime){var h=objTime.h,m=objTime.m,s=objTime.s;return s+m*60+h*3600;};var secondsToObj=function secondsToObj(seconds){var h=Math.floor(seconds/3600);seconds-=h*3600;var m=Math.floor(seconds/60);seconds-=m*60;var s=seconds;return{h:h,m:m,s:s};};export var formater={ytToStr:function ytToStr(ytTime){var objTime=ytToObj(ytTime);return objToStr(objTime);},ytToSeconds:function ytToSeconds(ytTime){var objTime=ytToObj(ytTime);return objToSeconds(objTime);},secondsToStr:function secondsToStr(seconds){var objTime=secondsToObj(seconds);return objToStr(objTime);}};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/utils/time/timeFromater.js"],"names":["ytToObj","ytTime","regex","match","groups","h","m","s","parseInt","objToStr","objTime","houre","minute","seconds","objToSeconds","secondsToObj","Math","floor","formater","ytToStr","ytToSeconds","secondsToStr"],"mappings":"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","sourcesContent":["\r\nconst ytToObj = (ytTime) => {\r\n    let regex = /^PT(?:(?<h>\\d+)H)??(?:(?<m>\\d+)M)??(?:(?<s>\\d+)S){1}$/;\r\n    let match = ytTime.match(regex);\r\n    if(!match) return ytTime;\r\n\r\n    let {h = 0 , m = 0 , s =0 } = match.groups;\r\n    return {\r\n        h : parseInt(h), \r\n        m : parseInt(m),\r\n        s : parseInt(s),\r\n    }\r\n}\r\n\r\nconst objToStr = (objTime) => {\r\n    let { h = 0, m = 0, s = 0}  = objTime;\r\n    const houre =  ( h === 0 ) ? \"\" : h + \":\";\r\n    const minute = ( m === 0 ) ? \"0:\" : (m < 10) ?  \"0\" + m + \":\" : m + \":\";\r\n    const seconds = ( s === 0 ) ? \"0\" : (s < 10) ?  \"0\" + s : s;\r\n    \r\n    return houre + minute + seconds;\r\n}\r\n\r\nconst objToSeconds = (objTime) => {\r\n    let {h, m, s} = objTime;\r\n    return (s + m * 60 + h * 3600);\r\n}\r\n\r\nconst secondsToObj = (seconds) => {\r\n    let h = Math.floor(seconds / 3600);\r\n    seconds -= h * 3600;\r\n    let m = Math.floor(seconds / 60);\r\n    seconds -= m * 60;\r\n    let s = seconds;\r\n    return { h, m , s }; \r\n}\r\n\r\nexport const formater = {\r\n    ytToStr : (ytTime) => {\r\n        const objTime = ytToObj(ytTime);\r\n        return objToStr(objTime);\r\n    },\r\n\r\n    ytToSeconds : (ytTime) => {\r\n        const objTime = ytToObj(ytTime)\r\n        return objToSeconds(objTime);\r\n    },\r\n\r\n    secondsToStr : (seconds) => {\r\n        const objTime = secondsToObj(seconds);\r\n        return objToStr(objTime);\r\n    } \r\n}"]},"metadata":{},"sourceType":"module"}