{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordList\\\\Record\\\\WaveSurrferPlayer\\\\WaveSurferPlayer.js\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport WaveSurfer from \"wavesurfer\";\nimport style from \"./wave-surfer-player.scss\";\n\nconst WaveSurferPlayer = ({\n  item: {\n    peaks,\n    id,\n    duration,\n    fileSize\n  },\n  seekHandler,\n  player\n}) => {\n  const [container, setContainerRef] = useState(null);\n  const [ws, setWs] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n  const onContainerRef = useCallback(ref => {\n    setContainerRef(ref);\n  }, [setContainerRef]);\n  useEffect(() => {\n    if (container && !loaded) {\n      const ws = new Promise((res, rej) => {\n        try {\n          const ws = WaveSurfer.create({\n            container: container,\n            barWidth: 2,\n            height: 100,\n            waveColor: style.waveColor,\n            progressColor: style.progressColor,\n            barMinHeight: 0,\n            hideScrollbar: true\n          });\n          res(ws);\n        } catch (err) {\n          rej(err);\n        }\n      });\n      ws.then(ws => {\n        setWs(ws);\n        return ws;\n      });\n      ws.then(ws => {\n        if (peaks) {\n          const width = container === null || container === void 0 ? void 0 : container.getBoundingClientRect().width;\n          console.log(\"width is\", width);\n          console.log(\"number of elements\", peaks.length);\n          const start = 0;\n          const end = width * 4;\n          ws.drawer.drawPeaks(peaks, width, start, end);\n          setLoaded(true);\n        }\n\n        if (seekHandler) {\n          ws.on('seek', progress => {\n            seekHandler({\n              id,\n              progress,\n              duration\n            });\n            ws.drawer.progress(progress);\n          });\n        }\n      });\n    }\n  }, [container, peaks, setWs]);\n  useEffect(() => {\n    if (ws && progress) {\n      ws.drawer.progress(progress);\n    }\n  }, [ws, progress]);\n  const getProgressData = useCallback(() => {\n    return {\n      duration,\n      progress\n    };\n  }, [duration, progress, fileSize]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.addProgressWatcher(id, setProgress);\n  }, [player]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.addProgressProvider(id, getProgressData);\n  }, [progress, player]);\n  return React.createElement(\"div\", {\n    key: \"ws\" + id,\n    className: \"ws-player-container\",\n    ref: onContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  });\n};\n\nexport default WaveSurferPlayer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordList/Record/WaveSurrferPlayer/WaveSurferPlayer.js"],"names":["React","useEffect","useState","useCallback","WaveSurfer","style","WaveSurferPlayer","item","peaks","id","duration","fileSize","seekHandler","player","container","setContainerRef","ws","setWs","progress","setProgress","loaded","setLoaded","onContainerRef","ref","Promise","res","rej","create","barWidth","height","waveColor","progressColor","barMinHeight","hideScrollbar","err","then","width","getBoundingClientRect","console","log","length","start","end","drawer","drawPeaks","on","getProgressData","addProgressWatcher","addProgressProvider"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport style from \"./wave-surfer-player.scss\";\r\n\r\nconst WaveSurferPlayer = ({item : {peaks, id, duration, fileSize}, seekHandler , player}) => {\r\n    const [container, setContainerRef] = useState(null);\r\n    const [ws, setWs] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const onContainerRef = useCallback( (ref) => {\r\n        setContainerRef(ref);\r\n    }, [setContainerRef])\r\n\r\n    useEffect(()=>{\r\n        if(container && !loaded){\r\n            const ws = new Promise((res, rej)=>{\r\n                try{\r\n                    const ws = WaveSurfer.create({\r\n                        container: container,\r\n                        barWidth: 2,\r\n                        height: 100,\r\n                        waveColor: style.waveColor,\r\n                        progressColor: style.progressColor,\r\n                        barMinHeight: 0,\r\n                        hideScrollbar: true,\r\n                    })\r\n                    res(ws)\r\n                } catch (err){\r\n                    rej(err)\r\n                }\r\n            })\r\n            ws.then( ws => {\r\n                setWs(ws);\r\n                return ws;\r\n            })\r\n\r\n            ws.then((ws) =>{\r\n                if(peaks){\r\n                    const width = container?.getBoundingClientRect().width;\r\n                    console.log(\"width is\", width)\r\n                    console.log(\"number of elements\", peaks.length)\r\n                    const start = 0;\r\n                    const end = width * 4 ;\r\n                    ws.drawer.drawPeaks(peaks, width, start, end);\r\n                    setLoaded(true)\r\n                }\r\n                if(seekHandler){\r\n                    ws.on('seek', (progress)=>{\r\n                        seekHandler({\r\n                            id, \r\n                            progress,\r\n                            duration,\r\n                        })\r\n                        ws.drawer.progress(progress);\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [container, peaks, setWs ])\r\n\r\n    useEffect(()=>{\r\n        if(ws && progress){\r\n            ws.drawer.progress(progress);\r\n        }\r\n    },[ws, progress])\r\n\r\n    const getProgressData = useCallback(()=>{\r\n        return {\r\n            duration,\r\n            progress,\r\n        }\r\n    }, [duration, progress, fileSize])\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.addProgressWatcher(id, setProgress)\r\n    }, [player])\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.addProgressProvider(id, getProgressData);\r\n    }, [progress, player])\r\n\r\n    return (\r\n        <div key={\"ws\"+id} className=\"ws-player-container\" ref={onContainerRef}/>\r\n    )\r\n}\r\n\r\nexport default WaveSurferPlayer"]},"metadata":{},"sourceType":"module"}