{"ast":null,"code":"import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import store from\"./../../../../../store/\";import ChannelBuilder from\"./channelBuilder/channelBuilder\";import Synchronizer from\"./sync/synchronizer\";import{getApi}from\"./../../../../../apis/apiProvider\";import{setCuePoint,setChannelReady,setLoop}from\"./../../../../../actions\";import Looper from\"./looper/looper\";var Channels=/*#__PURE__*/function(){function Channels(){_classCallCheck(this,Channels);this.channelBuilder=new ChannelBuilder();this.synchronizer=new Synchronizer(this);this.looper=new Looper();this.dispatch=store.dispatch;this.channels={A:null,B:null};this.stdDivceDiff={};}_createClass(Channels,[{key:\"getChannelNames\",value:function getChannelNames(){return Object.keys(this.channels);}},{key:\"createChannel\",value:function createChannel(channelName){var _this$channelBuilder;for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}this.channels[channelName]=(_this$channelBuilder=this.channelBuilder).create.apply(_this$channelBuilder,[channelName].concat(args));}},{key:\"createBars\",value:function createBars(channelName,values){this.channelBuilder.createBars(this.getFullChannel(channelName),values);}},{key:\"getChannel\",value:function getChannel(channelName){return this.channels[channelName].master;}},{key:\"getFullChannel\",value:function getFullChannel(channelName){return this.channels[channelName];}},{key:\"getChannelInterface\",value:function getChannelInterface(channelName){var _this=this;return{getSyncBarPosition:function getSyncBarPosition(){return _this.synchronizer.getSyncBarPostion.call(_this.synchronizer,channelName);}};}//--------------------------------------------\n},{key:\"loadTrack\",value:function loadTrack(channelName,track){if(!track||!track.source||!track.sourceId)return;var api=getApi(track.source);var url=api&&api.getUrl(track.sourceId)||null;this.dispatch(setChannelReady(false,channelName));var channel=this.getChannel(channelName);if(channel.loadWithEvent){channel.loadWithEvent(url);}else{channel.load(url);}}},{key:\"togglePlay\",value:function togglePlay(channelName,currentValue){if(currentValue){this.getChannel(channelName).pause();this.dispatch(setLoop(channelName,false));}else{this.getChannel(channelName).play();}}},{key:\"toggleCue\",value:function toggleCue(channelName,currentValue){var player=this.getChannel(channelName);var isPaused=store.getState().console.channel[channelName].playBackState.paused;if(!currentValue&&isPaused){// back to cue point and pause\nvar cuePoint=store.getState().console.channel[channelName].playBackState.cuePoint;//in seconds\n//seek to\nplayer.pause();player.backend.seekTo(cuePoint);player.drawer.progress(cuePoint/player.getDuration());player.drawer.recenter(cuePoint/player.getDuration());}else if(!currentValue){//Cancel cue and play\nif(!player.isPlaying()){player.play();}}else{var _cuePoint=this.getChannel(channelName).getCurrentTime();this.getChannel(channelName).play();this.dispatch(setCuePoint(channelName,_cuePoint));// in float seconds\n}}},{key:\"adjustPitch\",value:function adjustPitch(channelName,currentValue){var waveSurfer=this.getChannel(channelName);waveSurfer.setPlaybackRate(1+currentValue/100);waveSurfer.fireEvent(\"interaction\");/*\r\n    if(channel?.backend?.source instanceof AudioBufferSourceNode){\r\n        const rate = 1 + currentValue / 100\r\n        channel.backend.source.playbackRate.value = rate; \r\n        channel.backend.playbackRate = rate;\r\n    }*/}},{key:\"sync\",value:function sync(channelName){this.synchronizer.sync(channelName);}},{key:\"makeLoop\",value:function makeLoop(channelName,_ref){var loopLength=_ref.loopLength;try{this.looper.makeLoop(this.getFullChannel(channelName),loopLength);}catch(_unused){this.dispatch(setLoop(channelName,false));}}},{key:\"endLoop\",value:function endLoop(channelName){this.looper.endLoop(this.getFullChannel(channelName));}},{key:\"updateLoop\",value:function updateLoop(channelName,_ref2){var loopLength=_ref2.loopLength;this.looper.updateLoop(this.getFullChannel(channelName),loopLength);}}]);return Channels;}();export{Channels as default};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/channels/channels.js"],"names":["store","ChannelBuilder","Synchronizer","getApi","setCuePoint","setChannelReady","setLoop","Looper","Channels","channelBuilder","synchronizer","looper","dispatch","channels","A","B","stdDivceDiff","Object","keys","channelName","args","create","values","createBars","getFullChannel","master","getSyncBarPosition","getSyncBarPostion","call","track","source","sourceId","api","url","getUrl","channel","getChannel","loadWithEvent","load","currentValue","pause","play","player","isPaused","getState","console","playBackState","paused","cuePoint","backend","seekTo","drawer","progress","getDuration","recenter","isPlaying","getCurrentTime","waveSurfer","setPlaybackRate","fireEvent","sync","loopLength","makeLoop","endLoop","updateLoop"],"mappings":"kOAAA,MAAOA,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,OAAQC,MAAR,KAAqB,mCAArB,CACA,OAAQC,WAAR,CACQC,eADR,CAEQC,OAFR,KAGa,0BAHb,CAIA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,C,GAGqBC,CAAAA,Q,yBACnB,mBAAc,gCACZ,KAAKC,cAAL,CAAsB,GAAIR,CAAAA,cAAJ,EAAtB,CACA,KAAKS,YAAL,CAAoB,GAAIR,CAAAA,YAAJ,CAAiB,IAAjB,CAApB,CACA,KAAKS,MAAL,CAAc,GAAIJ,CAAAA,MAAJ,EAAd,CACA,KAAKK,QAAL,CAAgBZ,KAAK,CAACY,QAAtB,CACA,KAAKC,QAAL,CAAgB,CACdC,CAAC,CAAE,IADW,CAEdC,CAAC,CAAE,IAFW,CAAhB,CAKA,KAAKC,YAAL,CAAoB,EAApB,CACD,C,8EAEiB,CAChB,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAY,KAAKL,QAAjB,CAAP,CACD,C,oDAEcM,W,CAAsB,wDAANC,IAAM,qDAANA,IAAM,0BACjC,KAAKP,QAAL,CAAcM,WAAd,EAA6B,2BAAKV,cAAL,EAAoBY,MAApB,6BAA4BF,WAA5B,SAA4CC,IAA5C,EAA7B,CACH,C,8CAEWD,W,CAAaG,M,CAAQ,CAC/B,KAAKb,cAAL,CAAoBc,UAApB,CAAgC,KAAKC,cAAL,CAAoBL,WAApB,CAAhC,CAAkEG,MAAlE,EACD,C,8CAEUH,W,CAAa,CACtB,MAAO,MAAKN,QAAL,CAAcM,WAAd,EAA2BM,MAAlC,CACD,C,sDAEcN,W,CAAY,CACzB,MAAO,MAAKN,QAAL,CAAcM,WAAd,CAAP,CACD,C,gEAEmBA,W,CAAa,gBAC/B,MAAO,CACLO,kBAAkB,CAAE,oCAClB,CAAA,KAAI,CAAChB,YAAL,CAAkBiB,iBAAlB,CAAoCC,IAApC,CAAyC,KAAI,CAAClB,YAA9C,CAA2DS,WAA3D,CADkB,EADf,CAAP,CAID,CAED;4CAEUA,W,CAAaU,K,CAAO,CAC5B,GAAG,CAACA,KAAD,EAAU,CAACA,KAAK,CAACC,MAAjB,EAA2B,CAACD,KAAK,CAACE,QAArC,CAA+C,OAE/C,GAAIC,CAAAA,GAAG,CAAG7B,MAAM,CAAC0B,KAAK,CAACC,MAAP,CAAhB,CACA,GAAIG,CAAAA,GAAG,CAAID,GAAG,EAAIA,GAAG,CAACE,MAAJ,CAAWL,KAAK,CAACE,QAAjB,CAAR,EAAuC,IAAjD,CAEA,KAAKnB,QAAL,CAAcP,eAAe,CAAC,KAAD,CAAQc,WAAR,CAA7B,EAEA,GAAIgB,CAAAA,OAAO,CAAG,KAAKC,UAAL,CAAgBjB,WAAhB,CAAd,CAEA,GAAIgB,OAAO,CAACE,aAAZ,CAA2B,CACzBF,OAAO,CAACE,aAAR,CAAsBJ,GAAtB,EACD,CAFD,IAEO,CACLE,OAAO,CAACG,IAAR,CAAaL,GAAb,EACD,CACF,C,8CAEUd,W,CAAaoB,Y,CAAc,CACpC,GAAIA,YAAJ,CAAkB,CAChB,KAAKH,UAAL,CAAgBjB,WAAhB,EAA6BqB,KAA7B,GACA,KAAK5B,QAAL,CAAcN,OAAO,CAACa,WAAD,CAAc,KAAd,CAArB,EACD,CAHD,IAGO,CACL,KAAKiB,UAAL,CAAgBjB,WAAhB,EAA6BsB,IAA7B,GACD,CACF,C,4CAEStB,W,CAAaoB,Y,CAAc,CACnC,GAAMG,CAAAA,MAAM,CAAG,KAAKN,UAAL,CAAgBjB,WAAhB,CAAf,CACA,GAAMwB,CAAAA,QAAQ,CAAG3C,KAAK,CAAC4C,QAAN,GAAiBC,OAAjB,CAAyBV,OAAzB,CAAiChB,WAAjC,EACA2B,aADA,CACcC,MAD/B,CAEA,GAAI,CAACR,YAAD,EAAiBI,QAArB,CAA+B,CAC7B;AACA,GAAIK,CAAAA,QAAQ,CAAGhD,KAAK,CAAC4C,QAAN,GAAiBC,OAAjB,CAAyBV,OAAzB,CAAiChB,WAAjC,EACA2B,aADA,CACcE,QAD7B,CACuC;AACvC;AACAN,MAAM,CAACF,KAAP,GACAE,MAAM,CAACO,OAAP,CAAeC,MAAf,CAAsBF,QAAtB,EACAN,MAAM,CAACS,MAAP,CAAcC,QAAd,CAAuBJ,QAAQ,CAAGN,MAAM,CAACW,WAAP,EAAlC,EACAX,MAAM,CAACS,MAAP,CAAcG,QAAd,CAAuBN,QAAQ,CAAGN,MAAM,CAACW,WAAP,EAAlC,EACD,CATD,IASO,IAAI,CAACd,YAAL,CAAmB,CACxB;AACA,GAAI,CAACG,MAAM,CAACa,SAAP,EAAL,CAAyB,CACvBb,MAAM,CAACD,IAAP,GACD,CACF,CALM,IAKA,CACL,GAAMO,CAAAA,SAAQ,CAAG,KAAKZ,UAAL,CAAgBjB,WAAhB,EAA6BqC,cAA7B,EAAjB,CACA,KAAKpB,UAAL,CAAgBjB,WAAhB,EAA6BsB,IAA7B,GACA,KAAK7B,QAAL,CAAcR,WAAW,CAACe,WAAD,CAAc6B,SAAd,CAAzB,EAAmD;AACpD,CACF,C,gDAEW7B,W,CAAaoB,Y,CAAc,CACrC,GAAIkB,CAAAA,UAAU,CAAE,KAAKrB,UAAL,CAAgBjB,WAAhB,CAAhB,CACAsC,UAAU,CAACC,eAAX,CAA2B,EAAInB,YAAY,CAAG,GAA9C,EACAkB,UAAU,CAACE,SAAX,CAAqB,aAArB,EAEA;;;;;OAMD,C,kCAEIxC,W,CAAY,CACf,KAAKT,YAAL,CAAkBkD,IAAlB,CAAuBzC,WAAvB,EACD,C,0CAEQA,W,MAA0B,IAAZ0C,CAAAA,UAAY,MAAZA,UAAY,CACjC,GAAG,CACD,KAAKlD,MAAL,CAAYmD,QAAZ,CAAqB,KAAKtC,cAAL,CAAoBL,WAApB,CAArB,CAAuD0C,UAAvD,EACD,CACD,cAAK,CACH,KAAKjD,QAAL,CAAcN,OAAO,CAACa,WAAD,CAAc,KAAd,CAArB,EACD,CACF,C,wCAEOA,W,CAAY,CAClB,KAAKR,MAAL,CAAYoD,OAAZ,CAAoB,KAAKvC,cAAL,CAAoBL,WAApB,CAApB,EACD,C,8CAEUA,W,OAA0B,IAAZ0C,CAAAA,UAAY,OAAZA,UAAY,CACnC,KAAKlD,MAAL,CAAYqD,UAAZ,CAAuB,KAAKxC,cAAL,CAAoBL,WAApB,CAAvB,CAAyD0C,UAAzD,EACD,C,+BA9HkBrD,Q","sourcesContent":["import store from \"./../../../../../store/\";\r\nimport ChannelBuilder from \"./channelBuilder/channelBuilder\";\r\nimport Synchronizer from \"./sync/synchronizer\";\r\nimport {getApi} from \"./../../../../../apis/apiProvider\";\r\nimport {setCuePoint, \r\n        setChannelReady, \r\n        setLoop,\r\n      } from \"./../../../../../actions\";\r\nimport Looper from \"./looper/looper\";\r\n\r\n\r\nexport default class Channels {\r\n  constructor() {\r\n    this.channelBuilder = new ChannelBuilder();\r\n    this.synchronizer = new Synchronizer(this);\r\n    this.looper = new Looper();\r\n    this.dispatch = store.dispatch;\r\n    this.channels = {\r\n      A: null,\r\n      B: null\r\n    };\r\n\r\n    this.stdDivceDiff = {};\r\n  }\r\n\r\n  getChannelNames() {\r\n    return Object.keys(this.channels);\r\n  }\r\n\r\n  createChannel( channelName, ...args ){\r\n      this.channels[channelName] = this.channelBuilder.create( channelName, ...args);\r\n  }\r\n\r\n  createBars( channelName, values ){\r\n    this.channelBuilder.createBars( this.getFullChannel(channelName), values);\r\n  }\r\n\r\n  getChannel(channelName) {\r\n    return this.channels[channelName].master;\r\n  }\r\n\r\n  getFullChannel(channelName){\r\n    return this.channels[channelName];\r\n  }\r\n\r\n  getChannelInterface(channelName) {\r\n    return {\r\n      getSyncBarPosition: () => \r\n        this.synchronizer.getSyncBarPostion.call(this.synchronizer,channelName)\r\n    };\r\n  }\r\n\r\n  //--------------------------------------------\r\n\r\n  loadTrack(channelName, track) {\r\n    if(!track || !track.source || !track.sourceId) return;\r\n\r\n    let api = getApi(track.source);\r\n    let url = (api && api.getUrl(track.sourceId)) || null;\r\n\r\n    this.dispatch(setChannelReady(false, channelName));\r\n\r\n    let channel = this.getChannel(channelName);\r\n\r\n    if (channel.loadWithEvent) {\r\n      channel.loadWithEvent(url);\r\n    } else {\r\n      channel.load(url);\r\n    }\r\n  }\r\n\r\n  togglePlay(channelName, currentValue) {\r\n    if (currentValue) {\r\n      this.getChannel(channelName).pause();\r\n      this.dispatch(setLoop(channelName, false))\r\n    } else {\r\n      this.getChannel(channelName).play();\r\n    }\r\n  }\r\n\r\n  toggleCue(channelName, currentValue) {\r\n    const player = this.getChannel(channelName);\r\n    const isPaused = store.getState().console.channel[channelName]\r\n                    .playBackState.paused;\r\n    if (!currentValue && isPaused) {\r\n      // back to cue point and pause\r\n      let cuePoint = store.getState().console.channel[channelName]\r\n                    .playBackState.cuePoint; //in seconds\r\n      //seek to\r\n      player.pause();\r\n      player.backend.seekTo(cuePoint);\r\n      player.drawer.progress(cuePoint / player.getDuration());\r\n      player.drawer.recenter(cuePoint / player.getDuration());\r\n    } else if (!currentValue) {\r\n      //Cancel cue and play\r\n      if (!player.isPlaying()) {\r\n        player.play();\r\n      }\r\n    } else {\r\n      const cuePoint = this.getChannel(channelName).getCurrentTime();\r\n      this.getChannel(channelName).play();\r\n      this.dispatch(setCuePoint(channelName, cuePoint)); // in float seconds\r\n    }\r\n  }\r\n\r\n  adjustPitch(channelName, currentValue) {\r\n    let waveSurfer= this.getChannel(channelName); \r\n    waveSurfer.setPlaybackRate(1 + currentValue / 100);\r\n    waveSurfer.fireEvent(\"interaction\");\r\n\r\n    /*\r\n    if(channel?.backend?.source instanceof AudioBufferSourceNode){\r\n        const rate = 1 + currentValue / 100\r\n        channel.backend.source.playbackRate.value = rate; \r\n        channel.backend.playbackRate = rate;\r\n    }*/\r\n  }\r\n\r\n  sync(channelName){\r\n    this.synchronizer.sync(channelName);\r\n  }\r\n\r\n  makeLoop(channelName, {loopLength}){\r\n    try{\r\n      this.looper.makeLoop(this.getFullChannel(channelName), loopLength)\r\n    }\r\n    catch{\r\n      this.dispatch(setLoop(channelName, false))\r\n    }\r\n  }\r\n\r\n  endLoop(channelName){\r\n    this.looper.endLoop(this.getFullChannel(channelName));\r\n  }\r\n\r\n  updateLoop(channelName, {loopLength}){\r\n    this.looper.updateLoop(this.getFullChannel(channelName), loopLength);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}