{"ast":null,"code":"import * as graphQlQueries from \"./qlQueries\";\nconst url = process.env.REACT_APP_USER_ASSETS_API;\nexport async function callQuery(query, token, variables) {\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      query: query,\n      variables: variables\n    })\n  });\n  let json = await response.json();\n  return json;\n}\nexport default {\n  callQuery,\n  queries: graphQlQueries\n};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/apis/userAssets/userApi.js"],"names":["graphQlQueries","url","process","env","REACT_APP_USER_ASSETS_API","callQuery","query","token","variables","response","fetch","method","headers","Authorization","body","JSON","stringify","json","queries"],"mappings":"AAAA,OAAO,KAAKA,cAAZ,MAAgC,aAAhC;AAGA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAAxB;AAEA,OAAO,eAAeC,SAAf,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkD;AACrD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAC9BU,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASN,KAAM,EAD1B;AAEL,sBAAgB,kBAFX;AAGL,gBAAU;AAHL,KAFqB;AAQ9BO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBV,MAAAA,KAAK,EAAEA,KADU;AAEjBE,MAAAA,SAAS,EAAEA;AAFM,KAAf;AARwB,GAAN,CAA5B;AAaA,MAAIS,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAT,EAAjB;AACA,SAAOA,IAAP;AACH;AAED,eAAe;AACXZ,EAAAA,SADW;AAEXa,EAAAA,OAAO,EAAElB;AAFE,CAAf","sourcesContent":["import * as graphQlQueries from \"./qlQueries\";\r\n\r\n\r\nconst url = process.env.REACT_APP_USER_ASSETS_API;\r\n\r\nexport async function callQuery(query, token, variables) {\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n\r\n        },\r\n        body: JSON.stringify({\r\n            query: query,\r\n            variables: variables\r\n        }),\r\n    })\r\n    let json = await response.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    callQuery,\r\n    queries: graphQlQueries\r\n}"]},"metadata":{},"sourceType":"module"}