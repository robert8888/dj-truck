{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Record\\\\Created\\\\Created.js\";\nimport React, { useMemo } from 'react';\nimport { toDate, formatRelative } from \"date-fns\";\nimport * as locales from 'date-fns/locale';\nimport \"./created.scss\";\n\nconst Created = ({\n  date: timestamp\n}) => {\n  console.log(locales);\n  const dateFormated = useMemo(() => {\n    const timeZoneOffset = new Date().getTimezoneOffset();\n\n    function getLang() {\n      if (navigator.languages != undefined) return navigator.languages[0];else return navigator.language;\n    }\n\n    return formatRelative(toDate(timestamp - timeZoneOffset * 1000), new Date() // {\n    //     locale: eo //locales(getLang())//new Intl.Locale(getLang())\n    // }\n    );\n  }, [timestamp]);\n  return React.createElement(\"div\", {\n    className: \"record-created\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, dateFormated));\n};\n\nexport default Created;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Record/Created/Created.js"],"names":["React","useMemo","toDate","formatRelative","locales","Created","date","timestamp","console","log","dateFormated","timeZoneOffset","Date","getTimezoneOffset","getLang","navigator","languages","undefined","language"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,UAAvC;AACA,OAAQ,KAAKC,OAAb,MAA0B,iBAA1B;AACA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAEC;AAAR,CAAD,KAAyB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,QAAMM,YAAY,GAAGT,OAAO,CAAC,MAAM;AAC/B,UAAMU,cAAc,GAAG,IAAIC,IAAJ,GAAWC,iBAAX,EAAvB;;AACA,aAASC,OAAT,GAAmB;AACf,UAAIC,SAAS,CAACC,SAAV,IAAuBC,SAA3B,EACI,OAAOF,SAAS,CAACC,SAAV,CAAoB,CAApB,CAAP,CADJ,KAGI,OAAOD,SAAS,CAACG,QAAjB;AACP;;AACD,WAAOf,cAAc,CACjBD,MAAM,CAACK,SAAS,GAAII,cAAc,GAAG,IAA/B,CADW,EAEjB,IAAIC,IAAJ,EAFiB,CAGjB;AACA;AACA;AALiB,KAArB;AAOH,GAf2B,EAezB,CAACL,SAAD,CAfyB,CAA5B;AAgBA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,YAAP,CADJ,CADJ;AAKH,CAxBD;;AA2BA,eAAeL,OAAf","sourcesContent":["import React, { useMemo } from 'react';\r\nimport { toDate, formatRelative } from \"date-fns\";\r\nimport  * as locales from 'date-fns/locale';\r\nimport \"./created.scss\"\r\n\r\nconst Created = ({ date: timestamp }) => {\r\n    console.log(locales)\r\n\r\n    const dateFormated = useMemo(() => {\r\n        const timeZoneOffset = new Date().getTimezoneOffset();\r\n        function getLang() {\r\n            if (navigator.languages != undefined)\r\n                return navigator.languages[0];\r\n            else\r\n                return navigator.language;\r\n        }\r\n        return formatRelative(\r\n            toDate(timestamp - (timeZoneOffset * 1000)),\r\n            new Date(),\r\n            // {\r\n            //     locale: eo //locales(getLang())//new Intl.Locale(getLang())\r\n            // }\r\n        )\r\n    }, [timestamp])\r\n    return (\r\n        <div className=\"record-created\">\r\n            <span>{dateFormated}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Created;"]},"metadata":{},"sourceType":"module"}