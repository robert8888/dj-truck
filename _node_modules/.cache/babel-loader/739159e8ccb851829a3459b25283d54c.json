{"ast":null,"code":"import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import WaveSurfer from\"wavesurfer\";import store from\"./../../../../../../store\";import{getBeatLength}from\"./../../../../../../utils/bpm/converter\";import ChannelEvnetHandler from\"./../channelEvnetHandler/channelEvnetHandler\";import config from\"./configuration\";var ChannelBuilder=/*#__PURE__*/function(){function ChannelBuilder(){_classCallCheck(this,ChannelBuilder);this.eventHandler=new ChannelEvnetHandler();this.dispatch=store.dispatch;}_createClass(ChannelBuilder,[{key:\"create\",value:function create(channelName,masterContainer,slaveContainer,mainAudioContext){var channel={channelName:channelName,masterContainer:masterContainer,slaveContainer:slaveContainer};//--configs\nchannel.masterConfig=config.master(masterContainer,channelName);channel.slaveConfig=config.slave(slaveContainer,channelName);//--master waveSurfer obj\nchannel.masterConfig.audioContext=mainAudioContext;channel.master=WaveSurfer.create(channel.masterConfig);// addAnimationFrame(channel.master);\nchannel.master.__proto__.loadWithEvent=function(){this.fireEvent(\"load\");this.load.apply(this,arguments);};channel.slave=WaveSurfer.create(channel.slaveConfig);// addAnimationFrame(channel.slave);\nthis.eventHandler.CreateEventHandling(channel);return channel;}},{key:\"createBars\",value:function createBars(channel,_ref){var bpm=_ref.bpm,offset=_ref.offset;var wrapper=channel.master.drawer.wrapper;var styleApply=WaveSurfer.Drawer.style;var minPxPerSec=channel.master.params.minPxPerSec;var bitLength=getBeatLength(bpm);var barPostions=[];for(var i=offset;i<channel.master.getDuration();i+=bitLength){barPostions.push(i);}var barStyle=function barStyle(position){return{position:\"absolute\",left:position+\"px\",top:\"0px\",width:\"1px\",maxWidth:\"1px\",height:\"100%\",background:\"rgba(255,255,255, 0.5)\"};};var containerStyle={position:'absolute',lef:'0',top:'0',width:'100%',height:'100%',zIndex:\"3\"};var container=document.createElement('div');styleApply(container,containerStyle);channel.barsElements=[];barPostions.forEach(function(position){var bar=document.createElement(\"div\");var style=barStyle(minPxPerSec*position);styleApply(bar,style);container.appendChild(bar);channel.barsElements.push(bar);});wrapper.appendChild(container);}}]);return ChannelBuilder;}();export{ChannelBuilder as default};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/channels/channelBuilder/channelBuilder.js"],"names":["WaveSurfer","store","getBeatLength","ChannelEvnetHandler","config","ChannelBuilder","eventHandler","dispatch","channelName","masterContainer","slaveContainer","mainAudioContext","channel","masterConfig","master","slaveConfig","slave","audioContext","create","__proto__","loadWithEvent","fireEvent","load","CreateEventHandling","bpm","offset","wrapper","drawer","styleApply","Drawer","style","minPxPerSec","params","bitLength","barPostions","i","getDuration","push","barStyle","position","left","top","width","maxWidth","height","background","containerStyle","lef","zIndex","container","document","createElement","barsElements","forEach","bar","appendChild"],"mappings":"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","sourcesContent":["import WaveSurfer from \"wavesurfer\";\r\nimport store from \"./../../../../../../store\";\r\nimport { getBeatLength } from \"./../../../../../../utils/bpm/converter\";\r\nimport ChannelEvnetHandler from \"./../channelEvnetHandler/channelEvnetHandler\";\r\nimport config from \"./configuration\";\r\n\r\n\r\n\r\nexport default class ChannelBuilder {\r\n  constructor() {\r\n    this.eventHandler = new ChannelEvnetHandler();\r\n    this.dispatch = store.dispatch;\r\n  }\r\n\r\n  create(channelName, masterContainer, slaveContainer, mainAudioContext) {\r\n    let channel = { channelName, masterContainer, slaveContainer };\r\n\r\n    //--configs\r\n    channel.masterConfig = config.master(masterContainer, channelName);\r\n    channel.slaveConfig = config.slave(slaveContainer, channelName);\r\n\r\n    //--master waveSurfer obj\r\n    channel.masterConfig.audioContext = mainAudioContext;\r\n    channel.master = WaveSurfer.create(channel.masterConfig);\r\n\r\n    // addAnimationFrame(channel.master);\r\n\r\n    channel.master.__proto__.loadWithEvent = function (...args) {\r\n      this.fireEvent(\"load\");\r\n      this.load(...args);\r\n    };\r\n\r\n    channel.slave = WaveSurfer.create(channel.slaveConfig);\r\n    // addAnimationFrame(channel.slave);\r\n\r\n    this.eventHandler.CreateEventHandling(channel)\r\n\r\n    return channel;\r\n  }\r\n\r\n  createBars(channel, { bpm, offset }) {\r\n\r\n    let wrapper = channel.master.drawer.wrapper;\r\n    let styleApply = WaveSurfer.Drawer.style;\r\n    let minPxPerSec = channel.master.params.minPxPerSec;\r\n    let bitLength = getBeatLength(bpm);\r\n\r\n    let barPostions = [];\r\n\r\n    for (let i = offset; i < channel.master.getDuration(); i += bitLength) {\r\n      barPostions.push(i);\r\n    }\r\n\r\n    let barStyle = position => ({\r\n      position: \"absolute\",\r\n      left: position + \"px\",\r\n      top: \"0px\",\r\n      width: \"1px\",\r\n      maxWidth: \"1px\",\r\n      height: \"100%\",\r\n      background: \"rgba(255,255,255, 0.5)\"\r\n    });\r\n\r\n    let containerStyle = {\r\n      position: 'absolute',\r\n      lef: '0',\r\n      top: '0',\r\n      width: '100%',\r\n      height: '100%',\r\n      zIndex: \"3\",\r\n    }\r\n    let container = document.createElement('div');\r\n    styleApply(container, containerStyle);\r\n\r\n    channel.barsElements = [];\r\n    barPostions.forEach(position => {\r\n      let bar = document.createElement(\"div\");\r\n      let style = barStyle(minPxPerSec * position);\r\n      styleApply(bar, style);\r\n      container.appendChild(bar);\r\n      channel.barsElements.push(bar);\r\n    });\r\n\r\n    wrapper.appendChild(container);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}