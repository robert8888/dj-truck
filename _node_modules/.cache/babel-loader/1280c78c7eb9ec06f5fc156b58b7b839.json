{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\console\\\\components\\\\Console\\\\Mixer\\\\Master\\\\Master.js\";\nimport React, { useMemo, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./master.scss\";\nimport Console from \"./../../../../core/console/console\";\nimport GainKnob from \"./../componets/GainKnob/GainKnob\";\nimport PeakLevelMeterH from \"../componets/PeakLevelMeter/PeakLevelMeterH\";\nimport ThresholdKnob from \"../componets/ThresholdKnob/ThresholdKnob\";\nimport RatioKnob from \"../componets/RatioKnob/RatioKnob\";\nimport AttackKnob from \"../componets/AttackKnob/AttackKnob\";\nimport ReleaseKnob from \"../componets/ReleaseKnob/ReleaseKnob\";\nimport { setPreGain, setPostGain, setThreshold, setRatio, setAttack, setRelease } from \"../../../../../../actions\";\n\nconst Mastering = props => {\n  const [_interface, setInterface] = useState();\n  const mixerInterface = useMemo(() => {\n    return _interface;\n  }, [_interface]);\n  useEffect(() => {\n    Console.Get().getMixerMasterInterface().getPrePeakMeter;\n  }, [setInterface]);\n  return React.createElement(\"div\", {\n    className: \"mastering\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"COM\"), React.createElement(GainKnob, {\n    onChange: props.setPreGain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(PeakLevelMeterH, {\n    mastering: true,\n    active: true,\n    interface: mixerInterface,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(ThresholdKnob, {\n    onChange: props.setThreshold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(RatioKnob, {\n    onChange: props.setRatio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(AttackKnob, {\n    onChange: props.setAttack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(ReleaseKnob, {\n    onChange: props.setRelease,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(GainKnob, {\n    onChange: props.setPostGain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(PeakLevelMeterH, {\n    active: true,\n    interface: mixerInterface,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setPreGain: value => dispatch(setPreGain(value)),\n  setPostGain: value => dispatch(setPostGain(value)),\n  setThreshold: value => dispatch(setThreshold(value)),\n  setRatio: value => dispatch(setRatio(value)),\n  setAttack: value => dispatch(setAttack(value)),\n  setRelease: value => dispatch(setRelease(value))\n});\n\nexport default connect(null, mapDispatchToProps)(Mastering);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Mixer/Master/Master.js"],"names":["React","useMemo","useEffect","useState","connect","Console","GainKnob","PeakLevelMeterH","ThresholdKnob","RatioKnob","AttackKnob","ReleaseKnob","setPreGain","setPostGain","setThreshold","setRatio","setAttack","setRelease","Mastering","props","_interface","setInterface","mixerInterface","Get","getMixerMasterInterface","getPrePeakMeter","mapDispatchToProps","dispatch","value"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect, useState } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./master.scss\";\r\nimport Console from \"./../../../../core/console/console\";\r\nimport GainKnob from \"./../componets/GainKnob/GainKnob\";\r\nimport PeakLevelMeterH from \"../componets/PeakLevelMeter/PeakLevelMeterH\";\r\nimport ThresholdKnob from \"../componets/ThresholdKnob/ThresholdKnob\";\r\nimport RatioKnob from \"../componets/RatioKnob/RatioKnob\";\r\nimport AttackKnob from \"../componets/AttackKnob/AttackKnob\";\r\nimport ReleaseKnob from \"../componets/ReleaseKnob/ReleaseKnob\";\r\nimport { \r\n        setPreGain,\r\n        setPostGain,\r\n        setThreshold,\r\n        setRatio,\r\n        setAttack,\r\n        setRelease \r\n    } from \"../../../../../../actions\";\r\n\r\nconst Mastering = props => {\r\n    const [_interface, setInterface] = useState();\r\n    \r\n    const mixerInterface = useMemo(() => {\r\n        return _interface;\r\n    }, [_interface])\r\n\r\n    useEffect(() => {\r\n        Console.Get().getMixerMasterInterface().getPrePeakMeter\r\n    }, [setInterface])\r\n\r\n    return (\r\n        <div className=\"mastering\">\r\n            <div className=\"label\">COM</div>\r\n            <GainKnob onChange={ props.setPreGain}/>\r\n            <PeakLevelMeterH\r\n                mastering \r\n                active={true}\r\n                interface={mixerInterface} />\r\n            <ThresholdKnob onChange={props.setThreshold}/>\r\n            <RatioKnob onChange={props.setRatio}/>\r\n            <AttackKnob onChange={props.setAttack}/>\r\n            <ReleaseKnob onChange={props.setRelease}/>\r\n            <GainKnob onChange={props.setPostGain}/>\r\n            <PeakLevelMeterH \r\n               active={true}\r\n               interface={ mixerInterface}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    setPreGain : value => dispatch(setPreGain(value)),\r\n    setPostGain : value => dispatch(setPostGain(value)),\r\n    \r\n    setThreshold : value => dispatch(setThreshold(value)),\r\n    setRatio : value => dispatch(setRatio(value)),\r\n    setAttack : value => dispatch(setAttack(value)),\r\n    setRelease : value => dispatch(setRelease(value)),\r\n    \r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Mastering);"]},"metadata":{},"sourceType":"module"}