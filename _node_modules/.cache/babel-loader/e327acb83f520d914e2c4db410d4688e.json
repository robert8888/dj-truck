{"ast":null,"code":"// ---------- PlayList---------------------\nvar ACTIONS={PL_ROOT_REQUEST:\"Call to api for root dir content\",PL_LOAD_DIR_REQUEST:\"call to api for dir conent\",PL_PUSH_DIR_CONTENT:\"Push  director contetn loaded  from api\",PL_CREATE_DIR_REQEST:\"Call to api and create dir\",PL_CREATE_DIR:\"Create dir in current\",PL_TOGGLE_DIR_REQUEST:\"If is not loade load and then open\",PL_TOGGLE_DIR:\"Open if is closed an vice versa by path\",PL_CREATE_PLAYLIST_REQUEST:\"Call to api to create playlist in current selected dir of name\",PL_CREATE_PLAYLIST:\"Create play list in current selected dir of name\",PL_LOAD_PLAYLIST_REQUEST:\"Call to api to get current playlist content\",PL_OPEN_CURRENT_PLAY_LIST:\"Open/explore current play list\",PL_SET_PLAYLIST_CONTENT:\"Settinng content of current playlist from api\",PL_RESET_CURRENT_PLAYLIST_CONTETN:\"Resetting playlist content after changing position from unsuccess dragging\",PL_SET_SELECTION:\"Set current selected dir and playlist if is selected playlist\",PL_RENAME_SELECTED_REQUEST:\"Call to api to rename current selected\",PL_RENAME_SELECTED:\"Rename current selected element\",PL_MOVE_TO_REQUEST:\"Call to api and move element from pathFrom to pathTo\",PL_MOVE_TO:\"Move element of pathFrom to pathTo (from drag and drop)\",PL_DELETE_SELECTED_REQUEST:\"Call to api and delete current selected element\",PL_DELETE_SELECTED:\"Remove current selected element\",PL_PUSH_TRACK_REQUEST:\"Call to api and add track to current playlist\",PL_PUSH_TRACK:\"Push track on end of list\",PL_COPY_TRACK_TO_LIST:\"Add track to list (from drag and drop)\",PL_UPDATE_TRACK_POSITION_REQUST:\"Update track position in database after swaping\",PL_SWAP_TRACK_ON_CURRENT:\"Swap elements on current play list\",PL_INIT_CALC_BPM:\"Start calculating bpm for track\",PL_SET_BPM_AND_OFFSET:\"Update Bpm and Offset track on playlist\",PL_DELETE_TRACK_REQUEST:\"Call to api to delete track of given id from current plalist\",PL_DELETE_TRACK:\"Remove track of given index from current playlist\"};export{ACTIONS as PLAY_LIST_ACTIONS};//------------- managing dir actions\nexport function rootDirRequest(){return{type:ACTIONS.PL_ROOT_REQUEST};}export function loadDirRequest(path,open){return{type:ACTIONS.PL_LOAD_DIR_REQUEST,path:path,open:open};}export function pushDirContent(dirContent,isRoot,path,open){return{type:ACTIONS.PL_PUSH_DIR_CONTENT,dirContent:dirContent,isRoot:isRoot,path:path,open:open};}export function createDirRequest(name){return{type:ACTIONS.PL_CREATE_DIR_REQEST,name:name};}export function createDir(name,id,renameMode){return{type:ACTIONS.PL_CREATE_DIR,name:name,id:id,renameMode:renameMode};}export function toggleDirRequest(path){return{type:ACTIONS.PL_TOGGLE_DIR_REQUEST,path:path};}export function toggleDir(path){return{type:ACTIONS.PL_TOGGLE_DIR,path:path};}//------------- managing playlist actions\nexport function createPlaylistRequest(name){return{type:ACTIONS.PL_CREATE_PLAYLIST_REQUEST,name:name};}export function createPlaylist(name,id,renameMode,setCurrent){return{type:ACTIONS.PL_CREATE_PLAYLIST,name:name,id:id,renameMode:renameMode,setCurrent:setCurrent};}export function openPlaylistRequest(path){return{type:ACTIONS.PL_LOAD_PLAYLIST_REQUEST,path:path};}export function openCurrentPlaylist(){return{type:ACTIONS.PL_OPEN_CURRENT_PLAY_LIST};}export function setPlaylistContent(playlistContent,path){return{type:ACTIONS.PL_SET_PLAYLIST_CONTENT,playlistContent:playlistContent,path:path};}export function resetCurrentPlaylistContent(list){return{type:ACTIONS.PL_RESET_CURRENT_PLAYLIST_CONTETN,list:list};}//-------------- elemenet selction and change element hierarych actions\nexport function setSelection(path){return{type:ACTIONS.PL_SET_SELECTION,path:path};}export function renameSelectedRequest(name){return{type:ACTIONS.PL_RENAME_SELECTED_REQUEST,name:name};}export function renameSelected(name){return{type:ACTIONS.PL_RENAME_SELECTED,name:name};}export function moveToRequest(pathFrom,pathTo){return{type:ACTIONS.PL_MOVE_TO_REQUEST,pathFrom:pathFrom,pathTo:pathTo};}export function moveTo(pathFrom,pathTo){return{type:ACTIONS.PL_MOVE_TO,pathFrom:pathFrom,pathTo:pathTo};}export function deleteSelectedRequest(){return{type:ACTIONS.PL_DELETE_SELECTED_REQUEST};}export function deleteSelected(){return{type:ACTIONS.PL_DELETE_SELECTED};}//-------------- Track actions\nexport function pushTrackToListRequest(track,playlist){return{type:ACTIONS.PL_PUSH_TRACK_REQUEST,track:track,playlist:playlist};}export function pushTrackToList(track,playlist){return{type:ACTIONS.PL_PUSH_TRACK,track:track,playlist:playlist};}export function copyTrackToList(track,path){return{type:ACTIONS.PL_COPY_TRACK_TO_LIST,track:track,path:path};}export function updateTrackPositionRequest(tracksPositions){return{type:ACTIONS.PL_UPDATE_TRACK_POSITION_REQUST,tracksPositions:tracksPositions};}export function swapTrackOnList(from,to){return{type:ACTIONS.PL_SWAP_TRACK_ON_CURRENT,from:from,to:to};}export function startCalcBpm(track,playlist){return{type:ACTIONS.PL_INIT_CALC_BPM,track:track,playlist:playlist};}export function setBpmAndOffset(id,playlist,bpm,offset){return{type:ACTIONS.PL_SET_BPM_AND_OFFSET,id:id,playlist:playlist,bpm:bpm,offset:offset};}export function deleteTrackRequest(index,id){return{type:ACTIONS.PL_DELETE_TRACK_REQUEST,index:index,id:id};}export function deleteTrack(index){return{type:ACTIONS.PL_DELETE_TRACK,index:index};}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/actions/console/playList.js"],"names":["ACTIONS","PL_ROOT_REQUEST","PL_LOAD_DIR_REQUEST","PL_PUSH_DIR_CONTENT","PL_CREATE_DIR_REQEST","PL_CREATE_DIR","PL_TOGGLE_DIR_REQUEST","PL_TOGGLE_DIR","PL_CREATE_PLAYLIST_REQUEST","PL_CREATE_PLAYLIST","PL_LOAD_PLAYLIST_REQUEST","PL_OPEN_CURRENT_PLAY_LIST","PL_SET_PLAYLIST_CONTENT","PL_RESET_CURRENT_PLAYLIST_CONTETN","PL_SET_SELECTION","PL_RENAME_SELECTED_REQUEST","PL_RENAME_SELECTED","PL_MOVE_TO_REQUEST","PL_MOVE_TO","PL_DELETE_SELECTED_REQUEST","PL_DELETE_SELECTED","PL_PUSH_TRACK_REQUEST","PL_PUSH_TRACK","PL_COPY_TRACK_TO_LIST","PL_UPDATE_TRACK_POSITION_REQUST","PL_SWAP_TRACK_ON_CURRENT","PL_INIT_CALC_BPM","PL_SET_BPM_AND_OFFSET","PL_DELETE_TRACK_REQUEST","PL_DELETE_TRACK","PLAY_LIST_ACTIONS","rootDirRequest","type","loadDirRequest","path","open","pushDirContent","dirContent","isRoot","createDirRequest","name","createDir","id","renameMode","toggleDirRequest","toggleDir","createPlaylistRequest","createPlaylist","setCurrent","openPlaylistRequest","openCurrentPlaylist","setPlaylistContent","playlistContent","resetCurrentPlaylistContent","list","setSelection","renameSelectedRequest","renameSelected","moveToRequest","pathFrom","pathTo","moveTo","deleteSelectedRequest","deleteSelected","pushTrackToListRequest","track","playlist","pushTrackToList","copyTrackToList","updateTrackPositionRequest","tracksPositions","swapTrackOnList","from","to","startCalcBpm","setBpmAndOffset","bpm","offset","deleteTrackRequest","index","deleteTrack"],"mappings":"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","sourcesContent":["// ---------- PlayList---------------------\r\n\r\nconst ACTIONS = {\r\n\r\n    PL_ROOT_REQUEST: \"Call to api for root dir content\",\r\n    PL_LOAD_DIR_REQUEST: \"call to api for dir conent\",\r\n    PL_PUSH_DIR_CONTENT: \"Push  director contetn loaded  from api\",\r\n    PL_CREATE_DIR_REQEST: \"Call to api and create dir\",\r\n    PL_CREATE_DIR: \"Create dir in current\",\r\n    PL_TOGGLE_DIR_REQUEST: \"If is not loade load and then open\",\r\n    PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\r\n\r\n    PL_CREATE_PLAYLIST_REQUEST: \"Call to api to create playlist in current selected dir of name\",\r\n    PL_CREATE_PLAYLIST: \"Create play list in current selected dir of name\",\r\n    PL_LOAD_PLAYLIST_REQUEST: \"Call to api to get current playlist content\",\r\n    PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\r\n    PL_SET_PLAYLIST_CONTENT: \"Settinng content of current playlist from api\",\r\n    PL_RESET_CURRENT_PLAYLIST_CONTETN: \"Resetting playlist content after changing position from unsuccess dragging\",\r\n\r\n    PL_SET_SELECTION: \"Set current selected dir and playlist if is selected playlist\",\r\n    PL_RENAME_SELECTED_REQUEST: \"Call to api to rename current selected\",\r\n    PL_RENAME_SELECTED: \"Rename current selected element\",\r\n    PL_MOVE_TO_REQUEST: \"Call to api and move element from pathFrom to pathTo\",\r\n    PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\",\r\n    PL_DELETE_SELECTED_REQUEST: \"Call to api and delete current selected element\",\r\n    PL_DELETE_SELECTED: \"Remove current selected element\",\r\n\r\n    PL_PUSH_TRACK_REQUEST: \"Call to api and add track to current playlist\",\r\n    PL_PUSH_TRACK: \"Push track on end of list\",\r\n    PL_COPY_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\r\n    PL_UPDATE_TRACK_POSITION_REQUST: \"Update track position in database after swaping\",\r\n    PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\r\n    PL_INIT_CALC_BPM: \"Start calculating bpm for track\", \r\n    PL_SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\",\r\n    PL_DELETE_TRACK_REQUEST: \"Call to api to delete track of given id from current plalist\",\r\n    PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\r\n\r\n}\r\nexport { ACTIONS as PLAY_LIST_ACTIONS }\r\n\r\n//------------- managing dir actions\r\n\r\nexport function rootDirRequest() {\r\n    return { type: ACTIONS.PL_ROOT_REQUEST }\r\n}\r\n\r\nexport function loadDirRequest(path, open) {\r\n    return { type: ACTIONS.PL_LOAD_DIR_REQUEST, path, open }\r\n}\r\n\r\nexport function pushDirContent(dirContent, isRoot, path, open) {\r\n    return { type: ACTIONS.PL_PUSH_DIR_CONTENT, dirContent, isRoot, path, open }\r\n}\r\n\r\nexport function createDirRequest(name) {\r\n    return { type: ACTIONS.PL_CREATE_DIR_REQEST, name }\r\n}\r\n\r\nexport function createDir(name, id, renameMode) {\r\n    return { type: ACTIONS.PL_CREATE_DIR, name, id, renameMode }\r\n}\r\n\r\nexport function toggleDirRequest(path) {\r\n    return { type: ACTIONS.PL_TOGGLE_DIR_REQUEST, path }\r\n}\r\n\r\nexport function toggleDir(path) {\r\n    return { type: ACTIONS.PL_TOGGLE_DIR, path }\r\n}\r\n\r\n//------------- managing playlist actions\r\n\r\nexport function createPlaylistRequest(name) {\r\n    return { type: ACTIONS.PL_CREATE_PLAYLIST_REQUEST, name }\r\n}\r\n\r\nexport function createPlaylist(name, id, renameMode, setCurrent) {\r\n    return { type: ACTIONS.PL_CREATE_PLAYLIST, name, id, renameMode, setCurrent }\r\n}\r\n\r\nexport function openPlaylistRequest(path) {\r\n    return { type: ACTIONS.PL_LOAD_PLAYLIST_REQUEST, path }\r\n}\r\n\r\nexport function openCurrentPlaylist() {\r\n    return { type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST }\r\n}\r\n\r\nexport function setPlaylistContent(playlistContent, path) {\r\n    return { type: ACTIONS.PL_SET_PLAYLIST_CONTENT, playlistContent, path }\r\n}\r\n\r\nexport function resetCurrentPlaylistContent(list) {\r\n    return { type: ACTIONS.PL_RESET_CURRENT_PLAYLIST_CONTETN, list }\r\n}\r\n//-------------- elemenet selction and change element hierarych actions\r\n\r\nexport function setSelection(path) {\r\n    return { type: ACTIONS.PL_SET_SELECTION, path }\r\n}\r\n\r\nexport function renameSelectedRequest(name) {\r\n    return { type: ACTIONS.PL_RENAME_SELECTED_REQUEST, name }\r\n}\r\n\r\nexport function renameSelected(name) {\r\n    return { type: ACTIONS.PL_RENAME_SELECTED, name }\r\n}\r\n\r\nexport function moveToRequest(pathFrom, pathTo) {\r\n    return { type: ACTIONS.PL_MOVE_TO_REQUEST, pathFrom, pathTo }\r\n}\r\n\r\nexport function moveTo(pathFrom, pathTo) {\r\n    return { type: ACTIONS.PL_MOVE_TO, pathFrom, pathTo }\r\n}\r\n\r\nexport function deleteSelectedRequest() {\r\n    return { type: ACTIONS.PL_DELETE_SELECTED_REQUEST }\r\n}\r\n\r\nexport function deleteSelected() {\r\n    return { type: ACTIONS.PL_DELETE_SELECTED }\r\n}\r\n\r\n//-------------- Track actions\r\n\r\nexport function pushTrackToListRequest(track, playlist) {\r\n    return { type: ACTIONS.PL_PUSH_TRACK_REQUEST, track, playlist }\r\n}\r\n\r\nexport function pushTrackToList(track, playlist) {\r\n    return { type: ACTIONS.PL_PUSH_TRACK, track, playlist }\r\n}\r\n\r\nexport function copyTrackToList(track, path) {\r\n    return { type: ACTIONS.PL_COPY_TRACK_TO_LIST, track, path }\r\n}\r\n\r\nexport function updateTrackPositionRequest(tracksPositions) {\r\n    return { type: ACTIONS.PL_UPDATE_TRACK_POSITION_REQUST, tracksPositions }\r\n}\r\n\r\nexport function swapTrackOnList(from, to) {\r\n    return { type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT, from, to }\r\n}\r\n\r\nexport function startCalcBpm(track, playlist) {\r\n    return { type: ACTIONS.PL_INIT_CALC_BPM, track, playlist }\r\n}\r\n\r\nexport function setBpmAndOffset(id, playlist, bpm, offset) {\r\n    return { type: ACTIONS.PL_SET_BPM_AND_OFFSET, id, playlist, bpm, offset, }\r\n}\r\n\r\nexport function deleteTrackRequest(index, id) {\r\n    return { type: ACTIONS.PL_DELETE_TRACK_REQUEST, index, id }\r\n}\r\n\r\nexport function deleteTrack(index) {\r\n    return { type: ACTIONS.PL_DELETE_TRACK, index }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}