{"ast":null,"code":"import youTubeApi from \"./yt/ytApi\";\nimport userApi from \"./user/userApi\";\nexport const API_TYPES = {\n  MIUSIC_SOURCE: \"Source of miusic\",\n  DATA_SOURCE: {\n    GRAPHQL: \"GraphQl api\",\n    REST: \"Rest api\"\n  }\n};\nconst apisMap = {\n  \"YouTube\": {\n    type: API_TYPES.MIUSIC_SOURCE,\n    api: youTubeApi\n  },\n  \"SoundCloud\": {\n    type: API_TYPES.MIUSIC_SOURCE,\n    api: null\n  },\n  \"MainDataBase\": {\n    type: API_TYPES.DATA_SOURCE.GRAPHQL,\n    api: userApi\n  }\n};\nexport function getApi(apiName) {\n  return apisMap[apiName];\n}\nexport function getApisName(type, param) {\n  if (!type && !param) {\n    return Object.keys(apisMap);\n  } else if (type) {\n    return Object.entries(apisMap).filter(([name, api]) => {\n      const typeCorrent = api.type === type;\n\n      if (!param) {\n        return typeCorrent;\n      } else {\n        const paramCorrect = Object.entries(param).every(([key, value]) => api[key] === value);\n        return typeCorrent && paramCorrect;\n      }\n    }).map(([name, api]) => name);\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/apis/apiProvider.js"],"names":["youTubeApi","userApi","API_TYPES","MIUSIC_SOURCE","DATA_SOURCE","GRAPHQL","REST","apisMap","type","api","getApi","apiName","getApisName","param","Object","keys","entries","filter","name","typeCorrent","paramCorrect","every","key","value","map"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,aAAa,EAAG,kBADK;AAErBC,EAAAA,WAAW,EAAG;AACVC,IAAAA,OAAO,EAAG,aADA;AAEVC,IAAAA,IAAI,EAAE;AAFI;AAFO,CAAlB;AAQP,MAAMC,OAAO,GAAG;AACZ,aAAY;AACTC,IAAAA,IAAI,EAAEN,SAAS,CAACC,aADP;AAETM,IAAAA,GAAG,EAAET;AAFI,GADA;AAKZ,gBAAe;AACXQ,IAAAA,IAAI,EAAEN,SAAS,CAACC,aADL;AAEXM,IAAAA,GAAG,EAAE;AAFM,GALH;AAUZ,kBAAiB;AACbD,IAAAA,IAAI,EAAEN,SAAS,CAACE,WAAV,CAAsBC,OADf;AAEbI,IAAAA,GAAG,EAAER;AAFQ;AAVL,CAAhB;AAgBA,OAAO,SAASS,MAAT,CAAgBC,OAAhB,EAAwB;AAC3B,SAAOJ,OAAO,CAACI,OAAD,CAAd;AACH;AAED,OAAO,SAASC,WAAT,CAAqBJ,IAArB,EAA2BK,KAA3B,EAAiC;AACpC,MAAG,CAACL,IAAD,IAAS,CAACK,KAAb,EAAmB;AACf,WAAOC,MAAM,CAACC,IAAP,CAAYR,OAAZ,CAAP;AACH,GAFD,MAEO,IAAGC,IAAH,EAAQ;AACX,WAAOM,MAAM,CAACE,OAAP,CAAeT,OAAf,EACFU,MADE,CACK,CAAC,CAACC,IAAD,EAAOT,GAAP,CAAD,KAAiB;AACrB,YAAMU,WAAW,GAAIV,GAAG,CAACD,IAAJ,KAAaA,IAAlC;;AACA,UAAG,CAACK,KAAJ,EAAU;AACN,eAAOM,WAAP;AACH,OAFD,MAEO;AACH,cAAMC,YAAY,GACdN,MAAM,CAACE,OAAP,CAAeH,KAAf,EACKQ,KADL,CACW,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkBd,GAAG,CAACa,GAAD,CAAH,KAAaC,KAD1C,CADJ;AAGA,eAAQJ,WAAW,IAAIC,YAAvB;AACH;AACJ,KAXE,EAYFI,GAZE,CAYE,CAAC,CAACN,IAAD,EAAOT,GAAP,CAAD,KAAiBS,IAZnB,CAAP;AAaH;AAEJ","sourcesContent":["import youTubeApi from \"./yt/ytApi\";\r\nimport userApi from \"./user/userApi\";\r\n\r\nexport const API_TYPES = {\r\n    MIUSIC_SOURCE : \"Source of miusic\",\r\n    DATA_SOURCE : {\r\n        GRAPHQL : \"GraphQl api\",\r\n        REST: \"Rest api\"\r\n    }\r\n}\r\n\r\nconst apisMap = {\r\n    \"YouTube\" : {\r\n       type: API_TYPES.MIUSIC_SOURCE,\r\n       api: youTubeApi\r\n    },\r\n    \"SoundCloud\" : {\r\n        type: API_TYPES.MIUSIC_SOURCE,\r\n        api: null,\r\n     },\r\n\r\n    \"MainDataBase\" : {\r\n        type: API_TYPES.DATA_SOURCE.GRAPHQL,\r\n        api: userApi,\r\n     }\r\n}\r\n\r\nexport function getApi(apiName){\r\n    return apisMap[apiName];\r\n}\r\n\r\nexport function getApisName(type, param){\r\n    if(!type && !param){\r\n        return Object.keys(apisMap)\r\n    } else if(type){\r\n        return Object.entries(apisMap)\r\n            .filter(([name, api]) => {\r\n                const typeCorrent = (api.type === type) \r\n                if(!param){\r\n                    return typeCorrent\r\n                } else {\r\n                    const paramCorrect = \r\n                        Object.entries(param)\r\n                            .every(([key, value]) => api[key] === value)\r\n                    return (typeCorrent && paramCorrect);\r\n                }\r\n            })\r\n            .map(([name, api]) => name)\r\n    }\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}