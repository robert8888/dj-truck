{"ast":null,"code":"import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{faTimesCircle}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import classNames from\"classnames\";import React,{useCallback,useEffect,useMemo,useState}from\"react\";import{Button,Col,Container,Row}from\"react-bootstrap\";import ErrorBoundary from\"./../ErrorBoundary/ErrorBoundary\";import{connect}from\"react-redux\";import{LOG_TYPES}from\"./../../../../utils/logger/logger\";import\"./logger.scss\";var Logger=function Logger(_ref){var log=_ref.log;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),hidden=_useState2[0],setHidden=_useState2[1];useEffect(function(){if(!log){setHidden(true);}else{setHidden(false);}},[log]);var createHeader=useCallback(function(text){var className=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";return React.createElement(\"h6\",{className:\"logger-header \"+className},text);},[]);var header=useMemo(function(){if(!log)return;switch(log.type){case LOG_TYPES.ERROR:{return createHeader(\"Error:\",\"logger-header-error\");}case LOG_TYPES.WARNING:{return createHeader(\"Warning:\",\"logger-header-warning\");}case LOG_TYPES.DEBUG:{return createHeader(\"Debug:\",\"logger-header-debug\");}case LOG_TYPES.LOG:{return createHeader(\"Logger:\");}default:return null;}},[log,createHeader]);var content=useMemo(function(){if(!log)return;switch(log.type){case LOG_TYPES.DEBUG:{return React.createElement(\"pre\",{className:\"logger-message logger-pre\"},log.message);}default:return React.createElement(\"p\",{className:\"logger-message\"},log.message);}},[log]);var path=useMemo(function(){if(!log)return;if(!log.path){return null;}return React.createElement(\"ul\",{className:\"logger-path\"},log.path&&log.path.length&&log.path.map(function(part,index){return React.createElement(\"li\",{key:part+index},\" \",part,\" \");}));},[log]);var loggerClasses=useMemo(function(){return classNames('logger',{'logger--hidden':hidden});},[hidden]);return React.createElement(ErrorBoundary,null,React.createElement(Container,{className:\"app layout container-xl\"},React.createElement(Row,null,React.createElement(Col,null,React.createElement(\"div\",{className:loggerClasses},React.createElement(Button,{className:\"btn-close\",onClick:setHidden.bind(null,true)},React.createElement(FontAwesomeIcon,{icon:faTimesCircle})),header,content,path)))));};var mapStateToProps=function mapStateToProps(state){return{log:state.logger.last};};export default connect(mapStateToProps)(Logger);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Logger/Logger.js"],"names":["faTimesCircle","FontAwesomeIcon","classNames","React","useCallback","useEffect","useMemo","useState","Button","Col","Container","Row","ErrorBoundary","connect","LOG_TYPES","Logger","log","hidden","setHidden","createHeader","text","className","header","type","ERROR","WARNING","DEBUG","LOG","content","message","path","length","map","part","index","loggerClasses","bind","mapStateToProps","state","logger","last"],"mappings":"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","sourcesContent":["import { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport classNames from \"classnames\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"./../ErrorBoundary/ErrorBoundary\";\r\nimport { connect } from \"react-redux\";\r\nimport { LOG_TYPES } from \"./../../../../utils/logger/logger\";\r\nimport \"./logger.scss\";\r\n\r\n\r\n\r\nconst Logger = ({ log }) => {\r\n    const [hidden, setHidden] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        if(!log){\r\n            setHidden(true)\r\n        } else {\r\n            setHidden(false);\r\n        }\r\n    },[log])\r\n\r\n    const createHeader = useCallback((text, className = \"\") => {\r\n        return <h6 className={\"logger-header \" + className}>{text}</h6>\r\n    }, []);\r\n\r\n    const header = useMemo(()=>{\r\n        if(!log) return; \r\n        \r\n        switch(log.type){\r\n            case LOG_TYPES.ERROR : {\r\n                return createHeader(\"Error:\", \"logger-header-error\");\r\n            }\r\n            case LOG_TYPES.WARNING: {\r\n                return createHeader(\"Warning:\", \"logger-header-warning\")\r\n            }\r\n            case LOG_TYPES.DEBUG: {\r\n                return createHeader(\"Debug:\", \"logger-header-debug\");\r\n            }\r\n            case LOG_TYPES.LOG : {\r\n                return createHeader(\"Logger:\");\r\n            }\r\n            default: return null;\r\n        }\r\n    }, [log, createHeader])\r\n\r\n    const content = useMemo(()=>{\r\n        if(!log) return;\r\n        \r\n        switch(log.type){\r\n            case LOG_TYPES.DEBUG: {\r\n                return (\r\n                    <pre className=\"logger-message logger-pre\">\r\n                        {log.message}\r\n                    </pre>\r\n                )\r\n            }\r\n            default: return (\r\n                <p className=\"logger-message\">\r\n                    {log.message}\r\n                </p>\r\n            )\r\n        }\r\n    }, [log])\r\n\r\n    const path = useMemo(()=>{\r\n        if(!log) return;\r\n        \r\n        if(!log.path){\r\n            return null;\r\n        }\r\n        return (\r\n            <ul className=\"logger-path\">\r\n                {log.path && log.path.length && log.path.map( (part , index) => \r\n                    <li key={part + index} > {part} </li>\r\n                )}\r\n            </ul>\r\n        )\r\n    }, [log])\r\n  \r\n    const loggerClasses = useMemo(()=>{\r\n        return classNames(\r\n            'logger',\r\n            {'logger--hidden': hidden}\r\n        )\r\n    }, [hidden])\r\n    \r\n    return (\r\n        <ErrorBoundary>\r\n            <Container className=\"app layout container-xl\" >\r\n                <Row><Col>\r\n                    <div className={loggerClasses}>\r\n                        <Button className=\"btn-close\" onClick={setHidden.bind(null, true)}>\r\n                            <FontAwesomeIcon icon={faTimesCircle}/>\r\n                        </Button>\r\n                        {header}\r\n                        {content}\r\n                        {path}\r\n                    </div>\r\n                </Col></Row>\r\n            </Container>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.logger.last ,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Logger);"]},"metadata":{},"sourceType":"module"}