{"ast":null,"code":"import Effect from \"../effect\";\nexport default class Flanger extends Effect {\n  static defaultParams() {\n    return {\n      params: {\n        time: {\n          // div by  100\n          min: 0,\n          max: 100,\n          defaultValue: 45,\n          type: \"float\",\n          description: \"time\"\n        },\n        speed: {\n          // div by 10\n          min: 5,\n          max: 50,\n          defaultValue: 14,\n          type: \"float\",\n          description: \"speed\"\n        },\n        depth: {\n          // div by 20 000\n          min: 10,\n          max: 100,\n          defaultValue: 19,\n          type: \"float\",\n          description: \"depth\"\n        },\n        feedback: {\n          // div by 100\n          min: 0,\n          max: 80,\n          defaultValue: 8,\n          type: \"float\",\n          description: \"fb\"\n        }\n      }\n    };\n  }\n\n  constructor(context, params) {\n    super();\n    this._context = context;\n    this._default = Flanger.defaultParams().params;\n\n    this._buildNodes();\n\n    this._initParams(params, Flanger.defaultParams().params);\n  }\n\n  _buildNodes() {\n    this.inputNode = this._context.createGain();\n    this.outputNode = this._context.createGain();\n    this.inputFeedbackNode = this._context.createGain();\n    this.wetGainNode = this._context.createGain();\n    this.delayNode = this._context.createDelay();\n    this.oscillatorNode = this._context.createOscillator();\n    this.gainNode = this._context.createGain();\n    this.feedbackNode = this._context.createGain();\n    this.oscillatorNode.type = 'sine';\n    this.inputNode.connect(this.inputFeedbackNode);\n    this.inputFeedbackNode.connect(this.delayNode);\n    this.inputFeedbackNode.connect(this.wetGainNode);\n    this.delayNode.connect(this.wetGainNode);\n    this.delayNode.connect(this.feedbackNode);\n    this.feedbackNode.connect(this.inputFeedbackNode);\n    this.oscillatorNode.connect(this.gainNode);\n    this.gainNode.connect(this.delayNode.delayTime);\n    this.wetGainNode.connect(this.outputNode);\n    this.oscillatorNode.start(0);\n    this.wetGainNode.gain.value = 0.7;\n  }\n\n  get name() {\n    return \"Flanger\";\n  }\n\n  get time() {\n    return this._time;\n  }\n\n  set time(value) {\n    value = this._valueToRange(value, \"time\");\n    this._time = value;\n    this.delayNode.delayTime.setTargetAtTime(value / 100, this._context.currentTime, 0.01);\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  set speed(value) {\n    value = this._valueToRange(value, \"speed\");\n    this._speed = value;\n    this.oscillatorNode.frequency.value = value / 10;\n  }\n\n  get depth() {\n    return this._depth;\n  }\n\n  set depth(value) {\n    value = this._valueToRange(value, \"depth\");\n    this._depth = value;\n    this.gainNode.gain.setTargetAtTime(value / 20000, this._context.currentTime, 0.01);\n  }\n\n  get feedback() {\n    return this._feedback;\n  }\n\n  set feedback(value) {\n    value = this._valueToRange(value, \"feedback\");\n    this._feedback = value;\n    this.feedbackNode.gain.setTargetAtTime(value / 100, this._context.currentTime, 0.01);\n  }\n\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/core/console/effector/effects/flanger/flanger.js"],"names":["Effect","Flanger","defaultParams","params","time","min","max","defaultValue","type","description","speed","depth","feedback","constructor","context","_context","_default","_buildNodes","_initParams","inputNode","createGain","outputNode","inputFeedbackNode","wetGainNode","delayNode","createDelay","oscillatorNode","createOscillator","gainNode","feedbackNode","connect","delayTime","start","gain","value","name","_time","_valueToRange","setTargetAtTime","currentTime","_speed","frequency","_depth","_feedback"],"mappings":"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","sourcesContent":["import Effect from \"../effect\";\r\n\r\nexport default class Flanger extends Effect {\r\n\r\n    static defaultParams() {\r\n        return {\r\n            params: {\r\n                time: { // div by  100\r\n                    min: 0,\r\n                    max: 100,\r\n                    defaultValue: 45,\r\n                    type: \"float\",\r\n                    description: \"time\"\r\n                },\r\n                speed: { // div by 10\r\n                    min: 5,\r\n                    max: 50,\r\n                    defaultValue: 14,\r\n                    type: \"float\",\r\n                    description: \"speed\"\r\n                },\r\n                depth: {// div by 20 000\r\n                    min: 10,\r\n                    max: 100,\r\n                    defaultValue: 19,\r\n                    type: \"float\",\r\n                    description : \"depth\"\r\n                },\r\n                feedback : { // div by 100\r\n                    min: 0,\r\n                    max: 80,\r\n                    defaultValue: 8,\r\n                    type: \"float\",\r\n                    description : \"fb\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    constructor(context, params){\r\n        super();\r\n        this._context = context;\r\n        this._default = Flanger.defaultParams().params;\r\n\r\n        this._buildNodes();\r\n        this._initParams(params, Flanger.defaultParams().params);\r\n    }\r\n\r\n    _buildNodes(){\r\n        this.inputNode = this._context.createGain();\r\n        this.outputNode = this._context.createGain();\r\n        this.inputFeedbackNode = this._context.createGain();\r\n        this.wetGainNode = this._context.createGain();\r\n        this.delayNode = this._context.createDelay();\r\n        this.oscillatorNode = this._context.createOscillator();\r\n        this.gainNode = this._context.createGain();\r\n        this.feedbackNode = this._context.createGain();\r\n        this.oscillatorNode.type = 'sine';\r\n    \r\n        this.inputNode.connect(this.inputFeedbackNode);\r\n\r\n    \r\n        this.inputFeedbackNode.connect(this.delayNode);\r\n        this.inputFeedbackNode.connect(this.wetGainNode);\r\n    \r\n        this.delayNode.connect(this.wetGainNode);\r\n        this.delayNode.connect(this.feedbackNode);\r\n    \r\n        this.feedbackNode.connect(this.inputFeedbackNode);\r\n        this.oscillatorNode.connect(this.gainNode);\r\n        this.gainNode.connect(this.delayNode.delayTime);\r\n    \r\n\r\n        this.wetGainNode.connect(this.outputNode);\r\n\r\n\t    this.oscillatorNode.start(0);\r\n        this.wetGainNode.gain.value = 0.7;\r\n    }\r\n\r\n\r\n    get name(){\r\n        return \"Flanger\"\r\n    }\r\n\r\n    get time(){\r\n        return this._time;\r\n    }\r\n\r\n    set time(value){\r\n        value = this._valueToRange(value, \"time\")\r\n        this._time = value;\r\n        this.delayNode.delayTime.setTargetAtTime( \r\n                value / 100, \r\n                this._context.currentTime, \r\n                0.01\r\n            );\r\n    }\r\n\r\n    get speed(){\r\n        return this._speed;\r\n    }\r\n\r\n    set speed(value){\r\n        value = this._valueToRange(value, \"speed\");\r\n        this._speed= value;\r\n        this.oscillatorNode.frequency.value = value / 10;\r\n    }\r\n\r\n    get depth(){\r\n        return this._depth;\r\n    }\r\n\r\n    set depth(value){\r\n        value = this._valueToRange(value, \"depth\");\r\n        this._depth = value;\r\n        this.gainNode.gain.setTargetAtTime(\r\n                value / 20000, \r\n                this._context.currentTime, \r\n                0.01\r\n            );\r\n    }\r\n\r\n    get feedback(){\r\n        return this._feedback;\r\n    }\r\n\r\n    set feedback(value){\r\n        value = this._valueToRange(value, \"feedback\");\r\n        this._feedback = value;\r\n        this.feedbackNode.gain.setTargetAtTime(\r\n                value/ 100, \r\n                this._context.currentTime, \r\n                0.01\r\n            )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}