{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\ExternalSearch\\\\SerachResults\\\\SearchItem\\\\SearchItem.js\";\nimport React from \"react\";\nimport PlaybackButton from \"../../../PlaybackButton/PlaybackButton\";\nimport { stripHtml } from \"./../../../../../../utils/html/htmlHelper\";\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\n\nconst SearchListItem = props => {\n  var _thumbnails$default;\n\n  const {\n    title,\n    description,\n    sourceId,\n    thumbnails,\n    duration,\n    source,\n    sourceUrl\n  } = props.item;\n\n  const formatTime = time => {\n    if (!time) return null;\n\n    if (typeof time === \"number\") {\n      return formater.secondsToStr(time);\n    } else if (typeof time === \"string\" && time.startsWith(\"PT\")) {\n      return time.substr(2, time.length).toLowerCase();\n    }\n  };\n\n  const handleClick = () => {\n    const track = { ...props.item\n    };\n\n    if (track.source === \"YouTube\" && typeof track.duration === \"string\") {\n      track.duration = formater.ptToSeconds(track.duration);\n    }\n\n    props.addToListHandle(track);\n    props.closeListHandle();\n  };\n\n  return React.createElement(\"li\", {\n    className: \"search-list-item\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-item-thumbnails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"youtube thumbnail\",\n    className: \"thumbnail-img\",\n    src: thumbnails === null || thumbnails === void 0 ? void 0 : (_thumbnails$default = thumbnails.default) === null || _thumbnails$default === void 0 ? void 0 : _thumbnails$default.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"thumbnail-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, formatTime(duration)), props.player && React.createElement(PlaybackButton, {\n    className: \"search-result\",\n    playback: props.playback,\n    player: props.player,\n    id: sourceId,\n    source: source,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"list-item-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, stripHtml(title)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, stripHtml(description)), React.createElement(\"a\", {\n    href: sourceUrl,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    onClick: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" \", sourceUrl, \" \")));\n};\n\nexport default SearchListItem;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/ExternalSearch/SerachResults/SearchItem/SearchItem.js"],"names":["React","PlaybackButton","stripHtml","formater","SearchListItem","props","title","description","sourceId","thumbnails","duration","source","sourceUrl","item","formatTime","time","secondsToStr","startsWith","substr","length","toLowerCase","handleClick","track","ptToSeconds","addToListHandle","closeListHandle","default","url","player","playback","e","stopPropagation"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PlaybackButton from \"../../../PlaybackButton/PlaybackButton\";\r\nimport { stripHtml } from \"./../../../../../../utils/html/htmlHelper\";\r\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\r\n\r\nconst SearchListItem = (props) => {\r\n\r\n    const {\r\n        title,\r\n        description,\r\n        sourceId,\r\n        thumbnails,\r\n        duration,\r\n        source,\r\n        sourceUrl,\r\n    } = props.item;\r\n    \r\n    const formatTime = time => {\r\n        if(!time) return null;\r\n\r\n        if(typeof time === \"number\"){\r\n            return formater.secondsToStr(time);\r\n        } else if(typeof time === \"string\" && time.startsWith(\"PT\")){\r\n            return time.substr(2, time.length).toLowerCase()\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        const track = {\r\n            ...props.item,\r\n        }\r\n        if (track.source === \"YouTube\" && typeof track.duration === \"string\") {\r\n            track.duration = formater.ptToSeconds(track.duration);\r\n        }\r\n        props.addToListHandle(track);\r\n        props.closeListHandle();\r\n    }\r\n\r\n    return (\r\n        <li className=\"search-list-item\" onClick={handleClick}>\r\n            <div className=\"list-item-thumbnails\">\r\n                <img alt=\"youtube thumbnail\" className=\"thumbnail-img\" src={thumbnails?.default?.url} />\r\n                <span className=\"thumbnail-time\">{formatTime(duration)}</span>\r\n                { props.player && \r\n                    <PlaybackButton \r\n                        className=\"search-result\"\r\n                        playback={props.playback} \r\n                        player={props.player}\r\n                        id={sourceId} \r\n                        source={source}/>\r\n                }\r\n            </div>\r\n            <div className=\"list-item-details\">\r\n                <h5>{stripHtml(title)}</h5>\r\n                <p>{stripHtml(description)}</p>\r\n                <a href={sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\" onClick={e => e.stopPropagation()}> {sourceUrl} </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SearchListItem"]},"metadata":{},"sourceType":"module"}