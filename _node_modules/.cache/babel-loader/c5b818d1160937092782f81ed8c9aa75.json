{"ast":null,"code":"import { hideLoading, showLoading } from 'react-redux-loading-bar';\nimport { put, select, takeEvery } from 'redux-saga/effects';\nimport { ACTIONS, pushLog, setProfileDescription } from \"../../actions\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport { Log } from \"./../../utils/logger/logger\";\nexport default function* watchUpdateDescription() {\n  yield takeEvery(ACTIONS.U_REQ_UPDATE_DESCRIPTION, handle);\n}\n\nconst getToken = state => state.user.token;\n\nconst userId = state => state.user.id;\n\nfunction* handle(action) {\n  const path = [\"Saga\", \"Request updated description\"];\n  const token = yield select(getToken);\n\n  try {\n    var _response$data;\n\n    yield put(showLoading());\n    const {\n      callQuery,\n      queries\n    } = getApi(\"UserAssets\");\n    const query = queries.updateUserDescriptionQl;\n    const response = yield callQuery(query, token, {\n      description: action.description\n    });\n    const status = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.udpateMyDescription; //console.log(response, status)\n\n    if (!status) {\n      throw new Error(\"Can't update description database\");\n    }\n\n    if (response.errors) {\n      throw new Error(\"Can't update descritpion in database\" + JSON.stringify(response.errors));\n    }\n\n    if (status.error) {\n      throw new Error(\"Can't update description. \" + status.message);\n    }\n\n    const id = yield select(userId);\n    yield put(setProfileDescription(id, action.description));\n    yield put(pushLog(new Log(\"User descirption updated to : \" + action.description, path)));\n  } catch (e) {\n    yield put(pushLog(Log.Error(path, e.message, \"Sorry. During process of updating description occurred a problem\")));\n  } finally {\n    yield put(hideLoading());\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/user/reqUpdateDescription.js"],"names":["hideLoading","showLoading","put","select","takeEvery","ACTIONS","pushLog","setProfileDescription","getApi","Log","watchUpdateDescription","U_REQ_UPDATE_DESCRIPTION","handle","getToken","state","user","token","userId","id","action","path","callQuery","queries","query","updateUserDescriptionQl","response","description","status","data","udpateMyDescription","Error","errors","JSON","stringify","error","message","e"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,qBAA3B,QAAwD,eAAxD;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,GAAT,QAAoB,6BAApB;AAGA,eAAe,UAAUC,sBAAV,GAAmC;AAC9C,QAAMN,SAAS,CAACC,OAAO,CAACM,wBAAT,EAAmCC,MAAnC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AACA,MAAMC,MAAM,GAAGH,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWG,EAAnC;;AAEA,UAAUN,MAAV,CAAiBO,MAAjB,EAAyB;AACrB,QAAMC,IAAI,GAAG,CAAC,MAAD,EAAS,6BAAT,CAAb;AACA,QAAMJ,KAAK,GAAG,MAAMb,MAAM,CAACU,QAAD,CAA1B;;AAEA,MAAI;AAAA;;AACA,UAAMX,GAAG,CAACD,WAAW,EAAZ,CAAT;AACA,UAAM;AAAEoB,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBd,MAAM,CAAC,YAAD,CAArC;AAEA,UAAMe,KAAK,GAAGD,OAAO,CAACE,uBAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACE,KAAD,EAAQP,KAAR,EAAgB;AAACU,MAAAA,WAAW,EAAEP,MAAM,CAACO;AAArB,KAAhB,CAAhC;AACA,UAAMC,MAAM,GAAGF,QAAH,aAAGA,QAAH,yCAAGA,QAAQ,CAAEG,IAAb,mDAAG,eAAgBC,mBAA/B,CAPA,CAQA;;AACA,QAAG,CAACF,MAAJ,EAAW;AACP,YAAM,IAAIG,KAAJ,CAAU,mCAAV,CAAN;AACH;;AAED,QAAGL,QAAQ,CAACM,MAAZ,EAAmB;AACf,YAAM,IAAID,KAAJ,CAAU,yCAAyCE,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACM,MAAxB,CAAnD,CAAN;AACH;;AAED,QAAGJ,MAAM,CAACO,KAAV,EAAgB;AACZ,YAAM,IAAIJ,KAAJ,CAAU,+BAA+BH,MAAM,CAACQ,OAAhD,CAAN;AACH;;AAED,UAAMjB,EAAE,GAAG,MAAMf,MAAM,CAACc,MAAD,CAAvB;AACA,UAAMf,GAAG,CAACK,qBAAqB,CAACW,EAAD,EAAKC,MAAM,CAACO,WAAZ,CAAtB,CAAT;AAEA,UAAMxB,GAAG,CAACI,OAAO,CAAC,IAAIG,GAAJ,CAAQ,mCAAmCU,MAAM,CAACO,WAAlD,EAA+DN,IAA/D,CAAD,CAAR,CAAT;AACH,GAzBD,CAyBE,OAAOgB,CAAP,EAAU;AACR,UAAMlC,GAAG,CAACI,OAAO,CAACG,GAAG,CAACqB,KAAJ,CACdV,IADc,EAEdgB,CAAC,CAACD,OAFY,EAGd,kEAHc,CAAD,CAAR,CAAT;AAKH,GA/BD,SA+BU;AACN,UAAMjC,GAAG,CAACF,WAAW,EAAZ,CAAT;AACH;AACJ","sourcesContent":["import { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport { put, select, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, pushLog, setProfileDescription } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { Log } from \"./../../utils/logger/logger\";\r\n\r\n\r\nexport default function* watchUpdateDescription() {\r\n    yield takeEvery(ACTIONS.U_REQ_UPDATE_DESCRIPTION, handle);\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\nconst userId = state => state.user.id;\r\n\r\nfunction* handle(action) {\r\n    const path = [\"Saga\", \"Request updated description\"]\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        yield put(showLoading());\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n\r\n        const query = queries.updateUserDescriptionQl;\r\n\r\n        const response = yield callQuery(query, token , {description: action.description});\r\n        const status = response?.data?.udpateMyDescription;\r\n        //console.log(response, status)\r\n        if(!status){\r\n            throw new Error(\"Can't update description database\")\r\n        }\r\n\r\n        if(response.errors){\r\n            throw new Error(\"Can't update descritpion in database\" + JSON.stringify(response.errors))\r\n        }\r\n\r\n        if(status.error){\r\n            throw new Error(\"Can't update description. \" + status.message)\r\n        }\r\n\r\n        const id = yield select(userId)\r\n        yield put(setProfileDescription(id, action.description))\r\n        \r\n        yield put(pushLog(new Log(\"User descirption updated to : \" + action.description, path)))\r\n    } catch (e) {\r\n        yield put(pushLog(Log.Error(\r\n            path,\r\n            e.message,\r\n            \"Sorry. During process of updating description occurred a problem\"\r\n        )))\r\n    } finally {\r\n        yield put(hideLoading())\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}