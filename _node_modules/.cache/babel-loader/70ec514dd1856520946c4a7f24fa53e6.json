{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\Volume\\\\Volume.js\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVolumeUp, faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport { toRange } from \"./../../../../../utils/math/argRanges\";\nimport \"./volume.scss\";\n\nconst Volume = props => {\n  const [level, setLevel] = useState(1);\n  const [icon, setIcon] = useState(faVolumeUp);\n  const sliderGuide = useRef();\n  const sliderProgress = useRef();\n  const sliderThumb = useRef();\n  useEffect(() => {\n    if (level === 0) {\n      setIcon(faVolumeMute);\n    } else {\n      setIcon(faVolumeUp);\n    }\n  }, [level]);\n  const hookUpClick = useCallback(ref => {\n    ref.addEventListener('mousedown', e => {\n      console.log(sliderGuide.current);\n      const rect = sliderGuide.current.getBoundingClientRect();\n      let level = (rect.height - (e.clientY - rect.top)) / rect.height;\n      level = toRange(level, 0, 1);\n      setLevel(level);\n      console.log(level);\n    });\n  }, [sliderGuide]);\n  useEffect(() => {\n    const position = sliderGuide.current.getBoundingClientRect().height * level;\n    sliderThumb.current.style.transform = `translateY(-${position}px)`;\n    sliderProgress.current.style.transform = `scaleY(${position}) translateY(-50%)`;\n  }, [level, sliderThumb, sliderProgress]);\n  return React.createElement(\"div\", {\n    className: \"volume\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"volume-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"volume-slider\",\n    ref: hookUpClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"volume-slider-guide\",\n    ref: sliderGuide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"volume-slider-progress\",\n    ref: sliderProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"volume-slider-thumb\",\n    ref: sliderThumb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nexport default Volume;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/Volume/Volume.js"],"names":["React","useState","useEffect","useRef","useCallback","FontAwesomeIcon","faVolumeUp","faVolumeMute","toRange","Volume","props","level","setLevel","icon","setIcon","sliderGuide","sliderProgress","sliderThumb","hookUpClick","ref","addEventListener","e","console","log","current","rect","getBoundingClientRect","height","clientY","top","position","style","transform"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, useCallback} from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faVolumeUp, faVolumeMute  } from '@fortawesome/free-solid-svg-icons';\r\nimport {toRange} from \"./../../../../../utils/math/argRanges\";\r\nimport \"./volume.scss\"\r\n\r\nconst Volume = props => {\r\n    const [level , setLevel] = useState(1);\r\n    const [icon , setIcon] = useState(faVolumeUp);\r\n    const sliderGuide = useRef();\r\n    const sliderProgress = useRef();\r\n    const sliderThumb = useRef();\r\n\r\n    useEffect(()=>{\r\n        if(level === 0){\r\n            setIcon(faVolumeMute)\r\n        } else {\r\n            setIcon(faVolumeUp)\r\n        }\r\n    }, [level])\r\n\r\n    const hookUpClick = useCallback((ref)=>{\r\n        ref.addEventListener('mousedown', (e)=>{\r\n            console.log(sliderGuide.current)\r\n            const rect = sliderGuide.current.getBoundingClientRect();\r\n            let level = (rect.height -  (e.clientY - rect.top)) / rect.height;\r\n            level = toRange(level, 0 ,1);\r\n            setLevel(level)\r\n            console.log(level)\r\n        })\r\n    }, [sliderGuide])\r\n\r\n    useEffect(()=>{\r\n        const position = sliderGuide.current.getBoundingClientRect().height * level;\r\n        sliderThumb.current.style.transform = `translateY(-${position}px)`;\r\n        sliderProgress.current.style.transform = `scaleY(${position}) translateY(-50%)`\r\n    }, [level, sliderThumb, sliderProgress])\r\n\r\n    return (\r\n        <div className=\"volume\">\r\n            <button className=\"volume-btn\">\r\n                <FontAwesomeIcon icon={icon}/>\r\n            </button>\r\n            <div className=\"volume-slider\" ref={hookUpClick}>\r\n                <div className=\"volume-slider-guide\" ref={sliderGuide}/>\r\n                <div className=\"volume-slider-progress\" ref={sliderProgress}/>\r\n                <div className=\"volume-slider-thumb\" ref={sliderThumb}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Volume;"]},"metadata":{},"sourceType":"module"}