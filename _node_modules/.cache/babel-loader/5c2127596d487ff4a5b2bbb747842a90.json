{"ast":null,"code":"import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useCallback,useMemo,useRef,useState}from\"react\";import{Button,Form}from\"react-bootstrap\";import useAutoHeightTextarea from\"../../../Hooks/useAutoHeightTextarea\";import useEmoticons from\"../../../Hooks/useEmoticons\";import{useFormatRelative}from\"./../../../Hooks/useFormatDate\";import IconBar from\"./../../IconBar/IconBar\";import\"./comment.scss\";var CommentContent=function CommentContent(_ref){var header=_ref.header,text=_ref.text,timestamp=_ref.date,editable=_ref.editable,onChange=_ref.onChange,_ref$onDelete=_ref.onDelete,onDelete=_ref$onDelete===void 0?function(){return null;}:_ref$onDelete,creationMode=_ref.creationMode;var content=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var _useAutoHeightTextare=useAutoHeightTextarea(),_useAutoHeightTextare2=_slicedToArray(_useAutoHeightTextare,1),autoHeight=_useAutoHeightTextare2[0];var _useEmoticons=useEmoticons(),_useEmoticons2=_slicedToArray(_useEmoticons,2),emotiControl=_useEmoticons2[0],Emoticons=_useEmoticons2[1];var _useFormatRelative=useFormatRelative(),_useFormatRelative2=_slicedToArray(_useFormatRelative,1),formatRelative=_useFormatRelative2[0];var dateFormated=useMemo(function(){if(!timestamp)return\"\";return formatRelative(timestamp,{timezone:true});},[timestamp,formatRelative]);var setContentRef=useCallback(function(ref){content.current=ref;emotiControl.current=ref;if(text&&content.current){content.current.value=text;}if(!creationMode){autoHeight(ref);}},[text,content,autoHeight,creationMode,emotiControl]);// const onBlur = useCallback(() => {\n//      (content.current.value === \"\") ? setEditMode(false) : setEditMode(true);\n// }, [content, setEditMode])\nvar onSubmit=useCallback(function(e){e.preventDefault();if(!onChange)return;setEditMode(false);onChange(content.current.value);if(creationMode){content.current.value=\"\";}},[content,onChange,setEditMode,creationMode]);return React.createElement(Form,{onSubmit:onSubmit,onFocus:setEditMode.bind(null,true)// onBlur={onBlur}\n},React.createElement(Form.Group,null,React.createElement(\"header\",null,React.createElement(Form.Label,null,header),React.createElement(\"aside\",{className:editable?\"editable\":\"\"},React.createElement(\"span\",{className:\"comment-publish-date\"},\" \",dateFormated),editable&&!creationMode&&React.createElement(IconBar,{items:{edit:setEditMode.bind(null,true),delete:onDelete.bind(null)}}))),React.createElement(Form.Control,{className:\"record-comments-control\",type:\"textarea\",as:\"textarea\",name:\"comment-conntent\",disabled:!editMode&&!creationMode,ref:setContentRef}),editMode&&React.createElement(Fragment,null,React.createElement(Button,{type:\"submit\"},\"Post\"),React.createElement(Emoticons,null))));};export default CommentContent;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordComments/Comment/Comment.js"],"names":["React","Fragment","useCallback","useMemo","useRef","useState","Button","Form","useAutoHeightTextarea","useEmoticons","useFormatRelative","IconBar","CommentContent","header","text","timestamp","date","editable","onChange","onDelete","creationMode","content","editMode","setEditMode","autoHeight","emotiControl","Emoticons","formatRelative","dateFormated","timezone","setContentRef","ref","current","value","onSubmit","e","preventDefault","bind","edit","delete"],"mappings":"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","sourcesContent":["import React, { Fragment, useCallback, useMemo, useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport useAutoHeightTextarea from \"../../../Hooks/useAutoHeightTextarea\";\r\nimport useEmoticons from \"../../../Hooks/useEmoticons\";\r\nimport { useFormatRelative } from \"./../../../Hooks/useFormatDate\";\r\nimport IconBar from \"./../../IconBar/IconBar\";\r\nimport \"./comment.scss\";\r\n\r\nconst CommentContent = ({\r\n    header,\r\n    text,\r\n    date: timestamp,\r\n    editable,\r\n    onChange,\r\n    onDelete = () => null,\r\n    creationMode }) => {\r\n\r\n    const content = useRef();\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [autoHeight] = useAutoHeightTextarea();\r\n    const [emotiControl, Emoticons] = useEmoticons();\r\n\r\n    const [formatRelative] = useFormatRelative();\r\n    const dateFormated = useMemo(() => {\r\n        if (!timestamp) return \"\";\r\n        return formatRelative(timestamp, { timezone: true })\r\n    }, [timestamp, formatRelative])\r\n\r\n\r\n\r\n\r\n    const setContentRef = useCallback(ref => {\r\n        content.current = ref;\r\n        emotiControl.current = ref;\r\n\r\n        if (text && content.current) {\r\n            content.current.value = text;\r\n        }\r\n        if(!creationMode){\r\n            autoHeight(ref)\r\n        }\r\n    }, [text, content, autoHeight, creationMode, emotiControl])\r\n\r\n\r\n    // const onBlur = useCallback(() => {\r\n    //      (content.current.value === \"\") ? setEditMode(false) : setEditMode(true);\r\n    // }, [content, setEditMode])\r\n\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (!onChange) return;\r\n        setEditMode(false)\r\n        onChange(content.current.value)\r\n        if (creationMode) {\r\n            content.current.value = \"\";\r\n        }\r\n    }, [content, onChange, setEditMode, creationMode])\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}\r\n            onFocus={setEditMode.bind(null, true)}\r\n            // onBlur={onBlur}\r\n            >\r\n            <Form.Group>\r\n                <header>\r\n                    <Form.Label>\r\n                        {header}\r\n                    </Form.Label>\r\n                    <aside className={(editable ? \"editable\" : \"\")}>\r\n                        <span className='comment-publish-date'> {dateFormated}</span>\r\n                        {editable && !creationMode &&\r\n                            <IconBar items={{\r\n                                edit: setEditMode.bind(null, true),\r\n                                delete: onDelete.bind(null)\r\n                            }}\r\n                            />}\r\n                    </aside>\r\n                </header>\r\n\r\n                <Form.Control\r\n                    className=\"record-comments-control\"\r\n                    type=\"textarea\"\r\n                    as=\"textarea\"\r\n                    name=\"comment-conntent\"\r\n                    disabled={!editMode && !creationMode}\r\n                    ref = {setContentRef} />\r\n                {editMode && (\r\n                    <Fragment>\r\n                        <Button type=\"submit\">Post</Button>\r\n                        <Emoticons />\r\n                    </Fragment>\r\n                )}\r\n            </Form.Group>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CommentContent;"]},"metadata":{},"sourceType":"module"}