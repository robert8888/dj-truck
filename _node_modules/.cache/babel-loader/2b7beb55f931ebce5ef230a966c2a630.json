{"ast":null,"code":"import _objectSpread from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import store from\"./../../../../../store\";import{setAvailableEffects}from\"./../../../../../actions\";import{equalPower}from\"./../../../../../utils/sound/converter\";import Reverb from\"./effects/reverb/reverb\";import Delay from\"./effects/delay/delay\";import Flanger from\"./effects/flanger/flanger\";import DubDelay from\"./effects/dubDelay/dubDelay\";import PingPongDelay from\"./effects/PingPongDelay/PingPongDelay\";import Distortion from\"./effects/distortion/distortion\";import Quadrafuzz from\"./effects/quadrafuzz/quadrafuzz\";var Effector=/*#__PURE__*/function(){function Effector(audioContext){_classCallCheck(this,Effector);this.config=store.getState().configuration.effector;this.mainAC=audioContext;this.buildChannels(this.config.channels);this.effects={\"Reverb\":{create:Reverb,params:Reverb.defaultParams().params},\"Flanger\":{create:Flanger,params:Flanger.defaultParams().params},\"Delay\":{create:Delay,params:Delay.defaultParams().params},\"Dub Delay\":{create:DubDelay,params:DubDelay.defaultParams().params},\"Ping Pong Delay\":{create:PingPongDelay,params:PingPongDelay.defaultParams().params},\"Distortion\":{create:Distortion,params:Distortion.defaultParams().params},\"Quadra\":{create:Quadrafuzz,params:Quadrafuzz.defaultParams().params}};var exportEffects={};Object.entries(this.effects).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],element=_ref2[1];return exportEffects[key]=element.params;});store.dispatch(setAvailableEffects(exportEffects));}_createClass(Effector,[{key:\"buildChannels\",value:function buildChannels(channelNumber){this.channels=Array.from({length:channelNumber},function(_,index){return{channelNumber:index};});for(var chNum=0;chNum<channelNumber;chNum++){var channel=this.channels[chNum];channel.inputNode=this.mainAC.createGain();channel.dryNode=this.mainAC.createGain();;channel.wetNode=this.mainAC.createGain();channel.outputNode=this.mainAC.createGain();channel.compressorNode=this.mainAC.createDynamicsCompressor();this.configCompressor(channel.compressorNode);channel.inputNode.connect(channel.dryNode);channel.dryNode.connect(channel.compressorNode);channel.wetNode.connect(channel.compressorNode);channel.compressorNode.connect(channel.outputNode);channel.wetNode.gain.value=0;}}},{key:\"configCompressor\",value:function configCompressor(compressorNode){compressorNode.threshold.setValueAtTime(0,this.mainAC.currentTime);compressorNode.knee.setValueAtTime(3,this.mainAC.currentTime);compressorNode.ratio.setValueAtTime(12,this.mainAC.currentTime);compressorNode.attack.setValueAtTime(0,this.mainAC.currentTime);compressorNode.release.setValueAtTime(0.25,this.mainAC.currentTime);}},{key:\"connect\",value:function connect(inputs){var _this=this;var outputs=[];inputs.forEach(function(inputNode,chNum){inputNode.connect(_this.channels[chNum].inputNode);var output=_this.mainAC.createGain();_this.channels[chNum].outputNode.connect(output);outputs.push(output);});return outputs;}},{key:\"setDryWet\",value:function setDryWet(channelNumber,value){channelNumber--;var channel=this.channels[channelNumber];var _equalPower=equalPower(value/100),dry=_equalPower.a,wet=_equalPower.b;//  let dry = (100 - value) / 100;\n//let wet = value / 100;\nchannel.dryNode.gain.setTargetAtTime(dry,this.mainAC.currentTime,0.01);channel.wetNode.gain.setTargetAtTime(wet,this.mainAC.currentTime,0.01);}},{key:\"connectEffect\",value:function connectEffect(channelNumber,effectName){channelNumber--;//array index\nvar channel=this.channels[channelNumber];if(effectName){this.disconectCurrent(channel);var params=this.assingDefaultParams({},effectName);var effectorChannel=store.getState().effector.channels;if(effectorChannel&&effectorChannel[channelNumber]){params=_objectSpread({},effectorChannel[channelNumber].effects[effectName]);}var effect=new this.effects[effectName].create(this.mainAC,params);channel.currentEffect=effect;effect.connect(channel.inputNode,channel.wetNode);}else{this.disconectCurrent(channel);}}},{key:\"assingDefaultParams\",value:function assingDefaultParams(obj,effect){Object.entries(this.effects[effect].params).forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];obj[key]=value.defaultValue;});return obj;}},{key:\"setParam\",value:function setParam(channelNumber,effect,param){channelNumber--;var channel=this.channels[channelNumber];if(channel.currentEffect&&channel.currentEffect.name===effect){Object.entries(param).forEach(function(_ref5){var _ref6=_slicedToArray(_ref5,2),key=_ref6[0],value=_ref6[1];channel.currentEffect[key]=value;});}}},{key:\"disconectCurrent\",value:function disconectCurrent(channel){if(channel.currentEffect){channel.inputNode.disconnect();channel.inputNode.connect(channel.dryNode);channel.currentEffect.disconnect();channel.currentEffect=null;}}}]);return Effector;}();export{Effector as default};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/effector/effector.js"],"names":["store","setAvailableEffects","equalPower","Reverb","Delay","Flanger","DubDelay","PingPongDelay","Distortion","Quadrafuzz","Effector","audioContext","config","getState","configuration","effector","mainAC","buildChannels","channels","effects","create","params","defaultParams","exportEffects","Object","entries","forEach","key","element","dispatch","channelNumber","Array","from","length","_","index","chNum","channel","inputNode","createGain","dryNode","wetNode","outputNode","compressorNode","createDynamicsCompressor","configCompressor","connect","gain","value","threshold","setValueAtTime","currentTime","knee","ratio","attack","release","inputs","outputs","output","push","dry","a","wet","b","setTargetAtTime","effectName","disconectCurrent","assingDefaultParams","effectorChannel","effect","currentEffect","obj","defaultValue","param","name","disconnect"],"mappings":"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","sourcesContent":["\r\nimport store from \"./../../../../../store\";\r\nimport { setAvailableEffects } from \"./../../../../../actions\";\r\nimport { equalPower } from \"./../../../../../utils/sound/converter\"\r\n\r\nimport Reverb from \"./effects/reverb/reverb\";\r\nimport Delay from \"./effects/delay/delay\";\r\nimport Flanger from \"./effects/flanger/flanger\";\r\nimport DubDelay from \"./effects/dubDelay/dubDelay\";\r\nimport PingPongDelay from \"./effects/PingPongDelay/PingPongDelay\";\r\nimport Distortion from \"./effects/distortion/distortion\";\r\nimport Quadrafuzz from \"./effects/quadrafuzz/quadrafuzz\";\r\n\r\n\r\n\r\nexport default class Effector {\r\n    constructor(audioContext) {\r\n        this.config = store.getState().configuration.effector;\r\n        this.mainAC = audioContext;\r\n\r\n        this.buildChannels(this.config.channels);\r\n\r\n\r\n        this.effects = {\r\n            \"Reverb\": {\r\n                create: Reverb,\r\n                params: Reverb.defaultParams().params,\r\n            },\r\n            \"Flanger\": {\r\n                create: Flanger,\r\n                params: Flanger.defaultParams().params\r\n            },\r\n            \"Delay\": {\r\n                create: Delay,\r\n                params: Delay.defaultParams().params\r\n            },\r\n            \"Dub Delay\": {\r\n                create: DubDelay,\r\n                params: DubDelay.defaultParams().params,\r\n            },\r\n            \"Ping Pong Delay\": {\r\n                create: PingPongDelay,\r\n                params: PingPongDelay.defaultParams().params,\r\n            },\r\n\r\n            \"Distortion\" : {\r\n                create: Distortion,\r\n                params: Distortion.defaultParams().params,\r\n            },\r\n            \"Quadra\" : {\r\n                create : Quadrafuzz,\r\n                params : Quadrafuzz.defaultParams().params\r\n            }\r\n\r\n\r\n        }\r\n\r\n        const exportEffects = {};\r\n        Object.entries(this.effects).forEach(([key, element]) =>\r\n            exportEffects[key] = element.params\r\n        );\r\n        store.dispatch(setAvailableEffects(exportEffects));\r\n    }\r\n\r\n    buildChannels(channelNumber) {\r\n        this.channels =\r\n            Array.from({ length: channelNumber }, (_, index) => ({ channelNumber: index }));\r\n\r\n        for (let chNum = 0; chNum < channelNumber; chNum++) {\r\n            const channel = this.channels[chNum];\r\n\r\n            channel.inputNode = this.mainAC.createGain();\r\n            channel.dryNode = this.mainAC.createGain();;\r\n            channel.wetNode = this.mainAC.createGain();\r\n            channel.outputNode = this.mainAC.createGain();\r\n            channel.compressorNode = this.mainAC.createDynamicsCompressor();\r\n            this.configCompressor(channel.compressorNode);\r\n\r\n            channel.inputNode.connect(channel.dryNode);\r\n\r\n\r\n            channel.dryNode.connect(channel.compressorNode);\r\n            channel.wetNode.connect(channel.compressorNode);\r\n\r\n            channel.compressorNode.connect(channel.outputNode);\r\n\r\n            channel.wetNode.gain.value = 0;\r\n        }\r\n    }\r\n\r\n    configCompressor(compressorNode){\r\n        compressorNode.threshold.setValueAtTime( 0, this.mainAC.currentTime);\r\n        compressorNode.knee.setValueAtTime(3, this.mainAC.currentTime);\r\n        compressorNode.ratio.setValueAtTime(12, this.mainAC.currentTime);\r\n        compressorNode.attack.setValueAtTime(0, this.mainAC.currentTime);\r\n        compressorNode.release.setValueAtTime(0.25, this.mainAC.currentTime);\r\n    }\r\n\r\n\r\n    connect(inputs) {\r\n        const outputs = [];\r\n\r\n        inputs.forEach((inputNode, chNum) => {\r\n            inputNode.connect(this.channels[chNum].inputNode);\r\n\r\n            const output = this.mainAC.createGain();\r\n            this.channels[chNum].outputNode.connect(output);\r\n            outputs.push(output)\r\n        });\r\n\r\n        return outputs;\r\n    }\r\n\r\n\r\n    setDryWet(channelNumber, value) {\r\n        channelNumber--;\r\n        const channel = this.channels[channelNumber];\r\n\r\n        const {a: dry, b: wet} = equalPower(value / 100);\r\n      //  let dry = (100 - value) / 100;\r\n        //let wet = value / 100;\r\n\r\n\r\n        channel.dryNode.gain.setTargetAtTime(dry, this.mainAC.currentTime, 0.01);\r\n        channel.wetNode.gain.setTargetAtTime(wet, this.mainAC.currentTime, 0.01);\r\n    }\r\n\r\n    connectEffect(channelNumber, effectName) {\r\n        channelNumber--;//array index\r\n        const channel = this.channels[channelNumber];\r\n\r\n        if (effectName) {\r\n            this.disconectCurrent(channel);\r\n\r\n            let params = this.assingDefaultParams({}, effectName);\r\n            const effectorChannel = store.getState().effector.channels;\r\n            if (effectorChannel && effectorChannel[channelNumber]) {\r\n                params = { ...effectorChannel[channelNumber].effects[effectName] }\r\n            }\r\n\r\n            const effect = new this.effects[effectName].create(this.mainAC, params);\r\n            channel.currentEffect = effect;\r\n\r\n            effect.connect(channel.inputNode, channel.wetNode)\r\n\r\n        } else {\r\n            this.disconectCurrent(channel);\r\n        }\r\n\r\n    }\r\n\r\n    assingDefaultParams(obj, effect) {\r\n        Object.entries(this.effects[effect].params).forEach(([key, value]) => {\r\n            obj[key] = value.defaultValue;\r\n        })\r\n        return obj;\r\n    }\r\n\r\n    setParam(channelNumber, effect, param) {\r\n        channelNumber--;\r\n        const channel = this.channels[channelNumber];\r\n\r\n        if (channel.currentEffect && channel.currentEffect.name === effect) {\r\n            Object.entries(param).forEach(([key, value]) => {\r\n                channel.currentEffect[key] = value;\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    disconectCurrent(channel) {\r\n        if (channel.currentEffect) {\r\n            channel.inputNode.disconnect();\r\n            channel.inputNode.connect(channel.dryNode);\r\n            channel.currentEffect.disconnect();\r\n            channel.currentEffect = null;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}