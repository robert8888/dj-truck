{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\PitchControl\\\\PitchControl.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./pitch-control.scss\";\n\nconst PitchControl = props => {\n  const [sliderRange, setSliderRange] = useState(null);\n  const [sliderCurrnetPosition, setSliderCurrentPosition] = useState(null);\n  const [sliderPrevPosition, setSliderPrevPosition] = useState(null);\n  const [startDraging, setStartDraging] = useState(null);\n  const sliderRangeElement = useRef();\n  const sliderThumbElement = useRef();\n  const sliderAreaElement = useRef();\n\n  const mouseDownHandle = event => {\n    if (event.target === sliderAreaElement.current || event.target === sliderRangeElement.current) {\n      // area clicked\n      let clickY = event.clientY - sliderAreaElement.current.getBoundingClientRect().top;\n      setSliderPrevPosition(sliderCurrnetPosition);\n      setSliderCurrentPosition(clickY);\n      document.addEventListener('mouseup', mouseUpHandler);\n      document.addEventListener('dragend', mouseUpHandler);\n    } else if (event.target === sliderThumbElement.current) {\n      // thumb clicked\n      console.log('clicked thumb');\n      let shiftY = event.clientY - sliderThumbElement.current.getBoundingClientRect().top;\n      document.addEventListener('mousemove', e => mouseMoveHandler(event, shiftY));\n    }\n  };\n\n  const mouseUpHandler = event => {\n    setSliderCurrentPosition(sliderPrevPosition);\n    document.removeEventListener('mouseup', mouseUpHandler);\n    document.removeEventListener('dragend', mouseUpHandler);\n  };\n\n  const mouseMoveHandler = (event, shiftY) => {\n    console.log('moving', event, shiftY);\n    let y = event.clientY - sliderAreaElement.current.getBoundingClientRect().top;\n    setSliderCurrentPosition(y);\n  };\n\n  useEffect(() => {\n    setSliderCurrentPosition(window.getComputedStyle(sliderThumbElement.current).top);\n    setSliderRange(window.getComputedStyle(sliderRangeElement.current).height);\n    sliderAreaElement.current.addEventListener('mousedown', mouseDownHandle);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"pitch-control \" + \"pitch-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: sliderAreaElement,\n    className: \"pitch-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: sliderRangeElement,\n    className: \"slider-range\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    ref: sliderThumbElement,\n    style: sliderCurrnetPosition && {\n      top: sliderCurrnetPosition\n    },\n    className: \"slider-thumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nexport default PitchControl;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/PitchControl/PitchControl.js"],"names":["React","useState","useEffect","useRef","PitchControl","props","sliderRange","setSliderRange","sliderCurrnetPosition","setSliderCurrentPosition","sliderPrevPosition","setSliderPrevPosition","startDraging","setStartDraging","sliderRangeElement","sliderThumbElement","sliderAreaElement","mouseDownHandle","event","target","current","clickY","clientY","getBoundingClientRect","top","document","addEventListener","mouseUpHandler","console","log","shiftY","e","mouseMoveHandler","removeEventListener","y","window","getComputedStyle","height","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAmD,OAAnD;AACA,OAAO,sBAAP;;AAEA,MAAMC,YAAY,GAAEC,KAAK,IAAG;AAExB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACO,qBAAD,EAAwBC,wBAAxB,IAAqDR,QAAQ,CAAC,IAAD,CAAnE;AACA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA+CV,QAAQ,CAAC,IAAD,CAA7D;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAmCZ,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAMa,kBAAkB,GAAGX,MAAM,EAAjC;AACA,QAAMY,kBAAkB,GAAGZ,MAAM,EAAjC;AACA,QAAMa,iBAAiB,GAAGb,MAAM,EAAhC;;AAGA,QAAMc,eAAe,GAAGC,KAAK,IAAG;AAC5B,QAAGA,KAAK,CAACC,MAAN,KAAiBH,iBAAiB,CAACI,OAAnC,IAA8CF,KAAK,CAACC,MAAN,KAAiBL,kBAAkB,CAACM,OAArF,EAA6F;AAAE;AAC3F,UAAIC,MAAM,GAAGH,KAAK,CAACI,OAAN,GAAgBN,iBAAiB,CAACI,OAAlB,CAA0BG,qBAA1B,GAAkDC,GAA/E;AACAb,MAAAA,qBAAqB,CAACH,qBAAD,CAArB;AACAC,MAAAA,wBAAwB,CAACY,MAAD,CAAxB;AACAI,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,cAArC;AACAF,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,cAArC;AACH,KAND,MAMO,IAAGT,KAAK,CAACC,MAAN,KAAiBJ,kBAAkB,CAACK,OAAvC,EAA+C;AAAE;AACpDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAIC,MAAM,GAAGZ,KAAK,CAACI,OAAN,GAAgBP,kBAAkB,CAACK,OAAnB,CAA2BG,qBAA3B,GAAmDC,GAAhF;AAEAC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCK,CAAC,IAAIC,gBAAgB,CAACd,KAAD,EAAQY,MAAR,CAA5D;AACH;AACJ,GAbD;;AAeA,QAAMH,cAAc,GAAGT,KAAK,IAAI;AAC5BT,IAAAA,wBAAwB,CAACC,kBAAD,CAAxB;AACAe,IAAAA,QAAQ,CAACQ,mBAAT,CAA6B,SAA7B,EAAwCN,cAAxC;AACAF,IAAAA,QAAQ,CAACQ,mBAAT,CAA6B,SAA7B,EAAwCN,cAAxC;AACH,GAJD;;AAMA,QAAMK,gBAAgB,GAAG,CAACd,KAAD,EAAQY,MAAR,KAAkB;AACvCF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,KAAtB,EAA6BY,MAA7B;AACA,QAAII,CAAC,GAAGhB,KAAK,CAACI,OAAN,GAAgBN,iBAAiB,CAACI,OAAlB,CAA0BG,qBAA1B,GAAkDC,GAA1E;AACAf,IAAAA,wBAAwB,CAACyB,CAAD,CAAxB;AACH,GAJD;;AAMAhC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,wBAAwB,CAAC0B,MAAM,CAACC,gBAAP,CAAwBrB,kBAAkB,CAACK,OAA3C,EAAoDI,GAArD,CAAxB;AACAjB,IAAAA,cAAc,CAAC4B,MAAM,CAACC,gBAAP,CAAwBtB,kBAAkB,CAACM,OAA3C,EAAoDiB,MAArD,CAAd;AAEArB,IAAAA,iBAAiB,CAACI,OAAlB,CAA0BM,gBAA1B,CAA2C,WAA3C,EAAwDT,eAAxD;AACH,GALQ,EAKN,EALM,CAAT;AAOA,SACI;AAAK,IAAA,SAAS,EAAE,mBAAmB,QAAnB,GAA8BZ,KAAK,CAACiC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEtB,iBAAV;AAA6B,IAAA,SAAS,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEF,kBAAV;AAA8B,IAAA,SAAS,EAAC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,GAAG,EAAEC,kBAAV;AAA8B,IAAA,KAAK,EAAEP,qBAAqB,IAAI;AAACgB,MAAAA,GAAG,EAAEhB;AAAN,KAA9D;AAA6F,IAAA,SAAS,EAAC,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAQH,CArDD;;AAuDA,eAAeJ,YAAf","sourcesContent":["import React, { useState , useEffect, useRef} from \"react\";\r\nimport \"./pitch-control.scss\";\r\n\r\nconst PitchControl= props =>{\r\n\r\n    const [sliderRange, setSliderRange] = useState(null);\r\n    const [sliderCurrnetPosition, setSliderCurrentPosition ] = useState(null);\r\n    const [sliderPrevPosition, setSliderPrevPosition ] = useState(null);\r\n    const [startDraging, setStartDraging ] = useState(null);\r\n    const sliderRangeElement = useRef();\r\n    const sliderThumbElement = useRef();\r\n    const sliderAreaElement = useRef();\r\n\r\n\r\n    const mouseDownHandle = event =>{\r\n        if(event.target === sliderAreaElement.current || event.target === sliderRangeElement.current){ // area clicked\r\n            let clickY = event.clientY - sliderAreaElement.current.getBoundingClientRect().top;\r\n            setSliderPrevPosition(sliderCurrnetPosition);\r\n            setSliderCurrentPosition(clickY);\r\n            document.addEventListener('mouseup', mouseUpHandler);\r\n            document.addEventListener('dragend', mouseUpHandler);\r\n        } else if(event.target === sliderThumbElement.current){ // thumb clicked\r\n            console.log('clicked thumb');\r\n            let shiftY = event.clientY - sliderThumbElement.current.getBoundingClientRect().top;\r\n            \r\n            document.addEventListener('mousemove', e => mouseMoveHandler(event, shiftY));\r\n        }\r\n    }\r\n\r\n    const mouseUpHandler = event => {\r\n        setSliderCurrentPosition(sliderPrevPosition);\r\n        document.removeEventListener('mouseup', mouseUpHandler);\r\n        document.removeEventListener('dragend', mouseUpHandler);\r\n    }\r\n\r\n    const mouseMoveHandler = (event, shiftY) =>{\r\n        console.log('moving', event, shiftY)\r\n        let y = event.clientY - sliderAreaElement.current.getBoundingClientRect().top;\r\n        setSliderCurrentPosition(y);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSliderCurrentPosition(window.getComputedStyle(sliderThumbElement.current).top);\r\n        setSliderRange(window.getComputedStyle(sliderRangeElement.current).height);\r\n\r\n        sliderAreaElement.current.addEventListener('mousedown', mouseDownHandle);\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"pitch-control \" + \"pitch-\" + props.name}>\r\n            <div ref={sliderAreaElement} className=\"pitch-area\">\r\n                <div ref={sliderRangeElement} className=\"slider-range\"/>\r\n                <div ref={sliderThumbElement} style={sliderCurrnetPosition && {top: sliderCurrnetPosition}}  className=\"slider-thumb\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PitchControl;"]},"metadata":{},"sourceType":"module"}