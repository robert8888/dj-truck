{"ast":null,"code":"import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useRef,useEffect,useState}from\"react\";import{formater}from\"./../../../../../../../utils/time/timeFromater\";import{connect}from\"react-redux\";import Console from\"./../../../../../core/console/console\";var TimeLeft=function TimeLeft(_ref){var duration=_ref.duration,playback=_ref.playback,name=_ref.name;var container=useRef(null);var intervalHandler=useRef(null);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),channelInterface=_useState2[0],setChannelInterface=_useState2[1];useEffect(function(){setChannelInterface(Console.Get().getChannelInterface(name));},[setChannelInterface,name]);useEffect(function(){if(!channelInterface||!container.current)return;if(playback){intervalHandler.current=setInterval(function(){var left=channelInterface.getCurrentTime().left;left=formater.secondsToStr(left);if(!container.textContent)return;container.current.textContent=left;},500);}else{clearInterval(intervalHandler.current);}},[playback,duration,container,intervalHandler,channelInterface]);useEffect(function(){return function(){if(intervalHandler.current){clearInterval(intervalHandler.current);}};},[intervalHandler]);return React.createElement(\"span\",{className:\"time-left\",ref:container});};var mapsStateToProps=function mapsStateToProps(state,ownProps){return{duration:state.console.channel[ownProps.name].track.duration,playback:state.console.channel[ownProps.name].playBackState.paused};};export default connect(mapsStateToProps)(TimeLeft);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Deck/TrackInfo/TimeLeft/TimeLeft.js"],"names":["React","useRef","useEffect","useState","formater","connect","Console","TimeLeft","duration","playback","name","container","intervalHandler","channelInterface","setChannelInterface","Get","getChannelInterface","current","setInterval","left","getCurrentTime","secondsToStr","textContent","clearInterval","mapsStateToProps","state","ownProps","console","channel","track","playBackState","paused"],"mappings":"kHAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAkD,OAAlD,CACA,OAASC,QAAT,KAAyB,gDAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uCAApB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAgC,IAA9BC,CAAAA,QAA8B,MAA9BA,QAA8B,CAApBC,QAAoB,MAApBA,QAAoB,CAAVC,IAAU,MAAVA,IAAU,CAC7C,GAAMC,CAAAA,SAAS,CAAGV,MAAM,CAAC,IAAD,CAAxB,CACA,GAAMW,CAAAA,eAAe,CAAGX,MAAM,CAAC,IAAD,CAA9B,CAF6C,cAIIE,QAAQ,CAAC,IAAD,CAJZ,wCAItCU,gBAJsC,eAIpBC,mBAJoB,eAM7CZ,SAAS,CAAC,UAAI,CACVY,mBAAmB,CAACR,OAAO,CAACS,GAAR,GAAcC,mBAAd,CAAkCN,IAAlC,CAAD,CAAnB,CACH,CAFQ,CAEN,CAACI,mBAAD,CAAsBJ,IAAtB,CAFM,CAAT,CAIAR,SAAS,CAAC,UAAI,CACV,GAAG,CAACW,gBAAD,EAAqB,CAACF,SAAS,CAACM,OAAnC,CAA4C,OAE5C,GAAGR,QAAH,CAAY,CACRG,eAAe,CAACK,OAAhB,CAA0BC,WAAW,CAAC,UAAI,CACtC,GAAIC,CAAAA,IAAI,CAAGN,gBAAgB,CAACO,cAAjB,GAAkCD,IAA7C,CACAA,IAAI,CAAGf,QAAQ,CAACiB,YAAT,CAAsBF,IAAtB,CAAP,CACA,GAAG,CAACR,SAAS,CAACW,WAAd,CAA2B,OAC3BX,SAAS,CAACM,OAAV,CAAkBK,WAAlB,CAAgCH,IAAhC,CACH,CALoC,CAKlC,GALkC,CAArC,CAMH,CAPD,IAOO,CACHI,aAAa,CAACX,eAAe,CAACK,OAAjB,CAAb,CACH,CACJ,CAbQ,CAaN,CAACR,QAAD,CACCD,QADD,CAECG,SAFD,CAGCC,eAHD,CAICC,gBAJD,CAbM,CAAT,CAmBAX,SAAS,CAAC,iBAAI,WAAK,CACf,GAAGU,eAAe,CAACK,OAAnB,CAA2B,CACvBM,aAAa,CAACX,eAAe,CAACK,OAAjB,CAAb,CACH,CACJ,CAJS,EAAD,CAIN,CAACL,eAAD,CAJM,CAAT,CAMA,MACI,6BAAM,SAAS,CAAC,WAAhB,CAA4B,GAAG,CAAED,SAAjC,EADJ,CAGH,CAtCD,CAwCA,GAAMa,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAQC,QAAR,QAAsB,CAC3ClB,QAAQ,CAAEiB,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAAChB,IAA/B,EAAqCmB,KAArC,CAA2CrB,QADV,CAE3CC,QAAQ,CAAEgB,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAAChB,IAA/B,EAAqCoB,aAArC,CAAmDC,MAFlB,CAAtB,EAAzB,CAKA,cAAe1B,CAAAA,OAAO,CAACmB,gBAAD,CAAP,CAA0BjB,QAA1B,CAAf","sourcesContent":["import React, { useRef, useEffect, useState} from \"react\"\r\nimport { formater } from \"./../../../../../../../utils/time/timeFromater\";\r\nimport { connect } from \"react-redux\";\r\nimport Console from \"./../../../../../core/console/console\";\r\n\r\nconst TimeLeft = ({duration, playback, name}) => {\r\n    const container = useRef(null);\r\n    const intervalHandler = useRef(null)\r\n\r\n    const [channelInterface, setChannelInterface] =  useState(null);\r\n\r\n    useEffect(()=>{ \r\n        setChannelInterface(Console.Get().getChannelInterface(name));\r\n    }, [setChannelInterface, name])\r\n\r\n    useEffect(()=>{\r\n        if(!channelInterface || !container.current) return;\r\n\r\n        if(playback){\r\n            intervalHandler.current = setInterval(()=>{\r\n                let left = channelInterface.getCurrentTime().left;\r\n                left = formater.secondsToStr(left);\r\n                if(!container.textContent) return;\r\n                container.current.textContent = left;\r\n            }, 500)\r\n        } else {\r\n            clearInterval(intervalHandler.current);\r\n        }\r\n    }, [playback,\r\n        duration,\r\n        container,\r\n        intervalHandler,\r\n        channelInterface])\r\n\r\n    useEffect(()=>()=> {\r\n        if(intervalHandler.current){\r\n            clearInterval(intervalHandler.current)\r\n        }\r\n    }, [intervalHandler]);\r\n\r\n    return (\r\n        <span className=\"time-left\" ref={container}/>\r\n    )\r\n}\r\n\r\nconst mapsStateToProps = (state, ownProps) => ({\r\n    duration: state.console.channel[ownProps.name].track.duration,\r\n    playback: state.console.channel[ownProps.name].playBackState.paused,\r\n})\r\n\r\nexport default connect(mapsStateToProps)(TimeLeft);"]},"metadata":{},"sourceType":"module"}