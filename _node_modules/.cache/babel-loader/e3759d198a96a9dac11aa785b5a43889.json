{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\Deck.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setPitch } from './../../actions/actions';\nimport \"./deck.scss\"; //import { analyze } from 'web-audio-beat-detector';\n\nimport youTubeApi from \"./../../apis/yt/ytApi\";\nimport Player from \"./Player/Player\";\nimport TrackInfo from \"./TrackInfo/TrackInfo\";\nimport PlayBackControls from \"./PlayBackControls/PlayBackControls\";\nimport PitchControl from \"./PitchControl/PitchControl\";\n\nconst getApi = apiName => {\n  switch (apiName) {\n    case \"YouTube\":\n      return youTubeApi;\n\n    default:\n      return null;\n  }\n};\n\nclass Deck extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('asdf0');\n    return true;\n    return this.props.state.paused !== nextProps.state.paused || this.props.state.cueActive !== nextProps.state.cueActive;\n  }\n\n  render() {\n    let api = getApi(this.props.track.source);\n    let url = api && api.getUrl(this.props.track.id) || null;\n    return React.createElement(\"div\", {\n      className: \"deck deck-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(TrackInfo, {\n      name: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Player, {\n      name: this.props.name,\n      url: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(PitchControl, {\n      name: this.props.name,\n      onChange: pitch => this.props.setPitch(pitch),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(PlayBackControls, {\n      name: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  track: state.console.chanel[ownProps.name].track,\n  state: state.console.chanel[ownProps.name].state\n});\n\nconst mapDispachToProps = dispach => ({\n  setPitch: value => dispach(setPitch(value))\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Deck);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/Deck.js"],"names":["React","connect","setPitch","youTubeApi","Player","TrackInfo","PlayBackControls","PitchControl","getApi","apiName","Deck","Component","shouldComponentUpdate","nextProps","nextState","console","log","props","state","paused","cueActive","render","api","track","source","url","getUrl","id","name","pitch","mapStateToProps","ownProps","chanel","mapDispachToProps","dispach","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAwB,yBAAxB;AACA,OAAO,aAAP,C,CAGA;;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAGA,MAAMC,MAAM,GAAIC,OAAD,IAAY;AACvB,UAAOA,OAAP;AACI,SAAK,SAAL;AAAgB,aAAON,UAAP;;AAEhB;AAAU,aAAO,IAAP;AAHd;AAKH,CAND;;AAQA,MAAMO,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAmC;AAE/BC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAO,IAAP;AACA,WAAQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,KAA4BN,SAAS,CAACK,KAAV,CAAgBC,MAA5C,IACR,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,SAAjB,KAA+BP,SAAS,CAACK,KAAV,CAAgBE,SAD/C;AAEH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAGd,MAAM,CAAC,KAAKS,KAAL,CAAWM,KAAX,CAAiBC,MAAlB,CAAhB;AACA,QAAIC,GAAG,GAAIH,GAAG,IAAIA,GAAG,CAACI,MAAJ,CAAW,KAAKT,KAAL,CAAWM,KAAX,CAAiBI,EAA5B,CAAR,IAA4C,IAAtD;AAEA,WACI;AAAK,MAAA,SAAS,EAAG,eAAe,KAAKV,KAAL,CAAWW,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAG,KAAKX,KAAL,CAAWW,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,KAAKX,KAAL,CAAWW,IAA1B;AAAiC,MAAA,GAAG,EAAEH,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAe,MAAA,IAAI,EAAG,KAAKR,KAAL,CAAWW,IAAjC;AAAwC,MAAA,QAAQ,EAAGC,KAAK,IAAI,KAAKZ,KAAL,CAAWf,QAAX,CAAoB2B,KAApB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAMI,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAG,KAAKZ,KAAL,CAAWW,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUC;;AAvB0B;;AA2BnC,MAAME,eAAe,GAAG,CAACZ,KAAD,EAAQa,QAAR,MAAsB;AAC1CR,EAAAA,KAAK,EAAGL,KAAK,CAACH,OAAN,CAAciB,MAAd,CAAqBD,QAAQ,CAACH,IAA9B,EAAoCL,KADF;AAE1CL,EAAAA,KAAK,EAAGA,KAAK,CAACH,OAAN,CAAciB,MAAd,CAAqBD,QAAQ,CAACH,IAA9B,EAAoCV;AAFF,CAAtB,CAAxB;;AAKA,MAAMe,iBAAiB,GAAGC,OAAO,KAAK;AAClChC,EAAAA,QAAQ,EAAIiC,KAAD,IAAWD,OAAO,CAAChC,QAAQ,CAACiC,KAAD,CAAT;AADK,CAAL,CAAjC;;AAIA,eAAelC,OAAO,CAAC6B,eAAD,EAAkBG,iBAAlB,CAAP,CAA4CvB,IAA5C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {setPitch } from './../../actions/actions';\r\nimport \"./deck.scss\";\r\n\r\n\r\n//import { analyze } from 'web-audio-beat-detector';\r\n\r\nimport youTubeApi from \"./../../apis/yt/ytApi\";\r\nimport Player from \"./Player/Player\";\r\nimport TrackInfo from \"./TrackInfo/TrackInfo\";\r\nimport PlayBackControls from \"./PlayBackControls/PlayBackControls\";\r\nimport PitchControl from \"./PitchControl/PitchControl\";\r\n\r\n\r\nconst getApi = (apiName) =>{\r\n    switch(apiName){\r\n        case \"YouTube\": return youTubeApi;\r\n\r\n        default : return null;\r\n    }\r\n}\r\n\r\nclass Deck extends React.Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        console.log('asdf0');\r\n        return true;\r\n        return (this.props.state.paused !== nextProps.state.paused ||\r\n        this.props.state.cueActive !== nextProps.state.cueActive)\r\n    }\r\n\r\n    render() {\r\n        let api = getApi(this.props.track.source);\r\n        let url = (api && api.getUrl(this.props.track.id)) || null;\r\n\r\n        return (\r\n            <div className={ \"deck deck-\" + this.props.name } >\r\n                <TrackInfo name={ this.props.name } />\r\n                <div className=\"flex-container\">\r\n                    <Player name={ this.props.name } url={url} />\r\n                    <PitchControl  name={ this.props.name } onChange={ pitch => this.props.setPitch(pitch)} />\r\n                </div>\r\n                <PlayBackControls name={ this.props.name } />\r\n            </div>\r\n            )\r\n        }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    track : state.console.chanel[ownProps.name].track,\r\n    state : state.console.chanel[ownProps.name].state,\r\n})\r\n\r\nconst mapDispachToProps = dispach => ({\r\n    setPitch : (value) => dispach(setPitch(value)), \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Deck);"]},"metadata":{},"sourceType":"module"}