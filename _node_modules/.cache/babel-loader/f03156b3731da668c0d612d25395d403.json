{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\PlayListExplorer\\\\Explorer\\\\ExplorerTree\\\\DirElement\\\\DirElement.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport ItemTypes from \"../../../../../appItemTypes\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport UUID from \"uuidjs\";\nimport ClassName from \"classnames\";\nimport { faFolder, faAngleRight, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst DirElement = props => {\n  const {\n    name,\n    path,\n    open,\n    empty,\n    renameMode,\n    renameInput\n  } = props;\n  const fullPath = [...path, name];\n  const ref = useRef(null);\n  const handleDrop = useCallback(item => {}, []);\n  const [, drag] = useDrag({\n    item: {\n      type: ItemTypes.DIR,\n      fullPath: fullPath\n    }\n  });\n  const [, drop] = useDrop({\n    accept: ItemTypes.TRACK,\n    drop: handleDrop\n  });\n  let currentSelected = false;\n\n  if ([...path, name].join(\"\") === props.currentSelection.join(\"\")) {\n    currentSelected = true;\n  }\n\n  const liClassList = ClassName(\"list-item item-dir\", {\n    \"item-dir--empty\": empty\n  }, {\n    \"item--selected\": currentSelected\n  });\n  let content = name;\n\n  if (currentSelected && renameMode) {\n    content = renameInput(name);\n  }\n\n  drag(drop(ref));\n  return React.createElement(\"li\", {\n    ref: ref,\n    onClick: props.onClick,\n    onContextMenu: props.onContextMenu.bind(null, path),\n    className: liClassList,\n    \"data-path\": path.join(\"/\"),\n    key: UUID.genV1(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, !empty && React.createElement(\"button\", {\n    className: \"btn-dir \" + (open ? \"btn-dir--expand\" : \"btn-dir--colapse\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"icon\",\n    icon: open ? faAngleDown : faAngleRight,\n    onClick: props.buttonClick.bind(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(FontAwesomeIcon, {\n    className: \"icon icon-dir\",\n    icon: faFolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), content);\n};\n\nconst mapStateToProps = state => ({\n  currentSelection: state.playList.currentSelection\n});\n\nexport default connect(mapStateToProps)(DirElement);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/PlayListExplorer/Explorer/ExplorerTree/DirElement/DirElement.js"],"names":["React","connect","ItemTypes","useDrag","useDrop","UUID","ClassName","faFolder","faAngleRight","faAngleDown","FontAwesomeIcon","DirElement","props","name","path","open","empty","renameMode","renameInput","fullPath","ref","useRef","handleDrop","useCallback","item","drag","type","DIR","drop","accept","TRACK","currentSelected","join","currentSelection","liClassList","content","onClick","onContextMenu","bind","genV1","buttonClick","mapStateToProps","state","playList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,WAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,QADJ,EAEIC,YAFJ,EAGIC,WAHJ,QAIO,mCAJP;AAKA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,KAApB;AAA4BC,IAAAA,UAA5B;AAAwCC,IAAAA;AAAxC,MAAwDN,KAA9D;AACA,QAAMO,QAAQ,GAAG,CAAC,GAAGL,IAAJ,EAAUD,IAAV,CAAjB;AACA,QAAMO,GAAG,GAAGC,MAAM,CAAC,IAAD,CAAlB;AAEA,QAAMC,UAAU,GAAGC,WAAW,CAAEC,IAAD,IAAQ,CAEtC,CAF6B,EAE3B,EAF2B,CAA9B;AAIA,QAAM,GAAIC,IAAJ,IAAYtB,OAAO,CAAC;AACtBqB,IAAAA,IAAI,EAAE;AACDE,MAAAA,IAAI,EAAExB,SAAS,CAACyB,GADf;AAEDR,MAAAA,QAAQ,EAAEA;AAFT;AADgB,GAAD,CAAzB;AAOA,QAAM,GAAIS,IAAJ,IAAYxB,OAAO,CAAC;AACtByB,IAAAA,MAAM,EAAG3B,SAAS,CAAC4B,KADG;AAEtBF,IAAAA,IAAI,EAAEN;AAFgB,GAAD,CAAzB;AAMA,MAAIS,eAAe,GAAG,KAAtB;;AACA,MAAI,CAAC,GAAGjB,IAAJ,EAAUD,IAAV,EAAgBmB,IAAhB,CAAqB,EAArB,MAA6BpB,KAAK,CAACqB,gBAAN,CAAuBD,IAAvB,CAA4B,EAA5B,CAAjC,EAAkE;AAC9DD,IAAAA,eAAe,GAAG,IAAlB;AACH;;AACD,QAAMG,WAAW,GAAG5B,SAAS,CACzB,oBADyB,EAEzB;AAAE,uBAAmBU;AAArB,GAFyB,EAGzB;AAAE,sBAAkBe;AAApB,GAHyB,CAA7B;AAKA,MAAII,OAAO,GAAGtB,IAAd;;AACA,MAAIkB,eAAe,IAAId,UAAvB,EAAmC;AAC/BkB,IAAAA,OAAO,GAAGjB,WAAW,CAACL,IAAD,CAArB;AACH;;AAEDY,EAAAA,IAAI,CAACG,IAAI,CAACR,GAAD,CAAL,CAAJ;AACA,SACI;AACI,IAAA,GAAG,EAAEA,GADT;AAEI,IAAA,OAAO,EAAER,KAAK,CAACwB,OAFnB;AAGI,IAAA,aAAa,EAAExB,KAAK,CAACyB,aAAN,CAAoBC,IAApB,CAAyB,IAAzB,EAA+BxB,IAA/B,CAHnB;AAII,IAAA,SAAS,EAAEoB,WAJf;AAKI,iBAAWpB,IAAI,CAACkB,IAAL,CAAU,GAAV,CALf;AAMI,IAAA,GAAG,EAAE3B,IAAI,CAACkC,KAAL,EANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOK,CAACvB,KAAD,IACG;AACI,IAAA,SAAS,EAAE,cAAeD,IAAD,GAAS,iBAAT,GAA6B,kBAA3C,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,eAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,IAAI,EAAGA,IAAD,GAASN,WAAT,GAAuBD,YAFjC;AAGI,IAAA,OAAO,EAAEI,KAAK,CAAC4B,WAAN,CAAkBF,IAAlB,CAAuB,IAAvB,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARR,EAeI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,eAA3B;AAA2C,IAAA,IAAI,EAAE/B,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBK4B,OAhBL,CADJ;AAqBH,CA1DD;;AA6DA,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,gBAAgB,EAAES,KAAK,CAACC,QAAN,CAAeV;AADH,CAAL,CAA7B;;AAIA,eAAehC,OAAO,CAACwC,eAAD,CAAP,CAAyB9B,UAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ItemTypes from \"../../../../../appItemTypes\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport UUID from \"uuidjs\";\r\nimport ClassName from \"classnames\"\r\nimport {\r\n    faFolder,\r\n    faAngleRight,\r\n    faAngleDown\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst DirElement = props => {\r\n    const { name, path, open, empty , renameMode, renameInput } = props;\r\n    const fullPath = [...path, name]\r\n    const ref = useRef(null)\r\n\r\n    const handleDrop = useCallback((item)=>{\r\n        \r\n    }, [])\r\n\r\n    const [ , drag] = useDrag({\r\n        item: { \r\n             type: ItemTypes.DIR,\r\n             fullPath: fullPath\r\n            },\r\n    })\r\n\r\n    const [ , drop] = useDrop({\r\n        accept : ItemTypes.TRACK,\r\n        drop: handleDrop\r\n    })\r\n\r\n\r\n    let currentSelected = false;\r\n    if ([...path, name].join(\"\") === props.currentSelection.join(\"\")) {\r\n        currentSelected = true;\r\n    }\r\n    const liClassList = ClassName(\r\n        \"list-item item-dir\",\r\n        { \"item-dir--empty\": empty },\r\n        { \"item--selected\": currentSelected }\r\n    )\r\n    let content = name;\r\n    if (currentSelected && renameMode) {\r\n        content = renameInput(name)\r\n    }\r\n\r\n    drag(drop(ref))\r\n    return (\r\n        <li\r\n            ref={ref}\r\n            onClick={props.onClick}\r\n            onContextMenu={props.onContextMenu.bind(null, path)}\r\n            className={liClassList}\r\n            data-path={path.join(\"/\")}\r\n            key={UUID.genV1()}>\r\n            {!empty &&\r\n                <button\r\n                    className={\"btn-dir \" + ((open) ? \"btn-dir--expand\" : \"btn-dir--colapse\")}>\r\n                    <FontAwesomeIcon\r\n                        className=\"icon\"\r\n                        icon={(open) ? faAngleDown : faAngleRight}\r\n                        onClick={props.buttonClick.bind(null)} />\r\n                </button>}\r\n            <FontAwesomeIcon className=\"icon icon-dir\" icon={faFolder} />\r\n            {content}\r\n        </li>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    currentSelection: state.playList.currentSelection\r\n})\r\n\r\nexport default connect(mapStateToProps)(DirElement);\r\n\r\n"]},"metadata":{},"sourceType":"module"}