{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\PlayBackControls\\\\PlayBackControls.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { togglePlay, toggleCue } from \"./../../../actions/actions\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons';\nimport \"./play-back.scss\"; //onClick={ props.onCuePress.bind(null, props.name) }\n\nconst PlayBackControls = props => {\n  const cueMouseDown = () => {\n    props.onCueToggle();\n    document.addEventListener('mouseup', mouseUp);\n  };\n\n  const mouseUp = event => {\n    document.elementFromPoint(event.clientX, event.clientY);\n    const buttonUnderMouse = document.elementFromPoint(event.clientX, event.clientY).closest('button');\n\n    if (buttonUnderMouse) {\n      if (buttonUnderMouse.closest('div').classList.contains(\"play-back-controls-\" + props.name)) {\n        props.canelCueAndPlay();\n      }\n    }\n\n    props.onCueToggle();\n    document.removeEventListener('mouseup', mouseUp);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"play-back-controls-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"btn-play \" + (!props.playPressed && \"btn--pressed\" || \"\"),\n    onClick: props.onPlayPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: props.playPressed ? faPlay : faPause,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Button, {\n    className: \"btn-cue \" + (props.cuePressed && \"btn--pressed\" || \"\"),\n    onMouseDown: cueMouseDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Cue\"));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  playPressed: state.console.channel[ownProps.name].playBackState.paused,\n  cuePressed: state.console.channel[ownProps.name].playBackState.cueActive\n});\n\nconst mapDispachToProps = (dispach, ownProps) => ({\n  onPlayPress: () => dispach(togglePlay(ownProps.name)),\n  onCueToggle: () => dispach(toggleCue(ownProps.name)),\n  cancelCueAndPlay: () => dispach(canelCueAndPlay(ownProps.name))\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(PlayBackControls);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/PlayBackControls/PlayBackControls.js"],"names":["React","connect","togglePlay","toggleCue","Button","FontAwesomeIcon","faPlay","faPause","PlayBackControls","props","cueMouseDown","onCueToggle","document","addEventListener","mouseUp","event","elementFromPoint","clientX","clientY","buttonUnderMouse","closest","classList","contains","name","canelCueAndPlay","removeEventListener","playPressed","onPlayPress","cuePressed","mapStateToProps","state","ownProps","console","channel","playBackState","paused","cueActive","mapDispachToProps","dispach","cancelCueAndPlay"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\"; \r\nimport { togglePlay , toggleCue } from \"./../../../actions/actions\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay , faPause } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./play-back.scss\";\r\n\r\n\r\n//onClick={ props.onCuePress.bind(null, props.name) }\r\nconst PlayBackControls = props => {\r\n\r\n    const cueMouseDown = () =>{\r\n        props.onCueToggle()\r\n        document.addEventListener('mouseup', mouseUp)\r\n    }\r\n\r\n    const mouseUp = (event) =>{\r\n        document.elementFromPoint(event.clientX, event.clientY)\r\n        const buttonUnderMouse = document.elementFromPoint(event.clientX, event.clientY).closest('button')\r\n        if(buttonUnderMouse){\r\n            if(buttonUnderMouse.closest('div').classList.contains(\"play-back-controls-\" + props.name)){\r\n                props.canelCueAndPlay();\r\n            }\r\n        }\r\n        props.onCueToggle()\r\n        document.removeEventListener('mouseup', mouseUp);\r\n    }\r\n    \r\n    return (\r\n        <div className={\"play-back-controls-\" + props.name }>\r\n            <Button className={\"btn-play \" + (((!props.playPressed) && \"btn--pressed\" ) || \"\" ) }\r\n                onClick={  props.onPlayPress }>\r\n                    <FontAwesomeIcon icon={(props.playPressed) ? faPlay : faPause}/>\r\n            </Button>\r\n            <Button \r\n               className={\"btn-cue \" + ((props.cuePressed && \"btn--pressed\") || \"\") }\r\n                onMouseDown={ cueMouseDown } > \r\n                    Cue \r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    playPressed : state.console.channel[ownProps.name].playBackState.paused,\r\n    cuePressed : state.console.channel[ownProps.name].playBackState.cueActive,\r\n})\r\n\r\nconst mapDispachToProps = (dispach, ownProps) => ({\r\n    onPlayPress : () => dispach(togglePlay(ownProps.name)),\r\n    onCueToggle : () => dispach(toggleCue(ownProps.name)),\r\n    cancelCueAndPlay : () => dispach(canelCueAndPlay(ownProps.name))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(PlayBackControls);\r\n\r\n"]},"metadata":{},"sourceType":"module"}