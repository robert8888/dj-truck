{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\search\\\\search.js\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { FormControl } from \"react-bootstrap\";\nimport SearchList from './serachList/SearchList.js';\nimport { searchInput, clearSearch } from \"./../../actions/actions.js\";\nimport \"./search.scss\";\n\nconst Search = props => {\n  const searchInputHandler = props.searchInput;\n  const [listOpen, setListOpen] = useState(false);\n\n  const closeList = () => setListOpen(false);\n\n  const openList = () => setListOpen(true);\n\n  return React.createElement(\"div\", {\n    className: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: \"search-control\",\n    type: \"text\",\n    placeholder: \"Tap in to serach on youtube\",\n    onChange: event => searchInputHandler(event.target.value),\n    onFocus: openList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(SearchList, {\n    open: listOpen,\n    closeListHandle: closeList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  searchString: state.searchReducer.searchString\n});\n\nconst mapDispachToProps = dispach => ({\n  searchInput: text => dispach(searchInput(text)),\n  clearSearch: dispach(clearSearch())\n});\n\nexport default connect(null, mapDispachToProps)(Search);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/search/search.js"],"names":["React","useState","connect","FormControl","SearchList","searchInput","clearSearch","Search","props","searchInputHandler","listOpen","setListOpen","closeList","openList","event","target","value","mapStateToProps","state","searchString","searchReducer","mapDispachToProps","dispach","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,4BAAzC;AAEA,OAAO,eAAP;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAMC,kBAAkB,GAAGD,KAAK,CAACH,WAAjC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMW,SAAS,GAAG,MAAMD,WAAW,CAAE,KAAF,CAAnC;;AACA,QAAME,QAAQ,GAAG,MAAMF,WAAW,CAAE,IAAF,CAAlC;;AAEA,SACI;AAAK,IAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,gBAAvB;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,WAAW,EAAC,6BAFZ;AAGA,IAAA,QAAQ,EAAGG,KAAK,IAAIL,kBAAkB,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHtC;AAIA,IAAA,OAAO,EAAEH,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAOG,oBAAC,UAAD;AACA,IAAA,IAAI,EAAGH,QADP;AAEA,IAAA,eAAe,EAAGE,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,CADJ;AAaH,CApBD;;AAsBA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,YAAY,EAAGD,KAAK,CAACE,aAAN,CAAoBD;AADL,CAAL,CAA7B;;AAIA,MAAME,iBAAiB,GAAGC,OAAO,KAAK;AAClCjB,EAAAA,WAAW,EAAIkB,IAAD,IAAUD,OAAO,CAACjB,WAAW,CAACkB,IAAD,CAAZ,CADG;AAElCjB,EAAAA,WAAW,EAAGgB,OAAO,CAAChB,WAAW,EAAZ;AAFa,CAAL,CAAjC;;AAKA,eAAeJ,OAAO,CAAC,IAAD,EAAOmB,iBAAP,CAAP,CAAiCd,MAAjC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { FormControl } from \"react-bootstrap\"\r\nimport SearchList from './serachList/SearchList.js';\r\n\r\n\r\nimport { searchInput, clearSearch } from \"./../../actions/actions.js\";\r\n\r\nimport \"./search.scss\";\r\n\r\n\r\nconst Search = props => {\r\n    const searchInputHandler = props.searchInput;\r\n    const [listOpen, setListOpen] = useState(false)\r\n\r\n    const closeList = () => setListOpen( false );\r\n    const openList = () => setListOpen( true );\r\n\r\n    return (\r\n        <div className>\r\n           <FormControl className=\"search-control\"\r\n           type=\"text\" \r\n           placeholder=\"Tap in to serach on youtube\"\r\n           onChange={ event => searchInputHandler(event.target.value) }\r\n           onFocus={openList}\r\n           />\r\n           <SearchList \r\n           open={ listOpen }\r\n           closeListHandle={ closeList }/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    searchString : state.searchReducer.searchString\r\n})\r\n\r\nconst mapDispachToProps = dispach => ({\r\n    searchInput : (text) => dispach(searchInput(text)),\r\n    clearSearch : dispach(clearSearch()),\r\n})\r\n\r\nexport default connect(null, mapDispachToProps)(Search);"]},"metadata":{},"sourceType":"module"}