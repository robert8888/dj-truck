{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordList\\\\Record\\\\WaveSurrferPlayer\\\\WaveSurferPlayer.js\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport WaveSurfer from \"wavesurfer\";\nimport style from \"./wave-surfer-player.scss\";\n\nconst WaveSurferPlayer = ({\n  item: {\n    peaks,\n    id,\n    duration\n  },\n  seek,\n  player\n}) => {\n  const [container, setContainerRef] = useState(null);\n  const [ws, setWs] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n  const onContainerRef = useCallback(ref => {\n    setContainerRef(ref);\n  }, [setContainerRef]);\n  useEffect(() => {\n    if (container && !loaded) {\n      const ws = new Promise((res, rej) => {\n        try {\n          const ws = WaveSurfer.create({\n            container: container,\n            barWidth: 2,\n            height: 100,\n            waveColor: style.waveColor,\n            progressColor: style.progressColor,\n            barMinHeight: 0,\n            hideScrollbar: true\n          });\n          res(ws);\n        } catch (err) {\n          rej(err);\n        }\n      });\n      ws.then(ws => {\n        setWs(ws);\n        return ws;\n      });\n      ws.then(ws => {\n        if (peaks) {\n          let width = container === null || container === void 0 ? void 0 : container.getBoundingClientRect().width;\n          const start = 0;\n          const end = peaks.length / 2;\n\n          if (window.devicePixelRatio) {\n            width *= window.devicePixelRatio;\n          }\n\n          ws.drawer.drawPeaks(peaks, width, start, end);\n          setLoaded(true);\n        }\n\n        if (seek) {\n          ws.on('seek', progress => {\n            seek({\n              id,\n              progress,\n              duration\n            });\n            ws.drawer.progress(progress);\n          });\n        }\n      });\n    }\n  }, [container, peaks, setWs]);\n  useEffect(() => {\n    if (ws && progress) {\n      ws.drawer.progress(progress);\n    }\n  }, [ws, progress]);\n  const getProgressData = useCallback(() => {\n    return {\n      duration,\n      progress\n    };\n  }, [duration, progress]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.subscribeProgress(id, setProgress);\n    player.addProgressProvider(id, getProgressData);\n    return () => {\n      player.unSubscribeProgress(id);\n      player.removeProgressProvider(id);\n    };\n  }, [player, getProgressData]);\n  return React.createElement(\"div\", {\n    key: \"ws\" + id,\n    className: \"ws-player-container\",\n    ref: onContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  });\n};\n\nexport default WaveSurferPlayer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordList/Record/WaveSurrferPlayer/WaveSurferPlayer.js"],"names":["React","useEffect","useState","useCallback","WaveSurfer","style","WaveSurferPlayer","item","peaks","id","duration","seek","player","container","setContainerRef","ws","setWs","progress","setProgress","loaded","setLoaded","onContainerRef","ref","Promise","res","rej","create","barWidth","height","waveColor","progressColor","barMinHeight","hideScrollbar","err","then","width","getBoundingClientRect","start","end","length","window","devicePixelRatio","drawer","drawPeaks","on","getProgressData","subscribeProgress","addProgressProvider","unSubscribeProgress","removeProgressProvider"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport style from \"./wave-surfer-player.scss\";\r\n\r\nconst WaveSurferPlayer = ({ item: { peaks, id, duration },  seek , player }) => {\r\n    const [container, setContainerRef] = useState(null);\r\n    const [ws, setWs] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const onContainerRef = useCallback((ref) => {\r\n        setContainerRef(ref);\r\n    }, [setContainerRef])\r\n\r\n    useEffect(() => {\r\n        if (container && !loaded) {\r\n            const ws = new Promise((res, rej) => {\r\n                try {\r\n                    const ws = WaveSurfer.create({\r\n                        container: container,\r\n                        barWidth: 2,\r\n                        height: 100,\r\n                        waveColor: style.waveColor,\r\n                        progressColor: style.progressColor,\r\n                        barMinHeight: 0,\r\n                        hideScrollbar: true,\r\n                    })\r\n                    res(ws)\r\n                } catch (err) {\r\n                    rej(err)\r\n                }\r\n            })\r\n            ws.then(ws => {\r\n                setWs(ws);\r\n                return ws;\r\n            })\r\n\r\n            ws.then((ws) => {\r\n                if (peaks) {\r\n                    let width = container?.getBoundingClientRect().width;\r\n                    const start = 0;\r\n                    const end = peaks.length / 2;\r\n                    if (window.devicePixelRatio) {\r\n                        width *= window.devicePixelRatio;\r\n                    }\r\n                    ws.drawer.drawPeaks(peaks, width, start, end);\r\n                    setLoaded(true)\r\n                }\r\n                if (seek) {\r\n                    ws.on('seek', (progress) => {\r\n                        seek({\r\n                            id,\r\n                            progress,\r\n                            duration,\r\n                        })\r\n                        ws.drawer.progress(progress);\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [container, peaks, setWs])\r\n\r\n    useEffect(() => {\r\n        if (ws && progress) {\r\n            ws.drawer.progress(progress);\r\n        }\r\n    }, [ws, progress])\r\n\r\n    const getProgressData = useCallback(() => {\r\n        return {\r\n            duration,\r\n            progress,\r\n        }\r\n    }, [duration, progress])\r\n\r\n    useEffect(() => {\r\n        if (!player) {\r\n            return;\r\n        }\r\n        player.subscribeProgress(id, setProgress);\r\n        player.addProgressProvider(id, getProgressData);\r\n        return () => {\r\n            player.unSubscribeProgress(id);\r\n            player.removeProgressProvider(id);\r\n        }\r\n    }, [player, getProgressData])\r\n\r\n\r\n    return (\r\n        <div key={\"ws\" + id} className=\"ws-player-container\" ref={onContainerRef} />\r\n    )\r\n}\r\n\r\nexport default WaveSurferPlayer"]},"metadata":{},"sourceType":"module"}