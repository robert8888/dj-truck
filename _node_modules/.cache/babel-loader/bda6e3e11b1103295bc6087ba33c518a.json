{"ast":null,"code":"import { pushDirContent, ACTIONS } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\"; //import query from \"./../../qlQueries/requestRootDir\";\n\nexport default function* rootDirRequestSaga() {\n  yield takeEvery(ACTIONS.PL_ROOT_REQUEST, callApi);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* callApi() {\n  const {\n    callQuery,\n    queries\n  } = getApi(\"UserAssets\");\n  const token = yield select(getToken);\n\n  if (!token) {\n    return;\n  }\n\n  console.log(queries.loadRootContentQl);\n  let result = yield callQuery(queries.loadRootContentQl, token);\n  console.log(result);\n  const isRoot = true;\n  yield put(pushDirContent(result.data.root, isRoot));\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/rootDirRequestSaga.js"],"names":["pushDirContent","ACTIONS","takeEvery","select","put","getApi","rootDirRequestSaga","PL_ROOT_REQUEST","callApi","getToken","state","user","token","callQuery","queries","console","log","loadRootContentQl","result","isRoot","data","root"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,OAAzB,QAAwC,eAAxC;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA4BC,GAA5B,QAAsC,oBAAtC;AACA,SAASC,MAAT,QAAuB,0BAAvB,C,CACA;;AAEA,eAAe,UAAUC,kBAAV,GAA8B;AACzC,QAAMJ,SAAS,CAACD,OAAO,CAACM,eAAT,EAA0BC,OAA1B,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUJ,OAAV,GAAmB;AACf,QAAM;AAACK,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAuBT,MAAM,CAAC,YAAD,CAAnC;AACA,QAAMO,KAAK,GAAG,MAAMT,MAAM,CAACM,QAAD,CAA1B;;AACA,MAAG,CAACG,KAAJ,EAAU;AACN;AACH;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,iBAApB;AAEA,MAAIC,MAAM,GAAG,MAAML,SAAS,CAACC,OAAO,CAACG,iBAAT,EAA4BL,KAA5B,CAA5B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,QAAMC,MAAM,GAAG,IAAf;AACA,QAAMf,GAAG,CAACJ,cAAc,CAACkB,MAAM,CAACE,IAAP,CAAYC,IAAb,EAAmBF,MAAnB,CAAf,CAAT;AACH","sourcesContent":["import { pushDirContent, ACTIONS } from \"../../actions\";\r\nimport {takeEvery, select , put} from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n//import query from \"./../../qlQueries/requestRootDir\";\r\n\r\nexport default function *rootDirRequestSaga(){\r\n    yield takeEvery(ACTIONS.PL_ROOT_REQUEST, callApi)\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nfunction *callApi(){\r\n    const {callQuery, queries} = getApi(\"UserAssets\");\r\n    const token = yield select(getToken);\r\n    if(!token){\r\n        return;\r\n    }\r\n    console.log(queries.loadRootContentQl)\r\n\r\n    let result = yield callQuery(queries.loadRootContentQl, token);\r\n    console.log(result)\r\n    const isRoot = true;\r\n    yield put(pushDirContent(result.data.root, isRoot));\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}