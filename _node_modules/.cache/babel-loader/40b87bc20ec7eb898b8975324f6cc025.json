{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Record\\\\WaveSurrferPlayer\\\\WaveSurferPlayer.js\";\nimport React, { useEffect, useState, useCallback, useMemo, useRef } from \"react\";\nimport WaveSurfer from \"wavesurfer\";\nimport style from \"./wave-surfer-player.scss\";\nimport useWindowSize from \"../../../Hooks/useWindowSize\";\nimport debounce from \"lodash/debounce\";\n\nconst WaveSurferPlayer = ({\n  record: {\n    peaks,\n    id,\n    duration\n  },\n  seek,\n  player\n}) => {\n  const [container, setContainer] = useState(null);\n  const containerRef = useRef();\n  const [ws, setWs] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const _progress = useRef();\n\n  const [loaded, setLoaded] = useState(false);\n  const [windowWidth] = useWindowSize();\n  const cachedWidth = useRef();\n  const getContainerWidth = useCallback(() => {\n    if (!cachedWidth.current) {\n      cachedWidth.current = container === null || container === void 0 ? void 0 : container.getBoundingClientRect().width;\n    }\n\n    return cachedWidth.current;\n  }, [container]);\n  const setProgressMiddleware = useCallback(progress => {\n    setProgress(progress);\n    _progress.current = progress;\n  }, [setProgress]);\n  const setContainerRef = useCallback(ref => {\n    setContainer(ref);\n    containerRef.current = ref;\n  }, [setContainer, containerRef]);\n  const drawPeaks = useCallback((container, peaks, ws) => {\n    if (!container || !peaks || !ws) {\n      return;\n    }\n\n    let width = getContainerWidth();\n    const start = 0;\n    const end = peaks.length / 2;\n\n    if (window.devicePixelRatio) {\n      width *= window.devicePixelRatio;\n    }\n\n    ws.drawer.drawPeaks(peaks, width, start, end);\n    setLoaded(true);\n  }, [setLoaded, getContainerWidth]);\n  useEffect(() => {\n    if (!container || loaded || container.hasChildNodes() || !player) {\n      return;\n    }\n\n    const ws = new Promise((res, rej) => {\n      try {\n        const ws = WaveSurfer.create({\n          container: container,\n          barWidth: 2,\n          height: 100,\n          waveColor: style.waveColor,\n          progressColor: style.progressColor,\n          barMinHeight: 0,\n          hideScrollbar: true,\n          currsorColor: '#ffffff'\n        });\n        res(ws);\n      } catch (err) {\n        rej(err);\n      }\n    });\n    ws.then(ws => {\n      setWs(ws);\n      return ws;\n    });\n    ws.then(ws => {\n      if (peaks) {\n        drawPeaks(container, peaks, ws);\n\n        if (id === player.getCurrent().id) {\n          setProgressMiddleware(player.getCurrent().progress);\n        }\n\n        setLoaded(true);\n      }\n\n      if (seek) {\n        ws.on('seek', progress => {\n          seek({\n            id,\n            progress,\n            duration\n          });\n          ws.drawer.progress(progress);\n        });\n      }\n    });\n  }, [id, seek, peaks, duration, container, setProgressMiddleware, setWs, drawPeaks, loaded]);\n  useEffect(() => {\n    if (ws && progress) {\n      ws.drawer.progress(progress);\n    }\n  }, [ws, progress]);\n  const getProgressData = useCallback(() => {\n    return {\n      duration,\n      progress: _progress.current || 0\n    };\n  }, [duration, _progress]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.subscribeProgress(id, setProgressMiddleware);\n    player.addProgressProvider(id, getProgressData);\n    return () => {\n      player.unSubscribeProgress(id, setProgressMiddleware);\n      player.removeProgressProvider(id);\n    };\n  }, [id, player, getProgressData, setProgressMiddleware]);\n  const [isMounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n    return () => setMounted(false);\n  }, [setMounted]);\n  const debouncedUpdate = useMemo(() => {\n    cachedWidth.current = null;\n    return debounce(drawPeaks.bind(null, container, peaks, ws), 500);\n  }, [ws, peaks, container, drawPeaks, cachedWidth]);\n  useEffect(() => {\n    if (loaded && container && isMounted) {//debouncedUpdate();\n    }\n  }, [windowWidth, loaded, debouncedUpdate, isMounted]);\n  return React.createElement(\"div\", {\n    key: \"ws\" + id,\n    className: \"ws-player-container\",\n    ref: setContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  });\n};\n\nexport default WaveSurferPlayer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Record/WaveSurrferPlayer/WaveSurferPlayer.js"],"names":["React","useEffect","useState","useCallback","useMemo","useRef","WaveSurfer","style","useWindowSize","debounce","WaveSurferPlayer","record","peaks","id","duration","seek","player","container","setContainer","containerRef","ws","setWs","progress","setProgress","_progress","loaded","setLoaded","windowWidth","cachedWidth","getContainerWidth","current","getBoundingClientRect","width","setProgressMiddleware","setContainerRef","ref","drawPeaks","start","end","length","window","devicePixelRatio","drawer","hasChildNodes","Promise","res","rej","create","barWidth","height","waveColor","progressColor","barMinHeight","hideScrollbar","currsorColor","err","then","getCurrent","on","getProgressData","subscribeProgress","addProgressProvider","unSubscribeProgress","removeProgressProvider","isMounted","setMounted","debouncedUpdate","bind"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useMemo, useRef } from \"react\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport style from \"./wave-surfer-player.scss\";\r\nimport useWindowSize from \"../../../Hooks/useWindowSize\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst WaveSurferPlayer = ({ record: { peaks, id, duration },  seek , player }) => {\r\n    const [container, setContainer] = useState(null);\r\n    const containerRef= useRef();\r\n    const [ws, setWs] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const _progress = useRef();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [windowWidth, ] = useWindowSize();\r\n    \r\n    const cachedWidth = useRef();\r\n \r\n    const getContainerWidth = useCallback(()=>{\r\n        if(!cachedWidth.current){\r\n            cachedWidth.current = container?.getBoundingClientRect().width;\r\n        }\r\n        return cachedWidth.current;\r\n    }, [container])\r\n\r\n    const setProgressMiddleware = useCallback((progress)=>{\r\n        setProgress(progress);\r\n        _progress.current = progress;\r\n    },[setProgress])    \r\n\r\n    const setContainerRef = useCallback((ref) => {\r\n        setContainer(ref);\r\n        containerRef.current = ref;\r\n    }, [setContainer, containerRef])\r\n\r\n    const drawPeaks = useCallback((container, peaks, ws) => {\r\n        if(!container || !peaks || !ws   ){\r\n            return;\r\n        }\r\n        let width = getContainerWidth();\r\n        const start = 0;\r\n        const end = peaks.length / 2;\r\n        if (window.devicePixelRatio) {\r\n            width *= window.devicePixelRatio;\r\n        }\r\n        ws.drawer.drawPeaks(peaks, width, start, end);\r\n        setLoaded(true)\r\n    }, [setLoaded, getContainerWidth])\r\n\r\n    useEffect(() => {\r\n        if(!container || loaded || container.hasChildNodes() || !player){\r\n            return;\r\n        }\r\n\r\n        const ws = new Promise((res, rej) => {\r\n            try {\r\n                const ws = WaveSurfer.create({\r\n                    container: container,\r\n                    barWidth: 2,\r\n                    height: 100,\r\n                    waveColor: style.waveColor,\r\n                    progressColor: style.progressColor,\r\n                    barMinHeight: 0,\r\n                    hideScrollbar: true,\r\n                    currsorColor: '#ffffff'\r\n                })\r\n                res(ws)\r\n            } catch (err) {\r\n                rej(err)\r\n            }\r\n        })\r\n        ws.then(ws => {\r\n            setWs(ws);\r\n            return ws;\r\n        })\r\n\r\n        ws.then((ws) => {\r\n            if (peaks) {\r\n                drawPeaks(container, peaks, ws);\r\n                if(id === player.getCurrent().id){\r\n                    setProgressMiddleware(player.getCurrent().progress)\r\n                }\r\n                setLoaded(true)\r\n            }\r\n            if (seek) {\r\n                ws.on('seek', (progress) => {\r\n                    seek({\r\n                        id,\r\n                        progress,\r\n                        duration,\r\n                    })\r\n                    ws.drawer.progress(progress);\r\n                })\r\n            }\r\n        })\r\n        \r\n    }, [\r\n        id, \r\n        seek,\r\n        peaks,\r\n        duration, \r\n        container,\r\n        setProgressMiddleware, \r\n        setWs, \r\n        drawPeaks, \r\n        loaded])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (ws && progress) {\r\n            ws.drawer.progress(progress);\r\n        }\r\n    }, [ws, progress])\r\n\r\n    const getProgressData = useCallback(() => {\r\n        return {\r\n            duration,\r\n            progress: _progress.current || 0,\r\n        }\r\n    }, [duration, _progress])\r\n\r\n    useEffect(() => {\r\n        if (!player) {\r\n            return;\r\n        }\r\n        player.subscribeProgress(id, setProgressMiddleware);\r\n        player.addProgressProvider(id, getProgressData);\r\n        return () => {\r\n            player.unSubscribeProgress(id, setProgressMiddleware);\r\n            player.removeProgressProvider(id);\r\n        }\r\n    }, [id, player, getProgressData, setProgressMiddleware])\r\n\r\n\r\n    const [isMounted, setMounted] = useState(false);\r\n    useEffect(()=>{\r\n        setMounted(true);\r\n        return () => setMounted(false);\r\n    }, [setMounted])\r\n\r\n    const debouncedUpdate = useMemo(()=>{\r\n        cachedWidth.current = null\r\n        return debounce(drawPeaks.bind(null, container, peaks, ws), 500)\r\n    }, [ws, peaks , container, drawPeaks, cachedWidth])\r\n\r\n    useEffect(()=>{\r\n        if(loaded && container && isMounted){\r\n            //debouncedUpdate();\r\n        }\r\n    }, [windowWidth, loaded, debouncedUpdate, isMounted])\r\n\r\n    return (\r\n        <div key={\"ws\" + id} className=\"ws-player-container\" ref={setContainerRef} />\r\n    )\r\n}\r\n\r\nexport default WaveSurferPlayer"]},"metadata":{},"sourceType":"module"}