{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Effector\\\\Effector.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./effector-channel.scss\";\nimport DryWetKnob from \"./DryWetKnob/DryWetKnob\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\nconst Effector = props => {\n  const [currentEffect, setCurrentEffect] = useState('none');\n  const effectorParams = Object.entries(props.effects).map(([name, params]) => {});\n  const availableEffects = Object.keys(props.effects).map((effect, index) => {\n    return React.createElement(Dropdown.Item, {\n      key: effect + \"-\" + index,\n      onClick: setCurrentEffect.bind(null, effect),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, effect);\n  });\n  return React.createElement(\"div\", {\n    className: \"effector-channel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dra-wet-knob\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(DryWetKnob, {\n    alt: \"D/W\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"effect-selector\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    title: currentEffect,\n    className: \"btn-effect-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, availableEffects)), React.createElement(\"div\", {\n    className: \"effector-param\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(DryWetKnob, {\n    alt: \"D/W\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(DryWetKnob, {\n    alt: \"D/W\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(DryWetKnob, {\n    alt: \"D/W\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  effects: state.effector.effects\n});\n\nexport default connect(mapStateToProps)(Effector);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Console/Effector/Effector.js"],"names":["React","useState","connect","DryWetKnob","Dropdown","DropdownButton","Effector","props","currentEffect","setCurrentEffect","effectorParams","Object","entries","effects","map","name","params","availableEffects","keys","effect","index","bind","mapStateToProps","state","ownProps","effector"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,yBAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,iBAAvC;;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAEtB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,MAAD,CAAlD;AAEA,QAAMS,cAAc,GAAGC,MAAM,CAACC,OAAP,CAAeL,KAAK,CAACM,OAArB,EAA8BC,GAA9B,CAAkC,CAAC,CAACC,IAAD,EAAOC,MAAP,CAAD,KAAoB,CAE5E,CAFsB,CAAvB;AAIA,QAAMC,gBAAgB,GAAGN,MAAM,CAACO,IAAP,CAAYX,KAAK,CAACM,OAAlB,EAA2BC,GAA3B,CAAgC,CAACK,MAAD,EAAUC,KAAV,KAAoB;AACzE,WAAQ,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,GAAG,EAAED,MAAM,GAAG,GAAT,GAAeC,KAAnC;AAA0C,MAAA,OAAO,EAAEX,gBAAgB,CAACY,IAAjB,CAAsB,IAAtB,EAA4BF,MAA5B,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyFA,MAAzF,CAAR;AACH,GAFwB,CAAzB;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEX,aAAvB;AAAsC,IAAA,SAAS,EAAC,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,gBADL,CADR,CAJJ,EASI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CATJ,CADJ;AAiBH,CA7BD;;AA+BA,MAAMK,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CX,EAAAA,OAAO,EAAGU,KAAK,CAACE,QAAN,CAAeZ;AADiB,CAAtB,CAAxB;;AAIA,eAAeX,OAAO,CAACoB,eAAD,CAAP,CAAyBhB,QAAzB,CAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./effector-channel.scss\";\r\nimport DryWetKnob from \"./DryWetKnob/DryWetKnob\";\r\nimport {Dropdown, DropdownButton} from \"react-bootstrap\";\r\nconst Effector = props => {\r\n\r\n    const [currentEffect, setCurrentEffect] = useState('none');\r\n\r\n    const effectorParams = Object.entries(props.effects).map(([name, params]) => {\r\n\r\n    })\r\n\r\n    const availableEffects = Object.keys(props.effects).map( (effect , index) => {\r\n        return (<Dropdown.Item key={effect + \"-\" + index} onClick={setCurrentEffect.bind(null, effect)}>{effect}</Dropdown.Item>)\r\n    })\r\n\r\n    return (\r\n        <div className=\"effector-channel\">\r\n            <div className=\"dra-wet-knob\">\r\n                <DryWetKnob alt=\"D/W\"/>\r\n            </div>\r\n            <div className=\"effect-selector\">\r\n                    <DropdownButton title={currentEffect} className=\"btn-effect-select\">\r\n                        {availableEffects}\r\n                    </DropdownButton>\r\n            </div>\r\n            <div className=\"effector-param\">\r\n                <DryWetKnob alt=\"D/W\"/>\r\n                <DryWetKnob alt=\"D/W\"/>\r\n                <DryWetKnob alt=\"D/W\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    effects : state.effector.effects,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Effector);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}