{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\ProgressSlider\\\\ProgressSlider.js\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { formater } from \"./../../../../../utils/time/timeFromater\";\nimport \"./progress-slider.scss\"; //horizontal\n\nconst ProgressSlider = ({\n  player\n}) => {\n  const [progress, setProgress] = useState(0);\n  const [buffered, setBuffred] = useState(0);\n  const [currentRecord, setCurrentRecord] = useState(null); // const [position,  setPosition] = useState();\n\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentDuration, setCurrentDuration] = useState(0);\n  const sliderArea = useRef(null);\n  const sliderThumb = useRef(null);\n  const sliderProgress = useRef(null);\n  const sliderBufferd = useRef(null); //dementions \n\n  const [sliderAreaRect, setSliderAreaRect] = useState(1);\n  const [thumbRect, setThumbRect] = useState(1);\n  const setThumbPosition = useCallback(progress => {\n    let position = 0;\n    position = sliderAreaRect.width * progress;\n    sliderProgress.current.style.transform = `scaleX(${position}) translateX(50%)`;\n    position -= thumbRect.width / 2;\n    sliderThumb.current.style.transform = `translateX(${position}px)`;\n    console.log(position);\n  }, [thumbRect, sliderAreaRect]);\n  useEffect(() => {\n    console.log(\"BUFFERED\", buffered);\n    const position = sliderAreaRect.width * buffered;\n    sliderBufferd.current.style.transform = `scaleX(${position}) translateX(50%)`;\n  }, [buffered]); //, sliderBufferd, sliderAreaRect])\n\n  useEffect(() => {\n    //  console.log(progress)\n    setCurrentTime(currentDuration * progress);\n    setThumbPosition(progress);\n  }, [progress, setCurrentTime]);\n  useEffect(() => {\n    console.log(currentRecord);\n\n    if (currentRecord) {\n      setCurrentDuration(currentRecord.duration);\n    }\n  }, [currentRecord, setCurrentDuration]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.addProgressWatcher('#', setProgress);\n    player.addCurrentWatcher(setCurrentRecord);\n    player.addBuffredWatcher(setBuffred);\n  }, [player]);\n  const thumbMouseDown = useCallback(e => {\n    console.log('clikc;', e);\n  }, []);\n  const setThumb = useCallback(ref => {\n    //sliderThumb(ref);\n    sliderThumb.current = ref;\n    setThumbRect(ref.getBoundingClientRect());\n    ref.addEventListener('mousedown', e => thumbMouseDown(e));\n  }, [sliderThumb, setThumbRect]);\n  const setSliderArea = useCallback(ref => {\n    sliderArea.current = ref;\n    setSliderAreaRect(ref.getBoundingClientRect());\n  }, [sliderArea, setSliderAreaRect]);\n  return React.createElement(\"div\", {\n    className: \"seek-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"record-details-time time-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, formater.secondsToStr(currentTime / 1000))), React.createElement(\"div\", {\n    className: \"slider-active-area\",\n    ref: setSliderArea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-buffered\",\n    ref: sliderBufferd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-progress\",\n    ref: sliderProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-thumb\",\n    ref: setThumb,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"record-details-time time-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, formater.secondsToStr(currentDuration / 1000))));\n};\n\nexport default ProgressSlider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/ProgressSlider/ProgressSlider.js"],"names":["React","useState","useRef","useEffect","useCallback","formater","ProgressSlider","player","progress","setProgress","buffered","setBuffred","currentRecord","setCurrentRecord","currentTime","setCurrentTime","currentDuration","setCurrentDuration","sliderArea","sliderThumb","sliderProgress","sliderBufferd","sliderAreaRect","setSliderAreaRect","thumbRect","setThumbRect","setThumbPosition","position","width","current","style","transform","console","log","duration","addProgressWatcher","addCurrentWatcher","addBuffredWatcher","thumbMouseDown","e","setThumb","ref","getBoundingClientRect","addEventListener","setSliderArea","secondsToStr"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport {formater} from \"./../../../../../utils/time/timeFromater\";\r\nimport \"./progress-slider.scss\"\r\n\r\n//horizontal\r\nconst ProgressSlider = ({player}) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [buffered, setBuffred] = useState(0);\r\n    const [currentRecord, setCurrentRecord] = useState(null);\r\n    // const [position,  setPosition] = useState();\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [currentDuration, setCurrentDuration] = useState(0);\r\n    \r\n    const sliderArea = useRef(null);\r\n    const sliderThumb = useRef(null);\r\n    const sliderProgress = useRef(null);\r\n    const sliderBufferd = useRef(null);\r\n\r\n    //dementions \r\n    const [sliderAreaRect, setSliderAreaRect] = useState(1)\r\n    const [thumbRect, setThumbRect] = useState(1)\r\n\r\n    const setThumbPosition = useCallback((progress)=>{\r\n        let position = 0;\r\n        position = sliderAreaRect.width * progress ;\r\n        sliderProgress.current.style.transform = `scaleX(${position}) translateX(50%)`;\r\n        position -= (thumbRect.width / 2) ;  \r\n        sliderThumb.current.style.transform = `translateX(${position}px)`;\r\n        console.log(position)\r\n    }, [thumbRect, sliderAreaRect])\r\n\r\n    useEffect(()=>{\r\n        console.log(\"BUFFERED\",buffered)\r\n       const position = sliderAreaRect.width * buffered;\r\n       sliderBufferd.current.style.transform = `scaleX(${position}) translateX(50%)`;\r\n    }, [buffered])//, sliderBufferd, sliderAreaRect])\r\n\r\n    useEffect(()=>{\r\n      //  console.log(progress)\r\n       setCurrentTime(currentDuration * progress);\r\n       setThumbPosition(progress);\r\n    }, [progress , setCurrentTime])\r\n\r\n    useEffect(()=>{\r\n        console.log(currentRecord)\r\n        if(currentRecord){\r\n           setCurrentDuration(currentRecord.duration);\r\n        }\r\n\r\n    }, [currentRecord, setCurrentDuration])\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.addProgressWatcher('#', setProgress);\r\n        player.addCurrentWatcher(setCurrentRecord);\r\n        player.addBuffredWatcher(setBuffred);\r\n    }, [player])\r\n\r\n\r\n    const thumbMouseDown = useCallback((e)=>{\r\n        console.log('clikc;', e)\r\n    }, [])\r\n\r\n    const setThumb = useCallback((ref)=>{\r\n        //sliderThumb(ref);\r\n        sliderThumb.current = ref;\r\n        setThumbRect(ref.getBoundingClientRect())\r\n        ref.addEventListener('mousedown', (e)=> thumbMouseDown(e))\r\n    }, [sliderThumb, setThumbRect])\r\n\r\n    const setSliderArea = useCallback((ref) => {\r\n        sliderArea.current = ref;\r\n        setSliderAreaRect(ref.getBoundingClientRect())\r\n    }, [sliderArea, setSliderAreaRect])\r\n\r\n    return (\r\n        <div className=\"seek-slider\">\r\n            <div className=\"record-details-time time-current\">\r\n                 <span>{formater.secondsToStr(currentTime / 1000)}</span>\r\n            </div>\r\n            <div className=\"slider-active-area\" ref={setSliderArea}>\r\n                <div className=\"slider-buffered\" ref={sliderBufferd}/>\r\n                <div className=\"slider-progress\" ref={sliderProgress}/>\r\n                \r\n                <div className=\"slider-thumb\" ref={setThumb} draggable=\"false\"/>\r\n            </div>\r\n            <div className=\"record-details-time time-duration\">\r\n                <span>{formater.secondsToStr(currentDuration/1000)}</span>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProgressSlider;"]},"metadata":{},"sourceType":"module"}