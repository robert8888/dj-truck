{"ast":null,"code":"import _wrapRegExp from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapRegExp\";\n\nconst ytToObj = ytTime => {\n  let regex = _wrapRegExp(/^PT(?:([0-9]+)H)??(?:([0-9]+)M)??(?:([0-9]+)S){1}$/, {\n    h: 1,\n    m: 2,\n    s: 3\n  });\n\n  let match = ytTime.match(regex);\n  if (!match) return ytTime;\n  let {\n    h = 0,\n    m = 0,\n    s = 0\n  } = match.groups;\n  return {\n    h: parseInt(h),\n    m: parseInt(m),\n    s: parseInt(s)\n  };\n};\n\nconst objToStr = objTime => {\n  let {\n    h = 0,\n    m = 0,\n    s = 0\n  } = objTime;\n  const houre = h === 0 ? \"\" : h + \":\";\n  const minute = m === 0 ? \"00:\" : m < 10 ? \"0\" + m + \":\" : m + \":\";\n  const seconds = s === 0 ? \"00\" : s < 10 ? \"0\" + s : s;\n  return houre + minute + seconds;\n};\n\nconst objToSeconds = objTime => {\n  let {\n    h,\n    m,\n    s\n  } = objTime;\n  return s + m * 60 + h * 3600;\n};\n\nconst secondsToObj = seconds => {\n  let h = Math.floor(seconds / 3600);\n  seconds -= h * 3600;\n  let m = Math.floor(seconds / 60);\n  seconds -= m * 60;\n  let s = ~~seconds;\n  return {\n    h,\n    m,\n    s\n  };\n};\n\nexport const formater = {\n  ptToStr: ytTime => {\n    const objTime = ytToObj(ytTime);\n    return objToStr(objTime);\n  },\n  ptToSeconds: ytTime => {\n    const objTime = ytToObj(ytTime);\n    return objToSeconds(objTime);\n  },\n  secondsToStr: seconds => {\n    const objTime = secondsToObj(seconds);\n    return objToStr(objTime);\n  }\n};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/utils/time/timeFromater.js"],"names":["ytToObj","ytTime","regex","match","h","m","s","groups","parseInt","objToStr","objTime","houre","minute","seconds","objToSeconds","secondsToObj","Math","floor","formater","ptToStr","ptToSeconds","secondsToStr"],"mappings":";;AACA,MAAMA,OAAO,GAAIC,MAAD,IAAY;AACxB,MAAIC,KAAK,eAAG,oDAAH;AAAA;AAAA;AAAA;AAAA,IAAT;;AACA,MAAIC,KAAK,GAAGF,MAAM,CAACE,KAAP,CAAaD,KAAb,CAAZ;AACA,MAAG,CAACC,KAAJ,EAAW,OAAOF,MAAP;AAEX,MAAI;AAACG,IAAAA,CAAC,GAAG,CAAL;AAASC,IAAAA,CAAC,GAAG,CAAb;AAAiBC,IAAAA,CAAC,GAAE;AAApB,MAA0BH,KAAK,CAACI,MAApC;AACA,SAAO;AACHH,IAAAA,CAAC,EAAGI,QAAQ,CAACJ,CAAD,CADT;AAEHC,IAAAA,CAAC,EAAGG,QAAQ,CAACH,CAAD,CAFT;AAGHC,IAAAA,CAAC,EAAGE,QAAQ,CAACF,CAAD;AAHT,GAAP;AAKH,CAXD;;AAaA,MAAMG,QAAQ,GAAIC,OAAD,IAAa;AAC1B,MAAI;AAAEN,IAAAA,CAAC,GAAG,CAAN;AAASC,IAAAA,CAAC,GAAG,CAAb;AAAgBC,IAAAA,CAAC,GAAG;AAApB,MAA0BI,OAA9B;AACA,QAAMC,KAAK,GAAMP,CAAC,KAAK,CAAR,GAAc,EAAd,GAAmBA,CAAC,GAAG,GAAtC;AACA,QAAMQ,MAAM,GAAKP,CAAC,KAAK,CAAR,GAAc,KAAd,GAAuBA,CAAC,GAAG,EAAL,GAAY,MAAMA,CAAN,GAAU,GAAtB,GAA4BA,CAAC,GAAG,GAArE;AACA,QAAMQ,OAAO,GAAKP,CAAC,KAAK,CAAR,GAAc,IAAd,GAAsBA,CAAC,GAAG,EAAL,GAAY,MAAMA,CAAlB,GAAsBA,CAA3D;AAEA,SAAOK,KAAK,GAAGC,MAAR,GAAiBC,OAAxB;AACH,CAPD;;AASA,MAAMC,YAAY,GAAIJ,OAAD,IAAa;AAC9B,MAAI;AAACN,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOC,IAAAA;AAAP,MAAYI,OAAhB;AACA,SAAQJ,CAAC,GAAGD,CAAC,GAAG,EAAR,GAAaD,CAAC,GAAG,IAAzB;AACH,CAHD;;AAKA,MAAMW,YAAY,GAAIF,OAAD,IAAa;AAC9B,MAAIT,CAAC,GAAGY,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAG,IAArB,CAAR;AACAA,EAAAA,OAAO,IAAIT,CAAC,GAAG,IAAf;AACA,MAAIC,CAAC,GAAGW,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAG,EAArB,CAAR;AACAA,EAAAA,OAAO,IAAIR,CAAC,GAAG,EAAf;AACA,MAAIC,CAAC,GAAG,CAAC,CAACO,OAAV;AACA,SAAO;AAAET,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAASC,IAAAA;AAAT,GAAP;AACH,CAPD;;AASA,OAAO,MAAMY,QAAQ,GAAG;AACpBC,EAAAA,OAAO,EAAIlB,MAAD,IAAY;AAClB,UAAMS,OAAO,GAAGV,OAAO,CAACC,MAAD,CAAvB;AACA,WAAOQ,QAAQ,CAACC,OAAD,CAAf;AACH,GAJmB;AAOpBU,EAAAA,WAAW,EAAInB,MAAD,IAAY;AACtB,UAAMS,OAAO,GAAGV,OAAO,CAACC,MAAD,CAAvB;AACA,WAAOa,YAAY,CAACJ,OAAD,CAAnB;AACH,GAVmB;AAapBW,EAAAA,YAAY,EAAIR,OAAD,IAAa;AACxB,UAAMH,OAAO,GAAGK,YAAY,CAACF,OAAD,CAA5B;AACA,WAAOJ,QAAQ,CAACC,OAAD,CAAf;AACH;AAhBmB,CAAjB","sourcesContent":["\r\nconst ytToObj = (ytTime) => {\r\n    let regex = /^PT(?:(?<h>\\d+)H)??(?:(?<m>\\d+)M)??(?:(?<s>\\d+)S){1}$/;\r\n    let match = ytTime.match(regex);\r\n    if(!match) return ytTime;\r\n\r\n    let {h = 0 , m = 0 , s =0 } = match.groups;\r\n    return {\r\n        h : parseInt(h), \r\n        m : parseInt(m),\r\n        s : parseInt(s),\r\n    }\r\n}\r\n\r\nconst objToStr = (objTime) => {\r\n    let { h = 0, m = 0, s = 0}  = objTime;\r\n    const houre =  ( h === 0 ) ? \"\" : h + \":\";\r\n    const minute = ( m === 0 ) ? \"00:\" : (m < 10) ?  \"0\" + m + \":\" : m + \":\";\r\n    const seconds = ( s === 0 ) ? \"00\" : (s < 10) ?  \"0\" + s : s;\r\n    \r\n    return houre + minute + seconds;\r\n}\r\n\r\nconst objToSeconds = (objTime) => {\r\n    let {h, m, s} = objTime;\r\n    return (s + m * 60 + h * 3600);\r\n}\r\n\r\nconst secondsToObj = (seconds) => {\r\n    let h = Math.floor(seconds / 3600);\r\n    seconds -= h * 3600;\r\n    let m = Math.floor(seconds / 60);\r\n    seconds -= m * 60;\r\n    let s = ~~seconds;\r\n    return { h, m , s }; \r\n}\r\n\r\nexport const formater = {\r\n    ptToStr : (ytTime) => {\r\n        const objTime = ytToObj(ytTime);\r\n        return objToStr(objTime);\r\n    },\r\n\r\n\r\n    ptToSeconds : (ytTime) => {\r\n        const objTime = ytToObj(ytTime)\r\n        return objToSeconds(objTime);\r\n    },\r\n\r\n\r\n    secondsToStr : (seconds) => {\r\n        const objTime = secondsToObj(seconds);\r\n        return objToStr(objTime);\r\n    } \r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}