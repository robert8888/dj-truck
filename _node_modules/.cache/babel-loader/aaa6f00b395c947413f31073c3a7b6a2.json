{"ast":null,"code":"'use strict';\n\nvar convert = require('unist-util-is/convert');\n\nvar element = require('hast-util-is-element');\n\nvar whiteSpaceStart = require('./util/white-space-start');\n\nvar after = require('./util/siblings').after;\n\nvar omission = require('./omission');\n\nvar isComment = convert('comment');\nvar optionGroup = 'optgroup';\nvar options = ['option'].concat(optionGroup);\nvar dataListItem = ['dt', 'dd'];\nvar listItem = 'li';\nvar menuContent = ['menuitem', 'hr', 'menu'];\nvar ruby = ['rp', 'rt'];\nvar tableContainer = ['tbody', 'tfoot'];\nvar tableRow = 'tr';\nvar tableCell = ['td', 'th'];\nvar confusingParagraphParent = ['a', 'audio', 'del', 'ins', 'map', 'noscript', 'video'];\nvar clearParagraphSibling = ['address', 'article', 'aside', 'blockquote', 'details', 'div', 'dl', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'main', 'menu', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'];\nmodule.exports = omission({\n  html: html,\n  head: headOrColgroupOrCaption,\n  body: body,\n  p: p,\n  li: li,\n  dt: dt,\n  dd: dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup: optgroup,\n  option: option,\n  menuitem: menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead: thead,\n  tbody: tbody,\n  tfoot: tfoot,\n  tr: tr,\n  td: cells,\n  th: cells\n}); // Macro for `</head>`, `</colgroup>`, and `</caption>`.\n\nfunction headOrColgroupOrCaption(node, index, parent) {\n  var next = after(parent, index, true);\n  return !next || !isComment(next) && !whiteSpaceStart(next);\n} // Whether to omit `</html>`.\n\n\nfunction html(node, index, parent) {\n  var next = after(parent, index);\n  return !next || !isComment(next);\n} // Whether to omit `</body>`.\n\n\nfunction body(node, index, parent) {\n  var next = after(parent, index);\n  return !next || !isComment(next);\n} // Whether to omit `</p>`.\n\n\nfunction p(node, index, parent) {\n  var next = after(parent, index);\n  return next ? element(next, clearParagraphSibling) : !parent || !element(parent, confusingParagraphParent);\n} // Whether to omit `</li>`.\n\n\nfunction li(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, listItem);\n} // Whether to omit `</dt>`.\n\n\nfunction dt(node, index, parent) {\n  var next = after(parent, index);\n  return next && element(next, dataListItem);\n} // Whether to omit `</dd>`.\n\n\nfunction dd(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, dataListItem);\n} // Whether to omit `</rt>` or `</rp>`.\n\n\nfunction rubyElement(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, ruby);\n} // Whether to omit `</optgroup>`.\n\n\nfunction optgroup(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, optionGroup);\n} // Whether to omit `</option>`.\n\n\nfunction option(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, options);\n} // Whether to omit `</menuitem>`.\n\n\nfunction menuitem(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, menuContent);\n} // Whether to omit `</thead>`.\n\n\nfunction thead(node, index, parent) {\n  var next = after(parent, index);\n  return next && element(next, tableContainer);\n} // Whether to omit `</tbody>`.\n\n\nfunction tbody(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, tableContainer);\n} // Whether to omit `</tfoot>`.\n\n\nfunction tfoot(node, index, parent) {\n  return !after(parent, index);\n} // Whether to omit `</tr>`.\n\n\nfunction tr(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, tableRow);\n} // Whether to omit `</td>` or `</th>`.\n\n\nfunction cells(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, tableCell);\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/node_modules/hast-util-to-html/lib/omission/closing.js"],"names":["convert","require","element","whiteSpaceStart","after","omission","isComment","optionGroup","options","concat","dataListItem","listItem","menuContent","ruby","tableContainer","tableRow","tableCell","confusingParagraphParent","clearParagraphSibling","module","exports","html","head","headOrColgroupOrCaption","body","p","li","dt","dd","rt","rubyElement","rp","optgroup","option","menuitem","colgroup","caption","thead","tbody","tfoot","tr","td","cells","th","node","index","parent","next"],"mappings":"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","sourcesContent":["'use strict'\n\nvar convert = require('unist-util-is/convert')\nvar element = require('hast-util-is-element')\nvar whiteSpaceStart = require('./util/white-space-start')\nvar after = require('./util/siblings').after\nvar omission = require('./omission')\n\nvar isComment = convert('comment')\n\nvar optionGroup = 'optgroup'\nvar options = ['option'].concat(optionGroup)\nvar dataListItem = ['dt', 'dd']\nvar listItem = 'li'\nvar menuContent = ['menuitem', 'hr', 'menu']\nvar ruby = ['rp', 'rt']\nvar tableContainer = ['tbody', 'tfoot']\nvar tableRow = 'tr'\nvar tableCell = ['td', 'th']\n\nvar confusingParagraphParent = [\n  'a',\n  'audio',\n  'del',\n  'ins',\n  'map',\n  'noscript',\n  'video'\n]\n\nvar clearParagraphSibling = [\n  'address',\n  'article',\n  'aside',\n  'blockquote',\n  'details',\n  'div',\n  'dl',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'main',\n  'menu',\n  'nav',\n  'ol',\n  'p',\n  'pre',\n  'section',\n  'table',\n  'ul'\n]\n\nmodule.exports = omission({\n  html: html,\n  head: headOrColgroupOrCaption,\n  body: body,\n  p: p,\n  li: li,\n  dt: dt,\n  dd: dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup: optgroup,\n  option: option,\n  menuitem: menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead: thead,\n  tbody: tbody,\n  tfoot: tfoot,\n  tr: tr,\n  td: cells,\n  th: cells\n})\n\n// Macro for `</head>`, `</colgroup>`, and `</caption>`.\nfunction headOrColgroupOrCaption(node, index, parent) {\n  var next = after(parent, index, true)\n  return !next || (!isComment(next) && !whiteSpaceStart(next))\n}\n\n// Whether to omit `</html>`.\nfunction html(node, index, parent) {\n  var next = after(parent, index)\n  return !next || !isComment(next)\n}\n\n// Whether to omit `</body>`.\nfunction body(node, index, parent) {\n  var next = after(parent, index)\n  return !next || !isComment(next)\n}\n\n// Whether to omit `</p>`.\nfunction p(node, index, parent) {\n  var next = after(parent, index)\n  return next\n    ? element(next, clearParagraphSibling)\n    : !parent || !element(parent, confusingParagraphParent)\n}\n\n// Whether to omit `</li>`.\nfunction li(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, listItem)\n}\n\n// Whether to omit `</dt>`.\nfunction dt(node, index, parent) {\n  var next = after(parent, index)\n  return next && element(next, dataListItem)\n}\n\n// Whether to omit `</dd>`.\nfunction dd(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, dataListItem)\n}\n\n// Whether to omit `</rt>` or `</rp>`.\nfunction rubyElement(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, ruby)\n}\n\n// Whether to omit `</optgroup>`.\nfunction optgroup(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, optionGroup)\n}\n\n// Whether to omit `</option>`.\nfunction option(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, options)\n}\n\n// Whether to omit `</menuitem>`.\nfunction menuitem(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, menuContent)\n}\n\n// Whether to omit `</thead>`.\nfunction thead(node, index, parent) {\n  var next = after(parent, index)\n  return next && element(next, tableContainer)\n}\n\n// Whether to omit `</tbody>`.\nfunction tbody(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, tableContainer)\n}\n\n// Whether to omit `</tfoot>`.\nfunction tfoot(node, index, parent) {\n  return !after(parent, index)\n}\n\n// Whether to omit `</tr>`.\nfunction tr(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, tableRow)\n}\n\n// Whether to omit `</td>` or `</th>`.\nfunction cells(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, tableCell)\n}\n"]},"metadata":{},"sourceType":"script"}