{"ast":null,"code":"const ACTIONS = {\n  R_CREATE_RECORD_REQEST: \"Create recording metada\",\n  R_START_RECORDING: \"Start prepering ws recorder conection\",\n  R_END_RECORDING: \"Stop recording\",\n  R_RECORDING: \"Is recording\",\n  R_RECORDING_FAIL: \"indicates error during connections or creating objects\",\n  R_REC_SET_PEAK: \"Set peaks array to recording\"\n};\nexport { ACTIONS as RECORDER_ACTIONS };\nexport function createRecordinRequest(recName) {\n  return {\n    type: ACTIONS.R_CREATE_RECORD_REQEST,\n    recName\n  };\n}\nexport function startRecording(recName, id) {\n  return {\n    type: ACTIONS.R_START_RECORDING,\n    recName,\n    id\n  };\n}\nexport function endRecording() {\n  return {\n    type: ACTIONS.R_END_RECORDING\n  };\n}\nexport function recording() {\n  return {\n    type: ACTIONS.R_RECORDING\n  };\n}\nexport function recordingRquestFail() {\n  return {\n    type: ACTIONS.R_RECORDING_FAIL\n  };\n}\nexport function setRecordingPeaks(peaks) {\n  return {\n    type: ACTIONS.R_REC_SET_PEAK,\n    peaks\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/actions/console/recorder.js"],"names":["ACTIONS","R_CREATE_RECORD_REQEST","R_START_RECORDING","R_END_RECORDING","R_RECORDING","R_RECORDING_FAIL","R_REC_SET_PEAK","RECORDER_ACTIONS","createRecordinRequest","recName","type","startRecording","id","endRecording","recording","recordingRquestFail","setRecordingPeaks","peaks"],"mappings":"AAAA,MAAMA,OAAO,GAAG;AACZC,EAAAA,sBAAsB,EAAG,yBADb;AAEZC,EAAAA,iBAAiB,EAAG,uCAFR;AAGZC,EAAAA,eAAe,EAAE,gBAHL;AAIZC,EAAAA,WAAW,EAAE,cAJD;AAKZC,EAAAA,gBAAgB,EAAE,wDALN;AAOZC,EAAAA,cAAc,EAAG;AAPL,CAAhB;AASA,SAAQN,OAAO,IAAIO,gBAAnB;AAEA,OAAO,SAASC,qBAAT,CAA+BC,OAA/B,EAAuC;AAC1C,SAAO;AAAEC,IAAAA,IAAI,EAAEV,OAAO,CAACC,sBAAhB;AAAwCQ,IAAAA;AAAxC,GAAP;AACH;AAED,OAAO,SAASE,cAAT,CAAwBF,OAAxB,EAAiCG,EAAjC,EAAoC;AACvC,SAAO;AAAEF,IAAAA,IAAI,EAAEV,OAAO,CAACE,iBAAhB;AAAmCO,IAAAA,OAAnC;AAA4CG,IAAAA;AAA5C,GAAP;AACH;AAED,OAAO,SAASC,YAAT,GAAuB;AAC1B,SAAO;AAAEH,IAAAA,IAAI,EAAEV,OAAO,CAACG;AAAhB,GAAP;AACH;AAED,OAAO,SAASW,SAAT,GAAoB;AACvB,SAAO;AAACJ,IAAAA,IAAI,EAAEV,OAAO,CAACI;AAAf,GAAP;AACH;AAED,OAAO,SAASW,mBAAT,GAA8B;AACjC,SAAO;AAACL,IAAAA,IAAI,EAAEV,OAAO,CAACK;AAAf,GAAP;AACH;AAED,OAAO,SAASW,iBAAT,CAA2BC,KAA3B,EAAiC;AACpC,SAAO;AAACP,IAAAA,IAAI,EAAEV,OAAO,CAACM,cAAf;AAA+BW,IAAAA;AAA/B,GAAP;AACH","sourcesContent":["const ACTIONS = {\r\n    R_CREATE_RECORD_REQEST : \"Create recording metada\",\r\n    R_START_RECORDING : \"Start prepering ws recorder conection\",\r\n    R_END_RECORDING: \"Stop recording\",\r\n    R_RECORDING: \"Is recording\",\r\n    R_RECORDING_FAIL: \"indicates error during connections or creating objects\",\r\n\r\n    R_REC_SET_PEAK : \"Set peaks array to recording\"\r\n}\r\nexport {ACTIONS as RECORDER_ACTIONS};\r\n\r\nexport function createRecordinRequest(recName){\r\n    return { type: ACTIONS.R_CREATE_RECORD_REQEST, recName }\r\n}\r\n\r\nexport function startRecording(recName, id){\r\n    return { type: ACTIONS.R_START_RECORDING, recName, id }\r\n}\r\n\r\nexport function endRecording(){\r\n    return { type: ACTIONS.R_END_RECORDING}\r\n}\r\n\r\nexport function recording(){\r\n    return {type: ACTIONS.R_RECORDING}\r\n}\r\n\r\nexport function recordingRquestFail(){\r\n    return {type: ACTIONS.R_RECORDING_FAIL}\r\n}\r\n\r\nexport function setRecordingPeaks(peaks){\r\n    return {type: ACTIONS.R_REC_SET_PEAK, peaks}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}