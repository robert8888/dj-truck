{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordDetails\\\\RecordDetails.js\";\nimport React, { useState, useEffect, useCallback, useRef, useMemo } from \"react\";\nimport { reqUpdateRec, reqDeleteRec, setRecDeleteStatus } from \"./../../../../actions\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getApi } from \"./.././../../../apis/apiProvider\";\nimport { Form, Button } from \"react-bootstrap\";\nimport IconBar from \"./../IconBar/IconBar\";\nimport \"./record-details.scss\";\nimport useAutoHeightTextarea from \"../../Hooks/useAutoHeightTextarea\";\n\nconst RecordDetails = ({\n  record,\n  userId,\n  requestUpdate,\n  requestDelete,\n  deleteStatus,\n  resetDeleteStatus\n}) => {\n  const getDownloadLink = useMemo(() => getApi('RecordsStore').getDownloadLink, [getApi]);\n  const history = useHistory();\n  const [editMode, setEditMode] = useState(false);\n  const [editable, setEditable] = useState(false);\n  const [userNickname, setUserNickname] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [generes, setGeneres] = useState([]);\n  const descriptionTextArea = useRef();\n  const [autoResizeTextArea] = useAutoHeightTextarea();\n  const setFromRecord = useCallback(record => {\n    if (record.user.id === userId) {\n      setEditable(true);\n    }\n\n    setUserNickname(record.user.nickname || \"\");\n    setTitle(record.title || \"\");\n    setDescription(record.description || \"\");\n    setGeneres(record.generes.map(genere => genere.name).join(\", \") || []);\n  }, [userId, setEditable, setTitle, setDescription, setGeneres, setUserNickname]);\n  useEffect(() => {\n    if (!record) return;\n    setFromRecord(record);\n  }, [record, setFromRecord]);\n  const toggleMode = useCallback(() => {\n    const mode = !editMode;\n    setEditMode(mode);\n\n    if (!mode) {\n      setFromRecord(record);\n    }\n  }, [record, editMode, setEditMode]);\n  const updateTitle = useCallback(event => {\n    if (event.target.value.indexOf(\"_\") !== -1) {\n      event.target.setCustomValidity(`Using underscore in sets name is \n                not allowed. You can use eg \"-\". Pleas change name of your record`);\n    } else {\n      event.target.setCustomValidity('');\n    }\n\n    setTitle(event.target.value);\n  }, [setTitle]);\n  const updateDescription = useCallback(event => {\n    setDescription(event.target.value);\n  }, [setDescription]);\n  const updateGeneres = useCallback(event => {\n    setGeneres(event.target.value);\n  }, [setGeneres]);\n  const updateRecordDetails = useCallback(event => {\n    event.preventDefault();\n    const title = event.target.elements.title.value;\n    const description = event.target.elements.description.value;\n    const generes = event.target.elements.generes.value || \"\";\n    const generesArr = generes.split(\",\").filter(str => str !== \"\").map(str => str.trim().toLowerCase());\n    requestUpdate(record.id, {\n      title,\n      description,\n      generes: generesArr\n    });\n    setEditMode(false);\n  }, [record, setEditMode, requestUpdate]); //ajust text areaf size \n  // useEffect(() => {\n  //     const el = descriptionTextArea.current;\n  //     el.style.height = 0;\n  //     el.style.height = el.scrollHeight + 10 + \"px\";\n  // }, [description, descriptionTextArea])\n\n  const deleteCurrent = useCallback(() => {\n    requestDelete(record.id);\n  }, [record, requestDelete]);\n  const downloadCurrent = useCallback(() => {\n    const a = document.createElement('a');\n    a.href = getDownloadLink(record === null || record === void 0 ? void 0 : record.id, record === null || record === void 0 ? void 0 : record.title);\n    a.setAttribute('download', record === null || record === void 0 ? void 0 : record.title);\n    a.click();\n  }, [record]);\n  useEffect(() => {\n    if (deleteStatus === \"SUCCESS\") {\n      history.goBack();\n      resetDeleteStatus();\n    }\n  }, [deleteStatus, resetDeleteStatus]);\n  return React.createElement(Form, {\n    className: \"record-details\",\n    onSubmit: updateRecordDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, editable && React.createElement(IconBar, {\n    className: \"record-details-icons\",\n    items: {\n      edit: toggleMode,\n      download: downloadCurrent,\n      delete: deleteCurrent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    className: \"record-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"User: \"), React.createElement(Form.Control, {\n    name: \"user\",\n    type: \"text\",\n    value: userNickname,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"record-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Title: \"), React.createElement(Form.Control, {\n    name: \"title\",\n    type: \"text\",\n    value: title,\n    onChange: updateTitle,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"record-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Description: \"), React.createElement(Form.Control, {\n    name: \"description\",\n    as: \"textarea\",\n    ref: ref => descriptionTextArea(autoResizeTextArea(ref)),\n    value: description,\n    onChange: updateDescription,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"genere-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Generes: \"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"generes\",\n    value: generes,\n    onChange: updateGeneres,\n    pattern: \"^(?:[A-Za-z&]{1,25}(?:,\\\\s*)?)+$\",\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), editMode && React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \" Save \"));\n};\n\nconst mapStateToProps = state => ({\n  userId: state.user.dbId,\n  deleteStatus: state.records.deleteStatus\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestUpdate: (recordId, dataChanges) => dispatch(reqUpdateRec(recordId, dataChanges)),\n  requestDelete: recordId => dispatch(reqDeleteRec(recordId)),\n  resetDeleteStatus: () => dispatch(setRecDeleteStatus(\"IDLE\"))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordDetails);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordDetails/RecordDetails.js"],"names":["React","useState","useEffect","useCallback","useRef","useMemo","reqUpdateRec","reqDeleteRec","setRecDeleteStatus","connect","useHistory","getApi","Form","Button","IconBar","useAutoHeightTextarea","RecordDetails","record","userId","requestUpdate","requestDelete","deleteStatus","resetDeleteStatus","getDownloadLink","history","editMode","setEditMode","editable","setEditable","userNickname","setUserNickname","title","setTitle","description","setDescription","generes","setGeneres","descriptionTextArea","autoResizeTextArea","setFromRecord","user","id","nickname","map","genere","name","join","toggleMode","mode","updateTitle","event","target","value","indexOf","setCustomValidity","updateDescription","updateGeneres","updateRecordDetails","preventDefault","elements","generesArr","split","filter","str","trim","toLowerCase","deleteCurrent","downloadCurrent","a","document","createElement","href","setAttribute","click","goBack","edit","download","delete","ref","mapStateToProps","state","dbId","records","mapDispatchToProps","dispatch","recordId","dataChanges"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef, useMemo } from \"react\";\r\nimport { reqUpdateRec, reqDeleteRec, setRecDeleteStatus } from \"./../../../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getApi } from \"./.././../../../apis/apiProvider\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport IconBar from \"./../IconBar/IconBar\";\r\nimport \"./record-details.scss\";\r\nimport useAutoHeightTextarea from \"../../Hooks/useAutoHeightTextarea\";\r\n\r\nconst RecordDetails = ({ record, userId, requestUpdate, requestDelete, deleteStatus, resetDeleteStatus }) => {\r\n    const getDownloadLink = useMemo(() => getApi('RecordsStore').getDownloadLink, [getApi])\r\n    const history = useHistory();\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editable, setEditable] = useState(false);\r\n\r\n    const [userNickname, setUserNickname] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [generes, setGeneres] = useState([]);\r\n\r\n    const descriptionTextArea = useRef();\r\n    const [autoResizeTextArea] = useAutoHeightTextarea();\r\n\r\n\r\n    const setFromRecord = useCallback((record) => {\r\n        if (record.user.id === userId) {\r\n            setEditable(true);\r\n        }\r\n        setUserNickname(record.user.nickname || \"\");\r\n        setTitle(record.title || \"\")\r\n        setDescription(record.description || \"\")\r\n        setGeneres(record.generes.map(genere => genere.name).join(\", \") || []);\r\n    }, [userId,\r\n        setEditable,\r\n        setTitle,\r\n        setDescription,\r\n        setGeneres,\r\n        setUserNickname])\r\n\r\n    useEffect(() => {\r\n        if (!record) return;\r\n        setFromRecord(record)\r\n    }, [record, setFromRecord])\r\n\r\n\r\n    const toggleMode = useCallback(() => {\r\n        const mode = !editMode;\r\n        setEditMode(mode)\r\n        if (!mode) {\r\n            setFromRecord(record)\r\n        }\r\n\r\n    }, [record, editMode, setEditMode])\r\n\r\n    const updateTitle = useCallback((event) => {\r\n        if (event.target.value.indexOf(\"_\") !== -1) {\r\n            event.target.setCustomValidity(`Using underscore in sets name is \r\n                not allowed. You can use eg \"-\". Pleas change name of your record`)\r\n        } else {\r\n            event.target.setCustomValidity('')\r\n        }\r\n        setTitle(event.target.value);\r\n    }, [setTitle])\r\n\r\n    const updateDescription = useCallback(event => {\r\n\r\n        setDescription(event.target.value)\r\n    }, [setDescription])\r\n\r\n\r\n    const updateGeneres = useCallback(event => {\r\n        setGeneres(event.target.value)\r\n    }, [setGeneres])\r\n\r\n    const updateRecordDetails = useCallback(event => {\r\n        event.preventDefault();\r\n        const title = event.target.elements.title.value;\r\n        const description = event.target.elements.description.value;\r\n        const generes = event.target.elements.generes.value || \"\";\r\n        const generesArr = generes.split(\",\").filter(str => str !== \"\").map(str => str.trim().toLowerCase());\r\n        requestUpdate(record.id, {\r\n            title,\r\n            description,\r\n            generes: generesArr\r\n        })\r\n        setEditMode(false)\r\n    }, [record, setEditMode, requestUpdate])\r\n\r\n    //ajust text areaf size \r\n    // useEffect(() => {\r\n    //     const el = descriptionTextArea.current;\r\n    //     el.style.height = 0;\r\n    //     el.style.height = el.scrollHeight + 10 + \"px\";\r\n    // }, [description, descriptionTextArea])\r\n\r\n    const deleteCurrent = useCallback(() => {\r\n        requestDelete(record.id);\r\n    }, [record, requestDelete])\r\n\r\n    const downloadCurrent = useCallback(() => {\r\n        const a = document.createElement('a');\r\n        a.href = getDownloadLink(record?.id, record?.title);\r\n        a.setAttribute('download', record?.title);\r\n        a.click();\r\n    }, [record])\r\n\r\n    useEffect(() => {\r\n        if (deleteStatus === \"SUCCESS\") {\r\n            history.goBack();\r\n            resetDeleteStatus();\r\n        }\r\n    }, [deleteStatus, resetDeleteStatus])\r\n\r\n    return (\r\n\r\n        <Form className=\"record-details\" onSubmit={updateRecordDetails}>\r\n            {editable && <IconBar className=\"record-details-icons\" items={{\r\n                edit: toggleMode,\r\n                download: downloadCurrent,\r\n                delete: deleteCurrent,\r\n\r\n            }} />}\r\n            <Form.Group className=\"record-title\">\r\n                <Form.Label>User: </Form.Label>\r\n                <Form.Control name=\"user\" type=\"text\" value={userNickname} disabled />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"record-title\">\r\n                <Form.Label>Title: </Form.Label>\r\n                <Form.Control\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={updateTitle}\r\n                    disabled={!editMode} />\r\n            </Form.Group>\r\n            <Form.Group className=\"record-description\">\r\n                <Form.Label>Description: </Form.Label>\r\n                <Form.Control\r\n                    name=\"description\"\r\n                    as=\"textarea\"\r\n                    ref={ref => descriptionTextArea(autoResizeTextArea(ref))}\r\n                    value={description}\r\n                    onChange={updateDescription}\r\n                    disabled={!editMode} />\r\n            </Form.Group>\r\n            <Form.Group className=\"genere-list\">\r\n                <Form.Label>Generes: </Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    name=\"generes\"\r\n                    value={generes}\r\n                    onChange={updateGeneres}\r\n                    pattern=\"^(?:[A-Za-z&]{1,25}(?:,\\s*)?)+$\"\r\n                    disabled={!editMode} />\r\n            </Form.Group>\r\n            {editMode && <Button type=\"submit\"> Save </Button>}\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.user.dbId,\r\n    deleteStatus: state.records.deleteStatus,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestUpdate: (recordId, dataChanges) => dispatch(reqUpdateRec(recordId, dataChanges)),\r\n    requestDelete: (recordId) => dispatch(reqDeleteRec(recordId)),\r\n    resetDeleteStatus: () => dispatch(setRecDeleteStatus(\"IDLE\")),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordDetails)"]},"metadata":{},"sourceType":"module"}