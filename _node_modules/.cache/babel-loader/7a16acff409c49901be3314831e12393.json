{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\SyncBar\\\\SyncBar.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from 'react-bootstrap';\nimport { setIsSync, setIsMaster } from './../../../actions';\nimport \"./sync-bar.scss\";\n\nconst SyncBar = props => {\n  return React.createElement(\"div\", {\n    className: \"sync-bar \" + \"bar-deck-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"sync-btn \" + (props.syncState ? \"btn--pressed\" : \"\"),\n    onClick: props.toggleIsSync,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Sync\"), React.createElement(Button, {\n    className: \"master-btn \" + (props.masterState ? \"btn--pressed\" : \"\"),\n    onClick: props.toggleIsMaster,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Master\"));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  syncState: state.console.channel[ownProps.name].playBackState.isSync,\n  masterState: state.console.channel[ownProps.name].playBackState.isMaster\n});\n\nconst mapDispachToProps = (dispach, ownProps) => ({\n  toggleSyncState: value => dispach(toggleIsSync(ownProps.name, value)),\n  toggleMasterState: value => dispach(toggleIsMaster(ownProps.name, value))\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(SyncBar);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/SyncBar/SyncBar.js"],"names":["React","connect","Button","setIsSync","setIsMaster","SyncBar","props","name","syncState","toggleIsSync","masterState","toggleIsMaster","mapStateToProps","state","ownProps","console","channel","playBackState","isSync","isMaster","mapDispachToProps","dispach","toggleSyncState","value","toggleMasterState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,oBAAvC;AACA,OAAO,iBAAP;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAG;AAEpB,SACI;AAAK,IAAA,SAAS,EAAE,cAAc,WAAd,GAA4BA,KAAK,CAACC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAE,eAAgBD,KAAK,CAACE,SAAP,GAAoB,cAApB,GAAqC,EAApD,CADf;AAEI,IAAA,OAAO,EAAEF,KAAK,CAACG,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAMI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAE,iBAAkBH,KAAK,CAACI,WAAP,GAAsB,cAAtB,GAAuC,EAAxD,CADf;AAEI,IAAA,OAAO,EAAGJ,KAAK,CAACK,cAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADJ;AAeH,CAjBD;;AAmBA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CN,EAAAA,SAAS,EAAGK,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACP,IAA/B,EAAqCU,aAArC,CAAmDC,MADrB;AAE1CR,EAAAA,WAAW,EAAGG,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACP,IAA/B,EAAqCU,aAArC,CAAmDE;AAFvB,CAAtB,CAAxB;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,OAAD,EAAUP,QAAV,MAAwB;AAC9CQ,EAAAA,eAAe,EAAIC,KAAD,IAAWF,OAAO,CAACZ,YAAY,CAACK,QAAQ,CAACP,IAAV,EAAgBgB,KAAhB,CAAb,CADU;AAE9CC,EAAAA,iBAAiB,EAAID,KAAD,IAAWF,OAAO,CAACV,cAAc,CAACG,QAAQ,CAACP,IAAV,EAAgBgB,KAAhB,CAAf;AAFQ,CAAxB,CAA1B;;AAKA,eAAetB,OAAO,CAACW,eAAD,EAAkBQ,iBAAlB,CAAP,CAA4Cf,OAA5C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { setIsSync, setIsMaster } from './../../../actions';\r\nimport \"./sync-bar.scss\";\r\n\r\nconst SyncBar = props =>{\r\n\r\n    return (\r\n        <div className={\"sync-bar \" + \"bar-deck-\" + props.name }>\r\n            <Button \r\n                className={\"sync-btn \" + ((props.syncState) ? \"btn--pressed\" : \"\")} \r\n                onClick={props.toggleIsSync}>\r\n                    Sync\r\n            </Button>\r\n            <Button \r\n                className={\"master-btn \" + ((props.masterState) ? \"btn--pressed\" : \"\" )}\r\n                onClick ={props.toggleIsMaster}>\r\n                    Master\r\n            </Button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    syncState : state.console.channel[ownProps.name].playBackState.isSync,\r\n    masterState : state.console.channel[ownProps.name].playBackState.isMaster,\r\n})\r\n\r\nconst mapDispachToProps = (dispach, ownProps) => ({\r\n    toggleSyncState : (value) => dispach(toggleIsSync(ownProps.name, value)),\r\n    toggleMasterState : (value) => dispach(toggleIsMaster(ownProps.name, value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SyncBar);"]},"metadata":{},"sourceType":"module"}