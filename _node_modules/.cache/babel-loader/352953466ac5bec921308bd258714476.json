{"ast":null,"code":"import React from \"react\";\nexport default function useRecordSearchUrl() {\n  const getUrl = (query, opt) => {\n    const {\n      searchOpt,\n      searchParams\n    } = opt;\n    let params = \"\";\n\n    for (let optName in searchOpt) {\n      if (!searchOpt[optName]) {\n        params += 'no-' + optName + ',';\n      }\n    }\n\n    if (params.length > 1) {\n      params = \"?searchOpt=\" + params;\n      params = params.substr(0, params.length - 1);\n    }\n\n    serach = [];\n\n    for (let paramName in searchParams) {\n      const value = searchParams[paramName];\n\n      switch (typeof value) {\n        case \"boolean\":\n          {\n            search.push(paramName + \"=\" + value.toString());\n          }\n\n        case \"string\":\n          {\n            serach.push(paramName + '=' + value);\n          }\n\n        case \"object\":\n          {\n            if (value instanceof Array && value.length) {\n              serach.push(paramName + \"=\" + value.join(\",\"));\n            }\n          }\n      }\n    }\n\n    if (serach) {\n      if (!params) {\n        params += \"?\";\n      }\n\n      params += serach.join(\"&\");\n    } // if (generes || _generes) { // from route param \n    //     params += (params.length) ? \"&\" : \"?\";\n    //     params += \"&generes=\";\n    //     params += generes || \"\";\n    //     params += _generes || \"\";\n    // }\n\n\n    return '/records/search/' + queryStr + params;\n  };\n\n  return [getUrl];\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/useRecordSearchURL.js"],"names":["React","useRecordSearchUrl","getUrl","query","opt","searchOpt","searchParams","params","optName","length","substr","serach","paramName","value","search","push","toString","Array","join","queryStr"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,kBAAT,GAA6B;AACxC,QAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAe;AAC1B,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAA4BF,GAAlC;AACA,QAAIG,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,OAAT,IAAoBH,SAApB,EAA+B;AAC3B,UAAI,CAACA,SAAS,CAACG,OAAD,CAAd,EAAyB;AACrBD,QAAAA,MAAM,IAAI,QAAQC,OAAR,GAAkB,GAA5B;AACH;AACJ;;AACD,QAAID,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACnBF,MAAAA,MAAM,GAAG,gBAAgBA,MAAzB;AACAA,MAAAA,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAc,CAAd,EAAiBH,MAAM,CAACE,MAAP,GAAgB,CAAjC,CAAT;AACH;;AAEDE,IAAAA,MAAM,GAAG,EAAT;;AACA,SAAI,IAAIC,SAAR,IAAqBN,YAArB,EAAkC;AAC9B,YAAMO,KAAK,GAAIP,YAAY,CAACM,SAAD,CAA3B;;AACA,cAAO,OAAOC,KAAd;AACI,aAAK,SAAL;AAAgB;AACZC,YAAAA,MAAM,CAACC,IAAP,CAAYH,SAAS,GAAG,GAAZ,GAAkBC,KAAK,CAACG,QAAN,EAA9B;AACH;;AACD,aAAK,QAAL;AAAgB;AACZL,YAAAA,MAAM,CAACI,IAAP,CAAYH,SAAS,GAAG,GAAZ,GAAkBC,KAA9B;AACH;;AACD,aAAK,QAAL;AAAe;AACX,gBAAGA,KAAK,YAAYI,KAAjB,IAA0BJ,KAAK,CAACJ,MAAnC,EAA0C;AACtCE,cAAAA,MAAM,CAACI,IAAP,CAAaH,SAAS,GAAG,GAAZ,GAAkBC,KAAK,CAACK,IAAN,CAAW,GAAX,CAA/B;AACH;AACJ;AAXL;AAaH;;AAED,QAAGP,MAAH,EAAU;AACN,UAAG,CAACJ,MAAJ,EAAY;AACRA,QAAAA,MAAM,IAAI,GAAV;AACH;;AACDA,MAAAA,MAAM,IAAII,MAAM,CAACO,IAAP,CAAY,GAAZ,CAAV;AACH,KApCyB,CAuC1B;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAAO,qBAAqBC,QAArB,GAAgCZ,MAAvC;AACH,GA/CD;;AAiDA,SAAO,CAACL,MAAD,CAAP;AACH","sourcesContent":["import React from \"react\";\r\n\r\nexport default function useRecordSearchUrl(){\r\n    const getUrl = (query, opt) =>{\r\n        const {searchOpt, searchParams} = opt; \r\n        let params = \"\";\r\n        for (let optName in searchOpt) {\r\n            if (!searchOpt[optName]) {\r\n                params += 'no-' + optName + ',';\r\n            }\r\n        }\r\n        if (params.length > 1) {\r\n            params = \"?searchOpt=\" + params\r\n            params = params.substr(0, params.length - 1)\r\n        }\r\n\r\n        serach = [];\r\n        for(let paramName in searchParams){\r\n            const value =  searchParams[paramName]\r\n            switch(typeof value){\r\n                case \"boolean\": {\r\n                    search.push(paramName + \"=\" + value.toString()) \r\n                }\r\n                case \"string\" : {\r\n                    serach.push(paramName + '=' + value)\r\n                }\r\n                case \"object\" :{\r\n                    if(value instanceof Array && value.length){\r\n                        serach.push( paramName + \"=\" + value.join(\",\"));\r\n                    }\r\n                }\r\n            } \r\n        }\r\n        \r\n        if(serach){\r\n            if(!params) {\r\n                params += \"?\"\r\n            } \r\n            params += serach.join(\"&\")\r\n        }\r\n\r\n\r\n        // if (generes || _generes) { // from route param \r\n        //     params += (params.length) ? \"&\" : \"?\";\r\n        //     params += \"&generes=\";\r\n        //     params += generes || \"\";\r\n        //     params += _generes || \"\";\r\n        // }\r\n\r\n        return '/records/search/' + queryStr + params;\r\n    }\r\n\r\n    return [getUrl];\r\n}"]},"metadata":{},"sourceType":"module"}