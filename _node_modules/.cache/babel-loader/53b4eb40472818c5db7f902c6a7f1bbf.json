{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\deck\\\\deck.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport WaveSurfer from \"wavesurfer\";\n\nclass Deck extends React.Component {\n  constructor() {\n    super();\n    this.mainWave = React.createRef();\n    this.smallWave = React.createRef();\n  }\n\n  componentDidMount() {\n    if (!this.props.active) return;\n    this.bigWaveSurfer = WaveSurfer.create({\n      container: this.mainWave.current,\n      waveColor: 'violet',\n      progressColor: 'purple',\n      autoCenter: true,\n      scrollParent: true,\n      hideScrollbar: true,\n      fillParent: false,\n      height: 130,\n      minPxPerSec: 150\n    });\n    this.smallWaveSurfer = WaveSurfer.create({\n      container: this.smallWave.current,\n      fillParent: true,\n      scrollParent: false,\n      hideScrollbar: true,\n      scrollParent: false,\n      height: 50\n    });\n    let duration = 0;\n    this.bigWaveSurfer.on('ready', () => {\n      this.bigWaveSurfer.play();\n      duration = this.bigWaveSurfer.getDuration();\n      let resolution = 430;\n      let peaks = this.bigWaveSurfer.backend.getPeaks(resolution, 0, resolution);\n      this.smallWaveSurfer.load(null, peaks);\n      startSync();\n    });\n    this.smallWaveSurfer.on('seek', progress => {\n      this.bigWaveSurfer.seekTo(progress);\n\n      if (!this.bigWaveSurfer.isPlaying()) {\n        this.bigWaveSurfer.play();\n      }\n    });\n    let syncHandle = null;\n\n    let startSync = () => {\n      syncHandle = setInterval(() => {\n        let progress = this.bigWaveSurfer.getCurrentTime() / duration;\n        this.smallWaveSurfer.drawer.progress(progress);\n      }, 100);\n    };\n\n    this.bigWaveSurfer.load('https://ciagnik-yt-downloader.herokuapp.com/download?url=https://www.youtube.com/watch?v=hVv331iLMXM');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        height: 250 + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.props.children, React.createElement(\"div\", {\n      ref: this.mainWave,\n      style: {\n        height: 130 + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"  \"), React.createElement(\"div\", {\n      ref: this.smallWave,\n      style: {\n        height: 50 + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"  \"));\n  }\n\n}\n\nexport default connect()(Deck);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/deck/deck.js"],"names":["React","useEffect","useRef","connect","WaveSurfer","Deck","Component","constructor","mainWave","createRef","smallWave","componentDidMount","props","active","bigWaveSurfer","create","container","current","waveColor","progressColor","autoCenter","scrollParent","hideScrollbar","fillParent","height","minPxPerSec","smallWaveSurfer","duration","on","play","getDuration","resolution","peaks","backend","getPeaks","load","startSync","progress","seekTo","isPlaying","syncHandle","setInterval","getCurrentTime","drawer","render","children"],"mappings":"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","sourcesContent":["import React, { useEffect , useRef} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport WaveSurfer from \"wavesurfer\";\r\n\r\nclass Deck extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.mainWave = React.createRef();\r\n        this.smallWave = React.createRef();\r\n        \r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        if(!this.props.active) return;\r\n        this.bigWaveSurfer = WaveSurfer.create({\r\n            container: this.mainWave.current,\r\n            waveColor: 'violet',\r\n            progressColor: 'purple',\r\n            autoCenter : true,\r\n            scrollParent: true,\r\n            hideScrollbar:true,\r\n            fillParent: false,\r\n            height: 130,\r\n            minPxPerSec : 150\r\n        });\r\n\r\n        this.smallWaveSurfer = WaveSurfer.create({\r\n            container: this.smallWave.current,\r\n            fillParent: true,\r\n            scrollParent : false,\r\n            hideScrollbar: true,\r\n            scrollParent : false,\r\n            height: 50,\r\n        })\r\n\r\n        let duration = 0;\r\n        this.bigWaveSurfer.on('ready', () => {\r\n            this.bigWaveSurfer.play();\r\n            duration = this.bigWaveSurfer.getDuration();\r\n            let resolution = 430;\r\n            let peaks = this.bigWaveSurfer.backend.getPeaks(resolution, 0, resolution);\r\n            this.smallWaveSurfer.load(null, peaks);\r\n            startSync();\r\n        });\r\n\r\n        this.smallWaveSurfer.on('seek', (progress) => {\r\n            this.bigWaveSurfer.seekTo(progress);\r\n            if(!this.bigWaveSurfer.isPlaying()){\r\n                this.bigWaveSurfer.play();\r\n            }\r\n        })\r\n\r\n        let syncHandle = null;\r\n        let startSync = () => {\r\n            syncHandle = setInterval(() => {\r\n                let progress = this.bigWaveSurfer.getCurrentTime() / duration;\r\n                this.smallWaveSurfer.drawer.progress(progress);\r\n            }, 100);\r\n        }\r\n\r\n        this.bigWaveSurfer.load('https://ciagnik-yt-downloader.herokuapp.com/download?url=https://www.youtube.com/watch?v=hVv331iLMXM');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{height: 250 + 'px'}}>\r\n                {this.props.children}\r\n                <div ref={ this.mainWave } style={{height:130 + 'px'}} >  </div>\r\n                <div ref={ this.smallWave }  style={{height: 50 + 'px'}} >  </div>\r\n            </div>\r\n            )\r\n        }\r\n    \r\n}\r\n\r\nexport default connect()(Deck);"]},"metadata":{},"sourceType":"module"}