{"ast":null,"code":"import { ACTIONS } from \"./../../actions\";\nimport { takeEvery } from \"redux-saga/effects\";\nimport { LOG_TYPES } from \"./../../utils/logger/logger\";\nconst environment = process.env.NODE_ENV;\nexport default function* watchPushLog(action) {\n  if (environment === \"development\") {\n    yield takeEvery(ACTIONS.LOG_PUSH, handler);\n  }\n}\n\nfunction* handler(action) {\n  const {\n    log\n  } = action;\n\n  if (![LOG_TYPES.DEBUG, LOG_TYPES.ERROR].includes(log.type)) {\n    return;\n  }\n}\n\nfunction print(type, msg) {\n  switch (type) {\n    case LOG_TYPES.ERROR:\n      {\n        console.error(msg);\n        break;\n      }\n\n    case LOG_TYPES.DEBUG:\n      {\n        console.log(msg);\n      }\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/logger/print.js"],"names":["ACTIONS","takeEvery","LOG_TYPES","environment","process","env","NODE_ENV","watchPushLog","action","LOG_PUSH","handler","log","DEBUG","ERROR","includes","type","print","msg","console","error"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,iBAAtB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,SAAQC,SAAR,QAAwB,6BAAxB;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAhC;AAEA,eAAe,UAAUC,YAAV,CAAuBC,MAAvB,EAA8B;AACzC,MAAGL,WAAW,KAAK,aAAnB,EAAiC;AAC7B,UAAMF,SAAS,CAACD,OAAO,CAACS,QAAT,EAAmBC,OAAnB,CAAf;AACH;AACJ;;AAED,UAAUA,OAAV,CAAkBF,MAAlB,EAAyB;AACrB,QAAM;AAACG,IAAAA;AAAD,MAAQH,MAAd;;AAEA,MAAG,CAAC,CAACN,SAAS,CAACU,KAAX,EACCV,SAAS,CAACW,KADX,EACkBC,QADlB,CAC2BH,GAAG,CAACI,IAD/B,CAAJ,EAC0C;AACtC;AACH;AACJ;;AAED,SAASC,KAAT,CAAeD,IAAf,EAAqBE,GAArB,EAAyB;AACrB,UAAOF,IAAP;AACI,SAAKb,SAAS,CAACW,KAAf;AAAuB;AACnBK,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA;AACH;;AACD,SAAKf,SAAS,CAACU,KAAf;AAAuB;AACnBM,QAAAA,OAAO,CAACP,GAAR,CAAYM,GAAZ;AACH;AAPL;AASH","sourcesContent":["import {ACTIONS} from \"./../../actions\";\r\nimport {takeEvery} from \"redux-saga/effects\"\r\nimport {LOG_TYPES} from \"./../../utils/logger/logger\";\r\n\r\nconst environment = process.env.NODE_ENV; \r\n\r\nexport default function* watchPushLog(action){\r\n    if(environment === \"development\"){\r\n        yield takeEvery(ACTIONS.LOG_PUSH, handler)\r\n    }\r\n}\r\n\r\nfunction* handler(action){\r\n    const {log} = action;\r\n\r\n    if(![LOG_TYPES.DEBUG, \r\n         LOG_TYPES.ERROR].includes(log.type)) {\r\n        return;\r\n    }\r\n}\r\n\r\nfunction print(type, msg){\r\n    switch(type){\r\n        case LOG_TYPES.ERROR : {\r\n            console.error(msg);\r\n            break;\r\n        }\r\n        case LOG_TYPES.DEBUG : {\r\n            console.log(msg);\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}