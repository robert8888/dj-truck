{"ast":null,"code":"import { toggleDir, ACTIONS, pushDirContent } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport requestDirContetQuery from \"./../../qlQueries/requestDirContent\";\nimport { get } from \"lodash/object\";\nexport default function* openAndLoadDirRequest() {\n  yield takeEvery(ACTIONS.PL_TOGGLE_DIR_REQUEST, handel);\n}\n\nconst getToken = state => state.user.token;\n\nconst getCurrentSelection = state => state.playList.currentSelection;\n\nconst getCurrent = (state, path) => get(state.playList, path);\n\nfunction* handel(action) {\n  const {\n    callQuery\n  } = getApi(\"UserAssets\");\n  const token = yield select(getToken);\n  const currentSelection = yield select(getCurrentSelection);\n  const current = yield select(getCurrent, currentSelection);\n\n  if (current._open || current._loaded) {\n    //close\n    return yield put(toggleDir(action.path));\n  } else {\n    var _callQuery, _callQuery$data;\n\n    let dirContent = yield (_callQuery = callQuery(requestDirContetQuery(current._id), token)) === null || _callQuery === void 0 ? void 0 : (_callQuery$data = _callQuery.data) === null || _callQuery$data === void 0 ? void 0 : _callQuery$data.dir;\n\n    if (!dirContent) {\n      return;\n    }\n\n    console.log(\"dir content\", dirContent);\n    const isRoot = false;\n    yield put(pushDirContent(action.path, isRoot, dirContent));\n    return yield put(toggleDir(action.path));\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/openAndLoadDirRequest.js"],"names":["toggleDir","ACTIONS","pushDirContent","takeEvery","select","put","getApi","requestDirContetQuery","get","openAndLoadDirRequest","PL_TOGGLE_DIR_REQUEST","handel","getToken","state","user","token","getCurrentSelection","playList","currentSelection","getCurrent","path","action","callQuery","current","_open","_loaded","dirContent","_id","data","dir","console","log","isRoot"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,cAA7B,QAAmD,eAAnD;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,eAAe,UAAUC,qBAAV,GAAkC;AAC7C,QAAMN,SAAS,CAACF,OAAO,CAACS,qBAAT,EAAgCC,MAAhC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,MAAMC,mBAAmB,GAAGH,KAAK,IAAIA,KAAK,CAACI,QAAN,CAAeC,gBAApD;;AAEA,MAAMC,UAAU,GAAG,CAACN,KAAD,EAAQO,IAAR,KAAiBZ,GAAG,CAACK,KAAK,CAACI,QAAP,EAAiBG,IAAjB,CAAvC;;AAEA,UAAUT,MAAV,CAAiBU,MAAjB,EAAyB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAgBhB,MAAM,CAAC,YAAD,CAA5B;AACA,QAAMS,KAAK,GAAG,MAAMX,MAAM,CAACQ,QAAD,CAA1B;AACA,QAAMM,gBAAgB,GAAG,MAAMd,MAAM,CAACY,mBAAD,CAArC;AACA,QAAMO,OAAO,GAAG,MAAMnB,MAAM,CAACe,UAAD,EAAaD,gBAAb,CAA5B;;AACA,MAAIK,OAAO,CAACC,KAAR,IAAiBD,OAAO,CAACE,OAA7B,EAAsC;AAClC;AACA,WAAO,MAAMpB,GAAG,CAACL,SAAS,CAACqB,MAAM,CAACD,IAAR,CAAV,CAAhB;AACH,GAHD,MAGO;AAAA;;AACH,QAAIM,UAAU,GAAG,oBAAMJ,SAAS,CAACf,qBAAqB,CAACgB,OAAO,CAACI,GAAT,CAAtB,EAAqCZ,KAArC,CAAf,kEAAM,WAAsDa,IAA5D,oDAAM,gBAA4DC,GAAnF;;AACA,QAAG,CAACH,UAAJ,EAAe;AACX;AACH;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,UAA3B;AACC,UAAMM,MAAM,GAAG,KAAf;AACA,UAAM3B,GAAG,CAACH,cAAc,CAACmB,MAAM,CAACD,IAAR,EAAcY,MAAd,EAAsBN,UAAtB,CAAf,CAAT;AACA,WAAO,MAAMrB,GAAG,CAACL,SAAS,CAACqB,MAAM,CAACD,IAAR,CAAV,CAAhB;AACJ;AACJ","sourcesContent":["import { toggleDir, ACTIONS, pushDirContent } from \"../../actions\";\r\nimport { takeEvery, select, put } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport requestDirContetQuery from \"./../../qlQueries/requestDirContent\";\r\nimport { get } from \"lodash/object\";\r\n\r\nexport default function* openAndLoadDirRequest() {\r\n    yield takeEvery(ACTIONS.PL_TOGGLE_DIR_REQUEST, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nconst getCurrentSelection = state => state.playList.currentSelection;\r\n\r\nconst getCurrent = (state, path) => get(state.playList, path);\r\n\r\nfunction* handel(action) {\r\n    const { callQuery } = getApi(\"UserAssets\");\r\n    const token = yield select(getToken);\r\n    const currentSelection = yield select(getCurrentSelection);\r\n    const current = yield select(getCurrent, currentSelection);\r\n    if (current._open || current._loaded) {\r\n        //close\r\n        return yield put(toggleDir(action.path))\r\n    } else {\r\n        let dirContent = yield callQuery(requestDirContetQuery(current._id), token)?.data?.dir;\r\n        if(!dirContent){\r\n            return;\r\n        }\r\n        console.log(\"dir content\", dirContent)\r\n         const isRoot = false;\r\n         yield put(pushDirContent(action.path, isRoot, dirContent));\r\n         return yield put(toggleDir(action.path))\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}