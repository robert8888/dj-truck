{"ast":null,"code":"import { put, select, takeEvery } from \"redux-saga/effects\";\nimport { ACTIONS, postComment, pushLog } from \"../../../actions\";\nimport { getApi } from \"./../../../apis/apiProvider\";\nimport Log from \"./../../../utils/logger/logger\";\nexport default function* requestCreateComment() {\n  yield takeEvery(ACTIONS.RECS_REQ_POST_COMMENT, handel);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* handel(action) {\n  const token = yield select(getToken);\n  if (!token) return;\n\n  try {\n    var _result$data;\n\n    const {\n      callQuery,\n      queries\n    } = getApi(\"UserAssets\"); // console.log(action.commentData)\n\n    const query = queries.createCommentQl;\n    const result = yield callQuery(query, token, action.commentData);\n    console.log(result);\n    const comment = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.createComment;\n\n    if (result.errors || !comment) {\n      throw new Error(\"Can't create comment in database\");\n    }\n\n    yield put(postComment(comment));\n    yield put(pushLog(new Log(`Comment created in database id: ${comment.id}`)));\n  } catch (error) {\n    yield pushLog(Log.Error(['saga', 'record', 'comments', 'request craeted comment'], error.message, \"Sorry. During creating comment in database occurred problem\", error));\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/records/comments/reqCreateComment.js"],"names":["put","select","takeEvery","ACTIONS","postComment","pushLog","getApi","Log","requestCreateComment","RECS_REQ_POST_COMMENT","handel","getToken","state","user","token","action","callQuery","queries","query","createCommentQl","result","commentData","console","log","comment","data","createComment","errors","Error","id","error","message"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,OAA/B,QAA8C,kBAA9C;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,OAAOC,GAAP,MAAgB,gCAAhB;AAEA,eAAe,UAAUC,oBAAV,GAAiC;AAC5C,QAAMN,SAAS,CAACC,OAAO,CAACM,qBAAT,EAAgCC,MAAhC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUJ,MAAV,CAAiBK,MAAjB,EAAyB;AACrB,QAAMD,KAAK,GAAG,MAAMb,MAAM,CAACU,QAAD,CAA1B;AACA,MAAG,CAACG,KAAJ,EAAW;;AAEX,MAAI;AAAA;;AACA,UAAM;AAAEE,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBX,MAAM,CAAC,YAAD,CAArC,CADA,CAGD;;AACC,UAAMY,KAAK,GAAGD,OAAO,CAACE,eAAtB;AACA,UAAMC,MAAM,GAAG,MAAMJ,SAAS,CAACE,KAAD,EAAQJ,KAAR,EAAeC,MAAM,CAACM,WAAtB,CAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,UAAMI,OAAO,GAAGJ,MAAH,aAAGA,MAAH,uCAAGA,MAAM,CAAEK,IAAX,iDAAG,aAAcC,aAA9B;;AAEA,QAAGN,MAAM,CAACO,MAAP,IAAiB,CAACH,OAArB,EAA6B;AACzB,YAAM,IAAII,KAAJ,CAAU,kCAAV,CAAN;AACH;;AAED,UAAM5B,GAAG,CAACI,WAAW,CAACoB,OAAD,CAAZ,CAAT;AAEA,UAAMxB,GAAG,CAACK,OAAO,CAAC,IAAIE,GAAJ,CAAS,mCAAkCiB,OAAO,CAACK,EAAG,EAAtD,CAAD,CAAR,CAAT;AAEH,GAjBD,CAiBE,OAAOC,KAAP,EAAc;AACZ,UAAMzB,OAAO,CAACE,GAAG,CAACqB,KAAJ,CACV,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,yBAA/B,CADU,EAEVE,KAAK,CAACC,OAFI,EAGV,6DAHU,EAIVD,KAJU,CAAD,CAAb;AAMH;AACJ","sourcesContent":["import { put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTIONS, postComment, pushLog } from \"../../../actions\";\r\nimport { getApi } from \"./../../../apis/apiProvider\";\r\nimport Log from \"./../../../utils/logger/logger\";\r\n\r\nexport default function* requestCreateComment() {\r\n    yield takeEvery(ACTIONS.RECS_REQ_POST_COMMENT, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n    if(!token) return;\r\n\r\n    try {\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n\r\n       // console.log(action.commentData)\r\n        const query = queries.createCommentQl;\r\n        const result = yield callQuery(query, token, action.commentData);\r\n        console.log(result)\r\n        const comment = result?.data?.createComment;\r\n        \r\n        if(result.errors || !comment){\r\n            throw new Error(\"Can't create comment in database\")\r\n        }\r\n\r\n        yield put(postComment(comment))\r\n\r\n        yield put(pushLog(new Log(`Comment created in database id: ${comment.id}`)))\r\n        \r\n    } catch (error) {\r\n        yield pushLog(Log.Error(\r\n            ['saga', 'record', 'comments', 'request craeted comment'],\r\n            error.message,\r\n            \"Sorry. During creating comment in database occurred problem\",\r\n            error\r\n        ))\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}