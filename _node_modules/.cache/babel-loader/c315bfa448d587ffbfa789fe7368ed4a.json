{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\home\\\\sections\\\\Testimonial\\\\Testimonials.js\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Testimonial from \"./Testimonial\";\nimport UUID from \"uuidjs\";\n\nconst getTestimonials = () => require.context('./testimonials', true, /\\.json$/).keys();\n\nconst Testimonials = () => {\n  const [testimonials, setTestimonials] = useState(null);\n  const testimonialsJsons = useCallback(() => getTestimonials().map(file => {\n    return import(\"./testimonials\" + file.substr(1, file.length));\n  }), []);\n  useEffect(() => {\n    if (!testimonialsJsons) return;\n    Promise.all(testimonialsJsons()).then(jsons => jsons.map(module => module.default)).then(testimonials => setTestimonials(testimonials));\n  }, [testimonialsJsons, setTestimonials]);\n  if (!testimonials) return null;\n  return React.createElement(\"section\", {\n    className: \"home-testmionial\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"testimonial-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, testimonials && testimonials.map(tst => React.createElement(Testimonial, {\n    key: UUID.genV1(),\n    data: tst,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"testimonail-slider-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default Testimonials;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/home/sections/Testimonial/Testimonials.js"],"names":["React","useEffect","useState","useCallback","Testimonial","UUID","getTestimonials","require","context","keys","Testimonials","testimonials","setTestimonials","testimonialsJsons","map","file","substr","length","Promise","all","then","jsons","module","default","tst","genV1"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,eAAe,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgB,gBAAhB,EAAkC,IAAlC,EAAwC,SAAxC,EAAmDC,IAAnD,EAA9B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMW,iBAAiB,GAAGV,WAAW,CAAC,MAAIG,eAAe,GAAGQ,GAAlB,CAAuBC,IAAI,IAAI;AACrE,WAAO,OAAO,mBAAmBA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeD,IAAI,CAACE,MAApB,CAA1B,CAAP;AACH,GAFyC,CAAL,EAEjC,EAFiC,CAArC;AAIAhB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACY,iBAAJ,EAAuB;AACvBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,iBAAiB,EAA7B,EACCO,IADD,CACOC,KAAK,IAAIA,KAAK,CAACP,GAAN,CAAWQ,MAAM,IAAIA,MAAM,CAACC,OAA5B,CADhB,EAECH,IAFD,CAEOT,YAAY,IAAIC,eAAe,CAACD,YAAD,CAFtC;AAGH,GALQ,EAKN,CAACE,iBAAD,EAAoBD,eAApB,CALM,CAAT;AAOA,MAAG,CAACD,YAAJ,EAAkB,OAAO,IAAP;AAElB,SACI;AAAS,IAAA,SAAS,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,IAAIA,YAAY,CAACG,GAAb,CAAkBU,GAAG,IAAI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEnB,IAAI,CAACoB,KAAL,EAAlB;AAAgC,IAAA,IAAI,EAAED,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CADrB,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAUH,CA1BD;;AA4BA,eAAed,YAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Testimonial from \"./Testimonial\";\r\nimport UUID from \"uuidjs\";\r\n\r\nconst getTestimonials = () => require.context('./testimonials', true, /\\.json$/).keys();\r\n\r\nconst Testimonials = () => {\r\n    const [testimonials, setTestimonials] = useState(null);\r\n    \r\n    const testimonialsJsons = useCallback(()=>getTestimonials().map( file => {\r\n        return import(\"./testimonials\" + file.substr(1, file.length));\r\n    }), []);\r\n\r\n    useEffect(()=>{\r\n        if(!testimonialsJsons) return;\r\n        Promise.all(testimonialsJsons())\r\n        .then( jsons => jsons.map( module => module.default))\r\n        .then( testimonials => setTestimonials(testimonials))\r\n    }, [testimonialsJsons, setTestimonials])\r\n\r\n    if(!testimonials) return null;\r\n\r\n    return (\r\n        <section className=\"home-testmionial\">\r\n            <div className=\"testimonial-slider\">\r\n                {testimonials && testimonials.map( tst => <Testimonial key={UUID.genV1()} data={tst}/>)}\r\n            </div>\r\n            <div className=\"testimonail-slider-control\">\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Testimonials;"]},"metadata":{},"sourceType":"module"}