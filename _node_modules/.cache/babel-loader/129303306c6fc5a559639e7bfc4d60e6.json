{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\PlayListExplorer\\\\Explorer\\\\MenuBar\\\\MenuBar.js\";\nimport React, { useState, useRef, useCallback } from \"react\";\nimport \"./menu-bar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFolderPlus, faFile } from \"@fortawesome/free-solid-svg-icons\";\nimport { Form } from \"react-bootstrap\";\n\nconst MenuBar = props => {\n  const [type, setType] = useState(null);\n  const nameInput = useRef();\n  const dirButton = useRef();\n  const fileButton = useRef();\n  const clear = useCallback(() => {\n    dirButton.current.blur();\n    fileButton.current.blur();\n    nameInput.current.blur();\n    nameInput.current.value = \"\";\n  }, [dirButton, fileButton, nameInput]);\n  const creatClickHandler = useCallback(type => {\n    if (type === \"dir\") {\n      dirButton.current.focus();\n    } else if (type === \"file\") {\n      fileButton.current.focus();\n    }\n\n    setType(type);\n    nameInput.current.focus();\n  }, [nameInput, setType]);\n  const createElement = useCallback(() => {\n    console.log(nameInput.current.value, type);\n    nameInput.current.value = \"\";\n    clear();\n  }, [type, nameInput, clear]);\n  const clearAction = useCallback(() => {\n    setType(null);\n    clear();\n  }, [setType, clear]);\n  return React.createElement(\"div\", {\n    className: \"menu-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Explorer\"), React.createElement(Form.Control, {\n    ref: nameInput,\n    className: \"file-name-input\",\n    type: \"text\",\n    size: \"sm\",\n    onKeyPress: e => {\n      if (e.key === \"Enter\") {\n        createElement();\n      }\n    },\n    onBlur: clearAction.bind(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"flex-spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    ref: dirButton,\n    className: \"btn-transparent btn-new-file\",\n    onClick: creatClickHandler.bind(null, \"dir\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"icon icon-new-folder\",\n    icon: faFolderPlus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    ref: fileButton,\n    className: \"btn-transparent btn-new-file\",\n    onClick: creatClickHandler.bind(null, \"file\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"icon icon-new-file\",\n    icon: faFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n};\n\nexport default MenuBar;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/PlayListExplorer/Explorer/MenuBar/MenuBar.js"],"names":["React","useState","useRef","useCallback","FontAwesomeIcon","faFolderPlus","faFile","Form","MenuBar","props","type","setType","nameInput","dirButton","fileButton","clear","current","blur","value","creatClickHandler","focus","createElement","console","log","clearAction","e","key","bind"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\r\nimport \"./menu-bar.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFolderPlus, faFile } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Form } from \"react-bootstrap\";\r\nconst MenuBar = props => {\r\n    const [type, setType] = useState(null);\r\n    const nameInput = useRef();\r\n    const dirButton = useRef();\r\n    const fileButton = useRef();\r\n\r\n    const clear = useCallback(()=>{\r\n        dirButton.current.blur();\r\n        fileButton.current.blur();\r\n        nameInput.current.blur();\r\n        nameInput.current.value=\"\"\r\n    }, [dirButton, fileButton, nameInput])\r\n\r\n    const creatClickHandler = useCallback(type => {\r\n        if (type === \"dir\") {\r\n            dirButton.current.focus();\r\n        } else if (type === \"file\") {\r\n            fileButton.current.focus()\r\n        }\r\n        setType(type);\r\n        nameInput.current.focus();\r\n    }, [nameInput, setType])\r\n\r\n    const createElement = useCallback(() => {\r\n        console.log(nameInput.current.value, type)\r\n        nameInput.current.value = \"\";\r\n        clear();\r\n\r\n    }, [type, nameInput, clear])\r\n\r\n    const clearAction = useCallback(()=>{\r\n        setType(null);\r\n        clear();\r\n    }, [setType, clear])\r\n\r\n\r\n    return (\r\n        <div className=\"menu-bar\">\r\n            <h6 className=\"title\">Explorer</h6>\r\n            <Form.Control\r\n                ref={nameInput}\r\n                className=\"file-name-input\"\r\n                type=\"text\" size=\"sm\"\r\n                onKeyPress={e => { if (e.key === \"Enter\") { createElement() } }}\r\n                onBlur={clearAction.bind(null)}\r\n            />\r\n            <div className=\"flex-spacer\" />\r\n            <button\r\n                ref={dirButton}\r\n                className=\"btn-transparent btn-new-file\"\r\n                onClick={creatClickHandler.bind(null, \"dir\")}>\r\n                <FontAwesomeIcon\r\n                    className=\"icon icon-new-folder\"\r\n                    icon={faFolderPlus} />\r\n            </button>\r\n            <button\r\n                ref={fileButton}\r\n                className=\"btn-transparent btn-new-file\"\r\n                onClick={creatClickHandler.bind(null, \"file\")}>\r\n                <FontAwesomeIcon\r\n                    className=\"icon icon-new-file\"\r\n                    icon={faFile} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MenuBar;"]},"metadata":{},"sourceType":"module"}