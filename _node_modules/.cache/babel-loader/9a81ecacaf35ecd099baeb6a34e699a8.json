{"ast":null,"code":"import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import Effect from\"../effect\";var Quadrafuzz=/*#__PURE__*/function(_Effect){_inherits(Quadrafuzz,_Effect);_createClass(Quadrafuzz,null,[{key:\"defaultParams\",value:function defaultParams(){return{params:{lowGain:{min:0,max:100,defaultValue:20,type:\"float\",description:\"low\"},midLowGain:{min:0,max:100,defaultValue:20,type:\"float\",description:\"mlow\"},midHighGain:{min:0,max:100,defaultValue:20,type:\"float\",description:\"m-high\"},highGain:{min:0,max:100,defaultValue:20,type:\"float\",description:\"high\"}}};}}]);function Quadrafuzz(context,params){var _this;_classCallCheck(this,Quadrafuzz);_this=_possibleConstructorReturn(this,_getPrototypeOf(Quadrafuzz).call(this));_this._context=context;_this._default=Quadrafuzz.defaultParams().params;_this._buildNodes();_this._initParams(params);return _this;}_createClass(Quadrafuzz,[{key:\"_buildNodes\",value:function _buildNodes(){this.inputNode=this._context.createGain();this.outputNode=this._context.createGain();this.wetGainNode=this._context.createGain();this.lowpassLeft=this._context.createBiquadFilter();this.lowpassLeft.type='lowpass';this.lowpassLeft.frequency.value=147;this.lowpassLeft.Q.value=0.7071;this.bandpass1Left=this._context.createBiquadFilter();this.bandpass1Left.type='bandpass';this.bandpass1Left.frequency.value=587;this.bandpass1Left.Q.value=0.7071;this.bandpass2Left=this._context.createBiquadFilter();this.bandpass2Left.type='bandpass';this.bandpass2Left.frequency.value=2490;this.bandpass2Left.Q.value=0.7071;this.highpassLeft=this._context.createBiquadFilter();this.highpassLeft.type='highpass';this.highpassLeft.frequency.value=4980;this.highpassLeft.Q.value=0.7071;this.overdrives=[];for(var i=0;i<4;i++){this.overdrives[i]=this._context.createWaveShaper();this.overdrives[i].curve=this.getDistortionCurve();}this.inputNode.connect(this.wetGainNode);var filters=[this.lowpassLeft,this.bandpass1Left,this.bandpass2Left,this.highpassLeft];for(i=0;i<filters.length;i++){this.wetGainNode.connect(filters[i]);filters[i].connect(this.overdrives[i]);this.overdrives[i].connect(this.outputNode);}}},{key:\"getDistortionCurve\",value:function getDistortionCurve(gain){var sampleRate=this._context.sampleRate;var curve=new Float32Array(sampleRate);var deg=Math.PI/180;for(var i=0;i<sampleRate;i++){var x=i*2/sampleRate-1;curve[i]=(3+gain)*x*20*deg/(Math.PI+gain*Math.abs(x));}return curve;}},{key:\"name\",get:function get(){return\"Quadra\";}},{key:\"lowGain\",get:function get(){return this._lowGain;},set:function set(value){value=this._valueToRange(value,\"lowGain\");this._lowGain=value;this.overdrives[0].curve=this.getDistortionCurve(this.lowGain,0,150);}},{key:\"midLowGain\",get:function get(){return this._midLowGain;},set:function set(value){value=this._valueToRange(value,\"midLowGain\");this._midLowGain=value;this.overdrives[1].curve=this.getDistortionCurve(this.midLowGain,0,150);}},{key:\"midHighGain\",get:function get(){return this._midHighGain;},set:function set(value){value=this._valueToRange(value,\"midHighGain\");this._midHighGain=value;this.overdrives[2].curve=this.getDistortionCurve(this.midHighGain,0,150);}},{key:\"highGain\",get:function get(){return this._highGain;},set:function set(value){value=this._valueToRange(value,\"highGain\");this._highGain=value;this.overdrives[3].curve=this.getDistortionCurve(this.highGain,0,150);}}]);return Quadrafuzz;}(Effect);export{Quadrafuzz as default};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/effector/effects/quadrafuzz/quadrafuzz.js"],"names":["Effect","Quadrafuzz","params","lowGain","min","max","defaultValue","type","description","midLowGain","midHighGain","highGain","context","_context","_default","defaultParams","_buildNodes","_initParams","inputNode","createGain","outputNode","wetGainNode","lowpassLeft","createBiquadFilter","frequency","value","Q","bandpass1Left","bandpass2Left","highpassLeft","overdrives","i","createWaveShaper","curve","getDistortionCurve","connect","filters","length","gain","sampleRate","Float32Array","deg","Math","PI","x","abs","_lowGain","_valueToRange","_midLowGain","_midHighGain","_highGain"],"mappings":"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","sourcesContent":["\r\nimport Effect from \"../effect\";\r\n\r\nexport default class Quadrafuzz extends Effect{\r\n\r\n    static defaultParams(){\r\n        return {\r\n            params : {\r\n                lowGain: {\r\n                    min: 0,\r\n                    max: 100,\r\n                    defaultValue: 20,\r\n                    type: \"float\",\r\n                    description : \"low\"\r\n                },\r\n                midLowGain: {\r\n                    min: 0,\r\n                    max: 100,\r\n                    defaultValue: 20,\r\n                    type: \"float\",\r\n                    description: \"mlow\"\r\n                },\r\n                midHighGain: {\r\n                    min: 0,\r\n                    max: 100,\r\n                    defaultValue: 20,\r\n                    type: \"float\",\r\n                    description: \"m-high\"\r\n                },\r\n                highGain: {\r\n                    min: 0,\r\n                    max: 100,\r\n                    defaultValue: 20,\r\n                    type: \"float\",\r\n                    description: \"high\"\r\n                },\r\n            }\r\n        }\r\n    }\r\n    constructor(context, params){\r\n        super();\r\n        this._context = context;\r\n        this._default = Quadrafuzz.defaultParams().params;\r\n\r\n        this._buildNodes();\r\n        this._initParams(params);\r\n    }\r\n\r\n    _buildNodes(){\r\n        this.inputNode = this._context.createGain();\r\n        this.outputNode = this._context.createGain();\r\n        this.wetGainNode = this._context.createGain();\r\n\r\n\r\n        this.lowpassLeft = this._context.createBiquadFilter();\r\n        this.lowpassLeft.type = 'lowpass';\r\n        this.lowpassLeft.frequency.value = 147;\r\n        this.lowpassLeft.Q.value = 0.7071;\r\n\r\n        this.bandpass1Left = this._context.createBiquadFilter();\r\n        this.bandpass1Left.type = 'bandpass';\r\n        this.bandpass1Left.frequency.value = 587;\r\n        this.bandpass1Left.Q.value = 0.7071;\r\n\r\n        this.bandpass2Left = this._context.createBiquadFilter();\r\n        this.bandpass2Left.type = 'bandpass';\r\n        this.bandpass2Left.frequency.value = 2490;\r\n        this.bandpass2Left.Q.value = 0.7071;\r\n\r\n        this.highpassLeft = this._context.createBiquadFilter();\r\n        this.highpassLeft.type = 'highpass';\r\n        this.highpassLeft.frequency.value = 4980;\r\n        this.highpassLeft.Q.value = 0.7071;\r\n\r\n\r\n        this.overdrives = [];\r\n        for (var i = 0; i < 4; i++) {\r\n            this.overdrives[i] = this._context.createWaveShaper();\r\n            this.overdrives[i].curve = this.getDistortionCurve();\r\n        }\r\n\r\n\r\n        this.inputNode.connect(this.wetGainNode);\r\n\r\n\r\n        var filters = [this.lowpassLeft, this.bandpass1Left, this.bandpass2Left, this.highpassLeft];\r\n        for (i = 0; i < filters.length; i++) {\r\n            this.wetGainNode.connect(filters[i]);\r\n            filters[i].connect(this.overdrives[i]);\r\n            this.overdrives[i].connect(this.outputNode);\r\n        }\r\n    }\r\n\r\n    getDistortionCurve(gain) {\r\n        var sampleRate = this._context.sampleRate;\r\n        var curve = new Float32Array(sampleRate);\r\n        var deg = Math.PI / 180;\r\n    \r\n        for (var i = 0; i < sampleRate; i++) {\r\n            var x = i * 2 / sampleRate - 1;\r\n            curve[i] = (3 + gain) * x * 20 * deg / (Math.PI + gain * Math.abs(x));\r\n        }\r\n        return curve;\r\n    }\r\n\r\n    get name(){\r\n        return \"Quadra\"\r\n    }\r\n\r\n    get lowGain(){\r\n        return this._lowGain;\r\n    }\r\n    \r\n    set lowGain(value){\r\n        value = this._valueToRange(value, \"lowGain\");\r\n        this._lowGain = value;\r\n        this.overdrives[0].curve = this.getDistortionCurve(this.lowGain, 0, 150);\r\n    }\r\n\r\n    get midLowGain(){\r\n        return this._midLowGain;\r\n    }\r\n\r\n    set midLowGain(value){\r\n        value = this._valueToRange(value, \"midLowGain\");\r\n        this._midLowGain = value;\r\n        this.overdrives[1].curve = this.getDistortionCurve(this.midLowGain, 0, 150);\r\n    }\r\n\r\n    get midHighGain(){\r\n        return this._midHighGain;\r\n    }\r\n\r\n    set midHighGain(value){\r\n        value = this._valueToRange(value, \"midHighGain\");\r\n        this._midHighGain =value;\r\n        this.overdrives[2].curve = this.getDistortionCurve(this.midHighGain, 0, 150);\r\n    }\r\n\r\n    get highGain(){\r\n        return this._highGain;\r\n    }\r\n\r\n    set highGain(value){\r\n        value = this._valueToRange(value, \"highGain\");\r\n        this._highGain =value;\r\n        this.overdrives[3].curve = this.getDistortionCurve(this.highGain, 0, 150)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}