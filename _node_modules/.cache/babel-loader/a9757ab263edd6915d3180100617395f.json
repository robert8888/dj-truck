{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\PlayListExplorer\\\\Explorer\\\\ExplorerTree\\\\ExplorerTree.js\";\nimport React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./explorer-tree.scss\";\nimport { isEmpty } from \"./../../../../../../utils/objects/helpers\";\nimport UUID from \"uuidjs\";\n\nconst ExplorerTree = props => {\n  const getCloseDirElement = useCallback((name, path) => {\n    return React.createElement(\"li\", {\n      \"data-path\": path.join(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, name);\n  });\n  console.log(props.root);\n\n  const renderDir = (name, content) => {\n    switch (typeof content) {\n      case Object:\n        {\n          break;\n        }\n\n      case Array:\n        {\n          break;\n        }\n    }\n  };\n\n  const buildTree = (subDir, path) => {\n    Object.entries(subDir).map(([name, content]) => {\n      return React.createElement(\"ul\", {\n        className: \"dir-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, renderDir(name, content));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"explorer-tree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, buildTree(props.root, []));\n};\n\nconst mapStateToProps = state => ({\n  root: state.playList.root\n});\n\nexport default connect(mapStateToProps)(ExplorerTree);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/PlayListExplorer/Explorer/ExplorerTree/ExplorerTree.js"],"names":["React","useCallback","connect","isEmpty","UUID","ExplorerTree","props","getCloseDirElement","name","path","join","console","log","root","renderDir","content","Object","Array","buildTree","subDir","entries","map","mapStateToProps","state","playList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,2CAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE1B,QAAMC,kBAAkB,GAAGN,WAAW,CAAC,CAACO,IAAD,EAAOC,IAAP,KAAe;AACjD,WAAO;AAAI,mBAAWA,IAAI,CAACC,IAAL,CAAU,GAAV,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCF,IAAhC,CAAP;AACJ,GAFqC,CAAtC;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,IAAlB;;AAEA,QAAMC,SAAS,GAAG,CAACN,IAAD,EAAOO,OAAP,KAAiB;AAC/B,YAAQ,OAAOA,OAAf;AACI,WAAKC,MAAL;AAAa;AACT;AACH;;AACD,WAAKC,KAAL;AAAY;AAER;AACH;AAPL;AASH,GAVD;;AAYA,QAAMC,SAAS,GAAG,CAACC,MAAD,EAASV,IAAT,KAAkB;AAChCO,IAAAA,MAAM,CAACI,OAAP,CAAeD,MAAf,EAAuBE,GAAvB,CAA2B,CAAC,CAACb,IAAD,EAAOO,OAAP,CAAD,KAAqB;AAC5C,aACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMD,SAAS,CAACN,IAAD,EAAOO,OAAP,CADf,CADJ;AAKH,KAND;AAOH,GARD;;AAUA,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,SAAS,CAACZ,KAAK,CAACO,IAAP,EAAa,EAAb,CADd,CADJ;AAKH,CAlCD;;AAoCA,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACC,QAAN,CAAeX;AADS,CAAL,CAA7B;;AAIA,eAAeX,OAAO,CAACoB,eAAD,CAAP,CAAyBjB,YAAzB,CAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./explorer-tree.scss\";\r\nimport { isEmpty } from \"./../../../../../../utils/objects/helpers\";\r\nimport UUID from \"uuidjs\";\r\n\r\nconst ExplorerTree = props => {\r\n\r\n    const getCloseDirElement = useCallback((name, path) =>{\r\n         return <li data-path={path.join(\"/\")}>{name}</li>\r\n    })\r\n    console.log(props.root)\r\n\r\n    const renderDir = (name, content)=>{\r\n        switch (typeof content) {\r\n            case Object: {\r\n                break;\r\n            }\r\n            case Array: {\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const buildTree = (subDir, path) => {\r\n        Object.entries(subDir).map(([name, content]) => {\r\n            return (\r\n                <ul className=\"dir-content\">\r\n                    { renderDir(name, content) }\r\n                </ul>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"explorer-tree\">\r\n            {buildTree(props.root, [])}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    root: state.playList.root,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ExplorerTree);"]},"metadata":{},"sourceType":"module"}