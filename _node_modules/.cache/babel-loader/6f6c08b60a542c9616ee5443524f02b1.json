{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordList\\\\Record\\\\Time\\\\Time.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\nimport \"./time.scss\";\n\nconst Time = ({\n  item: {\n    duration,\n    id\n  },\n  player\n}) => {\n  const [progress, setProgress] = useState(0);\n  const [current, setCurrent] = useState(0);\n  const setPgresshMiddleware = useCallback(prog => {\n    setProgress(prog);\n  }, [setProgress]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.subscribeProgress(id, setProgressMiddleware);\n    return () => {\n      player.unSubscribeProgerss(id);\n    };\n  }, [player, setProgress, id]);\n  useEffect(() => {\n    console.log(\"progress\", progress);\n    setCurrent(duration * progress);\n  }, [progress, setCurrent, duration]);\n  return React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"time-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, formater.secondsToStr(current / 1000))), React.createElement(\"div\", {\n    className: \"time-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, formater.secondsToStr(duration / 1000))));\n};\n\nexport default Time;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordList/Record/Time/Time.js"],"names":["React","useState","useEffect","useCallback","formater","Time","item","duration","id","player","progress","setProgress","current","setCurrent","setPgresshMiddleware","prog","subscribeProgress","setProgressMiddleware","unSubscribeProgerss","console","log","secondsToStr"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,6CAAzB;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAR;AAA2BC,EAAAA;AAA3B,CAAD,KAAyC;AAClD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AAEA,QAAMa,oBAAoB,GAAGX,WAAW,CAAEY,IAAD,IAAS;AAC9CJ,IAAAA,WAAW,CAACI,IAAD,CAAX;AACH,GAFuC,EAErC,CAACJ,WAAD,CAFqC,CAAxC;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACO,MAAL,EAAa;AACT;AACH;;AACDA,IAAAA,MAAM,CAACO,iBAAP,CAAyBR,EAAzB,EAA6BS,qBAA7B;AACA,WAAO,MAAM;AACTR,MAAAA,MAAM,CAACS,mBAAP,CAA2BV,EAA3B;AACH,KAFD;AAGH,GARQ,EAQN,CAACC,MAAD,EAASE,WAAT,EAAsBH,EAAtB,CARM,CAAT;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBV,QAAxB;AACAG,IAAAA,UAAU,CAACN,QAAQ,GAAGG,QAAZ,CAAV;AACH,GAHQ,EAGN,CAACA,QAAD,EAAWG,UAAX,EAAuBN,QAAvB,CAHM,CAAT;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMH,QAAQ,CAACiB,YAAT,CAAsBT,OAAO,GAAG,IAAhC,CADN,CADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMR,QAAQ,CAACiB,YAAT,CAAsBd,QAAQ,GAAG,IAAjC,CADN,CADJ,CANJ,CADJ;AAeH,CAvCD;;AAyCA,eAAeF,IAAf","sourcesContent":["import React, {useState, useEffect, useCallback} from \"react\";\r\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\r\nimport \"./time.scss\"\r\n\r\nconst Time = ({ item: { duration, id },  player }) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [current, setCurrent] = useState(0)\r\n\r\n    const setPgresshMiddleware = useCallback((prog) =>{\r\n        setProgress(prog)\r\n    }, [setProgress])\r\n\r\n    useEffect(() => {\r\n        if (!player) {\r\n            return;\r\n        }\r\n        player.subscribeProgress(id, setProgressMiddleware)\r\n        return () => {\r\n            player.unSubscribeProgerss(id)\r\n        }\r\n    }, [player, setProgress, id])\r\n\r\n    useEffect(() => {\r\n        console.log(\"progress\", progress)\r\n        setCurrent(duration * progress)\r\n    }, [progress, setCurrent, duration])\r\n\r\n\r\n    return (\r\n        <div className=\"time\">\r\n            <div className=\"time-current\">\r\n                <span>\r\n                    { formater.secondsToStr(current / 1000) }\r\n                </span>\r\n            </div>\r\n            <div className=\"time-duration\">\r\n                <span>\r\n                    { formater.secondsToStr(duration / 1000) }\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Time;"]},"metadata":{},"sourceType":"module"}