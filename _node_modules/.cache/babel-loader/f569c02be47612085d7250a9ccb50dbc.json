{"ast":null,"code":"// ---------- PlayList---------------------\nconst ACTIONS = {\n  PL_ROOT_REQUEST: \"Call to api for root dir content\",\n  PL_LOAD_DIR_REQUEST: \"call to api for dir conent\",\n  PL_PUSH_DIR_CONTENT: \"Push  director contetn loaded  from api\",\n  PL_PUSH_TRACK_REQUEST: \"Call to api and add track to current playlist\",\n  PUSH_TRACK: \"Push tack on end of list\",\n  //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\n  CALC_BPM: \"Start calculating bpm for track\",\n  SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\",\n  // bpm is rounded\n  //---play list explorer\n  PL_CREATE_DIR_REQEST: \"Call to api and create dir\",\n  PL_CREATE_DIR: \"Create dir in current\",\n  PL_CREATE_PLAYLIST_REQUEST: \"Call to api to create playlist in current selected dir of name\",\n  PL_CREATE_PLAYLIST: \"Create play list in current selected dir of name\",\n  PL_SET_SELECTION: \"Set current selected dir and playlist if is selected playlist\",\n  PL_SET_PLAYLIST_CONTENT: \"Setinng content of current playlist from api\",\n  PL_LOAD_CURRENT_PLAYLIST_REQUEST: \"Call to api to get current playlist content\",\n  PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\n  PL_TOGGLE_DIR_REQUEST: \"If is not loade load and then open\",\n  PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\n  PL_RENAME_SELECTED_REQUEST: \"Call to api to rename current selected\",\n  PL_RENAME_SELECTED: \"Rename current selected element\",\n  PL_DELETE_SELECTED_REQUEST: \"Call to api and delete current selected element\",\n  PL_DELETE_SELECTED: \"Remove current selected element\",\n  PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\n  PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\n  PL_ADD_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\n  PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\"\n};\nexport { ACTIONS as PLAY_LIST_ACTIONS }; //***------------------- */\n\nexport function rootDirRequest() {\n  return {\n    type: ACTIONS.PL_ROOT_REQUEST\n  };\n}\nexport function loadDirRequest(path, open) {\n  return {\n    type: ACTIONS.PL_LOAD_DIR_REQUEST,\n    path,\n    open\n  };\n}\nexport function pushDirContent(dirContent, isRoot, path, open) {\n  return {\n    type: ACTIONS.PL_PUSH_DIR_CONTENT,\n    dirContent,\n    isRoot,\n    path,\n    open\n  };\n}\nexport function pushTrackToListRequest(track, playlist) {\n  return {\n    type: ACTIONS.PL_PUSH_TRACK_REQUEST,\n    track,\n    playlist\n  };\n}\n;\nexport function pushTrackToList(track, playlist) {\n  return {\n    type: ACTIONS.PUSH_TRACK,\n    track,\n    playlist\n  };\n}\n;\nexport function startCalcBpm(track, playlist) {\n  return {\n    type: ACTIONS.CALC_BPM,\n    track,\n    playlist\n  };\n}\nexport function setBpmAndOffset(id, playlist, bpm, offset) {\n  return {\n    type: ACTIONS.SET_BPM_AND_OFFSET,\n    id,\n    playlist,\n    bpm,\n    offset\n  };\n}\n/**---------------------- */\n\nexport function createDirRequest(name) {\n  return {\n    type: ACTIONS.PL_CREATE_DIR_REQEST,\n    name\n  };\n}\nexport function createDir(name, id, renameMode) {\n  return {\n    type: ACTIONS.PL_CREATE_DIR,\n    name,\n    id,\n    renameMode\n  };\n}\nexport function createPlaylistRequest(name) {\n  return {\n    type: ACTIONS.PL_CREATE_PLAYLIST_REQUEST,\n    name\n  };\n}\nexport function createPlaylist(name, id, renameMode, setCurrent) {\n  return {\n    type: ACTIONS.PL_CREATE_PLAYLIST,\n    name,\n    id,\n    renameMode,\n    setCurrent\n  };\n}\nexport function setSelection(path) {\n  return {\n    type: ACTIONS.PL_SET_SELECTION,\n    path\n  };\n}\nexport function openCurrentPlaylistRequest() {\n  return {\n    type: ACTIONS.PL_LOAD_CURRENT_PLAYLIST_REQUEST\n  };\n}\nexport function setPlaylistContent(playlistContent, path) {\n  return {\n    type: ACTIONS.PL_SET_PLAYLIST_CONTENT,\n    playlistContent,\n    path\n  };\n}\nexport function openCurrentPlaylist() {\n  return {\n    type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST\n  };\n}\nexport function toggleDirRequest(path) {\n  return {\n    type: ACTIONS.PL_TOGGLE_DIR_REQUEST,\n    path\n  };\n}\nexport function toggleDir(path) {\n  return {\n    type: ACTIONS.PL_TOGGLE_DIR,\n    path\n  };\n}\nexport function deleteSelectedRequest() {\n  return {\n    type: ACTIONS.PL_DELETE_SELECTED_REQUEST\n  };\n}\nexport function deleteSelected() {\n  return {\n    type: ACTIONS.PL_DELETE_SELECTED\n  };\n}\nexport function deleteTrack(index) {\n  return {\n    type: ACTIONS.PL_DELETE_TRACK,\n    index\n  };\n}\nexport function renameSelectedRequest(name) {\n  return {\n    type: ACTIONS.PL_RENAME_SELECTED_REQUEST,\n    name\n  };\n}\nexport function renameSelected(name) {\n  return {\n    type: ACTIONS.PL_RENAME_SELECTED,\n    name\n  };\n}\nexport function swapTrackOnList(from, to) {\n  return {\n    type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT,\n    from,\n    to\n  };\n}\nexport function addTrackToList(track, path) {\n  return {\n    type: ACTIONS.PL_ADD_TRACK_TO_LIST,\n    track,\n    path\n  };\n}\nexport function moveTo(pathFrom, pathTo) {\n  return {\n    type: ACTIONS.PL_MOVE_TO,\n    pathFrom,\n    pathTo\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/actions/console/playList.js"],"names":["ACTIONS","PL_ROOT_REQUEST","PL_LOAD_DIR_REQUEST","PL_PUSH_DIR_CONTENT","PL_PUSH_TRACK_REQUEST","PUSH_TRACK","CALC_BPM","SET_BPM_AND_OFFSET","PL_CREATE_DIR_REQEST","PL_CREATE_DIR","PL_CREATE_PLAYLIST_REQUEST","PL_CREATE_PLAYLIST","PL_SET_SELECTION","PL_SET_PLAYLIST_CONTENT","PL_LOAD_CURRENT_PLAYLIST_REQUEST","PL_OPEN_CURRENT_PLAY_LIST","PL_TOGGLE_DIR_REQUEST","PL_TOGGLE_DIR","PL_RENAME_SELECTED_REQUEST","PL_RENAME_SELECTED","PL_DELETE_SELECTED_REQUEST","PL_DELETE_SELECTED","PL_DELETE_TRACK","PL_SWAP_TRACK_ON_CURRENT","PL_ADD_TRACK_TO_LIST","PL_MOVE_TO","PLAY_LIST_ACTIONS","rootDirRequest","type","loadDirRequest","path","open","pushDirContent","dirContent","isRoot","pushTrackToListRequest","track","playlist","pushTrackToList","startCalcBpm","setBpmAndOffset","id","bpm","offset","createDirRequest","name","createDir","renameMode","createPlaylistRequest","createPlaylist","setCurrent","setSelection","openCurrentPlaylistRequest","setPlaylistContent","playlistContent","openCurrentPlaylist","toggleDirRequest","toggleDir","deleteSelectedRequest","deleteSelected","deleteTrack","index","renameSelectedRequest","renameSelected","swapTrackOnList","from","to","addTrackToList","moveTo","pathFrom","pathTo"],"mappings":"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","sourcesContent":["// ---------- PlayList---------------------\r\n\r\nconst ACTIONS = {\r\n    PL_ROOT_REQUEST: \"Call to api for root dir content\",\r\n    PL_LOAD_DIR_REQUEST: \"call to api for dir conent\",\r\n    PL_PUSH_DIR_CONTENT: \"Push  director contetn loaded  from api\",\r\n   \r\n    PL_PUSH_TRACK_REQUEST: \"Call to api and add track to current playlist\",\r\n    PUSH_TRACK: \"Push tack on end of list\",\r\n    //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\r\n    CALC_BPM: \"Start calculating bpm for track\",\r\n    SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\", // bpm is rounded\r\n\r\n    //---play list explorer\r\n    PL_CREATE_DIR_REQEST: \"Call to api and create dir\",\r\n    PL_CREATE_DIR: \"Create dir in current\",\r\n    PL_CREATE_PLAYLIST_REQUEST: \"Call to api to create playlist in current selected dir of name\",\r\n    PL_CREATE_PLAYLIST: \"Create play list in current selected dir of name\",\r\n\r\n    PL_SET_SELECTION: \"Set current selected dir and playlist if is selected playlist\",\r\n    PL_SET_PLAYLIST_CONTENT: \"Setinng content of current playlist from api\",\r\n\r\n    PL_LOAD_CURRENT_PLAYLIST_REQUEST: \"Call to api to get current playlist content\",\r\n    PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\r\n\r\n    PL_TOGGLE_DIR_REQUEST: \"If is not loade load and then open\",\r\n    PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\r\n\r\n    PL_RENAME_SELECTED_REQUEST : \"Call to api to rename current selected\",\r\n    PL_RENAME_SELECTED: \"Rename current selected element\",\r\n    \r\n    PL_DELETE_SELECTED_REQUEST: \"Call to api and delete current selected element\",\r\n    PL_DELETE_SELECTED: \"Remove current selected element\",\r\n\r\n    PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\r\n    PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\r\n    PL_ADD_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\r\n    PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\",\r\n}\r\nexport { ACTIONS as PLAY_LIST_ACTIONS }\r\n//***------------------- */\r\nexport function rootDirRequest() {\r\n    return { type: ACTIONS.PL_ROOT_REQUEST }\r\n}\r\n\r\nexport function loadDirRequest(path, open){\r\n    return { type: ACTIONS.PL_LOAD_DIR_REQUEST, path, open }\r\n}\r\n\r\nexport function pushDirContent(dirContent, isRoot , path, open) {\r\n    return { type: ACTIONS.PL_PUSH_DIR_CONTENT, dirContent, isRoot, path , open }\r\n}\r\n\r\nexport function pushTrackToListRequest(track, playlist) {\r\n    return { type: ACTIONS.PL_PUSH_TRACK_REQUEST, track, playlist }\r\n};\r\n\r\nexport function pushTrackToList(track, playlist) {\r\n    return { type: ACTIONS.PUSH_TRACK, track, playlist }\r\n};\r\n\r\nexport function startCalcBpm(track, playlist) {\r\n    return {\r\n        type: ACTIONS.CALC_BPM,\r\n        track,\r\n        playlist\r\n    }\r\n}\r\n\r\n\r\nexport function setBpmAndOffset(id, playlist, bpm, offset) {\r\n    return {\r\n        type: ACTIONS.SET_BPM_AND_OFFSET,\r\n        id,\r\n        playlist,\r\n        bpm,\r\n        offset,\r\n    }\r\n}\r\n\r\n/**---------------------- */\r\n\r\nexport function createDirRequest(name) {\r\n    return { type: ACTIONS.PL_CREATE_DIR_REQEST, name }\r\n}\r\n\r\nexport function createDir(name, id, renameMode) {\r\n    return { type: ACTIONS.PL_CREATE_DIR, name, id, renameMode }\r\n}\r\n\r\nexport function createPlaylistRequest(name) {\r\n    return { type: ACTIONS.PL_CREATE_PLAYLIST_REQUEST, name }\r\n}\r\n\r\nexport function createPlaylist(name, id , renameMode, setCurrent) {\r\n    return { type: ACTIONS.PL_CREATE_PLAYLIST, name, id, renameMode, setCurrent }\r\n}\r\n\r\nexport function setSelection(path) {\r\n    return { type: ACTIONS.PL_SET_SELECTION,  path }\r\n}\r\n\r\n\r\n\r\n\r\nexport function openCurrentPlaylistRequest(){\r\n    return { type: ACTIONS.PL_LOAD_CURRENT_PLAYLIST_REQUEST }\r\n}\r\n\r\nexport function setPlaylistContent(playlistContent, path){\r\n    return { type: ACTIONS.PL_SET_PLAYLIST_CONTENT, playlistContent, path}\r\n}\r\n\r\nexport function openCurrentPlaylist() {\r\n    return { type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST }\r\n}\r\n\r\n\r\nexport function toggleDirRequest(path) {\r\n    return { type: ACTIONS.PL_TOGGLE_DIR_REQUEST, path }\r\n}\r\n\r\n\r\nexport function toggleDir(path) {\r\n    return { type: ACTIONS.PL_TOGGLE_DIR, path }\r\n}\r\n\r\n\r\n\r\nexport function deleteSelectedRequest(){\r\n    return { type: ACTIONS.PL_DELETE_SELECTED_REQUEST }\r\n}\r\n\r\nexport function deleteSelected() {\r\n    return { type: ACTIONS.PL_DELETE_SELECTED }\r\n}\r\n\r\nexport function deleteTrack(index) {\r\n    return {\r\n        type: ACTIONS.PL_DELETE_TRACK,\r\n        index\r\n    }\r\n}\r\n\r\nexport function renameSelectedRequest(name) {\r\n    return { type: ACTIONS.PL_RENAME_SELECTED_REQUEST, name }\r\n}\r\n\r\nexport function renameSelected(name) {\r\n    return { type: ACTIONS.PL_RENAME_SELECTED, name }\r\n}\r\n\r\n\r\nexport function swapTrackOnList(from, to) {\r\n    return {\r\n        type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT,\r\n        from,\r\n        to\r\n    }\r\n}\r\n\r\nexport function addTrackToList(track, path) {\r\n    return {\r\n        type: ACTIONS.PL_ADD_TRACK_TO_LIST,\r\n        track,\r\n        path\r\n    }\r\n}\r\n\r\nexport function moveTo(pathFrom, pathTo) {\r\n    return {\r\n        type: ACTIONS.PL_MOVE_TO,\r\n        pathFrom,\r\n        pathTo\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}