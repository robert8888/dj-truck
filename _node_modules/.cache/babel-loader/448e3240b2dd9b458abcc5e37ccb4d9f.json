{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\introduction\\\\Content\\\\Content.js\";\nimport React, { useEffect, useState } from \"react\";\nimport usePath from \"../Hooks/usePath\";\nimport remarkAttr from \"./../MarkDonwExtesnion/remark-attr\";\nimport unified from 'unified';\nimport parse from 'remark-parse';\nimport rehype from \"remark-rehype\";\n\nconst stringify = require('rehype-stringify');\n\nimport rehypeReact from \"rehype-react\";\nimport remarkCustomBlocks from 'remark-custom-blocks';\nimport \"./content.scss\";\n\nconst getMarkups = () => require.context('./../markups', true, /\\.*md/).keys();\n\nconst load = module => import(`./../markups/${module}`).then(module => module.default);\n\nconst Content = () => {\n  const [currentPath] = usePath();\n  const [md, setMd] = useState(null);\n  const [content, setContent] = useState(null);\n  useEffect(() => {\n    var _getMarkups$filter$;\n\n    if (!currentPath.length) return;\n    let pattern = \"\";\n    currentPath.forEach(slug => pattern += \"\\\\/?\\\\d?\\\\.\" + slug);\n    pattern += \"\\\\.md\";\n    let regex = new RegExp(pattern);\n    let file = (_getMarkups$filter$ = getMarkups().filter(path => regex.test(path))[0]) === null || _getMarkups$filter$ === void 0 ? void 0 : _getMarkups$filter$.replace(\"./\", \"\");\n    if (!file) return;\n    load(file).then(md => fetch(md)).then(response => response.text()).then(md => setMd(md));\n  }, [currentPath, setMd]);\n  useEffect(() => {\n    if (!md) return;\n    const processed = unified().use(parse).use(remarkAttr).use(remarkCustomBlocks, {\n      block: {\n        classes: 'custom-block'\n      }\n    }).use(rehype) // .use(rehypeReact, {createElement: React.createElement})\n    .use(stringify).processSync(md);\n    setContent(processed.result);\n  }, [md, setContent]);\n  if (!md || !content) return null;\n  return React.createElement(\"main\", {\n    className: \"introduction__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, content);\n};\n\nexport default Content;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/introduction/Content/Content.js"],"names":["React","useEffect","useState","usePath","remarkAttr","unified","parse","rehype","stringify","require","rehypeReact","remarkCustomBlocks","getMarkups","context","keys","load","module","then","default","Content","currentPath","md","setMd","content","setContent","length","pattern","forEach","slug","regex","RegExp","file","filter","path","test","replace","fetch","response","text","processed","use","block","classes","processSync","result"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,OAAOC,WAAP,MAAyB,cAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAO,gBAAP;;AAEA,MAAMC,UAAU,GAAG,MAAMH,OAAO,CAACI,OAAR,CAAgB,cAAhB,EAAgC,IAAhC,EAAsC,OAAtC,EAA+CC,IAA/C,EAAzB;;AAEA,MAAMC,IAAI,GAAIC,MAAD,IAAY,OAAQ,gBAAeA,MAAO,EAA9B,EAAiCC,IAAjC,CAAuCD,MAAM,IAAIA,MAAM,CAACE,OAAxD,CAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,WAAD,IAAgBjB,OAAO,EAA7B;AACA,QAAM,CAACkB,EAAD,EAAKC,KAAL,IAAcpB,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAAA;;AACV,QAAG,CAACmB,WAAW,CAACK,MAAhB,EAAwB;AACxB,QAAIC,OAAO,GAAG,EAAd;AACAN,IAAAA,WAAW,CAACO,OAAZ,CAAqBC,IAAI,IAAIF,OAAO,IAAI,gBAAgBE,IAAxD;AACAF,IAAAA,OAAO,IAAI,OAAX;AACA,QAAIG,KAAK,GAAG,IAAIC,MAAJ,CAAWJ,OAAX,CAAZ;AACA,QAAIK,IAAI,0BAAGnB,UAAU,GAAGoB,MAAb,CAAqBC,IAAI,IAAIJ,KAAK,CAACK,IAAN,CAAWD,IAAX,CAA7B,EAA+C,CAA/C,CAAH,wDAAG,oBAAmDE,OAAnD,CAA2D,IAA3D,EAAiE,EAAjE,CAAX;AACA,QAAG,CAACJ,IAAJ,EAAU;AACVhB,IAAAA,IAAI,CAACgB,IAAD,CAAJ,CACKd,IADL,CACUI,EAAE,IAAIe,KAAK,CAACf,EAAD,CADrB,EAEKJ,IAFL,CAEUoB,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFtB,EAGKrB,IAHL,CAGUI,EAAE,IAAIC,KAAK,CAACD,EAAD,CAHrB;AAIH,GAZQ,EAYP,CAACD,WAAD,EAAcE,KAAd,CAZO,CAAT;AAcArB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACoB,EAAJ,EAAQ;AACR,UAAMkB,SAAS,GAAGlC,OAAO,GACpBmC,GADa,CACTlC,KADS,EAEbkC,GAFa,CAETpC,UAFS,EAGboC,GAHa,CAGT7B,kBAHS,EAGW;AACrB8B,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE;AADN;AADc,KAHX,EAQbF,GARa,CAQTjC,MARS,EASf;AATe,KAUbiC,GAVa,CAUThC,SAVS,EAWbmC,WAXa,CAWDtB,EAXC,CAAlB;AAYAG,IAAAA,UAAU,CAACe,SAAS,CAACK,MAAX,CAAV;AACH,GAfQ,EAeN,CAACvB,EAAD,EAAKG,UAAL,CAfM,CAAT;AAkBA,MAAG,CAACH,EAAD,IAAO,CAACE,OAAX,EAAoB,OAAO,IAAP;AAEpB,SACI;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OADL,CADJ;AAKH,CA5CD;;AA8CA,eAAeJ,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nimport usePath from \"../Hooks/usePath\";\r\nimport remarkAttr from \"./../MarkDonwExtesnion/remark-attr\";\r\nimport unified from 'unified'\r\nimport parse from 'remark-parse'\r\nimport rehype from \"remark-rehype\";\r\nconst stringify = require('rehype-stringify')\r\nimport rehypeReact  from \"rehype-react\"\r\nimport remarkCustomBlocks from 'remark-custom-blocks'\r\n\r\nimport \"./content.scss\";\r\n\r\nconst getMarkups = () => require.context('./../markups', true, /\\.*md/).keys()\r\n\r\nconst load = (module) => import(`./../markups/${module}`).then( module => module.default);\r\n\r\nconst Content = () => {\r\n    const [currentPath] = usePath();\r\n    const [md, setMd] = useState(null);\r\n    const [content, setContent] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(!currentPath.length) return;\r\n        let pattern = \"\";\r\n        currentPath.forEach( slug => pattern += \"\\\\/?\\\\d?\\\\.\" + slug)\r\n        pattern += \"\\\\.md\";\r\n        let regex = new RegExp(pattern);\r\n        let file = getMarkups().filter( path => regex.test(path))[0]?.replace(\"./\", \"\");\r\n        if(!file) return;\r\n        load(file)\r\n            .then(md => fetch(md))\r\n            .then(response => response.text())\r\n            .then(md => setMd(md))\r\n    },[currentPath, setMd])\r\n\r\n    useEffect(()=>{\r\n        if(!md) return;\r\n        const processed = unified()\r\n            .use(parse)\r\n            .use(remarkAttr)\r\n            .use(remarkCustomBlocks, {\r\n                block: {\r\n                    classes: 'custom-block'\r\n                },\r\n            })\r\n            .use(rehype)\r\n           // .use(rehypeReact, {createElement: React.createElement})\r\n            .use(stringify)\r\n            .processSync(md);\r\n        setContent(processed.result);\r\n    }, [md, setContent])\r\n\r\n\r\n    if(!md || !content) return null;\r\n\r\n    return (\r\n        <main className=\"introduction__content\">\r\n            {content}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}