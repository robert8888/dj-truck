{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\Looper\\\\Looper.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport MiniSlider from \"./MiniSlider/MiniSlider\";\nimport \"./looper.scss\";\nimport { setLoop, setLoopLength } from \"./.././../../actions\";\n\nclass Looper extends React.Component {\n  constructor() {\n    super();\n    this.sliderElement = React.createRef();\n    this.state = {\n      lengths: [],\n      position: 0\n    };\n\n    for (let i = 1 / 64; i <= 64; i = i * 2) {\n      this.state.lengths.push(i);\n    }\n  }\n\n  sliderValueChange(currentSlide) {\n    this.props.setLoopLength(this.state.lengths[currentSlide]);\n  }\n\n  render() {\n    const listItems = this.state.lengths.map((length, index) => {\n      let display = length;\n\n      if (length < 1) {\n        display = \"1/\" + 1 / length;\n      }\n\n      return React.createElement(\"li\", {\n        className: \"slider-list-item\",\n        key: index,\n        \"data-value\": length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, display);\n    });\n    return React.createElement(\"div\", {\n      className: \"looper looper-deck-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"btn-in\" + (this.props.loopState ? \"btn--pressed\" : \"\"),\n      onClick: this.props.setLoop(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"IN\"), React.createElement(Button, {\n      className: \"btn-out\",\n      onClick: this.props.setLoop(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"OUT\"), React.createElement(MiniSlider, {\n      onChange: this.sliderValueChange,\n      className: \"mini-slider-deck-\" + this.props.name,\n      renderItems: listItems,\n      initValue: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  loopState: state.console.channel[ownProps.name].playBackState.loop\n});\n\nconst mapDispachToProps = (dispatch, ownProps) => ({\n  setLoop: value => dispatch(setLoop(ownProps.name, value)),\n  setLoopLength: value => dispatch(setLoopLength(ownProps.name, value))\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Looper);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/Looper/Looper.js"],"names":["React","connect","Button","MiniSlider","setLoop","setLoopLength","Looper","Component","constructor","sliderElement","createRef","state","lengths","position","i","push","sliderValueChange","currentSlide","props","render","listItems","map","length","index","display","name","loopState","mapStateToProps","ownProps","console","channel","playBackState","loop","mapDispachToProps","dispatch","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport MiniSlider from \"./MiniSlider/MiniSlider\";\r\nimport \"./looper.scss\";\r\nimport {setLoop, setLoopLength} from \"./.././../../actions\";\r\n\r\nclass Looper extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.sliderElement = React.createRef();\r\n    this.state = {\r\n      lengths: [],\r\n      position: 0,\r\n    };\r\n\r\n    for (let i = 1 / 64; i <= 64; i = i * 2) {\r\n      this.state.lengths.push(i);\r\n    }\r\n  }\r\n\r\n  sliderValueChange(currentSlide) {\r\n    this.props.setLoopLength(this.state.lengths[currentSlide]);\r\n  }\r\n\r\n  render() {\r\n    const listItems = this.state.lengths.map((length, index) => {\r\n        let display = length;\r\n        if (length < 1) {\r\n            display = \"1/\" + 1 / length;\r\n        }\r\n\r\n        return (<li className=\"slider-list-item\" \r\n                    key={index} \r\n                    data-value={length}>\r\n                        {display}\r\n                </li>);\r\n    });\r\n\r\n    return (\r\n      <div className={\"looper looper-deck-\" + this.props.name}>\r\n        <Button className={\"btn-in\" + ((this.props.loopState) ? \"btn--pressed\" : \"\")}\r\n                onClick={this.props.setLoop(true)}>\r\n                  IN\r\n        </Button>\r\n        <Button className=\"btn-out\" onClick={this.props.setLoop(false)}>OUT</Button>\r\n        <MiniSlider\r\n          onChange={this.sliderValueChange}\r\n          className={\"mini-slider-deck-\" + this.props.name}\r\n          renderItems={listItems}\r\n          initValue={8}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    loopState : state.console.channel[ownProps.name].playBackState.loop,\r\n})\r\n\r\nconst mapDispachToProps = (dispatch, ownProps) => ({\r\n    setLoop : (value) => dispatch(setLoop(ownProps.name, value)),\r\n    setLoopLength : (value) => dispatch(setLoopLength(ownProps.name, value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Looper);\r\n"]},"metadata":{},"sourceType":"module"}