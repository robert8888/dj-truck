{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{togglePlay,toggleCue,canelCueAndPlay}from\"./../../../actions\";import{Button}from\"react-bootstrap\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlay,faPause}from'@fortawesome/free-solid-svg-icons';import\"./play-back.scss\";var PlayBackControls=function PlayBackControls(props){var cueMouseDown=function cueMouseDown(){props.onCueToggle();document.addEventListener('mouseup',mouseUp);};var mouseUp=function mouseUp(event){document.elementFromPoint(event.clientX,event.clientY);var buttonUnderMouse=document.elementFromPoint(event.clientX,event.clientY).closest('button');if(buttonUnderMouse){if(buttonUnderMouse.closest('div').classList.contains(\"play-back-controls-\"+props.name)&&buttonUnderMouse.classList.contains('btn-play')){props.cancelCueAndPlay();}else{props.onCueToggle();}}else{props.onCueToggle();}document.removeEventListener('mouseup',mouseUp);};return React.createElement(\"div\",{className:\"play-back-controls-\"+props.name},React.createElement(Button,{className:\"btn-play \"+(!props.playPressed&&\"btn--pressed\"||\"\"),onClick:props.onPlayPress},React.createElement(FontAwesomeIcon,{icon:props.playPressed?faPlay:faPause})),React.createElement(Button,{className:\"btn-cue \"+(props.cuePressed&&\"btn--pressed\"||\"\"),onMouseDown:cueMouseDown},\"Cue\"));};var mapStateToProps=function mapStateToProps(state,ownProps){return{playPressed:state.console.channel[ownProps.name].playBackState.paused,cuePressed:state.console.channel[ownProps.name].playBackState.cueActive};};var mapDispachToProps=function mapDispachToProps(dispach,ownProps){return{onPlayPress:function onPlayPress(){return dispach(togglePlay(ownProps.name));},onCueToggle:function onCueToggle(){return dispach(toggleCue(ownProps.name));},cancelCueAndPlay:function cancelCueAndPlay(){return dispach(canelCueAndPlay(ownProps.name));}};};export default connect(mapStateToProps,mapDispachToProps)(PlayBackControls);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/PlayBackControls/PlayBackControls.js"],"names":["React","connect","togglePlay","toggleCue","canelCueAndPlay","Button","FontAwesomeIcon","faPlay","faPause","PlayBackControls","props","cueMouseDown","onCueToggle","document","addEventListener","mouseUp","event","elementFromPoint","clientX","clientY","buttonUnderMouse","closest","classList","contains","name","cancelCueAndPlay","removeEventListener","playPressed","onPlayPress","cuePressed","mapStateToProps","state","ownProps","console","channel","playBackState","paused","cueActive","mapDispachToProps","dispach"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\"; \r\nimport { togglePlay , toggleCue , canelCueAndPlay } from \"./../../../actions\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay , faPause } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./play-back.scss\";\r\n\r\nconst PlayBackControls = props => {\r\n\r\n    const cueMouseDown = () =>{\r\n        props.onCueToggle()\r\n        document.addEventListener('mouseup', mouseUp)\r\n    }\r\n\r\n    const mouseUp = (event) =>{\r\n        document.elementFromPoint(event.clientX, event.clientY)\r\n        const buttonUnderMouse = document.elementFromPoint(event.clientX, event.clientY).closest('button')\r\n        if(buttonUnderMouse){\r\n            if(buttonUnderMouse.closest('div').classList.contains(\"play-back-controls-\" + props.name) \r\n            && buttonUnderMouse.classList.contains('btn-play')){\r\n                props.cancelCueAndPlay();\r\n            } else {\r\n                props.onCueToggle()\r\n            }\r\n        } else {\r\n            props.onCueToggle()\r\n        }\r\n        document.removeEventListener('mouseup', mouseUp);\r\n    }\r\n    \r\n    return (\r\n        <div className={\"play-back-controls-\" + props.name }>\r\n            <Button className={\"btn-play \" + (((!props.playPressed) && \"btn--pressed\" ) || \"\" ) }\r\n                onClick={  props.onPlayPress }>\r\n                    <FontAwesomeIcon icon={(props.playPressed) ? faPlay : faPause}/>\r\n            </Button>\r\n            <Button \r\n               className={\"btn-cue \" + ((props.cuePressed && \"btn--pressed\") || \"\") }\r\n                onMouseDown={ cueMouseDown } > \r\n                    Cue \r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    playPressed : state.console.channel[ownProps.name].playBackState.paused,\r\n    cuePressed : state.console.channel[ownProps.name].playBackState.cueActive,\r\n})\r\n\r\nconst mapDispachToProps = (dispach, ownProps) => ({\r\n    onPlayPress : () => dispach(togglePlay(ownProps.name)),\r\n    onCueToggle : () => dispach(toggleCue(ownProps.name)),\r\n    cancelCueAndPlay : () => dispach(canelCueAndPlay(ownProps.name))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(PlayBackControls);\r\n\r\n"]},"metadata":{},"sourceType":"module"}