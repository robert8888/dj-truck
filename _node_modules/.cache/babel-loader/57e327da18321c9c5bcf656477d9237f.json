{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Deck\\\\TrackInfo\\\\CurrentBpm\\\\CurrentBpm.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { calcBpm } from \"./../../../../../../../utils/bpm/converter\";\nimport { connect } from \"react-redux\";\n\nconst CurrentBpm = props => {\n  const container = useRef(null);\n  useEffect(() => {\n    let currentBpm = \"000\";\n\n    if (props.bpm && props.bpm !== \"calculating\") {\n      currentBpm = calcBpm(props.bpm, props.pitch).toFixed(2);\n    }\n\n    container.current.textContent = currentBpm;\n  }, [props.bpm, container, props.pitch]);\n  return React.createElement(\"span\", {\n    className: \"track-bpm-current\",\n    ref: container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n};\n\nconst mapsStateToProps = (state, ownProps) => ({\n  bpm: state.console.channel[ownProps.name].track.bpm,\n  pitch: state.console.channel[ownProps.name].playBackState.pitch\n});\n\nexport default connect(mapsStateToProps)(CurrentBpm);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/app/components/Console/Deck/TrackInfo/CurrentBpm/CurrentBpm.js"],"names":["React","useRef","useEffect","calcBpm","connect","CurrentBpm","props","container","currentBpm","bpm","pitch","toFixed","current","textContent","mapsStateToProps","state","ownProps","console","channel","name","track","playBackState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,4CAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIM,UAAU,GAAG,KAAjB;;AACA,QAAGF,KAAK,CAACG,GAAN,IAAaH,KAAK,CAACG,GAAN,KAAc,aAA9B,EAA4C;AACxCD,MAAAA,UAAU,GAAGL,OAAO,CAACG,KAAK,CAACG,GAAP,EAAYH,KAAK,CAACI,KAAlB,CAAP,CAAgCC,OAAhC,CAAwC,CAAxC,CAAb;AACH;;AACDJ,IAAAA,SAAS,CAACK,OAAV,CAAkBC,WAAlB,GAAgCL,UAAhC;AACH,GANQ,EAMN,CAACF,KAAK,CAACG,GAAP,EAAYF,SAAZ,EAAuBD,KAAK,CAACI,KAA7B,CANM,CAAT;AAQA,SACI;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAoC,IAAA,GAAG,EAAEH,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAdD;;AAgBA,MAAMO,gBAAgB,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC3CP,EAAAA,GAAG,EAAIM,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACG,IAA/B,EAAqCC,KAArC,CAA2CX,GADP;AAE3CC,EAAAA,KAAK,EAAIK,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACG,IAA/B,EAAqCE,aAArC,CAAmDX;AAFjB,CAAtB,CAAzB;;AAKA,eAAeN,OAAO,CAACU,gBAAD,CAAP,CAA0BT,UAA1B,CAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\"\r\nimport { calcBpm } from \"./../../../../../../../utils/bpm/converter\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst CurrentBpm = props => {\r\n    const container = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        let currentBpm = \"000\";\r\n        if(props.bpm && props.bpm !== \"calculating\"){\r\n            currentBpm = calcBpm(props.bpm, props.pitch).toFixed(2);\r\n        } \r\n        container.current.textContent = currentBpm;\r\n    }, [props.bpm, container, props.pitch])\r\n    \r\n    return (\r\n        <span className=\"track-bpm-current\" ref={container}/>\r\n    )\r\n}\r\n\r\nconst mapsStateToProps = (state, ownProps) => ({\r\n    bpm :  state.console.channel[ownProps.name].track.bpm,\r\n    pitch :  state.console.channel[ownProps.name].playBackState.pitch,\r\n})\r\n\r\nexport default connect(mapsStateToProps)(CurrentBpm);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}