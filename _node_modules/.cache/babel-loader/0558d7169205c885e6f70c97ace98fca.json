{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Hooks\\\\Emoticons\\\\EmotiContainer\\\\EmotiContainer.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport UUID from 'uuidjs';\nimport icons from \"./emoji.json\";\nconst iconsOnPanel = 30;\n\nconst EmotiContainer = ({\n  onSelect,\n  node\n}) => {\n  const iconsPanels = useMemo(() => {\n    let panels = [];\n\n    for (let i = 0; i < 10; i + iconsOnPanel) {\n      console.log(i); // let panel = [];\n      // for (let j = i; (j < iconsOnPanel) && (i + j < icons.length); j++) {\n      //     let icon = icons[i]\n      //     panel.push(\n      //         <button key={'icon-'+i+j} onSelect={onSelect.bind(null, icon.emoji)}>{icon.emoji}</button>\n      //     )\n      // }\n\n      panels.push(React.createElement(\"section\", {\n        className: \"emoticons-panel\",\n        key: 'pannel-' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    }\n\n    return panels;\n  }, []);\n  console.log(\"render emoti\");\n  return React.createElement(\"div\", {\n    className: \"emoticons-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, iconsPanels);\n};\n\nexport default EmotiContainer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/Emoticons/EmotiContainer/EmotiContainer.js"],"names":["React","useCallback","useMemo","UUID","icons","iconsOnPanel","EmotiContainer","onSelect","node","iconsPanels","panels","i","console","log","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAG3C,QAAMC,WAAW,GAAGP,OAAO,CAAC,MAAM;AAC9B,QAAIQ,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,GAAGN,YAA5B,EAA0C;AACtCO,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EADsC,CAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,MAAAA,MAAM,CAACI,IAAP,CACI;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAqC,QAAA,GAAG,EAAE,YAAUH,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH;;AAGD,WAAOD,MAAP;AACH,GApB0B,EAoBxB,EApBwB,CAA3B;AAsBAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,WADL,CADJ;AAKH,CA/BD;;AAiCA,eAAeH,cAAf","sourcesContent":["import React, { useCallback, useMemo } from 'react';\r\nimport UUID from 'uuidjs'\r\nimport icons from \"./emoji.json\";\r\nconst iconsOnPanel = 30;\r\n\r\nconst EmotiContainer = ({ onSelect, node }) => {\r\n\r\n\r\n    const iconsPanels = useMemo(() => {\r\n        let panels = [];\r\n        for (let i = 0; i < 10; i + iconsOnPanel) {\r\n            console.log(i)\r\n            // let panel = [];\r\n            // for (let j = i; (j < iconsOnPanel) && (i + j < icons.length); j++) {\r\n            //     let icon = icons[i]\r\n            //     panel.push(\r\n            //         <button key={'icon-'+i+j} onSelect={onSelect.bind(null, icon.emoji)}>{icon.emoji}</button>\r\n            //     )\r\n            // }\r\n            panels.push(\r\n                <section className=\"emoticons-panel\" key={'pannel-'+i}>\r\n                    {/* {panel} */}\r\n                </section>\r\n            )\r\n        }\r\n\r\n\r\n        return panels;\r\n    }, [])\r\n\r\n    console.log(\"render emoti\")\r\n    return (\r\n        <div className=\"emoticons-container\">\r\n            {iconsPanels}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmotiContainer;"]},"metadata":{},"sourceType":"module"}