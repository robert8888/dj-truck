{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Carousel-slider\\\\Slider.js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport UUID from \"uuidjs\";\nimport style from \"./slider.scss\";\nimport useTransitionEnd from \"../../Hooks/useTransitionEnd\";\n\nconst rmLast = (arr, direction) => {\n  let last = arr.length - 1;\n  let _arr = [...arr];\n\n  while (last >= 0) {\n    if (direction === \"next\" && arr[last] < 0) break;\n    if (direction === \"prev\" && arr[last] > 0) break;\n\n    _arr.pop();\n\n    last--;\n  }\n\n  return _arr;\n};\n\nconst sumLastSameDirection = arr => {\n  let _arr = [...arr];\n\n  if (arr[arr.length - 1] * arr[arr.length - 2] > 0) {\n    let last = _arr.pop();\n\n    let prev = _arr.pop();\n\n    _arr.push(last + prev);\n  }\n\n  return _arr;\n};\n\nconst Slider = ({\n  slides: initSlides,\n  next: nextHandle,\n  prev: prevHandle,\n  minSlideWidth = style.minSlideWidth,\n  onStepDragging = false\n}) => {\n  const slider = useRef();\n  const [active, setActive] = useState(false); // const [overLapRatio] = useState(5);\n\n  const [subscribeTransitionEnd, unSubscribeTranstionEnd] = useTransitionEnd();\n  const [_containerRect, setContainerRect] = useState(null);\n  const [slideWidth, setSlideWidth] = useState(null);\n  const [visibleSlides, setVisibleSlides] = useState(null);\n  const [slides, setSlides] =\n  /* useState(initSlides);*/\n  useState([...initSlides, ...initSlides, ...initSlides]);\n  const [actionQueue, setActionQueue] = useState([]);\n  const [isTransitionRunning, setTransitionRunning] = useState(false);\n  const transitionActive = useRef();\n  const shift = useRef();\n  const balancedShift = useRef();\n  const translate = useRef();\n  const containerRect = useCallback(() => {\n    if (!slider.current) return 0;\n    let rect = _containerRect;\n\n    if (!rect) {\n      rect = slider.current.parentElement.getBoundingClientRect();\n      setContainerRect(rect);\n    }\n\n    return rect;\n  }, [_containerRect, setContainerRect]);\n  const setTransition = useCallback(value => {\n    if (!slider.current) return;\n\n    if (value) {\n      slider.current.classList.add(\"slider-transition--active\");\n      transitionActive.current = true;\n    } else {\n      slider.current.classList.remove(\"slider-transition--active\");\n      transitionActive.current = false;\n      setTransitionRunning(false);\n    }\n  }, [slider, transitionActive, setTransitionRunning]);\n  const setTranslate = useCallback(target => {\n    if (!slider.current) return;\n    slider.current.style.transform = `translateX(${target}px)`;\n    translate.current = target;\n  }, [slider, translate]);\n  const setPosition = useCallback(position => {\n    console.log(\"targe position\", position);\n    if (!slider.current || isNaN(position)) return;\n    setTranslate(position * slideWidth);\n    console.log(\"set transition runnign true from set positon\", transitionActive.current);\n    transitionActive.current && setTransitionRunning(true);\n  }, [slider, shift, slideWidth, setTransitionRunning, setTranslate, transitionActive]); // useEffect(()=>{\n  //     // console.log(\"in visible\", visibleSlides, initSlides.length)\n  //     // if(!visibleSlides || visibleSlides > initSlides.length) return;\n  //     // setActive(true);\n  //     // let slides = [].concat(Array(overLapRatio).fill(1).map( () => initSlides)).flat();\n  //     // setSlides(slides);\n  // }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio])\n\n  useEffect(() => {\n    const transitionEnd = e => {\n      console.log(\"set transition false from event\", e);\n      setTransitionRunning(false);\n    };\n\n    if (!slider.current) return;\n    console.log(\"subscribe transition end\", slider.current);\n    slider.current.addEventListener(\"transitionend\", transitionEnd);\n    slider.current.addEventListener(\"transitioncancel\", transitionEnd);\n    slider.current.addEventListener(\"mozTransitionEnd\", transitionEnd);\n    slider.current.addEventListener(\"webkitTransitionEnd\", transitionEnd);\n    slider.current.addEventListener(\"oTransitionEnd\", transitionEnd); // subscribeTransitionEnd(transitionEnd, slider.current);\n    // return () => {\n    //     unSubscribeTranstionEnd(transitionEnd, slider.current);\n    // }\n  }, [setTransitionRunning, slider]);\n  useEffect(() => {\n    if (!containerRect || !minSlideWidth || !slider.current) return;\n    const containerWidth = containerRect().width;\n    const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\n    setVisibleSlides(visibleSlides);\n  }, [containerRect, minSlideWidth, slider, setVisibleSlides]);\n  useEffect(() => {\n    if (!slides) return;\n    shift.current = -initSlides.length;\n    balancedShift.current = shift.current;\n    setPosition(shift.current);\n  }, [slideWidth, setPosition, shift, balancedShift, initSlides, slides]);\n  useEffect(() => {\n    const resetSize = () => setContainerRect(null);\n\n    window.addEventListener(\"resize\", resetSize);\n    return () => window.removeEventListener(\"resize\", resetSize);\n  }, [setContainerRect]);\n  useEffect(() => {\n    if (!visibleSlides || !containerRect) return;\n    const slideWidth = containerRect().width / visibleSlides;\n    setSlideWidth(slideWidth);\n    slider.current.style.width = slideWidth * slides.length + \"px\";\n  }, [containerRect, visibleSlides, slides]);\n  const appendSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.shift();\n\n        _slides.push(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const prependSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.pop();\n\n        _slides.unshift(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const balance = useCallback(() => {\n    //   setTransition(false);\n    const diff = balancedShift.current - shift.current;\n\n    if (!diff) {\n      //setTransition(true);\n      return;\n    }\n\n    diff < 0 ? prependSlides(Math.abs(diff)) : appendSlides(diff); //setTransition(false);\n\n    shift.current = balancedShift.current;\n    setPosition(balancedShift.current);\n  }, [shift, balancedShift, prependSlides, appendSlides, setTransition, setTransitionRunning]);\n  const action = useCallback(() => {\n    // if (!actionQueue.length) {\n    //    // balance();\n    //     return;\n    // }\n    const queue = [...actionQueue];\n    const direction = queue.shift();\n    if (!direction) return;\n    setTransition(false);\n    direction > 0 ? appendSlides(direction) : prependSlides(Math.abs(direction));\n    setPosition(shift.current + direction);\n    setTimeout(() => {\n      setTransition(true);\n      setPosition(shift.current);\n      setActionQueue(queue);\n      setTimeout(() => setTransitionRunning(false), 1000);\n    }, 0);\n  }, [setTransition, setPosition, actionQueue, setActionQueue, balance]);\n  useEffect(() => {\n    console.log(\"call action\", actionQueue, isTransitionRunning);\n\n    if (!isTransitionRunning) {\n      action();\n    }\n  }, [isTransitionRunning, actionQueue, action]);\n  const next = useCallback(() => {\n    setActionQueue(queue => {\n      const _queue = rmLast(queue, \"prev\");\n\n      return sumLastSameDirection([..._queue, 1]);\n    });\n  }, [setActionQueue]);\n  useEffect(() => nextHandle && nextHandle(next), [next, nextHandle]);\n  const prev = useCallback(() => {\n    setActionQueue(queue => {\n      const _queue = rmLast(queue, \"next\");\n\n      return sumLastSameDirection([..._queue, -1]);\n    });\n  }, [setActionQueue]);\n  useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle]); //\n  // const endDraging = useCallback(() => {\n  //     let next = Math.round(translate.current / slideWidth);\n  //     if(onStepDragging){\n  //         next = next >  shift.current  ? shift.current + 1 : shift.current - 1;\n  //     }\n  //     shift.current = next;\n  //     setPosition(shift.current);\n  // }, [translate, setTranslate, shift, slideWidth])\n  //\n  // const mouseMove = useCallback((shiftX, event) => {\n  //     const clientX = (event.type === \"touchmove\") ? event.touches[0].clientX : event.clientX;\n  //     setTranslate(clientX - shiftX);\n  // }, [setTranslate])\n  //\n  //\n  // const mouseDown = useCallback(event => {\n  //     const sliderContainer = event.target.closest(\".carousel-slider-container\");\n  //     if(!sliderContainer) return;\n  //     const rect = sliderContainer.getBoundingClientRect();\n  //     const clientX = (event.type === \"touchstart\") ? event.touches[0].clientX : event.clientX;\n  //     const shiftX = clientX - rect.left - shift.current * slideWidth;\n  //     const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\n  //\n  //     const mouseUp = () => {\n  //         window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\n  //         window.removeEventListener(\"mouseup\", mouseUp);\n  //         window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\n  //         window.removeEventListener(\"touchend\", mouseUp)\n  //         setTransition(true);\n  //         endDraging();\n  //     }\n  //\n  //     window.addEventListener(\"mousemove\", mouseMoveWithArgs);\n  //     window.addEventListener(\"touchmove\", mouseMoveWithArgs);\n  //     window.addEventListener(\"mouseup\", mouseUp);\n  //     window.addEventListener(\"touchend\", mouseUp);\n  //     setTransition(false);\n  // }, [setTransition, shift, slideWidth, endDraging])\n  //console.log(\"slides\", slides);]\n\n  return React.createElement(\"div\", {\n    className: \"carousel-slider-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"carousel-slider\",\n    ref: slider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"  \", slides && slides instanceof Array && slides.map(slide => React.createElement(\"li\", {\n    key: UUID.genV1(),\n    className: \"slide\",\n    style: {\n      width: minSlideWidth || \"initial\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, slide))));\n};\n\nexport default Slider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Carousel-slider/Slider.js"],"names":["React","useCallback","useEffect","useRef","useState","UUID","style","useTransitionEnd","rmLast","arr","direction","last","length","_arr","pop","sumLastSameDirection","prev","push","Slider","slides","initSlides","next","nextHandle","prevHandle","minSlideWidth","onStepDragging","slider","active","setActive","subscribeTransitionEnd","unSubscribeTranstionEnd","_containerRect","setContainerRect","slideWidth","setSlideWidth","visibleSlides","setVisibleSlides","setSlides","actionQueue","setActionQueue","isTransitionRunning","setTransitionRunning","transitionActive","shift","balancedShift","translate","containerRect","current","rect","parentElement","getBoundingClientRect","setTransition","value","classList","add","remove","setTranslate","target","transform","setPosition","position","console","log","isNaN","transitionEnd","e","addEventListener","containerWidth","width","parseInt","resetSize","window","removeEventListener","appendSlides","amount","_slides","i","slide","prependSlides","unshift","balance","diff","Math","abs","action","queue","setTimeout","_queue","Array","map","genV1"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport UUID from \"uuidjs\";\r\nimport style from \"./slider.scss\"\r\nimport useTransitionEnd from \"../../Hooks/useTransitionEnd\";\r\n\r\nconst rmLast = (arr, direction) => {\r\n    let last = arr.length - 1;\r\n    let _arr = [...arr];\r\n    while (last >= 0) {\r\n        if (direction === \"next\" && arr[last] < 0) break;\r\n        if (direction === \"prev\" && arr[last] > 0) break;\r\n        _arr.pop();\r\n        last--;\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst sumLastSameDirection = arr => {\r\n    let _arr = [...arr];\r\n    if (arr[arr.length - 1] * arr[arr.length - 2] > 0) {\r\n        let last = _arr.pop();\r\n        let prev = _arr.pop();\r\n        _arr.push(last + prev);\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst Slider = ({\r\n    slides: initSlides,\r\n    next: nextHandle,\r\n    prev: prevHandle,\r\n    minSlideWidth = style.minSlideWidth,\r\n    onStepDragging = false\r\n}) => {\r\n    const slider = useRef();\r\n    const [active, setActive] = useState(false);\r\n   // const [overLapRatio] = useState(5);\r\n    const [subscribeTransitionEnd, unSubscribeTranstionEnd] = useTransitionEnd();\r\n    const [_containerRect, setContainerRect] = useState(null);\r\n    const [slideWidth, setSlideWidth] = useState(null);\r\n    const [visibleSlides, setVisibleSlides] = useState(null);\r\n    const [slides, setSlides] = /* useState(initSlides);*/ useState([...initSlides, ...initSlides, ...initSlides]);\r\n    const [actionQueue, setActionQueue] = useState([]);\r\n    const [isTransitionRunning, setTransitionRunning] = useState(false);\r\n    const transitionActive = useRef();\r\n    const shift = useRef();\r\n    const balancedShift = useRef();\r\n    const translate = useRef();\r\n\r\n    const containerRect = useCallback(() => {\r\n        if (!slider.current) return 0;\r\n        let rect = _containerRect\r\n        if (!rect) {\r\n            rect = slider.current.parentElement.getBoundingClientRect()\r\n            setContainerRect(rect);\r\n        }\r\n        return rect;\r\n    }, [_containerRect, setContainerRect])\r\n\r\n    const setTransition = useCallback(value => {\r\n        if (!slider.current) return;\r\n        if(value){\r\n            slider.current.classList.add(\"slider-transition--active\");\r\n            transitionActive.current = true;\r\n        } else {\r\n            slider.current.classList.remove(\"slider-transition--active\");\r\n            transitionActive.current = false;\r\n            setTransitionRunning(false);\r\n        }\r\n    }, [slider, transitionActive, setTransitionRunning])\r\n\r\n    const setTranslate = useCallback(target => {\r\n        if (!slider.current) return;\r\n        slider.current.style.transform = `translateX(${target}px)`\r\n        translate.current = target;\r\n    }, [slider, translate])\r\n\r\n    const setPosition = useCallback(position => {\r\n        console.log(\"targe position\", position)\r\n        if (!slider.current || isNaN(position)) return;\r\n        setTranslate(position * slideWidth);\r\n        console.log(\"set transition runnign true from set positon\", transitionActive.current)\r\n        transitionActive.current && setTransitionRunning(true);\r\n    }, [slider, shift, slideWidth, setTransitionRunning, setTranslate, transitionActive])\r\n\r\n    // useEffect(()=>{\r\n    //     // console.log(\"in visible\", visibleSlides, initSlides.length)\r\n    //     // if(!visibleSlides || visibleSlides > initSlides.length) return;\r\n    //     // setActive(true);\r\n    //     // let slides = [].concat(Array(overLapRatio).fill(1).map( () => initSlides)).flat();\r\n    //     // setSlides(slides);\r\n    // }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio])\r\n\r\n    useEffect(() => {\r\n        const transitionEnd = (e) => {\r\n            console.log(\"set transition false from event\", e)\r\n            setTransitionRunning(false);\r\n        }\r\n        if(!slider.current) return;\r\n        console.log(\"subscribe transition end\", slider.current);\r\n\r\n\r\n        slider.current.addEventListener(\"transitionend\", transitionEnd);\r\n        slider.current.addEventListener(\"transitioncancel\", transitionEnd)\r\n        slider.current.addEventListener(\"mozTransitionEnd\",transitionEnd);\r\n        slider.current.addEventListener(\"webkitTransitionEnd\",transitionEnd);\r\n        slider.current.addEventListener(\"oTransitionEnd\",transitionEnd);\r\n        // subscribeTransitionEnd(transitionEnd, slider.current);\r\n        // return () => {\r\n        //     unSubscribeTranstionEnd(transitionEnd, slider.current);\r\n        // }\r\n    }, [setTransitionRunning, slider])\r\n\r\n    useEffect(()=>{\r\n        if (!containerRect || !minSlideWidth || !slider.current) return;\r\n        const containerWidth = containerRect().width;\r\n        const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\r\n        setVisibleSlides(visibleSlides);\r\n    }, [containerRect, minSlideWidth, slider, setVisibleSlides])\r\n\r\n    useEffect(() => {\r\n        if(!slides) return;\r\n        shift.current = -initSlides.length;\r\n        balancedShift.current = shift.current;\r\n        setPosition(shift.current);\r\n    }, [slideWidth, setPosition, shift, balancedShift, initSlides, slides])\r\n\r\n    useEffect(() => {\r\n        const resetSize = () => setContainerRect(null);\r\n        window.addEventListener(\"resize\", resetSize);\r\n        return () => window.removeEventListener(\"resize\", resetSize);\r\n    }, [setContainerRect])\r\n\r\n    useEffect(() => {\r\n        if(!visibleSlides || !containerRect) return;\r\n        const slideWidth = containerRect().width / visibleSlides\r\n        setSlideWidth(slideWidth);\r\n        slider.current.style.width = slideWidth * slides.length + \"px\";\r\n    }, [containerRect,  visibleSlides, slides]);\r\n\r\n    const appendSlides = useCallback(amount => {\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.shift();\r\n                _slides.push(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const prependSlides = useCallback(amount => {\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.pop();\r\n                _slides.unshift(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const balance = useCallback(() => {\r\n     //   setTransition(false);\r\n        const diff = balancedShift.current - shift.current;\r\n        if(!diff) {\r\n            //setTransition(true);\r\n            return;\r\n        }\r\n        (diff < 0) ? prependSlides(Math.abs(diff)) : appendSlides(diff);\r\n        //setTransition(false);\r\n        shift.current = balancedShift.current;\r\n        setPosition(balancedShift.current);\r\n    }, [shift, balancedShift, prependSlides, appendSlides, setTransition, setTransitionRunning])\r\n\r\n    const action = useCallback(() => {\r\n        // if (!actionQueue.length) {\r\n        //    // balance();\r\n        //     return;\r\n        // }\r\n        const queue = [...actionQueue];\r\n        const direction = queue.shift();\r\n        if(!direction) return;\r\n        setTransition(false);\r\n        (direction > 0) ? appendSlides(direction) : prependSlides(Math.abs(direction));\r\n        setPosition(shift.current + direction);\r\n        setTimeout(() => {\r\n            setTransition(true);\r\n            setPosition(shift.current);\r\n            setActionQueue(queue);\r\n            setTimeout(()=> setTransitionRunning(false), 1000);\r\n        }, 0)\r\n    }, [setTransition, setPosition, actionQueue, setActionQueue, balance])\r\n\r\n    useEffect(() => {\r\n        console.log(\"call action\", actionQueue, isTransitionRunning)\r\n        if (!isTransitionRunning) {\r\n            action();\r\n        }\r\n    }, [isTransitionRunning, actionQueue, action])\r\n\r\n    const next = useCallback(() => {\r\n        setActionQueue(queue => {\r\n            const _queue = rmLast(queue, \"prev\");\r\n            return sumLastSameDirection([..._queue, 1])\r\n        })\r\n    }, [setActionQueue])\r\n\r\n    useEffect(() => nextHandle && nextHandle(next), [next, nextHandle])\r\n\r\n    const prev = useCallback(() => {\r\n        setActionQueue(queue => {\r\n            const _queue = rmLast(queue, \"next\");\r\n            return sumLastSameDirection([..._queue, -1])\r\n        })\r\n    }, [setActionQueue])\r\n\r\n    useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle])\r\n    //\r\n    // const endDraging = useCallback(() => {\r\n    //     let next = Math.round(translate.current / slideWidth);\r\n    //     if(onStepDragging){\r\n    //         next = next >  shift.current  ? shift.current + 1 : shift.current - 1;\r\n    //     }\r\n    //     shift.current = next;\r\n    //     setPosition(shift.current);\r\n    // }, [translate, setTranslate, shift, slideWidth])\r\n    //\r\n    // const mouseMove = useCallback((shiftX, event) => {\r\n    //     const clientX = (event.type === \"touchmove\") ? event.touches[0].clientX : event.clientX;\r\n    //     setTranslate(clientX - shiftX);\r\n    // }, [setTranslate])\r\n    //\r\n    //\r\n    // const mouseDown = useCallback(event => {\r\n    //     const sliderContainer = event.target.closest(\".carousel-slider-container\");\r\n    //     if(!sliderContainer) return;\r\n    //     const rect = sliderContainer.getBoundingClientRect();\r\n    //     const clientX = (event.type === \"touchstart\") ? event.touches[0].clientX : event.clientX;\r\n    //     const shiftX = clientX - rect.left - shift.current * slideWidth;\r\n    //     const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\r\n    //\r\n    //     const mouseUp = () => {\r\n    //         window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\r\n    //         window.removeEventListener(\"mouseup\", mouseUp);\r\n    //         window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\r\n    //         window.removeEventListener(\"touchend\", mouseUp)\r\n    //         setTransition(true);\r\n    //         endDraging();\r\n    //     }\r\n    //\r\n    //     window.addEventListener(\"mousemove\", mouseMoveWithArgs);\r\n    //     window.addEventListener(\"touchmove\", mouseMoveWithArgs);\r\n    //     window.addEventListener(\"mouseup\", mouseUp);\r\n    //     window.addEventListener(\"touchend\", mouseUp);\r\n    //     setTransition(false);\r\n    // }, [setTransition, shift, slideWidth, endDraging])\r\n\r\n    //console.log(\"slides\", slides);]\r\n\r\n    return (\r\n        <div className=\"carousel-slider-container\">\r\n           <ul className=\"carousel-slider\" ref={slider}>  {/* onMouseDown={mouseDown} onTouchStart={mouseDown} onDrag={ e => e.preventDefault()}>*/}\r\n                {slides && slides instanceof Array && slides.map(slide => (\r\n                    <li key={UUID.genV1()} className={\"slide\"} style={{width: minSlideWidth || \"initial\"}}>{slide}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}