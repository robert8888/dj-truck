{"ast":null,"code":"import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useMemo,useEffect,useState}from\"react\";import{connect}from\"react-redux\";import\"./master.scss\";import Console from\"./../../../../core/console/console\";import GainKnob from\"./../componets/GainKnob/GainKnob\";import PeakLevelMeterH from\"../componets/PeakLevelMeter/PeakLevelMeterH\";import ThresholdKnob from\"../componets/ThresholdKnob/ThresholdKnob\";import RatioKnob from\"../componets/RatioKnob/RatioKnob\";import AttackKnob from\"../componets/AttackKnob/AttackKnob\";import ReleaseKnob from\"../componets/ReleaseKnob/ReleaseKnob\";import{setPreGain as _setPreGain,setPostGain as _setPostGain,setThreshold as _setThreshold,setRatio as _setRatio,setAttack as _setAttack,setRelease as _setRelease}from\"../../../../../../actions\";var Mastering=function Mastering(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),_interface=_useState2[0],setInterface=_useState2[1];var mixerInterface=useMemo(function(){return _interface;},[_interface]);useEffect(function(){setInterface(Console.Get().getMixerMasterInterface());},[setInterface]);return React.createElement(\"div\",{className:\"mastering\"},React.createElement(\"div\",{className:\"label\"},\"COM\"),React.createElement(GainKnob,{onChange:props.setPreGain}),React.createElement(PeakLevelMeterH,{mastering:true,active:true,interface:mixerInterface===null||mixerInterface===void 0?void 0:mixerInterface.getPrePeakMeter}),React.createElement(ThresholdKnob,{onChange:props.setThreshold}),React.createElement(RatioKnob,{onChange:props.setRatio}),React.createElement(AttackKnob,{onChange:props.setAttack}),React.createElement(ReleaseKnob,{onChange:props.setRelease}),React.createElement(GainKnob,{onChange:props.setPostGain}),React.createElement(PeakLevelMeterH,{active:true,interface:mixerInterface===null||mixerInterface===void 0?void 0:mixerInterface.getPostPeakMeter}));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setPreGain:function setPreGain(value){return dispatch(_setPreGain(value));},setPostGain:function setPostGain(value){return dispatch(_setPostGain(value));},setThreshold:function setThreshold(value){return dispatch(_setThreshold(value));},setRatio:function setRatio(value){return dispatch(_setRatio(value));},setAttack:function setAttack(value){return dispatch(_setAttack(value));},setRelease:function setRelease(value){return dispatch(_setRelease(value));}};};export default connect(null,mapDispatchToProps)(Mastering);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Mixer/Master/Master.js"],"names":["React","useMemo","useEffect","useState","connect","Console","GainKnob","PeakLevelMeterH","ThresholdKnob","RatioKnob","AttackKnob","ReleaseKnob","setPreGain","setPostGain","setThreshold","setRatio","setAttack","setRelease","Mastering","props","_interface","setInterface","mixerInterface","Get","getMixerMasterInterface","getPrePeakMeter","getPostPeakMeter","mapDispatchToProps","dispatch","value"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect, useState } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./master.scss\";\r\nimport Console from \"./../../../../core/console/console\";\r\nimport GainKnob from \"./../componets/GainKnob/GainKnob\";\r\nimport PeakLevelMeterH from \"../componets/PeakLevelMeter/PeakLevelMeterH\";\r\nimport ThresholdKnob from \"../componets/ThresholdKnob/ThresholdKnob\";\r\nimport RatioKnob from \"../componets/RatioKnob/RatioKnob\";\r\nimport AttackKnob from \"../componets/AttackKnob/AttackKnob\";\r\nimport ReleaseKnob from \"../componets/ReleaseKnob/ReleaseKnob\";\r\nimport { \r\n        setPreGain,\r\n        setPostGain,\r\n        setThreshold,\r\n        setRatio,\r\n        setAttack,\r\n        setRelease \r\n    } from \"../../../../../../actions\";\r\n\r\nconst Mastering = props => {\r\n    const [_interface, setInterface] = useState();\r\n    \r\n    const mixerInterface = useMemo(() => {\r\n        return _interface;\r\n    }, [_interface])\r\n\r\n    useEffect(() => {\r\n        setInterface(Console.Get().getMixerMasterInterface())\r\n    }, [setInterface])\r\n\r\n    return (\r\n        <div className=\"mastering\">\r\n            <div className=\"label\">COM</div>\r\n            <GainKnob onChange={ props.setPreGain}/>\r\n            <PeakLevelMeterH\r\n                mastering \r\n                active={true}\r\n                interface={mixerInterface?.getPrePeakMeter} />\r\n            <ThresholdKnob onChange={props.setThreshold}/>\r\n            <RatioKnob onChange={props.setRatio}/>\r\n            <AttackKnob onChange={props.setAttack}/>\r\n            <ReleaseKnob onChange={props.setRelease}/>\r\n            <GainKnob onChange={props.setPostGain}/>\r\n            <PeakLevelMeterH \r\n               active={true}\r\n               interface={ mixerInterface?.getPostPeakMeter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    setPreGain : value => dispatch(setPreGain(value)),\r\n    setPostGain : value => dispatch(setPostGain(value)),\r\n    \r\n    setThreshold : value => dispatch(setThreshold(value)),\r\n    setRatio : value => dispatch(setRatio(value)),\r\n    setAttack : value => dispatch(setAttack(value)),\r\n    setRelease : value => dispatch(setRelease(value)),\r\n    \r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Mastering);"]},"metadata":{},"sourceType":"module"}