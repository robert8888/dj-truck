{"ast":null,"code":"export default (() => {\n  self.addEventListener(\"message\", e => {\n    /* eslint-disable-line no-restricted-globals */\n    if (!e) {\n      return;\n    }\n\n    switch (e.data.type) {\n      case \"SEND_CONTEXT\":\n        {\n          context = e.data.context;\n        }\n\n      case \"BUILD_IMPULSE\":\n        {\n          _buildImpulse(e.data.seconds, e.data.decay, e.data.reverse);\n        }\n    }\n\n    postMessage(\"sended form worker\");\n  });\n  const context = null;\n\n  function _buildImpulse(seconds, decay, reverse) {\n    let rate = context.sampleRate,\n        length = rate * seconds,\n        impulse = context.createBuffer(2, length, rate),\n        impulseL = impulse.getChannelData(0),\n        impulseR = impulse.getChannelData(1),\n        n,\n        i;\n\n    for (i = 0; i < length; i++) {\n      n = reverse ? length - i : i;\n      impulseL[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);\n      impulseR[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);\n    }\n\n    postMessage({\n      type: \"IMPLUSE\",\n      impulse: impulse\n    }); //this.input.buffer = impulse;\n  }\n});","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/core/console/effector/effects/reverb/buildImpulseWebWorker.js"],"names":["self","addEventListener","e","data","type","context","_buildImpulse","seconds","decay","reverse","postMessage","rate","sampleRate","length","impulse","createBuffer","impulseL","getChannelData","impulseR","n","i","Math","random","pow"],"mappings":"AAGA,gBAAe,MAAM;AACjBA,EAAAA,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiCC,CAAC,IAAI;AAAC;AACrC,QAAI,CAACA,CAAL,EAAQ;AACJ;AACH;;AACD,YAAOA,CAAC,CAACC,IAAF,CAAOC,IAAd;AACI,WAAK,cAAL;AAAsB;AAClBC,UAAAA,OAAO,GAAGH,CAAC,CAACC,IAAF,CAAOE,OAAjB;AACH;;AACD,WAAK,eAAL;AAAuB;AACpBC,UAAAA,aAAa,CACTJ,CAAC,CAACC,IAAF,CAAOI,OADE,EAETL,CAAC,CAACC,IAAF,CAAOK,KAFE,EAGTN,CAAC,CAACC,IAAF,CAAOM,OAHE,CAAb;AAKF;AAVL;;AAaAC,IAAAA,WAAW,CAAC,oBAAD,CAAX;AAED,GAnBD;AAoBA,QAAML,OAAO,GAAG,IAAhB;;AAEA,WAASC,aAAT,CAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,OAAvC,EAAgD;AAC5C,QAAIE,IAAI,GAAGN,OAAO,CAACO,UAAnB;AAAA,QACIC,MAAM,GAAGF,IAAI,GAAGJ,OADpB;AAAA,QAEIO,OAAO,GAAGT,OAAO,CAACU,YAAR,CAAqB,CAArB,EAAwBF,MAAxB,EAAgCF,IAAhC,CAFd;AAAA,QAGIK,QAAQ,GAAGF,OAAO,CAACG,cAAR,CAAuB,CAAvB,CAHf;AAAA,QAIIC,QAAQ,GAAGJ,OAAO,CAACG,cAAR,CAAuB,CAAvB,CAJf;AAAA,QAKIE,CALJ;AAAA,QAMIC,CANJ;;AAQA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGP,MAAhB,EAAwBO,CAAC,EAAzB,EAA6B;AACzBD,MAAAA,CAAC,GAAGV,OAAO,GAAGI,MAAM,GAAGO,CAAZ,GAAgBA,CAA3B;AACAJ,MAAAA,QAAQ,CAACI,CAAD,CAAR,GAAc,CAACC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAArB,IAA0BD,IAAI,CAACE,GAAL,CAAS,IAAIJ,CAAC,GAAGN,MAAjB,EAAyBL,KAAzB,CAAxC;AACAU,MAAAA,QAAQ,CAACE,CAAD,CAAR,GAAc,CAACC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAArB,IAA0BD,IAAI,CAACE,GAAL,CAAS,IAAIJ,CAAC,GAAGN,MAAjB,EAAyBL,KAAzB,CAAxC;AACH;;AAEDE,IAAAA,WAAW,CAAC;AAACN,MAAAA,IAAI,EAAC,SAAN;AAAiBU,MAAAA,OAAO,EAAGA;AAA3B,KAAD,CAAX,CAf4C,CAgB5C;AACH;AAEF,CA1CH","sourcesContent":["\r\n\r\n\r\nexport default () => {\r\n    self.addEventListener(\"message\", e => {/* eslint-disable-line no-restricted-globals */\r\n      if (!e) {\r\n          return;\r\n      }\r\n      switch(e.data.type){\r\n          case \"SEND_CONTEXT\" : {\r\n              context = e.data.context;\r\n          }\r\n          case \"BUILD_IMPULSE\" : {\r\n             _buildImpulse(\r\n                 e.data.seconds,\r\n                 e.data.decay,\r\n                 e.data.reverse\r\n             )\r\n          }\r\n      }\r\n\r\n      postMessage(\"sended form worker\")\r\n\r\n    });\r\n    const context = null;\r\n\r\n    function _buildImpulse(seconds, decay, reverse) {\r\n        let rate = context.sampleRate,\r\n            length = rate * seconds,\r\n            impulse = context.createBuffer(2, length, rate),\r\n            impulseL = impulse.getChannelData(0),\r\n            impulseR = impulse.getChannelData(1),\r\n            n,\r\n            i;\r\n\r\n        for (i = 0; i < length; i++) {\r\n            n = reverse ? length - i : i;\r\n            impulseL[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);\r\n            impulseR[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);\r\n        }\r\n\r\n        postMessage({type:\"IMPLUSE\", impulse : impulse})\r\n        //this.input.buffer = impulse;\r\n    }\r\n\r\n  };"]},"metadata":{},"sourceType":"module"}