{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordDetails\\\\RecordDetails.js\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"./record-details.scss\";\n\nconst RecordDetails = ({\n  record\n}) => {\n  const [editMode, setEditMode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [generes, setGeneres] = useState([]);\n  const descriptionTextArea = useRef();\n  const setFromRecord = useCallback(record => {\n    setTitle(record.title || \"\");\n    setDescription(record.description || \"Some descirpiton\");\n    setGeneres(record.generes || [\"Techno\", \"Minimal\", \"Soul\"]);\n  }, [setTitle, setDescription, setGeneres]);\n  useEffect(() => {\n    if (!record) return;\n    setFromRecord(record);\n  }, [record, setFromRecord]);\n  const toggleMode = useCallback(() => {\n    const mode = !editMode;\n    setEditMode(mode);\n\n    if (!mode) {\n      setFromRecord(record);\n    }\n  }, [record, editMode, setEditMode]);\n  const updateTitle = useCallback(event => {\n    setTitle(event.target.value);\n  }, [setTitle]);\n  const updateDescription = useCallback(event => {\n    setDescription(event.target.value);\n  }, [setDescription]);\n  const updateGeneres = useCallback(event => {\n    let generes = event.target.value.split(\",\").map(genere => genere.trim());\n    setGeneres(generes);\n  }, [setGeneres]);\n  const updateRecordDetails = useCallback(event => {\n    event.preventDefault();\n    const title = event.target.elements.title.value;\n    const description = event.target.elements.description.value;\n    const generes = event.target.elements.generes.value;\n    console.log(title, description, generes);\n    setEditMode(false);\n  }, [setEditMode]); //ajust text areaf size \n\n  useEffect(() => {\n    const el = descriptionTextArea.current;\n    el.style.height = 0;\n    el.style.height = el.scrollHeight + 10 + \"px\";\n  }, [description, descriptionTextArea]);\n  return React.createElement(Form, {\n    className: \"record-details\",\n    onSubmit: updateRecordDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    type: \"switch\",\n    id: \"switch-edit-mode\",\n    label: \"edit\",\n    className: \"switch-edit-mode\",\n    value: editMode,\n    onChange: toggleMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    className: \"record-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Title: \"), React.createElement(Form.Control, {\n    name: \"title\",\n    type: \"text\",\n    value: title,\n    onChange: updateTitle,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"record-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Description: \"), React.createElement(Form.Control, {\n    name: \"description\",\n    as: \"textarea\",\n    ref: descriptionTextArea,\n    value: description,\n    onChange: updateDescription,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"genere-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Generes: \"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"generes\",\n    value: generes.join(\", \"),\n    onChange: updateGeneres,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), editMode && React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" Save \"));\n};\n\nexport default RecordDetails;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordDetails/RecordDetails.js"],"names":["React","useState","useEffect","useCallback","useRef","Form","Button","RecordDetails","record","editMode","setEditMode","title","setTitle","description","setDescription","generes","setGeneres","descriptionTextArea","setFromRecord","toggleMode","mode","updateTitle","event","target","value","updateDescription","updateGeneres","split","map","genere","trim","updateRecordDetails","preventDefault","elements","console","log","el","current","style","height","scrollHeight","join"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback, useRef}  from \"react\";\r\nimport {Form , Button} from \"react-bootstrap\"\r\nimport \"./record-details.scss\";\r\n\r\nconst RecordDetails = ({record}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [generes, setGeneres] = useState([]);\r\n\r\n\r\n    const descriptionTextArea = useRef();\r\n\r\n    const setFromRecord = useCallback((record) => {\r\n        setTitle(record.title || \"\")\r\n        setDescription(record.description || \"Some descirpiton\")\r\n        setGeneres(record.generes || [\"Techno\", \"Minimal\", \"Soul\"]);\r\n    }, [setTitle, setDescription, setGeneres])\r\n\r\n    useEffect(()=>{\r\n        if(!record) return;\r\n        setFromRecord(record)\r\n    },[record, setFromRecord])\r\n\r\n\r\n    const toggleMode = useCallback(()=>{\r\n        const mode = !editMode;\r\n        setEditMode(mode)\r\n        if(!mode){\r\n            setFromRecord(record)\r\n        }\r\n\r\n    }, [record, editMode, setEditMode])\r\n\r\n    const updateTitle = useCallback((event) => {\r\n        setTitle(event.target.value);\r\n    }, [setTitle])\r\n\r\n    const updateDescription = useCallback( event => {\r\n\r\n        setDescription(event.target.value)\r\n    },[setDescription])\r\n\r\n            \r\n    const updateGeneres = useCallback( event => {\r\n        let generes = event.target.value.split(\",\").map( genere => genere.trim())\r\n        setGeneres(generes)\r\n    }, [setGeneres])\r\n        \r\n    const updateRecordDetails = useCallback( event => {\r\n        event.preventDefault();\r\n        const title = event.target.elements.title.value;\r\n        const description = event.target.elements.description.value;\r\n        const generes = event.target.elements.generes.value;\r\n        console.log(title, description, generes);\r\n\r\n        setEditMode(false)\r\n    }, [setEditMode])\r\n\r\n    //ajust text areaf size \r\n    useEffect(() => {\r\n        const el = descriptionTextArea.current;\r\n        el.style.height = 0;\r\n        el.style.height = el.scrollHeight + 10 + \"px\";\r\n    }, [description, descriptionTextArea])\r\n\r\n    return (\r\n        <Form className=\"record-details\" onSubmit={updateRecordDetails}>\r\n            <Form.Check type=\"switch\" id=\"switch-edit-mode\" label=\"edit\" className=\"switch-edit-mode\" value={editMode} onChange={toggleMode}/>\r\n            <Form.Group className=\"record-title\">\r\n                <Form.Label>Title: </Form.Label>\r\n                <Form.Control name=\"title\" type=\"text\" value={title} onChange={updateTitle} disabled={!editMode}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"record-description\">\r\n                <Form.Label>Description: </Form.Label>\r\n                <Form.Control name=\"description\" as=\"textarea\" ref={descriptionTextArea} value={description} onChange={updateDescription} disabled={!editMode}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"genere-list\">\r\n                <Form.Label>Generes: </Form.Label>\r\n                <Form.Control \r\n                    type=\"text\"\r\n                    name=\"generes\"\r\n                    value={generes.join(\", \")} \r\n                    onChange={ updateGeneres } \r\n                    disabled={!editMode}/>\r\n            </Form.Group>\r\n            {editMode && <Button type=\"submit\"> Save </Button>}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default RecordDetails"]},"metadata":{},"sourceType":"module"}