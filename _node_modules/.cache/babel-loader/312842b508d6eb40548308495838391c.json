{"ast":null,"code":"import _objectSpread from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Fragment}from\"react\";import{ContextMenuTrigger}from\"react-contextmenu\";import{connect}from\"react-redux\";import CtxMenu from\"../../../../common/components/ContextMenu/ContextMenu\";import{deleteTrackRequest,loadTrack,resetCurrentPlaylistContent,startCalcBpm,swapTrackOnList,updateTrackPositionRequest}from\"./../../../../../actions\";import EmptyListInfo from\"./EmptList/EmptyList\";import\"./play-list.scss\";import PlaylistCtx from\"./PlaylistContext\";import PlaylistTable from\"./PlaylistTable/PlaylistTable\";import PlaylistItem from\"./Playlist_Item/PlaylistItem\";var PlayList=/*#__PURE__*/function(_React$Component){_inherits(PlayList,_React$Component);function PlayList(){var _getPrototypeOf2;var _this;_classCallCheck(this,PlayList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(PlayList)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.isEmpty=function(){return!_this.props.currentPlaylist||_this.props.currentPlaylist.length===0;};_this.currentHoverElement=-1;_this.playlistSnapshot=null;_this.headers=['#','Source','Title','Quality','Time','Bpm'];if(_this.props.player){_this.headers.unshift(\"\");}return _this;}_createClass(PlayList,[{key:\"setCurrentHover\",value:function setCurrentHover(index){if(!this.menuVisible){this.currentHoverElement=index;}}},{key:\"loadTrack\",value:function loadTrack(destination){if(this.currentHoverElement===-1)return;var track=this.props.playlist[this.currentHoverElement];this.props.load(track,destination);}},{key:\"deleteTrack\",value:function deleteTrack(){if(this.props.playlist.length===0||this.currentHoverElement===-1){return;}var id=this.props.playlist[this.currentHoverElement].id;this.props.delete(this.currentHoverElement,id);}},{key:\"reCalcBpm\",value:function reCalcBpm(){if(this.currentHoverElement===-1)return;this.props.reCalcBpm(this.props.playlist[this.currentHoverElement],this.props.currentPlaylist);this.forceUpdate();}},{key:\"makeListSnapshot\",value:function makeListSnapshot(){this.playlistSnapshot=this.props.playlist;}},{key:\"resetList\",value:function resetList(){this.props.resetList(this.playlistSnapshot);}},{key:\"acceptListOrder\",value:function acceptListOrder(){var prev=this.playlistSnapshot;var current=this.props.playlist;//find differences in tracks order and call to api\nvar tracksPositionsMap=[];current.forEach(function(_,index){if(prev[index].id!==current[index].id){tracksPositionsMap.push({id:current[index].id,position:index});}});this.props.updateTracksPositions(tracksPositionsMap);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.refreshFalg!==this.props.refreshFalg){this.forceUpdate();}}},{key:\"getContextMenuItems\",value:function getContextMenuItems(){var items={\"Calc BPM\":this.reCalcBpm.bind(this),\"Delete\":this.deleteTrack.bind(this)};if(this.props.page===\"console\"){items=_objectSpread({},items,{\"Send to A\":this.loadTrack.bind(this,\"A\"),\"Send to B\":this.loadTrack.bind(this,\"B\")});}return items;}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(Fragment,null,React.createElement(\"div\",{className:\"playlist\"},React.createElement(ContextMenuTrigger,{id:\"playlist_ctx_menu\",className:\"playlist\",holdToDisplay:-1},React.createElement(PlaylistCtx.Provider,{value:{setHover:this.setCurrentHover.bind(this)}},React.createElement(Fragment,null,React.createElement(PlaylistTable,{headers:this.headers},this.props.playlist&&this.props.playlist.map(function(item,index){return React.createElement(PlaylistItem,{player:_this2.props.player,controls:_this2.props.controls,item:item,listIndex:index,swapItems:_this2.props.swapTrack,dragStart:_this2.makeListSnapshot.bind(_this2),endOutside:_this2.resetList.bind(_this2),endWithin:_this2.acceptListOrder.bind(_this2),key:item.id});}))))),React.createElement(EmptyListInfo,{empty:this.isEmpty()})),React.createElement(CtxMenu,{id:\"playlist_ctx_menu\",items:this.getContextMenuItems(),handlers:{onShow:function onShow(){return _this2.menuVisible=true;},onHide:function onHide(){return _this2.menuVisible=false;}}}));}}]);return PlayList;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{playlist:state.playList.list,currentPlaylist:state.playList.currentPlaylist,refreshFalg:state.playList.refreshFalg};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{load:function load(track,destination){return dispatch(loadTrack(track,destination));},delete:function _delete(index,id){return dispatch(deleteTrackRequest(index,id));},swapTrack:function swapTrack(from,to){return dispatch(swapTrackOnList(from,to));},reCalcBpm:function reCalcBpm(track,playlist){return dispatch(startCalcBpm(track,playlist));},resetList:function resetList(list){return dispatch(resetCurrentPlaylistContent(list));},updateTracksPositions:function updateTracksPositions(tracksPositions){return dispatch(updateTrackPositionRequest(tracksPositions));}};};export default connect(mapStateToProps,mapDispatchToProps)(PlayList);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayListExplorer/PlayList/PlayList.js"],"names":["React","Fragment","ContextMenuTrigger","connect","CtxMenu","deleteTrackRequest","loadTrack","resetCurrentPlaylistContent","startCalcBpm","swapTrackOnList","updateTrackPositionRequest","EmptyListInfo","PlaylistCtx","PlaylistTable","PlaylistItem","PlayList","args","isEmpty","props","currentPlaylist","length","currentHoverElement","playlistSnapshot","headers","player","unshift","index","menuVisible","destination","track","playlist","load","id","delete","reCalcBpm","forceUpdate","resetList","prev","current","tracksPositionsMap","forEach","_","push","position","updateTracksPositions","prevProps","refreshFalg","items","bind","deleteTrack","page","setHover","setCurrentHover","map","item","controls","swapTrack","makeListSnapshot","acceptListOrder","getContextMenuItems","onShow","onHide","Component","mapStateToProps","state","playList","list","mapDispatchToProps","dispatch","from","to","tracksPositions"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { connect } from \"react-redux\";\r\nimport CtxMenu from \"../../../../common/components/ContextMenu/ContextMenu\";\r\nimport { deleteTrackRequest, loadTrack, resetCurrentPlaylistContent, startCalcBpm, swapTrackOnList, updateTrackPositionRequest } from \"./../../../../../actions\";\r\nimport EmptyListInfo from \"./EmptList/EmptyList\";\r\nimport \"./play-list.scss\";\r\nimport PlaylistCtx from \"./PlaylistContext\";\r\nimport PlaylistTable from \"./PlaylistTable/PlaylistTable\";\r\nimport PlaylistItem from \"./Playlist_Item/PlaylistItem\";\r\n\r\n\r\n\r\nclass PlayList extends React.Component {\r\n    constructor(...args){\r\n        super(...args);\r\n        this.currentHoverElement = -1;\r\n        this.playlistSnapshot = null;\r\n    \r\n        this.headers = ['#', 'Source', 'Title', 'Quality', 'Time', 'Bpm'];\r\n       \r\n        if(this.props.player){\r\n            this.headers.unshift(\"\");\r\n        }\r\n    }\r\n\r\n    setCurrentHover(index) {\r\n        if (!this.menuVisible) {\r\n            this.currentHoverElement = index;\r\n        }\r\n    }\r\n\r\n    loadTrack(destination) {\r\n        if (this.currentHoverElement === -1) return;\r\n\r\n        const track = this.props.playlist[this.currentHoverElement];\r\n        this.props.load(track, destination)\r\n    }\r\n\r\n    deleteTrack() {\r\n        if (this.props.playlist.length === 0 || this.currentHoverElement === -1) {\r\n            return;\r\n        }\r\n        const id = this.props.playlist[this.currentHoverElement].id;\r\n        this.props.delete(this.currentHoverElement, id);\r\n    }\r\n\r\n    isEmpty = () => (!this.props.currentPlaylist || this.props.currentPlaylist.length === 0)\r\n\r\n    reCalcBpm() {\r\n        if (this.currentHoverElement === -1) return;\r\n\r\n        this.props.reCalcBpm(\r\n            this.props.playlist[this.currentHoverElement],\r\n            this.props.currentPlaylist\r\n        )\r\n        this.forceUpdate();\r\n    }\r\n\r\n\r\n    makeListSnapshot() {\r\n        this.playlistSnapshot = this.props.playlist;\r\n    }\r\n\r\n    resetList() {\r\n        this.props.resetList(this.playlistSnapshot);\r\n    }\r\n\r\n    acceptListOrder() {\r\n        const prev = this.playlistSnapshot;\r\n        const current = this.props.playlist;\r\n        //find differences in tracks order and call to api\r\n        const tracksPositionsMap = [];\r\n        current.forEach((_, index) => {\r\n            if (prev[index].id !== current[index].id) {\r\n                tracksPositionsMap.push({\r\n                    id: current[index].id,\r\n                    position: index,\r\n                })\r\n            }\r\n        })\r\n        this.props.updateTracksPositions(tracksPositionsMap);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.refreshFalg !== this.props.refreshFalg) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    getContextMenuItems(){\r\n        let items =  {\r\n            \"Calc BPM\": this.reCalcBpm.bind(this),\r\n            \"Delete\": this.deleteTrack.bind(this)\r\n        }\r\n        if(this.props.page === \"console\"){\r\n            items = {\r\n                ...items,\r\n                \"Send to A\": this.loadTrack.bind(this, \"A\"),\r\n                \"Send to B\": this.loadTrack.bind(this, \"B\"),\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"playlist\">\r\n                    <ContextMenuTrigger id=\"playlist_ctx_menu\" className=\"playlist\" holdToDisplay={-1}>\r\n                        <PlaylistCtx.Provider value={{ setHover: this.setCurrentHover.bind(this) }}>\r\n                            <Fragment>\r\n                                <PlaylistTable headers={this.headers}>\r\n                                    {this.props.playlist && this.props.playlist.map((item, index) =>\r\n                                        <PlaylistItem\r\n                                            player={this.props.player}\r\n                                            controls={this.props.controls}\r\n                                            item={item}\r\n                                            listIndex={index}\r\n                                            swapItems={this.props.swapTrack}\r\n                                            dragStart={this.makeListSnapshot.bind(this)}\r\n                                            endOutside={this.resetList.bind(this)}\r\n                                            endWithin={this.acceptListOrder.bind(this)}\r\n                                            key={item.id}\r\n                                        />\r\n                                    )}\r\n                                </PlaylistTable>\r\n                            </Fragment>\r\n                        </PlaylistCtx.Provider>\r\n                    </ContextMenuTrigger>\r\n                    <EmptyListInfo empty={this.isEmpty()} />\r\n                </div>\r\n                <CtxMenu\r\n                    id=\"playlist_ctx_menu\"\r\n                    items={this.getContextMenuItems()}\r\n                    handlers={{\r\n                        onShow: () => this.menuVisible = true,\r\n                        onHide: () => this.menuVisible = false,\r\n                    }}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    playlist: state.playList.list,\r\n    currentPlaylist: state.playList.currentPlaylist,\r\n    refreshFalg: state.playList.refreshFalg,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    load: (track, destination) => dispatch(loadTrack(track, destination)),\r\n    delete: (index, id) => dispatch(deleteTrackRequest(index, id)),\r\n    swapTrack: (from, to) => dispatch(swapTrackOnList(from, to)),\r\n    reCalcBpm: (track, playlist) => dispatch(startCalcBpm(track, playlist)),\r\n    resetList: (list) => dispatch(resetCurrentPlaylistContent(list)),\r\n    updateTracksPositions : (tracksPositions) => dispatch(updateTrackPositionRequest(tracksPositions))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayList);"]},"metadata":{},"sourceType":"module"}