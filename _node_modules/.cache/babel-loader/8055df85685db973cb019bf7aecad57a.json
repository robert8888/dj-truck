{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordDetails\\\\RecordDetails.js\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { reqUpdateRec, reqDeleteRec, setRecDeleteStatus } from \"./../../../../actions\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Fontawesome from '@fortawesome/react-fontawesome';\nimport \"./record-details.scss\";\n\nconst RecordDetails = ({\n  record,\n  userId,\n  requestUpdate,\n  requestDelete,\n  deleteStatus,\n  resetDeleteStatus\n}) => {\n  const getDownloadLink = useMemo(() => getApi('RecordsStore').getDownloadLink, [getApi]);\n  const history = useHistory();\n  const [editMode, setEditMode] = useState(false);\n  const [editable, setEditable] = useState(false);\n  const [userNickname, setUserNickname] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [generes, setGeneres] = useState([]);\n  const descriptionTextArea = useRef();\n  const setFromRecord = useCallback(record => {\n    if (record.user.id === userId) {\n      setEditable(true);\n    }\n\n    setUserNickname(record.user.nickname || \"\");\n    setTitle(record.title || \"\");\n    setDescription(record.description || \"\");\n    setGeneres(record.generes.map(genere => genere.name).join(\", \") || []);\n  }, [userId, setEditable, setTitle, setDescription, setGeneres, setUserNickname]);\n  useEffect(() => {\n    if (!record) return;\n    setFromRecord(record);\n  }, [record, setFromRecord]);\n  const toggleMode = useCallback(() => {\n    const mode = !editMode;\n    setEditMode(mode);\n\n    if (!mode) {\n      setFromRecord(record);\n    }\n  }, [record, editMode, setEditMode]);\n  const updateTitle = useCallback(event => {\n    if (event.target.value.indexOf(\"_\") !== -1) {\n      event.target.setCustomValidity(`Using underscore in sets name is \n                not allowed. You can use eg \"-\". Pleas change name of your record`);\n    } else {\n      event.target.setCustomValidity('');\n    }\n\n    setTitle(event.target.value);\n  }, [setTitle]);\n  const updateDescription = useCallback(event => {\n    setDescription(event.target.value);\n  }, [setDescription]);\n  const updateGeneres = useCallback(event => {\n    setGeneres(event.target.value);\n  }, [setGeneres]);\n  const updateRecordDetails = useCallback(event => {\n    event.preventDefault();\n    const title = event.target.elements.title.value;\n    const description = event.target.elements.description.value;\n    const generes = event.target.elements.generes.value || \"\";\n    const generesArr = generes.split(\",\").filter(str => str !== \"\").map(str => str.trim().toLowerCase());\n    requestUpdate(record.id, {\n      title,\n      description,\n      generes: generesArr\n    });\n    setEditMode(false);\n  }, [record, setEditMode, requestUpdate]); //ajust text areaf size \n\n  useEffect(() => {\n    const el = descriptionTextArea.current;\n    el.style.height = 0;\n    el.style.height = el.scrollHeight + 10 + \"px\";\n  }, [description, descriptionTextArea]);\n  const deleteCurrent = useCallback(() => {\n    requestDelete(record.id);\n  }, [record, requestDelete]);\n  useEffect(() => {\n    if (deleteStatus === \"SUCCESS\") {\n      history.goBack();\n      resetDeleteStatus();\n    }\n  }, [deleteStatus, resetDeleteStatus]); // {record?.user?.id === userId && userId && \n  //     <a className=\"download-link\" href={getDownloadLink(record?.id, record?.title)} download=\"w3logo555\">\n  //         Download\n  //     </a>}\n\n  return React.createElement(Form, {\n    className: \"record-details\",\n    onSubmit: updateRecordDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"record-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"User: \"), React.createElement(Form.Control, {\n    name: \"user\",\n    type: \"text\",\n    value: userNickname,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), editable && React.createElement(Form.Check, {\n    type: \"switch\",\n    id: \"switch-edit-mode\",\n    label: \"edit\",\n    className: \"switch-edit-mode\",\n    value: editMode,\n    onChange: toggleMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    className: \"record-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Title: \"), React.createElement(Form.Control, {\n    name: \"title\",\n    type: \"text\",\n    value: title,\n    onChange: updateTitle,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"record-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Description: \"), React.createElement(Form.Control, {\n    name: \"description\",\n    as: \"textarea\",\n    ref: descriptionTextArea,\n    value: description,\n    onChange: updateDescription,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"genere-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Generes: \"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"generes\",\n    value: generes,\n    onChange: updateGeneres,\n    pattern: \"^(?:[A-Za-z&]{1,25}(?:,\\\\s*)?)+$\",\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), editMode && React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \" Save \"), editMode && React.createElement(Button, {\n    className: \"delete-record-btn\",\n    onClick: deleteCurrent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Delete record\"));\n};\n\nconst mapStateToProps = state => ({\n  userId: state.user.dbId,\n  deleteStatus: state.records.deleteStatus\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestUpdate: (recordId, dataChanges) => dispatch(reqUpdateRec(recordId, dataChanges)),\n  requestDelete: recordId => dispatch(reqDeleteRec(recordId)),\n  resetDeleteStatus: () => dispatch(setRecDeleteStatus(\"IDLE\"))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordDetails);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordDetails/RecordDetails.js"],"names":["React","useState","useEffect","useCallback","useRef","reqUpdateRec","reqDeleteRec","setRecDeleteStatus","connect","useHistory","Form","Button","Fontawesome","RecordDetails","record","userId","requestUpdate","requestDelete","deleteStatus","resetDeleteStatus","getDownloadLink","useMemo","getApi","history","editMode","setEditMode","editable","setEditable","userNickname","setUserNickname","title","setTitle","description","setDescription","generes","setGeneres","descriptionTextArea","setFromRecord","user","id","nickname","map","genere","name","join","toggleMode","mode","updateTitle","event","target","value","indexOf","setCustomValidity","updateDescription","updateGeneres","updateRecordDetails","preventDefault","elements","generesArr","split","filter","str","trim","toLowerCase","el","current","style","height","scrollHeight","deleteCurrent","goBack","mapStateToProps","state","dbId","records","mapDispatchToProps","dispatch","recordId","dataChanges"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { reqUpdateRec, reqDeleteRec, setRecDeleteStatus } from \"./../../../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Fontawesome from '@fortawesome/react-fontawesome'\r\nimport \"./record-details.scss\";\r\n\r\nconst RecordDetails = ({ record, userId, requestUpdate, requestDelete, deleteStatus, resetDeleteStatus }) => {\r\n    const getDownloadLink = useMemo(()=>getApi('RecordsStore').getDownloadLink,[getApi])\r\n    const history = useHistory();\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editable, setEditable] = useState(false);\r\n\r\n    const [userNickname, setUserNickname] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [generes, setGeneres] = useState([]);\r\n\r\n    const descriptionTextArea = useRef();\r\n\r\n\r\n    const setFromRecord = useCallback((record) => {\r\n        if (record.user.id === userId) {\r\n            setEditable(true);\r\n        }\r\n        setUserNickname(record.user.nickname || \"\");\r\n        setTitle(record.title || \"\")\r\n        setDescription(record.description || \"\")\r\n        setGeneres(record.generes.map(genere => genere.name).join(\", \") || []);\r\n    }, [userId,\r\n        setEditable,\r\n        setTitle,\r\n        setDescription,\r\n        setGeneres,\r\n        setUserNickname])\r\n\r\n    useEffect(() => {\r\n        if (!record) return;\r\n        setFromRecord(record)\r\n    }, [record, setFromRecord])\r\n\r\n\r\n    const toggleMode = useCallback(() => {\r\n        const mode = !editMode;\r\n        setEditMode(mode)\r\n        if (!mode) {\r\n            setFromRecord(record)\r\n        }\r\n\r\n    }, [record, editMode, setEditMode])\r\n\r\n    const updateTitle = useCallback((event) => {\r\n        if (event.target.value.indexOf(\"_\") !== -1) {\r\n            event.target.setCustomValidity(`Using underscore in sets name is \r\n                not allowed. You can use eg \"-\". Pleas change name of your record`)\r\n        } else {\r\n            event.target.setCustomValidity('')\r\n        }\r\n        setTitle(event.target.value);\r\n    }, [setTitle])\r\n\r\n    const updateDescription = useCallback(event => {\r\n\r\n        setDescription(event.target.value)\r\n    }, [setDescription])\r\n\r\n\r\n    const updateGeneres = useCallback(event => {\r\n        setGeneres(event.target.value)\r\n    }, [setGeneres])\r\n\r\n    const updateRecordDetails = useCallback(event => {\r\n        event.preventDefault();\r\n        const title = event.target.elements.title.value;\r\n        const description = event.target.elements.description.value;\r\n        const generes = event.target.elements.generes.value || \"\";\r\n        const generesArr = generes.split(\",\").filter(str => str !== \"\").map(str => str.trim().toLowerCase());\r\n        requestUpdate(record.id, {\r\n            title,\r\n            description,\r\n            generes: generesArr\r\n        })\r\n        setEditMode(false)\r\n    }, [record, setEditMode, requestUpdate])\r\n\r\n    //ajust text areaf size \r\n    useEffect(() => {\r\n        const el = descriptionTextArea.current;\r\n        el.style.height = 0;\r\n        el.style.height = el.scrollHeight + 10 + \"px\";\r\n    }, [description, descriptionTextArea])\r\n\r\n    const deleteCurrent = useCallback(() => {\r\n        requestDelete(record.id);\r\n    }, [record, requestDelete])\r\n\r\n    useEffect(() => {\r\n        if (deleteStatus === \"SUCCESS\") {\r\n            history.goBack();\r\n            resetDeleteStatus();\r\n        }\r\n    }, [deleteStatus, resetDeleteStatus])\r\n\r\n    // {record?.user?.id === userId && userId && \r\n    //     <a className=\"download-link\" href={getDownloadLink(record?.id, record?.title)} download=\"w3logo555\">\r\n    //         Download\r\n    //     </a>}\r\n\r\n    return (\r\n        <Form className=\"record-details\" onSubmit={updateRecordDetails}>\r\n            <Form.Group className=\"record-title\">\r\n                <Form.Label>User: </Form.Label>\r\n                <Form.Control name=\"user\" type=\"text\" value={userNickname} disabled />\r\n            </Form.Group>\r\n            {editable && <Form.Check\r\n                type=\"switch\"\r\n                id=\"switch-edit-mode\"\r\n                label=\"edit\"\r\n                className=\"switch-edit-mode\"\r\n                value={editMode}\r\n                onChange={toggleMode} />}\r\n            <Form.Group className=\"record-title\">\r\n                <Form.Label>Title: </Form.Label>\r\n                <Form.Control\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={updateTitle}\r\n                    disabled={!editMode} />\r\n            </Form.Group>\r\n            <Form.Group className=\"record-description\">\r\n                <Form.Label>Description: </Form.Label>\r\n                <Form.Control\r\n                    name=\"description\"\r\n                    as=\"textarea\"\r\n                    ref={descriptionTextArea}\r\n                    value={description}\r\n                    onChange={updateDescription}\r\n                    disabled={!editMode} />\r\n            </Form.Group>\r\n            <Form.Group className=\"genere-list\">\r\n                <Form.Label>Generes: </Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    name=\"generes\"\r\n                    value={generes}\r\n                    onChange={updateGeneres}\r\n                    pattern=\"^(?:[A-Za-z&]{1,25}(?:,\\s*)?)+$\"\r\n                    disabled={!editMode} />\r\n            </Form.Group>\r\n            {editMode && <Button type=\"submit\"> Save </Button>}\r\n            {editMode && <Button\r\n                                className=\"delete-record-btn\"\r\n                                onClick={deleteCurrent}>\r\n                                     Delete record\r\n                         </Button>\r\n            }\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.user.dbId,\r\n    deleteStatus: state.records.deleteStatus,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestUpdate: (recordId, dataChanges) => dispatch(reqUpdateRec(recordId, dataChanges)),\r\n    requestDelete: (recordId) => dispatch(reqDeleteRec(recordId)),\r\n    resetDeleteStatus: () => dispatch(setRecDeleteStatus(\"IDLE\")),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordDetails)"]},"metadata":{},"sourceType":"module"}