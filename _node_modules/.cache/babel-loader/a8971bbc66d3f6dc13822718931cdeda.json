{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Search\\\\Search.js\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { FormControl, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport SearchList from './SerachList/SearchList.js';\nimport { searchInput, clearSearch, searchStart } from \"../../../../actions\";\nimport \"./search.scss\";\n\nconst Search = props => {\n  const [listOpen, setListOpen] = useState(false);\n  const [sourtce, setSource] = useState(null);\n\n  const openList = () => setListOpen(true);\n\n  const selectedHandel = () => {\n    props.clearSearchHandler();\n    setListOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    className: \"btn-effect-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" Youtube\")), React.createElement(FormControl, {\n    className: \"search-control\",\n    type: \"text\",\n    placeholder: \"Tap in to serach on youtube\",\n    onChange: event => props.searchInputHandler(event.target.value),\n    onKeyPress: event => {\n      if (event.key === \"Enter\") {\n        props.searchStartHandler(props.searchString);\n      }\n    },\n    onFocus: openList,\n    value: props.searchString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(SearchList, {\n    open: listOpen,\n    selectedHandle: selectedHandel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  searchString: state.searchReducer.searchString\n});\n\nconst mapDispachToProps = dispatch => ({\n  searchInputHandler: text => dispatch(searchInput(text)),\n  searchStartHandler: text => dispatch(searchStart(text)),\n  clearSearchHandler: () => dispatch(clearSearch())\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Search);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Search/Search.js"],"names":["React","useState","connect","FormControl","DropdownButton","Dropdown","SearchList","searchInput","clearSearch","searchStart","Search","props","listOpen","setListOpen","sourtce","setSource","openList","selectedHandel","clearSearchHandler","event","searchInputHandler","target","value","key","searchStartHandler","searchString","mapStateToProps","state","searchReducer","mapDispachToProps","dispatch","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,EAAuBC,cAAvB,EAAuCC,QAAvC,QAAuD,iBAAvD;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAGA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,WAAnC,QAAqD,qBAArD;AAEA,OAAO,eAAP;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,OAAD,EAAUC,SAAV,IAAuBd,QAAQ,CAAC,IAAD,CAArC;;AAEA,QAAMe,QAAQ,GAAG,MAAMH,WAAW,CAAE,IAAF,CAAlC;;AAEA,QAAMI,cAAc,GAAG,MAAM;AACzBN,IAAAA,KAAK,CAACO,kBAAN;AACAL,IAAAA,WAAW,CAAE,KAAF,CAAX;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,cAAD;AAAiB,IAAA,SAAS,EAAC,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,EAII,oBAAC,WAAD;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,6BAHhB;AAII,IAAA,QAAQ,EAAGM,KAAK,IAAIR,KAAK,CAACS,kBAAN,CAAyBD,KAAK,CAACE,MAAN,CAAaC,KAAtC,CAJxB;AAKI,IAAA,UAAU,EAAKH,KAAK,IAAI;AAAE,UAAGA,KAAK,CAACI,GAAN,KAAc,OAAjB,EAA0B;AAAEZ,QAAAA,KAAK,CAACa,kBAAN,CAAyBb,KAAK,CAACc,YAA/B;AAA6C;AAAC,KALxG;AAMI,IAAA,OAAO,EAAGT,QANd;AAOI,IAAA,KAAK,EAAGL,KAAK,CAACc,YAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAeG,oBAAC,UAAD;AACK,IAAA,IAAI,EAAGb,QADZ;AAEK,IAAA,cAAc,EAAGK,cAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfH,CADJ;AAqBH,CAhCD;;AAkCA,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,YAAY,EAAGE,KAAK,CAACC,aAAN,CAAoBH;AADL,CAAL,CAA7B;;AAIA,MAAMI,iBAAiB,GAAIC,QAAQ,KAAK;AACpCV,EAAAA,kBAAkB,EAAIW,IAAD,IAAUD,QAAQ,CAACvB,WAAW,CAACwB,IAAD,CAAZ,CADH;AAEpCP,EAAAA,kBAAkB,EAAIO,IAAD,IAAUD,QAAQ,CAACrB,WAAW,CAACsB,IAAD,CAAZ,CAFH;AAGpCb,EAAAA,kBAAkB,EAAG,MAAMY,QAAQ,CAACtB,WAAW,EAAZ;AAHC,CAAL,CAAnC;;AAMA,eAAeN,OAAO,CAACwB,eAAD,EAAkBG,iBAAlB,CAAP,CAA4CnB,MAA5C,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { FormControl , DropdownButton, Dropdown } from \"react-bootstrap\"\r\nimport SearchList from './SerachList/SearchList.js';\r\n\r\n\r\nimport { searchInput, clearSearch, searchStart} from \"../../../../actions\";\r\n\r\nimport \"./search.scss\";\r\n\r\n\r\nconst Search = props => {\r\n    const [listOpen, setListOpen] = useState(false);\r\n    const [sourtce, setSource] = useState(null);\r\n\r\n    const openList = () => setListOpen( true );\r\n\r\n    const selectedHandel = () => {\r\n        props.clearSearchHandler();\r\n        setListOpen( false );\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"search-controls\">\r\n                 <DropdownButton  className=\"btn-effect-select\">\r\n                    <Dropdown.Item selected > Youtube</Dropdown.Item>\r\n                </DropdownButton>\r\n                <FormControl \r\n                    className=\"search-control\"\r\n                    type=\"text\" \r\n                    placeholder=\"Tap in to serach on youtube\"\r\n                    onChange={ event => props.searchInputHandler(event.target.value) }\r\n                    onKeyPress = { event => { if(event.key === \"Enter\") { props.searchStartHandler(props.searchString)}} }\r\n                    onFocus={ openList }\r\n                    value={ props.searchString }/>\r\n            </div>\r\n\r\n           <SearchList \r\n                open={ listOpen }\r\n                selectedHandle={ selectedHandel }/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    searchString : state.searchReducer.searchString\r\n})\r\n\r\nconst mapDispachToProps =  dispatch => ({\r\n    searchInputHandler : (text) => dispatch(searchInput(text)),\r\n    searchStartHandler : (text) => dispatch(searchStart(text)),\r\n    clearSearchHandler : () => dispatch(clearSearch()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Search);"]},"metadata":{},"sourceType":"module"}