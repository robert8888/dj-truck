{"ast":null,"code":"import { ACTIONS } from \"./../../../actions\";\nexport const STATES = {\n  INIT: \"Recording procecess initited\",\n  RECORDING: \"Recording porcess runing\",\n  FAIL: \"Initiating process fail\",\n  IDLE: \"Recordign process is finished or not started\"\n};\nconst initState = {\n  // recordingInitiated : false,\n  // recording : false,\n  recName: \"\",\n  recId: null,\n  recordingState: STATES.INIT\n};\nexport default function headerState(state = initState, action) {\n  // console.log(state.recording);\n  switch (action.type) {\n    case ACTIONS.R_START_RECORDING:\n      {\n        return { ...state,\n          //recordingInitiated: true,\n          recordingState: STATES.INIT,\n          recName: action.recName,\n          recId: action.id\n        };\n      }\n\n    case ACTIONS.R_END_RECORDING:\n      {\n        return { ...state,\n          //recording: false,\n          //recordingInitiated: false,\n          recordingState: STATES.IDLE,\n          recName: \"\"\n        };\n      }\n\n    case ACTIONS.R_RECORDING:\n      {\n        return { ...state,\n          //recording: true,\n          recordingState: STATES.RECORDING\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/reducers/console/recorder/recorderReducer.js"],"names":["ACTIONS","STATES","INIT","RECORDING","FAIL","IDLE","initState","recName","recId","recordingState","headerState","state","action","type","R_START_RECORDING","id","R_END_RECORDING","R_RECORDING"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,IAAI,EAAG,8BADW;AAElBC,EAAAA,SAAS,EAAG,0BAFM;AAGlBC,EAAAA,IAAI,EAAG,yBAHW;AAIlBC,EAAAA,IAAI,EAAE;AAJY,CAAf;AAOP,MAAMC,SAAS,GAAG;AACf;AACA;AACCC,EAAAA,OAAO,EAAE,EAHK;AAIdC,EAAAA,KAAK,EAAE,IAJO;AAKdC,EAAAA,cAAc,EAAER,MAAM,CAACC;AALT,CAAlB;AAQA,eAAe,SAASQ,WAAT,CAAqBC,KAAK,GAAGL,SAA7B,EAAwCM,MAAxC,EAAgD;AAC5D;AACC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,OAAO,CAACc,iBAAb;AAAiC;AAC7B,eAAO,EACH,GAAGH,KADA;AAEH;AACAF,UAAAA,cAAc,EAAER,MAAM,CAACC,IAHpB;AAIHK,UAAAA,OAAO,EAAEK,MAAM,CAACL,OAJb;AAKHC,UAAAA,KAAK,EAAEI,MAAM,CAACG;AALX,SAAP;AAOH;;AAED,SAAKf,OAAO,CAACgB,eAAb;AAA8B;AAC1B,eAAO,EACH,GAAGL,KADA;AAEH;AACA;AACAF,UAAAA,cAAc,EAAER,MAAM,CAACI,IAJpB;AAKHE,UAAAA,OAAO,EAAE;AALN,SAAP;AAOH;;AAED,SAAKP,OAAO,CAACiB,WAAb;AAA0B;AACtB,eAAO,EACH,GAAGN,KADA;AAEH;AACAF,UAAAA,cAAc,EAAER,MAAM,CAACE;AAHpB,SAAP;AAKH;;AAED;AAAS,aAAOQ,KAAP;AA7Bb;AA+BH","sourcesContent":["import { ACTIONS } from \"./../../../actions\";\r\n\r\nexport const STATES = {\r\n    INIT : \"Recording procecess initited\",\r\n    RECORDING : \"Recording porcess runing\",\r\n    FAIL : \"Initiating process fail\",\r\n    IDLE: \"Recordign process is finished or not started\"\r\n}\r\n\r\nconst initState = {\r\n   // recordingInitiated : false,\r\n   // recording : false,\r\n    recName: \"\",\r\n    recId: null,\r\n    recordingState: STATES.INIT,\r\n}\r\n\r\nexport default function headerState(state = initState, action) {\r\n   // console.log(state.recording);\r\n    switch (action.type) {\r\n        case ACTIONS.R_START_RECORDING : {\r\n            return {\r\n                ...state,\r\n                //recordingInitiated: true,\r\n                recordingState: STATES.INIT,\r\n                recName: action.recName,\r\n                recId: action.id\r\n            }\r\n        }\r\n\r\n        case ACTIONS.R_END_RECORDING: {\r\n            return {\r\n                ...state,\r\n                //recording: false,\r\n                //recordingInitiated: false,\r\n                recordingState: STATES.IDLE,\r\n                recName: \"\"\r\n            }\r\n        }\r\n\r\n        case ACTIONS.R_RECORDING: {\r\n            return {\r\n                ...state,\r\n                //recording: true,\r\n                recordingState: STATES.RECORDING,\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}