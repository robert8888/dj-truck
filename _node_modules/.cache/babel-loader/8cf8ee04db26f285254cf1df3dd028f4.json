{"ast":null,"code":"import { select, takeEvery } from 'redux-saga/effects';\nimport { ACTIONS } from \"../../actions\";\nimport { getApi } from \"./../../apis/apiProvider\";\nexport default function* watcher() {\n  yield takeEvery(ACTIONS.U_REQ_UPDATE_NICKNAME, handel);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* handel(action) {\n  const token = yield select(getToken);\n\n  try {\n    const {\n      callQuery,\n      queries\n    } = getApi(\"UserAssets\");\n    const query = queries.updateNicknameQl;\n    const result = callQuery(query, token, {\n      nickname: action.nickname\n    });\n\n    if (!result.errors) {//  yield put(setRecData(recordData))\n    } else {\n      throw new Error(\"Can't load record data from database\");\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/user/reqUpdateNickname.js"],"names":["select","takeEvery","ACTIONS","getApi","watcher","U_REQ_UPDATE_NICKNAME","handel","getToken","state","user","token","action","callQuery","queries","query","updateNicknameQl","result","nickname","errors","Error","e","console","log","message"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAGA,eAAe,UAAUC,OAAV,GAAoB;AAC/B,QAAMH,SAAS,CAACC,OAAO,CAACG,qBAAT,EAAgCC,MAAhC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUJ,MAAV,CAAiBK,MAAjB,EAAyB;AACrB,QAAMD,KAAK,GAAG,MAAMV,MAAM,CAACO,QAAD,CAA1B;;AAEA,MAAI;AACA,UAAM;AAAEK,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBV,MAAM,CAAC,YAAD,CAArC;AAEA,UAAMW,KAAK,GAAGD,OAAO,CAACE,gBAAtB;AAEA,UAAMC,MAAM,GAAGJ,SAAS,CAACE,KAAD,EAAQJ,KAAR,EAAe;AAACO,MAAAA,QAAQ,EAAEN,MAAM,CAACM;AAAlB,KAAf,CAAxB;;AACA,QAAI,CAACD,MAAM,CAACE,MAAZ,EAAqB,CACrB;AACC,KAFD,MAEO;AACH,YAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;AACJ,GAXD,CAWE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;AACJ","sourcesContent":["import { select, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n\r\n\r\nexport default function* watcher() {\r\n    yield takeEvery(ACTIONS.U_REQ_UPDATE_NICKNAME, handel);\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n\r\n        const query = queries.updateNicknameQl;\r\n\r\n        const result = callQuery(query, token, {nickname: action.nickname});\r\n        if (!result.errors ) {\r\n        //  yield put(setRecData(recordData))\r\n        } else {\r\n            throw new Error(\"Can't load record data from database\")\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}