{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\Router\\\\PrivateRedirectWithUser.js\";\nimport React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth0 } from \"./../auth0/react-auth0-spa\";\n\nconst RedirectWithUser = ({\n  component: Component,\n  path,\n  userId,\n  nickname,\n  ...rest\n}) => {\n  const {\n    loading,\n    isAuthenticated,\n    loginWithRedirect\n  } = useAuth0();\n  const redirect = useCallback(async () => {\n    if (loading) {\n      return;\n    }\n\n    await loginWithRedirect({\n      appState: {\n        targetUrl: window.location.pathname\n      }\n    });\n  }, [loading, loginWithRedirect]);\n\n  const render = props => {\n    if (isAuthenticated) {\n      return React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    } else {\n      redirect();\n    }\n  };\n\n  return React.createElement(Redirect, Object.assign({\n    path: path,\n    render: render\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  nickname: state.user.nicnkname,\n  userId: state.user.dbID\n});\n\nexport default connect(mapStateToProps)(RedirectWithUser);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/Router/PrivateRedirectWithUser.js"],"names":["React","useCallback","connect","Route","Redirect","useAuth0","RedirectWithUser","component","Component","path","userId","nickname","rest","loading","isAuthenticated","loginWithRedirect","redirect","appState","targetUrl","window","location","pathname","render","props","mapStateToProps","state","user","nicnkname","dbID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,4BAAzB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA,QAAtC;AAAgD,KAAGC;AAAnD,CAAD,KAA8D;AACnF,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAkDV,QAAQ,EAAhE;AAGA,QAAMW,QAAQ,GAAGf,WAAW,CAAC,YAAY;AACrC,QAAIY,OAAJ,EAAa;AACT;AACH;;AAED,UAAME,iBAAiB,CAAC;AACpBE,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,SAAS,EAAEC,MAAM,CAACC,QAAP,CAAgBC;AAA7B;AADU,KAAD,CAAvB;AAGH,GAR2B,EAQzB,CAACR,OAAD,EAAUE,iBAAV,CARyB,CAA5B;;AAUA,QAAMO,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAIT,eAAJ,EAAqB;AACjB,aAAO,oBAAC,SAAD,oBAAeS,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KAFD,MAEO;AACHP,MAAAA,QAAQ;AACX;AACJ,GAND;;AAQA,SAAO,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEP,IAAhB;AAAsB,IAAA,MAAM,EAAEa;AAA9B,KAA0CV,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAvBD;;AAyBA,MAAMY,eAAe,GAAGC,KAAK,KAAI;AAC7Bd,EAAAA,QAAQ,EAAGc,KAAK,CAACC,IAAN,CAAWC,SADO;AAE7BjB,EAAAA,MAAM,EAAGe,KAAK,CAACC,IAAN,CAAWE;AAFS,CAAJ,CAA7B;;AAKA,eAAe1B,OAAO,CAACsB,eAAD,CAAP,CAAyBlB,gBAAzB,CAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth0 } from \"./../auth0/react-auth0-spa\";\r\n\r\nconst RedirectWithUser = ({ component: Component, path, userId, nickname, ...rest}) => {\r\n    const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n\r\n    const redirect = useCallback(async () => {\r\n        if (loading) {\r\n            return;\r\n        }\r\n\r\n        await loginWithRedirect({\r\n            appState: { targetUrl: window.location.pathname }\r\n        });\r\n    }, [loading, loginWithRedirect])\r\n\r\n    const render = props => {\r\n        if (isAuthenticated) {\r\n            return <Component {...props} />\r\n        } else {\r\n            redirect();\r\n        }\r\n    }\r\n\r\n    return <Redirect path={path} render={render} {...rest} />;\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    nickname : state.user.nicnkname,\r\n    userId : state.user.dbID,\r\n})\r\n\r\nexport default connect(mapStateToProps)(RedirectWithUser);"]},"metadata":{},"sourceType":"module"}