{"ast":null,"code":"import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useMemo,useCallback}from\"react\";import BinaryButton from\"./../../BinnaryButton/BinnaryButton\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import classNames from\"classnames\";import\"./playback-button.scss\";import usePlaybackState,{PLAYBACK_STATE}from\"./../../../Hooks/usePlabackState\";var PlaybackButton=function PlaybackButton(_ref){var playback=_ref.playback,id=_ref.id,player=_ref.player;var onChange=useCallback(function(state){if(playback){playback(id,state);}},[playback,id]);var _usePlaybackState=usePlaybackState(onChange),_usePlaybackState2=_slicedToArray(_usePlaybackState,4),state=_usePlaybackState2[0],icon=_usePlaybackState2[1],toggleHandler=_usePlaybackState2[2],setState=_usePlaybackState2[3];useEffect(function(){if(!player){return;}player.addBtnCtrlHandler(id,function(s){return setState(s);});if(player.getCurrent().id===id){setState(player.getCurrent().state);}return function(){player.removeBtnCtrlHandler(id);};},[player,id,setState]);var btnClassNames=useMemo(function(){return classNames(\"playback-button\",{\"playback-button--active\":state===PLAYBACK_STATE.PLAY});},[state]);return React.createElement(\"div\",{className:\"playback-button-container\"},React.createElement(BinaryButton,{className:btnClassNames,onChange:toggleHandler},React.createElement(FontAwesomeIcon,{icon:icon})));};export default PlaybackButton;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Record/PlaybackButton/PlaybackButton.js"],"names":["React","useEffect","useMemo","useCallback","BinaryButton","FontAwesomeIcon","classNames","usePlaybackState","PLAYBACK_STATE","PlaybackButton","playback","id","player","onChange","state","icon","toggleHandler","setState","addBtnCtrlHandler","s","getCurrent","removeBtnCtrlHandler","btnClassNames","PLAY"],"mappings":"kHAAA,MAAOA,CAAAA,KAAP,EAAiBC,SAAjB,CAA4BC,OAA5B,CAAqCC,WAArC,KAAwD,OAAxD,CACA,MAAOC,CAAAA,YAAP,KAAyB,qCAAzB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAO,wBAAP,CACA,MAAOC,CAAAA,gBAAP,EAA0BC,cAA1B,KAA+C,kCAA/C,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA4B,IAA1BC,CAAAA,QAA0B,MAA1BA,QAA0B,CAAhBC,EAAgB,MAAhBA,EAAgB,CAAZC,MAAY,MAAZA,MAAY,CAC/C,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,CAAC,SAACW,KAAD,CAAU,CACnC,GAAGJ,QAAH,CAAY,CACRA,QAAQ,CAACC,EAAD,CAAMG,KAAN,CAAR,CACH,CACJ,CAJ2B,CAIzB,CAACJ,QAAD,CAAWC,EAAX,CAJyB,CAA5B,CAD+C,sBAOAJ,gBAAgB,CAACM,QAAD,CAPhB,wDAOxCC,KAPwC,uBAOjCC,IAPiC,uBAO3BC,aAP2B,uBAOZC,QAPY,uBAS/ChB,SAAS,CAAC,UAAI,CACV,GAAG,CAACW,MAAJ,CAAW,CACP,OACH,CACDA,MAAM,CAACM,iBAAP,CAAyBP,EAAzB,CAA6B,SAACQ,CAAD,QAAOF,CAAAA,QAAQ,CAACE,CAAD,CAAf,EAA7B,EACA,GAAGP,MAAM,CAACQ,UAAP,GAAoBT,EAApB,GAA2BA,EAA9B,CAAiC,CAC7BM,QAAQ,CAACL,MAAM,CAACQ,UAAP,GAAoBN,KAArB,CAAR,CACH,CACD,MAAO,WAAM,CACTF,MAAM,CAACS,oBAAP,CAA4BV,EAA5B,EACH,CAFD,CAGH,CAXQ,CAWN,CAACC,MAAD,CAASD,EAAT,CAAaM,QAAb,CAXM,CAAT,CAaA,GAAMK,CAAAA,aAAa,CAAGpB,OAAO,CAAC,UAAI,CAC9B,MAAOI,CAAAA,UAAU,CACb,iBADa,CAEb,CACI,0BAA4BQ,KAAK,GAAKN,cAAc,CAACe,IADzD,CAFa,CAAjB,CAMH,CAP4B,CAO1B,CAACT,KAAD,CAP0B,CAA7B,CAUA,MACI,4BAAK,SAAS,CAAC,2BAAf,EACI,oBAAC,YAAD,EAAc,SAAS,CAAEQ,aAAzB,CAAwC,QAAQ,CAAEN,aAAlD,EACI,oBAAC,eAAD,EAAiB,IAAI,CAAED,IAAvB,EADJ,CADJ,CADJ,CAOH,CAvCD,CAyCA,cAAeN,CAAAA,cAAf","sourcesContent":["import React , { useEffect, useMemo, useCallback } from \"react\";\r\nimport BinaryButton from \"./../../BinnaryButton/BinnaryButton\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport classNames from \"classnames\"\r\nimport \"./playback-button.scss\"\r\nimport usePlaybackState, {PLAYBACK_STATE} from \"./../../../Hooks/usePlabackState\";\r\n\r\nconst PlaybackButton = ({playback, id, player}) => {\r\n    const onChange = useCallback((state)=> {\r\n        if(playback){\r\n            playback(id , state);\r\n        }\r\n    }, [playback, id])\r\n\r\n    const [state, icon, toggleHandler, setState] = usePlaybackState(onChange);\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.addBtnCtrlHandler(id, (s) => setState(s))\r\n        if(player.getCurrent().id === id){\r\n            setState(player.getCurrent().state);\r\n        }\r\n        return () => {\r\n            player.removeBtnCtrlHandler(id);\r\n        }\r\n    }, [player, id, setState])\r\n\r\n    const btnClassNames = useMemo(()=>{\r\n        return classNames(\r\n            \"playback-button\",\r\n            {\r\n                \"playback-button--active\": (state === PLAYBACK_STATE.PLAY)\r\n            }\r\n        )\r\n    }, [state])\r\n\r\n\r\n    return (\r\n        <div className=\"playback-button-container\">\r\n            <BinaryButton className={btnClassNames} onChange={toggleHandler}>\r\n                <FontAwesomeIcon icon={icon}/>\r\n            </BinaryButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaybackButton"]},"metadata":{},"sourceType":"module"}