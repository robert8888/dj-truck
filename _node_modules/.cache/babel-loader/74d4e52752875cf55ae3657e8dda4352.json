{"ast":null,"code":"import React from\"react\";import Knob from\"./../../../common/Knob/Knob\";import\"./eq-knob.scss\";var EqKnob=function EqKnob(props){var toDbValue=function toDbValue(value){var dB=20*Math.log10(Math.abs(value));dB=value<0?-1*dB:dB;return Math.floor(dB*100)/100;};return React.createElement(Knob,{className:\"eq-knob \"+props.className,showValue:true,unsymetric:{positive:5},scale:50,alt:props.alt// displayFormula={ toDbValue }\n,quantize:{negative:1,positive:0.1},onChange:props.onChange});};export default EqKnob;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Mixer/Channel/EqKnob/EqKnob.js"],"names":["React","Knob","EqKnob","props","toDbValue","value","dB","Math","log10","abs","floor","className","positive","alt","negative","onChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,6BAAjB,CACA,MAAO,gBAAP,CAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,CAAG,CACnB,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,GAAIC,CAAAA,EAAE,CAAG,GAAKC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASJ,KAAT,CAAX,CAAd,CACAC,EAAE,CAAID,KAAK,CAAG,CAAT,CAAe,CAAC,CAAD,CAAKC,EAApB,CAAyBA,EAA9B,CACA,MAAOC,CAAAA,IAAI,CAACG,KAAL,CAAWJ,EAAE,CAAG,GAAhB,EAAuB,GAA9B,CACH,CAJD,CAMA,MACI,qBAAC,IAAD,EAAM,SAAS,CAAE,WAAaH,KAAK,CAACQ,SAApC,CACI,SAAS,KADb,CAEI,UAAU,CAAE,CAACC,QAAQ,CAAC,CAAV,CAFhB,CAGI,KAAK,CAAE,EAHX,CAII,GAAG,CAAET,KAAK,CAACU,GACZ;AALH,CAMI,QAAQ,CAAE,CAACC,QAAQ,CAAE,CAAX,CAAcF,QAAQ,CAAC,GAAvB,CANd,CAOI,QAAQ,CAAGT,KAAK,CAACY,QAPrB,EADJ,CAUH,CAjBD,CAmBA,cAAeb,CAAAA,MAAf","sourcesContent":["import React from \"react\";\r\nimport Knob from \"./../../../common/Knob/Knob\"\r\nimport \"./eq-knob.scss\";\r\n\r\n\r\nconst EqKnob = props =>{\r\n    const toDbValue = (value) => {\r\n        let dB = 20 * Math.log10(Math.abs(value));\r\n        dB = (value < 0 ) ? -1 * dB : dB;\r\n        return Math.floor(dB * 100) / 100;\r\n    }\r\n\r\n    return (\r\n        <Knob className={\"eq-knob \" + props.className} \r\n            showValue \r\n            unsymetric={{positive:5}} \r\n            scale={50} \r\n            alt={props.alt}\r\n           // displayFormula={ toDbValue }\r\n            quantize={{negative: 1, positive:0.1}} \r\n            onChange={ props.onChange }/>\r\n    )\r\n}\r\n\r\nexport default EqKnob;"]},"metadata":{},"sourceType":"module"}