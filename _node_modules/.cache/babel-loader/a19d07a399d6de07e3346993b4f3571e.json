{"ast":null,"code":"import STATUS from \"./../STATUS\";\nexport default function mixerChannelFitlerChange(prev, current) {\n  prev = prev.mixer;\n  current = current.mixer;\n  let response = null;\n\n  for (let channelName of Object.keys(prev.channels)) {\n    const prevValue = prev.channels[channelName].filter;\n    const currentValue = current.channels[channelName].filter;\n\n    if (prevValue !== currentValue) {\n      response = response || [];\n      response.push({\n        status: STATUS.FILTER_CHANGE,\n        channel: channelName,\n        prevValue: prevValue,\n        currentValue: currentValue\n      });\n    }\n  }\n\n  return response;\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/core/console/observer/comparators/filter.js"],"names":["STATUS","mixerChannelFitlerChange","prev","current","mixer","response","channelName","Object","keys","channels","prevValue","filter","currentValue","push","status","FILTER_CHANGE","channel"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AAEA,eAAe,SAASC,wBAAT,CAAkCC,IAAlC,EAAwCC,OAAxC,EAAiD;AAC9DD,EAAAA,IAAI,GAAGA,IAAI,CAACE,KAAZ;AACAD,EAAAA,OAAO,GAAGA,OAAO,CAACC,KAAlB;AACA,MAAIC,QAAQ,GAAG,IAAf;;AACA,OAAK,IAAIC,WAAT,IAAwBC,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACO,QAAjB,CAAxB,EAAoD;AAClD,UAAMC,SAAS,GAAGR,IAAI,CAACO,QAAL,CAAcH,WAAd,EAA2BK,MAA7C;AACA,UAAMC,YAAY,GAAGT,OAAO,CAACM,QAAR,CAAiBH,WAAjB,EAA8BK,MAAnD;;AACA,QAAID,SAAS,KAAKE,YAAlB,EAAgC;AAC9BP,MAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACAA,MAAAA,QAAQ,CAACQ,IAAT,CAAc;AACZC,QAAAA,MAAM,EAAEd,MAAM,CAACe,aADH;AAEZC,QAAAA,OAAO,EAAEV,WAFG;AAGZI,QAAAA,SAAS,EAAEA,SAHC;AAIZE,QAAAA,YAAY,EAAEA;AAJF,OAAd;AAMD;AACF;;AACD,SAAOP,QAAP;AACD","sourcesContent":["import STATUS from \"./../STATUS\";\r\n\r\nexport default function mixerChannelFitlerChange(prev, current) {\r\n  prev = prev.mixer;\r\n  current = current.mixer;\r\n  let response = null;\r\n  for (let channelName of Object.keys(prev.channels)) {\r\n    const prevValue = prev.channels[channelName].filter;\r\n    const currentValue = current.channels[channelName].filter;\r\n    if (prevValue !== currentValue) {\r\n      response = response || [];\r\n      response.push({\r\n        status: STATUS.FILTER_CHANGE,\r\n        channel: channelName,\r\n        prevValue: prevValue,\r\n        currentValue: currentValue\r\n      });\r\n    }\r\n  }\r\n  return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}