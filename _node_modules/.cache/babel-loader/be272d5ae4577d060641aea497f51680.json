{"ast":null,"code":"import { ACTIONS } from \"./../actions\";\nimport { produce } from \"imer\";\nconst channel = {\n  volume: 100,\n  low: 100,\n  mid: 100,\n  high: 100,\n  gain: 100\n};\nconst initState = {\n  channels: {\n    A: { ...channel\n    },\n    B: { ...channel\n    }\n  },\n  fader: {\n    position: 50 //A: 0 <-> B:100\n\n  }\n};\n\nconst nextChannelState = (state, channel, variables) => {\n  return produce(state, draftSate => {\n    draftSate.channels[channel] = { ...state.channels[channel],\n      ...variables\n    };\n  });\n};\n\nexport default function mixerReducer(state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.SET_GAIN:\n      {\n        return nextChannelState(state, action.destination, {\n          gain: action.value\n        });\n      }\n\n    case ACTIONS.SET_LOW:\n      {\n        return nextChannelState(state, action.destination, {\n          low: action.value\n        });\n      }\n\n    case ACTIONS.SET_MID:\n      {\n        return nextChannelState(state, action.destination, {\n          mid: action.value\n        });\n      }\n\n    case ACTIONS.SET_HI:\n      {\n        return nextChannelState(state, action.destination, {\n          high: action.value\n        });\n      }\n\n    case ACTIONS.SET_FADER:\n      {\n        return produce(state, draftState => draftState.fader = action.value);\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/reducers/mixerReducer.js"],"names":["ACTIONS","produce","channel","volume","low","mid","high","gain","initState","channels","A","B","fader","position","nextChannelState","state","variables","draftSate","mixerReducer","action","type","SET_GAIN","destination","value","SET_LOW","SET_MID","SET_HI","SET_FADER","draftState"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,cAAtB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,GADI;AAGZC,EAAAA,GAAG,EAAE,GAHO;AAIZC,EAAAA,GAAG,EAAG,GAJM;AAKZC,EAAAA,IAAI,EAAG,GALK;AAMZC,EAAAA,IAAI,EAAE;AANM,CAAhB;AASA,MAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAG;AACPC,IAAAA,CAAC,EAAG,EACA,GAAGR;AADH,KADG;AAIPS,IAAAA,CAAC,EAAG,EACA,GAAGT;AADH;AAJG,GADG;AASdU,EAAAA,KAAK,EAAG;AACJC,IAAAA,QAAQ,EAAG,EADP,CACU;;AADV;AATM,CAAlB;;AAcA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQb,OAAR,EAAiBc,SAAjB,KAA+B;AACpD,SAAOf,OAAO,CAACc,KAAD,EAAQE,SAAS,IAAI;AAC3BA,IAAAA,SAAS,CAACR,QAAV,CAAmBP,OAAnB,IAA8B,EAC1B,GAAGa,KAAK,CAACN,QAAN,CAAeP,OAAf,CADuB;AAE1B,SAAGc;AAFuB,KAA9B;AAIP,GALa,CAAd;AAMH,CAPD;;AASA,eAAe,SAASE,YAAT,CAAsBH,KAAK,GAAGP,SAA9B,EAAyCW,MAAzC,EAAgD;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKpB,OAAO,CAACqB,QAAb;AAAwB;AACpB,eAAOP,gBAAgB,CAACC,KAAD,EAAQI,MAAM,CAACG,WAAf,EAA4B;AAACf,UAAAA,IAAI,EAAEY,MAAM,CAACI;AAAd,SAA5B,CAAvB;AACH;;AACD,SAAKvB,OAAO,CAACwB,OAAb;AAAuB;AACnB,eAAOV,gBAAgB,CAACC,KAAD,EAAQI,MAAM,CAACG,WAAf,EAA4B;AAAClB,UAAAA,GAAG,EAAEe,MAAM,CAACI;AAAb,SAA5B,CAAvB;AACH;;AACD,SAAKvB,OAAO,CAACyB,OAAb;AAAuB;AACnB,eAAOX,gBAAgB,CAACC,KAAD,EAAQI,MAAM,CAACG,WAAf,EAA4B;AAACjB,UAAAA,GAAG,EAAEc,MAAM,CAACI;AAAb,SAA5B,CAAvB;AACH;;AACD,SAAKvB,OAAO,CAAC0B,MAAb;AAAsB;AAClB,eAAOZ,gBAAgB,CAACC,KAAD,EAAQI,MAAM,CAACG,WAAf,EAA4B;AAAChB,UAAAA,IAAI,EAAEa,MAAM,CAACI;AAAd,SAA5B,CAAvB;AACH;;AACD,SAAKvB,OAAO,CAAC2B,SAAb;AAAyB;AACrB,eAAO1B,OAAO,CAACc,KAAD,EAAQa,UAAU,IAAIA,UAAU,CAAChB,KAAX,GAAmBO,MAAM,CAACI,KAAhD,CAAd;AACH;;AACD;AAAS,aAAOR,KAAP;AAhBb;AAkBH","sourcesContent":["import {ACTIONS} from \"./../actions\";\r\nimport {produce} from \"imer\";\r\n\r\nconst channel = {\r\n    volume: 100,\r\n\r\n    low: 100,\r\n    mid : 100,\r\n    high : 100,\r\n    gain: 100,\r\n}\r\n\r\nconst initState = {\r\n    channels : {\r\n        A : {\r\n            ...channel,\r\n        },\r\n        B : {\r\n            ...channel,\r\n        },\r\n    },\r\n    fader : {\r\n        position : 50 //A: 0 <-> B:100\r\n    }\r\n};\r\n\r\nconst nextChannelState = (state, channel, variables) => {\r\n    return produce(state, draftSate => {\r\n            draftSate.channels[channel] = {\r\n                ...state.channels[channel],\r\n                ...variables,\r\n            }\r\n    })\r\n}\r\n\r\nexport default function mixerReducer(state = initState, action){\r\n    switch(action.type){\r\n        case ACTIONS.SET_GAIN : {\r\n            return nextChannelState(state, action.destination, {gain: action.value})\r\n        }\r\n        case ACTIONS.SET_LOW : {\r\n            return nextChannelState(state, action.destination, {low: action.value})\r\n        }\r\n        case ACTIONS.SET_MID : {\r\n            return nextChannelState(state, action.destination, {mid: action.value})\r\n        }\r\n        case ACTIONS.SET_HI : {\r\n            return nextChannelState(state, action.destination, {high: action.value})\r\n        }\r\n        case ACTIONS.SET_FADER : {\r\n            return produce(state, draftState => draftState.fader = action.value);\r\n        }\r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}