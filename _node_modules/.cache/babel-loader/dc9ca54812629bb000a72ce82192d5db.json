{"ast":null,"code":"import { toggleDir, ACTIONS } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport \"./../../qlQueries/rename\";\nimport { get } from \"lodash/object\";\nexport default function* createDirRequestSaga() {\n  yield takeEvery(ACTIONS.PL_TOGGLE_DIR_REQUEST, callApi);\n}\n\nconst getToken = state => state.user.token;\n\nconst getCurrentSelection = state => state.playList.currentSelection;\n\nconst getCurrent = (state, path) => get(state.playList, path);\n\nfunction* callApi(action) {\n  const {\n    callQuery\n  } = getApi(\"UserAssets\");\n  const token = yield select(getToken);\n  const currentSelection = yield select(getCurrentSelection);\n  const current = yield select(getCurrent, currentSelection);\n\n  if (current._open || current._loaded) {\n    //close\n    return yield put(toggleDir);\n  } else {} //palylist\n  // const id = current._id;\n  // let query;\n  // if (current instanceof Array) {\n  //     query = renamePlaylist(id, action.name)\n  // } else {\n  //     query = renameDir(id, action.name)\n  // }\n  // let res = yield callQuery(query, token);\n  // if (res.data.renameDir) {\n  //     yield put(renameSelected(action.name));\n  // }\n\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/openAndLoadDirRequest.js"],"names":["toggleDir","ACTIONS","takeEvery","select","put","getApi","get","createDirRequestSaga","PL_TOGGLE_DIR_REQUEST","callApi","getToken","state","user","token","getCurrentSelection","playList","currentSelection","getCurrent","path","action","callQuery","current","_open","_loaded"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAiB,0BAAjB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,eAAe,UAAUC,oBAAV,GAAiC;AAC5C,QAAML,SAAS,CAACD,OAAO,CAACO,qBAAT,EAAgCC,OAAhC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,MAAMC,mBAAmB,GAAGH,KAAK,IAAIA,KAAK,CAACI,QAAN,CAAeC,gBAApD;;AAEA,MAAMC,UAAU,GAAG,CAACN,KAAD,EAAQO,IAAR,KAAiBZ,GAAG,CAACK,KAAK,CAACI,QAAP,EAAiBG,IAAjB,CAAvC;;AAEA,UAAUT,OAAV,CAAkBU,MAAlB,EAA0B;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAgBf,MAAM,CAAC,YAAD,CAA5B;AACA,QAAMQ,KAAK,GAAG,MAAMV,MAAM,CAACO,QAAD,CAA1B;AACA,QAAMM,gBAAgB,GAAG,MAAMb,MAAM,CAACW,mBAAD,CAArC;AACA,QAAMO,OAAO,GAAG,MAAMlB,MAAM,CAACc,UAAD,EAAaD,gBAAb,CAA5B;;AACA,MAAGK,OAAO,CAACC,KAAR,IAAiBD,OAAO,CAACE,OAA5B,EAAoC;AAChC;AACA,WAAO,MAAMnB,GAAG,CAACJ,SAAD,CAAhB;AACH,GAHD,MAGO,CAEN,CAVqB,CAWtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH","sourcesContent":["import { toggleDir, ACTIONS } from \"../../actions\";\r\nimport { takeEvery, select, put } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport {  } from \"./../../qlQueries/rename\";\r\nimport { get } from \"lodash/object\";\r\n\r\nexport default function* createDirRequestSaga() {\r\n    yield takeEvery(ACTIONS.PL_TOGGLE_DIR_REQUEST, callApi)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nconst getCurrentSelection = state => state.playList.currentSelection;\r\n\r\nconst getCurrent = (state, path) => get(state.playList, path);\r\n\r\nfunction* callApi(action) {\r\n    const { callQuery } = getApi(\"UserAssets\");\r\n    const token = yield select(getToken);\r\n    const currentSelection = yield select(getCurrentSelection);\r\n    const current = yield select(getCurrent, currentSelection);\r\n    if(current._open || current._loaded){\r\n        //close\r\n        return yield put(toggleDir )\r\n    } else {\r\n\r\n    }\r\n    //palylist\r\n    // const id = current._id;\r\n    // let query;\r\n    // if (current instanceof Array) {\r\n    //     query = renamePlaylist(id, action.name)\r\n    // } else {\r\n    //     query = renameDir(id, action.name)\r\n    // }\r\n    // let res = yield callQuery(query, token);\r\n    // if (res.data.renameDir) {\r\n    //     yield put(renameSelected(action.name));\r\n    // }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}