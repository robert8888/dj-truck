{"ast":null,"code":"import Effect from \"../effect\";\nexport default class PingPongDelay extends Effect {\n  static defaultParams() {\n    return {\n      params: {\n        feedback: {\n          min: 0,\n          max: 100,\n          defaultValue: 50,\n          type: \"float\",\n          description: \"fb\"\n        },\n        time: {\n          min: 0,\n          max: 180,\n          defaultValue: 5,\n          type: \"float\",\n          description: \"time\"\n        }\n      }\n    };\n  }\n\n  constructor(context, params) {\n    super();\n    this._context = context;\n    this._default = PingPongDelay.defaultParams().params;\n\n    this._buildNodes();\n\n    this._initParams(params);\n  }\n\n  _buildNodes() {\n    this.inputNode = this._context.createGain();\n    this.outputNode = this._context.createGain();\n    this.delayNodeLeft = this._context.createDelay();\n    this.delayNodeRight = this._context.createDelay();\n    this.dryGainNode = this._context.createGain();\n    this.wetGainNode = this._context.createGain();\n    this.feedbackGainNode = this._context.createGain();\n    this.channelMerger = this._context.createChannelMerger(2); // the feedback loop\n\n    this.delayNodeLeft.connect(this.channelMerger, 0, 0);\n    this.delayNodeRight.connect(this.channelMerger, 0, 1);\n    this.delayNodeLeft.connect(this.delayNodeRight);\n    this.feedbackGainNode.connect(this.delayNodeLeft);\n    this.delayNodeRight.connect(this.feedbackGainNode); //  mix\n\n    this.inputNode.connect(this.feedbackGainNode); //  out\n\n    this.channelMerger.connect(this.outputNode);\n  }\n\n  get name() {\n    \"Ping Pong Delay\";\n  }\n\n  get time() {\n    return this._time;\n  }\n\n  set time(value) {\n    value = this._valueToRange(value, \"time\");\n    this._time = value; ///\n\n    this.delayNodeLeft.delayTime.setTargetAtTime(value, this._context.currentTime, 0.01);\n    this.delayNodeRight.delayTime.setTargetAtTime(value, this._context.currentTime, 0.01);\n  }\n\n  get feedback() {\n    return this._feedback;\n  }\n\n  set feedback(value) {\n    value = this._valueToRange(value, \"feedback\");\n    this._feedback = value;\n    console.log(this);\n    this.feedbackGainNode.gain.setTargetAtTime(value / 100, this._context.currentTime, 0.01);\n  }\n\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/core/console/effector/effects/PingPongDelay/PingPongDelay.js"],"names":["Effect","PingPongDelay","defaultParams","params","feedback","min","max","defaultValue","type","description","time","constructor","context","_context","_default","_buildNodes","_initParams","inputNode","createGain","outputNode","delayNodeLeft","createDelay","delayNodeRight","dryGainNode","wetGainNode","feedbackGainNode","channelMerger","createChannelMerger","connect","name","_time","value","_valueToRange","delayTime","setTargetAtTime","currentTime","_feedback","console","log","gain"],"mappings":"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","sourcesContent":["import Effect from \"../effect\";\r\n\r\nexport default class PingPongDelay extends Effect{\r\n\r\n    static defaultParams(){\r\n        return {\r\n            params : {\r\n                feedback: {\r\n                    min: 0,\r\n                    max: 100,\r\n                    defaultValue: 50,\r\n                    type: \"float\",\r\n                    description : \"fb\"\r\n                },\r\n                time: {\r\n                    min: 0,\r\n                    max: 180,\r\n                    defaultValue: 5,\r\n                    type: \"float\",\r\n                    description: \"time\"\r\n                },\r\n            }\r\n        }\r\n    }\r\n    constructor(context, params){\r\n        super();\r\n        this._context = context;\r\n        this._default = PingPongDelay.defaultParams().params;\r\n\r\n        this._buildNodes();\r\n        this._initParams(params);\r\n    }\r\n\r\n    _buildNodes(){\r\n\r\n        this.inputNode = this._context.createGain();\r\n        this.outputNode = this._context.createGain();\r\n        this.delayNodeLeft = this._context.createDelay();\r\n        this.delayNodeRight = this._context.createDelay();\r\n        this.dryGainNode = this._context.createGain();\r\n        this.wetGainNode = this._context.createGain();\r\n        this.feedbackGainNode = this._context.createGain();\r\n        this.channelMerger = this._context.createChannelMerger(2);\r\n\r\n    \r\n        // the feedback loop\r\n        this.delayNodeLeft.connect(this.channelMerger, 0, 0);\r\n        this.delayNodeRight.connect(this.channelMerger, 0, 1);\r\n        this.delayNodeLeft.connect(this.delayNodeRight);\r\n        this.feedbackGainNode.connect(this.delayNodeLeft);\r\n        this.delayNodeRight.connect(this.feedbackGainNode);\r\n    \r\n        //  mix\r\n        this.inputNode.connect(this.feedbackGainNode);\r\n    \r\n        //  out\r\n        this.channelMerger.connect(this.outputNode);\r\n    }\r\n\r\n    get name(){\r\n        \"Ping Pong Delay\"\r\n    }\r\n\r\n    get time(){\r\n        return this._time;\r\n    }\r\n\r\n    set time(value){\r\n        value = this._valueToRange(value, \"time\")\r\n        this._time= value;\r\n        ///\r\n        this.delayNodeLeft.delayTime.setTargetAtTime(\r\n                value, \r\n                this._context.currentTime, \r\n                0.01\r\n            )\r\n        this.delayNodeRight.delayTime.setTargetAtTime(\r\n            value, \r\n            this._context.currentTime, \r\n            0.01\r\n        )\r\n    }\r\n\r\n    get feedback(){\r\n        return this._feedback;\r\n    }\r\n\r\n    set feedback(value){\r\n        value = this._valueToRange(value, \"feedback\");\r\n        this._feedback = value;\r\n        console.log(this)\r\n        this.feedbackGainNode.gain.setTargetAtTime(\r\n                (value / 100),\r\n                this._context.currentTime,\r\n                0.01 \r\n            )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}