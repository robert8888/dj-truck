{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Mixer\\\\Channel\\\\Channel.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport EqKnob from \"./../componets/EqKnob/EqKnob\";\nimport GainKnob from \"./../componets/GainKnob/GainKnob\";\nimport FilterKnob from \"./../componets/FilterKnob/FitlerKnob\";\nimport ResonansKnob from \"./../componets/ResonasKnob/ResonansKnob\";\nimport BinnaryButton from \"./../../../common/BinnaryButton/BinnaryButton\";\nimport PeakLevelMeter from \"./../componets/PeakLevelMeter/PeakLevelMeter\";\nimport { setGain, setLow, setMid, setHi, setSend, setFilter, setFilterResonans } from \"./../../../../../../actions\";\nimport \"./mixer-channel.scss\";\nimport { throttle } from \"./../../../../../../utils/functions/lodash\";\n\nclass Channel extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mixer-channel channel-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"knobs-set-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(EqKnob, {\n      alt: \"Hi\",\n      className: \"eq-hi\",\n      onChange: this.props.setHi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(EqKnob, {\n      alt: \"Mid\",\n      className: \"eq-mid\",\n      onChange: this.props.setMid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(EqKnob, {\n      alt: \"Low\",\n      className: \"eq-low\",\n      onChange: this.props.setLow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(PeakLevelMeter, {\n      name: this.props.name,\n      interface: Console.Get().getMixerChannelInterface(this.props.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"knobs-set-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(GainKnob, {\n      className: \"eq-gain\",\n      onChange: this.props.setGain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"mixer-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(ResonansKnob, {\n      alt: \"RES\",\n      className: \"resonans\",\n      value: this.props.filterResonansValue,\n      onChange: this.props.setFilterResonans,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(FilterKnob, {\n      alt: \"FL\",\n      className: \"filter\",\n      onChange: this.props.setFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"mixer-group group-fx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(BinnaryButton, {\n      className: \"btn-fx\",\n      value: this.props.send1,\n      onChange: this.props.setSend.bind(null, 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"FX 1\"), React.createElement(BinnaryButton, {\n      className: \"btn-fx\",\n      value: this.props.send2,\n      onChange: this.props.setSend.bind(null, 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"FX 2\")));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  send1: state.mixer.channels[ownProps.name].sends[0],\n  send2: state.mixer.channels[ownProps.name].sends[1],\n  filterResonansValue: state.mixer.channels[ownProps.name].filterResonans\n});\n\nconst mapDispachToProps = (dispatch, ownProps) => {\n  const tdispatch = throttle(dispatch, 50);\n  return {\n    setGain: value => tdispatch(setGain(ownProps.name, value)),\n    setHi: value => tdispatch(setHi(ownProps.name, value)),\n    setMid: value => tdispatch(setMid(ownProps.name, value)),\n    setLow: value => tdispatch(setLow(ownProps.name, value)),\n    setSend: (number, value) => dispatch(setSend(ownProps.name, number, value)),\n    setFilter: value => tdispatch(setFilter(ownProps.name, value)),\n    setFilterResonans: value => tdispatch(setFilterResonans(ownProps.name, value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(Channel);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Console/Mixer/Channel/Channel.js"],"names":["React","connect","EqKnob","GainKnob","FilterKnob","ResonansKnob","BinnaryButton","PeakLevelMeter","setGain","setLow","setMid","setHi","setSend","setFilter","setFilterResonans","throttle","Channel","Component","render","props","name","Console","Get","getMixerChannelInterface","filterResonansValue","send1","bind","send2","mapStateToProps","state","ownProps","mixer","channels","sends","filterResonans","mapDispachToProps","dispatch","tdispatch","value","number"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport EqKnob from \"./../componets/EqKnob/EqKnob\"\r\nimport GainKnob from \"./../componets/GainKnob/GainKnob\";\r\nimport FilterKnob from \"./../componets/FilterKnob/FitlerKnob\";\r\nimport ResonansKnob from \"./../componets/ResonasKnob/ResonansKnob\";\r\nimport BinnaryButton from \"./../../../common/BinnaryButton/BinnaryButton\";\r\nimport PeakLevelMeter from \"./../componets/PeakLevelMeter/PeakLevelMeter\";\r\nimport {\r\n    setGain,\r\n    setLow,\r\n    setMid,\r\n    setHi,\r\n    setSend,\r\n    setFilter,\r\n    setFilterResonans\r\n} from \"./../../../../../../actions\";\r\n\r\nimport \"./mixer-channel.scss\";\r\nimport { throttle } from \"./../../../../../../utils/functions/lodash\"\r\n\r\nclass Channel extends React.Component{\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div className={\"mixer-channel channel-\" + this.props.name }>\r\n\r\n                <div className=\"knobs-set-1\">\r\n                    <EqKnob alt=\"Hi\" className=\"eq-hi\" onChange={ this.props.setHi }/>\r\n                    <EqKnob alt=\"Mid\" className=\"eq-mid\" onChange={this.props.setMid }/>\r\n                    <EqKnob alt=\"Low\" className=\"eq-low\" onChange={ this.props.setLow }/>\r\n\r\n                </div>\r\n                <PeakLevelMeter \r\n                    name={this.props.name}\r\n                    interface={ Console.Get().getMixerChannelInterface(this.props.name) }/>\r\n                <div className=\"knobs-set-2\">\r\n                    <GainKnob className=\"eq-gain\" onChange={ this.props.setGain }/>\r\n                    <div className=\"mixer-group\">\r\n                        <ResonansKnob \r\n                            alt=\"RES\" \r\n                            className=\"resonans\" \r\n                            value={this.props.filterResonansValue}\r\n                            onChange={ this.props.setFilterResonans } \r\n                            />\r\n                        <FilterKnob \r\n                            alt=\"FL\" \r\n                            className=\"filter\" \r\n                            onChange={ this.props.setFilter}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mixer-group group-fx\">\r\n                        <BinnaryButton \r\n                            className=\"btn-fx\" \r\n                            value={this.props.send1}\r\n                            onChange={this.props.setSend.bind(null, 1)}>\r\n                                FX 1\r\n                        </BinnaryButton>\r\n                        <BinnaryButton \r\n                            className=\"btn-fx\" \r\n                            value={this.props.send2}\r\n                            onChange={this.props.setSend.bind(null, 2)}>\r\n                                FX 2\r\n                        </BinnaryButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    send1 : state.mixer.channels[ownProps.name].sends[0],\r\n    send2 : state.mixer.channels[ownProps.name].sends[1],\r\n\r\n    filterResonansValue : state.mixer.channels[ownProps.name].filterResonans,\r\n})\r\n\r\nconst mapDispachToProps = (dispatch, ownProps) =>{\r\n    const tdispatch = throttle(dispatch, 50);\r\n    return {\r\n    setGain : (value) =>  tdispatch(setGain(ownProps.name, value)),\r\n    setHi : (value) => tdispatch(setHi(ownProps.name, value)),\r\n    setMid : (value) => tdispatch(setMid(ownProps.name, value)),\r\n    setLow : (value) => tdispatch(setLow(ownProps.name, value)),\r\n    setSend : (number, value) => dispatch(setSend(ownProps.name, number, value)),\r\n    setFilter : (value) => tdispatch(setFilter(ownProps.name, value)),\r\n    setFilterResonans : (value) => tdispatch(setFilterResonans(ownProps.name, value)),\r\n}}\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Channel);"]},"metadata":{},"sourceType":"module"}