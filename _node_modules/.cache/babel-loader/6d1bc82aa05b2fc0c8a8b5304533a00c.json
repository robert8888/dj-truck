{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\ProgressSlider\\\\ProgressSlider.js\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { formater } from \"./../../../../../utils/time/timeFromater\";\nimport \"./progress-slider.scss\"; //horizontal\n\nconst ProgressSlider = ({\n  player\n}) => {\n  const [progress, setProgress] = useState(0);\n  const [currentRecord, setCurrentRecord] = useState(null);\n  const [position, setPosition] = useState();\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentDuration, setCurrentDuration] = useState(0);\n  const sliderArea = useRef(null);\n  const sliderThumb = useRef(null);\n  const sliderProgress = useRef(null);\n  const sliderBufferd = useRef(null);\n  useEffect(() => {\n    //  console.log(progress)\n    setCurrentTime(currentDuration * progress);\n  }, [progress, setCurrentTime]);\n  useEffect(() => {\n    console.log(currentRecord);\n\n    if (currentRecord) {\n      setCurrentDuration(currentRecord.duration);\n    }\n  }, [currentRecord, setCurrentDuration]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.addProgressWatcher('#', setProgress);\n    player.addCurrentWatcher(setCurrentRecord);\n  }, [player]);\n  const thumbClick = useCallback(e => {\n    console.log('clikc;', e);\n  }, []);\n  const setThumb = useCallback(ref => {\n    //sliderThumb(ref);\n    sliderThumb.current = ref;\n    ref.addEventListener('click', e => thumbClick(e));\n  }, [sliderThumb]);\n  return React.createElement(\"div\", {\n    className: \"seek-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"record-details-time time-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, formater.secondsToStr(currentTime / 1000))), React.createElement(\"div\", {\n    className: \"slider-active-area\",\n    ref: sliderArea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-thumb\",\n    ref: setThumb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-progress\",\n    ref: sliderProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-buffered\",\n    ref: sliderBufferd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"record-details-time time-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, formater.secondsToStr(currentDuration / 1000))));\n};\n\nexport default ProgressSlider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/ProgressSlider/ProgressSlider.js"],"names":["React","useState","useRef","useEffect","useCallback","formater","ProgressSlider","player","progress","setProgress","currentRecord","setCurrentRecord","position","setPosition","currentTime","setCurrentTime","currentDuration","setCurrentDuration","sliderArea","sliderThumb","sliderProgress","sliderBufferd","console","log","duration","addProgressWatcher","addCurrentWatcher","thumbClick","e","setThumb","ref","current","addEventListener","secondsToStr"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport {formater} from \"./../../../../../utils/time/timeFromater\";\r\nimport \"./progress-slider.scss\"\r\n\r\n//horizontal\r\nconst ProgressSlider = ({player}) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [currentRecord, setCurrentRecord] = useState(null);\r\n    const [position,  setPosition] = useState();\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [currentDuration, setCurrentDuration] = useState(0);\r\n    \r\n    const sliderArea = useRef(null);\r\n    const sliderThumb = useRef(null);\r\n    const sliderProgress = useRef(null);\r\n    const sliderBufferd = useRef(null);\r\n\r\n    useEffect(()=>{\r\n      //  console.log(progress)\r\n       setCurrentTime(currentDuration * progress)\r\n    }, [progress , setCurrentTime])\r\n\r\n    useEffect(()=>{\r\n        console.log(currentRecord)\r\n        if(currentRecord){\r\n           setCurrentDuration(currentRecord.duration);\r\n        }\r\n\r\n    }, [currentRecord, setCurrentDuration])\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.addProgressWatcher('#', setProgress);\r\n        player.addCurrentWatcher(setCurrentRecord);\r\n    }, [player])\r\n\r\n\r\n    const thumbClick = useCallback((e)=>{\r\n        console.log('clikc;', e)\r\n    }, [])\r\n\r\n    const setThumb = useCallback((ref)=>{\r\n        //sliderThumb(ref);\r\n        sliderThumb.current = ref;\r\n        ref.addEventListener('click', (e)=> thumbClick(e))\r\n    }, [sliderThumb])\r\n\r\n    return (\r\n        <div className=\"seek-slider\">\r\n            <div className=\"record-details-time time-current\">\r\n                 <span>{formater.secondsToStr(currentTime / 1000)}</span>\r\n            </div>\r\n            <div className=\"slider-active-area\" ref={sliderArea}>\r\n                <div className=\"slider-thumb\" ref={setThumb}/>\r\n                <div className=\"slider-progress\" ref={sliderProgress}/>\r\n                <div className=\"slider-buffered\" ref={sliderBufferd}/>\r\n            </div>\r\n            <div className=\"record-details-time time-duration\">\r\n                <span>{formater.secondsToStr(currentDuration/1000)}</span>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProgressSlider;"]},"metadata":{},"sourceType":"module"}