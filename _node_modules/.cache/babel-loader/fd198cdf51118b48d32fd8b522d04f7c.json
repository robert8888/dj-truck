{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Carousel-slider\\\\Slider.js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport UUID from \"uuidjs\";\nimport style from \"./slider.scss\";\n\nconst rmLast = (arr, direction) => {\n  direction = direction < 0 ? \"next\" : \"prev\";\n  let last = arr.length - 1;\n  let _arr = [...arr];\n\n  while (last >= 0) {\n    if (direction === \"next\" && arr[last] < 0) break;\n    if (direction === \"prev\" && arr[last] > 0) break;\n\n    _arr.pop();\n\n    last--;\n  }\n\n  return _arr;\n};\n\nconst sumLastSameDirection = (arr, {\n  max\n}) => {\n  let _arr = [...arr];\n\n  if (arr.length > 1 && arr[arr.length - 1] * arr[arr.length - 2] > 0) {\n    let last = _arr.pop();\n\n    let prev = _arr.pop();\n\n    let sum = last + prev;\n\n    if (max && Math.abs(sum) > max) {\n      sum = sum > 0 ? max : -max;\n    }\n\n    _arr.push(sum);\n  }\n\n  return _arr;\n};\n\nconst Slider = ({\n  slides: initSlides,\n  next: nextHandle,\n  prev: prevHandle,\n  getLength: getLengthHandle,\n  onChange,\n  minSlideWidth = style.minSlideWidth,\n  onStepDragging = false\n}) => {\n  const slider = useRef();\n  const [active, setActive] = useState(false);\n  const [overLapRatio] = useState(2);\n  const [animationDuration] = useState(parseInt(style.animatioDuration) * 1000);\n  const [_containerRect, setContainerRect] = useState(null);\n  const [slideWidth, setSlideWidth] = useState(null);\n  const [visibleSlides, setVisibleSlides] = useState(null);\n  const [slides, setSlides] = useState(null);\n  const shift = useRef();\n  const balancedShift = useRef();\n  const translate = useRef();\n  const inAction = useRef();\n  const actionQueue = useRef();\n  const currentSlide = useRef();\n  const containerRect = useCallback(() => {\n    if (!slider.current) return 0;\n    let rect = _containerRect;\n\n    if (!rect) {\n      rect = slider.current.parentElement.getBoundingClientRect();\n      setContainerRect(rect);\n    }\n\n    return rect;\n  }, [_containerRect, setContainerRect]);\n  const updateTransition = useCallback(value => {\n    if (!slider.current) return;\n    value ? slider.current.classList.add('slider-transition--active') : slider.current.classList.remove('slider-transition--active');\n  }, [slider]);\n  const updateTranslate = useCallback(target => {\n    if (!slider.current) return;\n    slider.current.style.transform = `translateX(${target}px)`;\n    translate.current = target;\n  }, [slider, translate]);\n  const updatePosition = useCallback((position, sWidth) => {\n    if (!slider.current || isNaN(position) || !active) return;\n    updateTranslate(position * (slideWidth || sWidth));\n  }, [slider, slideWidth, updateTranslate, active]);\n  const updateCurrentSlide = useCallback((direction = 0) => {\n    var _currentSlide$current;\n\n    let current = (_currentSlide$current = currentSlide.current) !== null && _currentSlide$current !== void 0 ? _currentSlide$current : Math.floor(visibleSlides / 2); //  console.log(current)\n\n    current = (current - direction) % initSlides.length;\n\n    if (current < 0) {\n      current = initSlides.length + current;\n    }\n\n    currentSlide.current = current;\n    onChange && onChange(current);\n    console.log(current);\n  }, [currentSlide, initSlides, onChange, visibleSlides]);\n  useEffect(() => {\n    if (!visibleSlides) return;\n    setTimeout(() => updateCurrentSlide(), 0);\n  }, [visibleSlides, updateCurrentSlide]);\n  useEffect(() => {\n    if (!visibleSlides || visibleSlides > initSlides.length) {\n      setSlides(initSlides);\n      return;\n    }\n\n    setActive(true);\n    let slides = [].concat(Array(overLapRatio * 2 + 1).fill(1).map(() => initSlides)).flat();\n    setSlides(slides);\n  }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio]);\n  useEffect(() => {\n    if (!containerRect || !minSlideWidth || !slider.current) return;\n    const containerWidth = containerRect().width;\n    const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\n    setVisibleSlides(visibleSlides);\n  }, [containerRect, minSlideWidth, slider, setVisibleSlides]);\n  useEffect(() => {\n    if (!slides) return;\n    shift.current = -initSlides.length * overLapRatio;\n    balancedShift.current = shift.current;\n    updatePosition(shift.current);\n  }, [slideWidth, updatePosition, shift, balancedShift, initSlides, slides, overLapRatio]);\n  useEffect(() => {\n    const resetSize = () => setContainerRect(null);\n\n    window.addEventListener(\"resize\", resetSize);\n    return () => window.removeEventListener(\"resize\", resetSize);\n  }, [setContainerRect]);\n  useEffect(() => {\n    if (!visibleSlides || !containerRect || !slides) return;\n    const slideWidth = containerRect().width / visibleSlides;\n    setSlideWidth(slideWidth);\n    let width = slideWidth * slides.length;\n\n    if (visibleSlides > slides.length) {\n      width = containerRect().width;\n    }\n\n    slider.current.style.width = width + \"px\";\n  }, [containerRect, visibleSlides, slides]);\n  const appendSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.shift();\n\n        _slides.push(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const prependSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.pop();\n\n        _slides.unshift(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const actionRef = useRef();\n  const balance = useCallback(() => {\n    const diff = balancedShift.current - shift.current;\n\n    if (!diff) {\n      return;\n    }\n\n    diff < 0 ? prependSlides(Math.abs(diff)) : appendSlides(diff);\n    updateTransition(false);\n    shift.current = balancedShift.current;\n    updatePosition(shift.current);\n    setTimeout(() => {\n      actionRef.current && actionRef.current();\n    }, 0);\n  }, [shift, balancedShift, prependSlides, appendSlides, updateTransition, updatePosition, actionRef]);\n  const action = useCallback(direction => {\n    if (inAction.current) {\n      if (!direction) return;\n      let queue = actionQueue.current || [];\n      queue = rmLast([...queue], direction);\n      queue = sumLastSameDirection([...queue, direction], {\n        max: 3\n      });\n      actionQueue.current = queue;\n      return;\n    }\n\n    direction = direction || actionQueue.current && actionQueue.current.shift();\n    if (!direction) return;\n    inAction.current = true;\n    updateTransition(true);\n    shift.current += direction;\n    updatePosition(shift.current, slideWidth);\n    setTimeout(() => {\n      inAction.current = false;\n      balance();\n    }, animationDuration);\n    updateCurrentSlide(direction);\n  }, [balance, animationDuration, updatePosition, inAction, updateTransition, shift, slideWidth, updateCurrentSlide]);\n  useEffect(() => {\n    actionRef.current = (...arg) => action(...arg);\n  }, [action, actionRef]);\n  const next = useCallback(() => {\n    if (!active) return;\n    action(-1);\n  }, [action, active]);\n  useEffect(() => nextHandle && nextHandle(next), [next, nextHandle]);\n  const prev = useCallback(() => {\n    if (!active) return;\n    action(1);\n  }, [action, active]);\n  useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle]);\n  const getLength = useCallback(() => {\n    return initSlides.length;\n  }, [initSlides]);\n  useEffect(() => getLengthHandle && getLengthHandle(getLength), [getLength, getLengthHandle]);\n  const endDraging = useCallback(() => {\n    let next = Math.round(translate.current / slideWidth);\n\n    if (onStepDragging) {\n      next = next > shift.current ? shift.current + 1 : shift.current - 1;\n    }\n\n    updateCurrentSlide(next - shift.current);\n    shift.current = next;\n    updatePosition(shift.current);\n    inAction.current = true;\n    setTimeout(() => {\n      balance();\n      inAction.current = false;\n    }, animationDuration);\n  }, [translate, inAction, shift, slideWidth, balance, animationDuration, onStepDragging, updatePosition, updateCurrentSlide]);\n  const mouseMove = useCallback((shiftX, event) => {\n    const clientX = event.type === \"touchmove\" ? event.touches[0].clientX : event.clientX;\n    updateTranslate(clientX - shiftX);\n  }, [updateTranslate]);\n  const mouseDown = useCallback(event => {\n    const sliderContainer = event.target.closest(\".carousel-slider-container\");\n    if (!sliderContainer || !active) return;\n    actionQueue.current = [];\n    const rect = sliderContainer.getBoundingClientRect();\n    const clientX = event.type === \"touchstart\" ? event.touches[0].clientX : event.clientX;\n    const shiftX = clientX - rect.left - shift.current * slideWidth;\n    const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\n\n    const mouseUp = () => {\n      window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\n      window.removeEventListener(\"mouseup\", mouseUp);\n      window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\n      window.removeEventListener(\"touchend\", mouseUp);\n      updateTransition(true);\n      endDraging();\n    };\n\n    window.addEventListener(\"mousemove\", mouseMoveWithArgs);\n    window.addEventListener(\"touchmove\", mouseMoveWithArgs);\n    window.addEventListener(\"mouseup\", mouseUp);\n    window.addEventListener(\"touchend\", mouseUp);\n    updateTransition(false);\n  }, [active, updateTransition, shift, slideWidth, endDraging, mouseMove, actionQueue]);\n  return React.createElement(\"div\", {\n    className: \"carousel-slider-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"carousel-slider\",\n    ref: slider,\n    onMouseDown: mouseDown,\n    onTouchStart: mouseDown,\n    onDrag: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, slides && slides instanceof Array && slides.map((slide, index) => {\n    let classes = \"slide\";\n\n    if (visibleSlides % 2 !== 0 && index === Math.abs(balancedShift.current) + Math.floor(visibleSlides / 2)) {\n      classes += \" slide-mid\";\n    }\n\n    return React.createElement(\"li\", {\n      key: UUID.genV1(),\n      className: classes,\n      style: {\n        width: minSlideWidth || \"initial\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, slide);\n  })));\n};\n\nexport default Slider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Carousel-slider/Slider.js"],"names":["React","useCallback","useEffect","useRef","useState","UUID","style","rmLast","arr","direction","last","length","_arr","pop","sumLastSameDirection","max","prev","sum","Math","abs","push","Slider","slides","initSlides","next","nextHandle","prevHandle","getLength","getLengthHandle","onChange","minSlideWidth","onStepDragging","slider","active","setActive","overLapRatio","animationDuration","parseInt","animatioDuration","_containerRect","setContainerRect","slideWidth","setSlideWidth","visibleSlides","setVisibleSlides","setSlides","shift","balancedShift","translate","inAction","actionQueue","currentSlide","containerRect","current","rect","parentElement","getBoundingClientRect","updateTransition","value","classList","add","remove","updateTranslate","target","transform","updatePosition","position","sWidth","isNaN","updateCurrentSlide","floor","console","log","setTimeout","concat","Array","fill","map","flat","containerWidth","width","resetSize","window","addEventListener","removeEventListener","appendSlides","amount","_slides","i","slide","prependSlides","unshift","actionRef","balance","diff","action","queue","arg","endDraging","round","mouseMove","shiftX","event","clientX","type","touches","mouseDown","sliderContainer","closest","left","mouseMoveWithArgs","bind","mouseUp","e","preventDefault","index","classes","genV1"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA8D,OAA9D;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,MAAM,GAAG,CAACC,GAAD,EAAMC,SAAN,KAAoB;AAC/BA,EAAAA,SAAS,GAAGA,SAAS,GAAG,CAAZ,GAAgB,MAAhB,GAAyB,MAArC;AACA,MAAIC,IAAI,GAAGF,GAAG,CAACG,MAAJ,GAAa,CAAxB;AACA,MAAIC,IAAI,GAAG,CAAC,GAAGJ,GAAJ,CAAX;;AACA,SAAOE,IAAI,IAAI,CAAf,EAAkB;AACd,QAAID,SAAS,KAAK,MAAd,IAAwBD,GAAG,CAACE,IAAD,CAAH,GAAY,CAAxC,EAA2C;AAC3C,QAAID,SAAS,KAAK,MAAd,IAAwBD,GAAG,CAACE,IAAD,CAAH,GAAY,CAAxC,EAA2C;;AAC3CE,IAAAA,IAAI,CAACC,GAAL;;AACAH,IAAAA,IAAI;AACP;;AACD,SAAOE,IAAP;AACH,CAXD;;AAaA,MAAME,oBAAoB,GAAG,CAACN,GAAD,EAAM;AAACO,EAAAA;AAAD,CAAN,KAAgB;AACzC,MAAIH,IAAI,GAAG,CAAC,GAAGJ,GAAJ,CAAX;;AACA,MAAIA,GAAG,CAACG,MAAJ,GAAa,CAAb,IAAkBH,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAH,GAAsBH,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAzB,GAA4C,CAAlE,EAAqE;AACjE,QAAID,IAAI,GAAGE,IAAI,CAACC,GAAL,EAAX;;AACA,QAAIG,IAAI,GAAGJ,IAAI,CAACC,GAAL,EAAX;;AACA,QAAII,GAAG,GAAGP,IAAI,GAAGM,IAAjB;;AACA,QAAID,GAAG,IAAIG,IAAI,CAACC,GAAL,CAASF,GAAT,IAAgBF,GAA3B,EAAgC;AAC5BE,MAAAA,GAAG,GAAIA,GAAG,GAAG,CAAP,GAAYF,GAAZ,GAAkB,CAACA,GAAzB;AACH;;AACDH,IAAAA,IAAI,CAACQ,IAAL,CAAUH,GAAV;AACH;;AACD,SAAOL,IAAP;AACH,CAZD;;AAcA,MAAMS,MAAM,GAAG,CAAC;AACRC,EAAAA,MAAM,EAAEC,UADA;AAERC,EAAAA,IAAI,EAAEC,UAFE;AAGRT,EAAAA,IAAI,EAAEU,UAHE;AAIRC,EAAAA,SAAS,EAAEC,eAJH;AAKRC,EAAAA,QALQ;AAMRC,EAAAA,aAAa,GAAGxB,KAAK,CAACwB,aANd;AAORC,EAAAA,cAAc,GAAG;AAPT,CAAD,KAQL;AACN,QAAMC,MAAM,GAAG7B,MAAM,EAArB;AACA,QAAM,CAAC8B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC+B,YAAD,IAAiB/B,QAAQ,CAAC,CAAD,CAA/B;AACA,QAAM,CAACgC,iBAAD,IAAsBhC,QAAQ,CAACiC,QAAQ,CAAC/B,KAAK,CAACgC,gBAAP,CAAR,GAAmC,IAApC,CAApC;AAEA,QAAM,CAACC,cAAD,EAAiBC,gBAAjB,IAAqCpC,QAAQ,CAAC,IAAD,CAAnD;AACA,QAAM,CAACqC,UAAD,EAAaC,aAAb,IAA8BtC,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACuC,aAAD,EAAgBC,gBAAhB,IAAoCxC,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACkB,MAAD,EAASuB,SAAT,IAAsBzC,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAM0C,KAAK,GAAG3C,MAAM,EAApB;AACA,QAAM4C,aAAa,GAAG5C,MAAM,EAA5B;AACA,QAAM6C,SAAS,GAAG7C,MAAM,EAAxB;AACA,QAAM8C,QAAQ,GAAG9C,MAAM,EAAvB;AACA,QAAM+C,WAAW,GAAG/C,MAAM,EAA1B;AACA,QAAMgD,YAAY,GAAGhD,MAAM,EAA3B;AAEA,QAAMiD,aAAa,GAAGnD,WAAW,CAAC,MAAM;AACpC,QAAI,CAAC+B,MAAM,CAACqB,OAAZ,EAAqB,OAAO,CAAP;AACrB,QAAIC,IAAI,GAAGf,cAAX;;AACA,QAAI,CAACe,IAAL,EAAW;AACPA,MAAAA,IAAI,GAAGtB,MAAM,CAACqB,OAAP,CAAeE,aAAf,CAA6BC,qBAA7B,EAAP;AACAhB,MAAAA,gBAAgB,CAACc,IAAD,CAAhB;AACH;;AACD,WAAOA,IAAP;AACH,GARgC,EAQ9B,CAACf,cAAD,EAAiBC,gBAAjB,CAR8B,CAAjC;AAUA,QAAMiB,gBAAgB,GAAGxD,WAAW,CAACyD,KAAK,IAAI;AAC1C,QAAI,CAAC1B,MAAM,CAACqB,OAAZ,EAAqB;AACrBK,IAAAA,KAAK,GACD1B,MAAM,CAACqB,OAAP,CAAeM,SAAf,CAAyBC,GAAzB,CAA6B,2BAA7B,CADC,GAGD5B,MAAM,CAACqB,OAAP,CAAeM,SAAf,CAAyBE,MAAzB,CAAgC,2BAAhC,CAHJ;AAKH,GAPmC,EAOjC,CAAC7B,MAAD,CAPiC,CAApC;AASA,QAAM8B,eAAe,GAAG7D,WAAW,CAAC8D,MAAM,IAAI;AAC1C,QAAI,CAAC/B,MAAM,CAACqB,OAAZ,EAAqB;AACrBrB,IAAAA,MAAM,CAACqB,OAAP,CAAe/C,KAAf,CAAqB0D,SAArB,GAAkC,cAAaD,MAAO,KAAtD;AACAf,IAAAA,SAAS,CAACK,OAAV,GAAoBU,MAApB;AACH,GAJkC,EAIhC,CAAC/B,MAAD,EAASgB,SAAT,CAJgC,CAAnC;AAMA,QAAMiB,cAAc,GAAGhE,WAAW,CAAC,CAACiE,QAAD,EAAWC,MAAX,KAAsB;AACrD,QAAI,CAACnC,MAAM,CAACqB,OAAR,IAAmBe,KAAK,CAACF,QAAD,CAAxB,IAAsC,CAACjC,MAA3C,EAAmD;AACnD6B,IAAAA,eAAe,CAACI,QAAQ,IAAIzB,UAAU,IAAI0B,MAAlB,CAAT,CAAf;AACH,GAHiC,EAG/B,CAACnC,MAAD,EAASS,UAAT,EAAqBqB,eAArB,EAAsC7B,MAAtC,CAH+B,CAAlC;AAKA,QAAMoC,kBAAkB,GAAGpE,WAAW,CAAC,CAACQ,SAAS,GAAG,CAAb,KAAkB;AAAA;;AACrD,QAAI4C,OAAO,4BAAGF,YAAY,CAACE,OAAhB,yEAA2BnC,IAAI,CAACoD,KAAL,CAAW3B,aAAa,GAAG,CAA3B,CAAtC,CADqD,CAErD;;AACAU,IAAAA,OAAO,GAAG,CAACA,OAAO,GAAG5C,SAAX,IAAwBc,UAAU,CAACZ,MAA7C;;AACA,QAAG0C,OAAO,GAAG,CAAb,EAAe;AACXA,MAAAA,OAAO,GAAG9B,UAAU,CAACZ,MAAX,GAAoB0C,OAA9B;AACH;;AACDF,IAAAA,YAAY,CAACE,OAAb,GAAuBA,OAAvB;AACAxB,IAAAA,QAAQ,IAAIA,QAAQ,CAACwB,OAAD,CAApB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,OAAZ;AACH,GAVqC,EAUnC,CAACF,YAAD,EAAe5B,UAAf,EAA2BM,QAA3B,EAAqCc,aAArC,CAVmC,CAAtC;AAYAzC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACyC,aAAJ,EAAmB;AACnB8B,IAAAA,UAAU,CAAC,MAAMJ,kBAAkB,EAAzB,EAA6B,CAA7B,CAAV;AACH,GAHQ,EAGN,CAAC1B,aAAD,EAAgB0B,kBAAhB,CAHM,CAAT;AAKAnE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACyC,aAAD,IAAkBA,aAAa,GAAGpB,UAAU,CAACZ,MAAjD,EAAyD;AACrDkC,MAAAA,SAAS,CAACtB,UAAD,CAAT;AACA;AACH;;AACDW,IAAAA,SAAS,CAAC,IAAD,CAAT;AAEA,QAAIZ,MAAM,GAAG,GAAGoD,MAAH,CAAUC,KAAK,CAACxC,YAAY,GAAG,CAAf,GAAmB,CAApB,CAAL,CAA4ByC,IAA5B,CAAiC,CAAjC,EAAoCC,GAApC,CAAwC,MAAMtD,UAA9C,CAAV,EAAqEuD,IAArE,EAAb;AACAjC,IAAAA,SAAS,CAACvB,MAAD,CAAT;AACH,GATQ,EASN,CAACqB,aAAD,EAAgBT,SAAhB,EAA2BX,UAA3B,EAAuCsB,SAAvC,EAAkDV,YAAlD,CATM,CAAT;AAYAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACkD,aAAD,IAAkB,CAACtB,aAAnB,IAAoC,CAACE,MAAM,CAACqB,OAAhD,EAAyD;AACzD,UAAM0B,cAAc,GAAG3B,aAAa,GAAG4B,KAAvC;AACA,UAAMrC,aAAa,GAAG,CAAC,EAAEoC,cAAc,GAAG1C,QAAQ,CAACP,aAAD,CAA3B,CAAvB;AACAc,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AAEH,GANQ,EAMN,CAACS,aAAD,EAAgBtB,aAAhB,EAA+BE,MAA/B,EAAuCY,gBAAvC,CANM,CAAT;AAQA1C,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACoB,MAAL,EAAa;AACbwB,IAAAA,KAAK,CAACO,OAAN,GAAgB,CAAC9B,UAAU,CAACZ,MAAZ,GAAqBwB,YAArC;AACAY,IAAAA,aAAa,CAACM,OAAd,GAAwBP,KAAK,CAACO,OAA9B;AACAY,IAAAA,cAAc,CAACnB,KAAK,CAACO,OAAP,CAAd;AACH,GALQ,EAKN,CAACZ,UAAD,EAAawB,cAAb,EAA6BnB,KAA7B,EAAoCC,aAApC,EAAmDxB,UAAnD,EAA+DD,MAA/D,EAAuEa,YAAvE,CALM,CAAT;AAOAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM+E,SAAS,GAAG,MAAMzC,gBAAgB,CAAC,IAAD,CAAxC;;AACA0C,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,SAAlC;AACA,WAAO,MAAMC,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,SAArC,CAAb;AACH,GAJQ,EAIN,CAACzC,gBAAD,CAJM,CAAT;AAMAtC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACyC,aAAD,IAAkB,CAACS,aAAnB,IAAoC,CAAC9B,MAAzC,EAAiD;AACjD,UAAMmB,UAAU,GAAGW,aAAa,GAAG4B,KAAhB,GAAwBrC,aAA3C;AACAD,IAAAA,aAAa,CAACD,UAAD,CAAb;AACA,QAAIuC,KAAK,GAAGvC,UAAU,GAAGnB,MAAM,CAACX,MAAhC;;AACA,QAAGgC,aAAa,GAAGrB,MAAM,CAACX,MAA1B,EAAkC;AAC9BqE,MAAAA,KAAK,GAAG5B,aAAa,GAAG4B,KAAxB;AACH;;AACDhD,IAAAA,MAAM,CAACqB,OAAP,CAAe/C,KAAf,CAAqB0E,KAArB,GAA6BA,KAAK,GAAI,IAAtC;AACH,GATQ,EASN,CAAC5B,aAAD,EAAgBT,aAAhB,EAA+BrB,MAA/B,CATM,CAAT;AAaA,QAAM+D,YAAY,GAAGpF,WAAW,CAACqF,MAAM,IAAI;AACvCzC,IAAAA,SAAS,CAACvB,MAAM,IAAI;AAChB,YAAMiE,OAAO,GAAG,CAAC,GAAGjE,MAAJ,CAAhB;;AACA,WAAK,IAAIkE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC7B,cAAMC,KAAK,GAAGF,OAAO,CAACzC,KAAR,EAAd;;AACAyC,QAAAA,OAAO,CAACnE,IAAR,CAAaqE,KAAb;AACH;;AACD,aAAOF,OAAP;AACH,KAPQ,CAAT;AAQH,GAT+B,EAS7B,CAAC1C,SAAD,CAT6B,CAAhC;AAWA,QAAM6C,aAAa,GAAGzF,WAAW,CAACqF,MAAM,IAAI;AACxCzC,IAAAA,SAAS,CAACvB,MAAM,IAAI;AAChB,YAAMiE,OAAO,GAAG,CAAC,GAAGjE,MAAJ,CAAhB;;AACA,WAAK,IAAIkE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC7B,cAAMC,KAAK,GAAGF,OAAO,CAAC1E,GAAR,EAAd;;AACA0E,QAAAA,OAAO,CAACI,OAAR,CAAgBF,KAAhB;AACH;;AACD,aAAOF,OAAP;AACH,KAPQ,CAAT;AAQH,GATgC,EAS9B,CAAC1C,SAAD,CAT8B,CAAjC;AAWA,QAAM+C,SAAS,GAAGzF,MAAM,EAAxB;AACA,QAAM0F,OAAO,GAAG5F,WAAW,CAAC,MAAM;AAC9B,UAAM6F,IAAI,GAAG/C,aAAa,CAACM,OAAd,GAAwBP,KAAK,CAACO,OAA3C;;AACA,QAAI,CAACyC,IAAL,EAAW;AACP;AACH;;AACAA,IAAAA,IAAI,GAAG,CAAR,GAAaJ,aAAa,CAACxE,IAAI,CAACC,GAAL,CAAS2E,IAAT,CAAD,CAA1B,GAA6CT,YAAY,CAACS,IAAD,CAAzD;AACArC,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAX,IAAAA,KAAK,CAACO,OAAN,GAAgBN,aAAa,CAACM,OAA9B;AACAY,IAAAA,cAAc,CAACnB,KAAK,CAACO,OAAP,CAAd;AACAoB,IAAAA,UAAU,CAAC,MAAM;AACbmB,MAAAA,SAAS,CAACvC,OAAV,IAAqBuC,SAAS,CAACvC,OAAV,EAArB;AACH,KAFS,EAEP,CAFO,CAAV;AAGH,GAZ0B,EAYxB,CAACP,KAAD,EAAQC,aAAR,EAAuB2C,aAAvB,EAAsCL,YAAtC,EAAoD5B,gBAApD,EAAsEQ,cAAtE,EAAsF2B,SAAtF,CAZwB,CAA3B;AAeA,QAAMG,MAAM,GAAG9F,WAAW,CAAEQ,SAAD,IAAe;AACtC,QAAIwC,QAAQ,CAACI,OAAb,EAAsB;AAClB,UAAI,CAAC5C,SAAL,EAAgB;AAChB,UAAIuF,KAAK,GAAG9C,WAAW,CAACG,OAAZ,IAAuB,EAAnC;AACA2C,MAAAA,KAAK,GAAGzF,MAAM,CAAC,CAAC,GAAGyF,KAAJ,CAAD,EAAavF,SAAb,CAAd;AACAuF,MAAAA,KAAK,GAAGlF,oBAAoB,CAAC,CAAC,GAAGkF,KAAJ,EAAWvF,SAAX,CAAD,EAAwB;AAACM,QAAAA,GAAG,EAAE;AAAN,OAAxB,CAA5B;AACAmC,MAAAA,WAAW,CAACG,OAAZ,GAAsB2C,KAAtB;AACA;AACH;;AACDvF,IAAAA,SAAS,GAAGA,SAAS,IAAKyC,WAAW,CAACG,OAAZ,IAAuBH,WAAW,CAACG,OAAZ,CAAoBP,KAApB,EAAjD;AACA,QAAI,CAACrC,SAAL,EAAgB;AAEhBwC,IAAAA,QAAQ,CAACI,OAAT,GAAmB,IAAnB;AACAI,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAX,IAAAA,KAAK,CAACO,OAAN,IAAiB5C,SAAjB;AACAwD,IAAAA,cAAc,CAACnB,KAAK,CAACO,OAAP,EAAgBZ,UAAhB,CAAd;AACAgC,IAAAA,UAAU,CAAC,MAAM;AACbxB,MAAAA,QAAQ,CAACI,OAAT,GAAmB,KAAnB;AACAwC,MAAAA,OAAO;AACV,KAHS,EAGPzD,iBAHO,CAAV;AAIAiC,IAAAA,kBAAkB,CAAC5D,SAAD,CAAlB;AACH,GArByB,EAqBvB,CAACoF,OAAD,EAAUzD,iBAAV,EAA6B6B,cAA7B,EAA6ChB,QAA7C,EAAuDQ,gBAAvD,EAAyEX,KAAzE,EAAgFL,UAAhF,EAA4F4B,kBAA5F,CArBuB,CAA1B;AAuBAnE,EAAAA,SAAS,CAAC,MAAM;AACZ0F,IAAAA,SAAS,CAACvC,OAAV,GAAoB,CAAC,GAAG4C,GAAJ,KAAYF,MAAM,CAAC,GAAGE,GAAJ,CAAtC;AACH,GAFQ,EAEN,CAACF,MAAD,EAASH,SAAT,CAFM,CAAT;AAIA,QAAMpE,IAAI,GAAGvB,WAAW,CAAC,MAAM;AAC3B,QAAG,CAACgC,MAAJ,EAAY;AACZ8D,IAAAA,MAAM,CAAC,CAAC,CAAF,CAAN;AACH,GAHuB,EAGrB,CAACA,MAAD,EAAS9D,MAAT,CAHqB,CAAxB;AAKA/B,EAAAA,SAAS,CAAC,MAAMuB,UAAU,IAAIA,UAAU,CAACD,IAAD,CAA/B,EAAuC,CAACA,IAAD,EAAOC,UAAP,CAAvC,CAAT;AAEA,QAAMT,IAAI,GAAGf,WAAW,CAAC,MAAM;AAC3B,QAAG,CAACgC,MAAJ,EAAY;AACZ8D,IAAAA,MAAM,CAAC,CAAD,CAAN;AACH,GAHuB,EAGrB,CAACA,MAAD,EAAS9D,MAAT,CAHqB,CAAxB;AAKA/B,EAAAA,SAAS,CAAC,MAAMwB,UAAU,IAAIA,UAAU,CAACV,IAAD,CAA/B,EAAuC,CAACA,IAAD,EAAOU,UAAP,CAAvC,CAAT;AAEA,QAAMC,SAAS,GAAG1B,WAAW,CAAC,MAAI;AAC9B,WAAOsB,UAAU,CAACZ,MAAlB;AACH,GAF4B,EAE1B,CAACY,UAAD,CAF0B,CAA7B;AAIArB,EAAAA,SAAS,CAAC,MAAK0B,eAAe,IAAIA,eAAe,CAACD,SAAD,CAAxC,EAAqD,CAACA,SAAD,EAAYC,eAAZ,CAArD,CAAT;AAEA,QAAMsE,UAAU,GAAGjG,WAAW,CAAC,MAAM;AACjC,QAAIuB,IAAI,GAAGN,IAAI,CAACiF,KAAL,CAAWnD,SAAS,CAACK,OAAV,GAAoBZ,UAA/B,CAAX;;AACA,QAAIV,cAAJ,EAAoB;AAChBP,MAAAA,IAAI,GAAGA,IAAI,GAAGsB,KAAK,CAACO,OAAb,GAAuBP,KAAK,CAACO,OAAN,GAAgB,CAAvC,GAA2CP,KAAK,CAACO,OAAN,GAAgB,CAAlE;AACH;;AACDgB,IAAAA,kBAAkB,CAAC7C,IAAI,GAAGsB,KAAK,CAACO,OAAd,CAAlB;AACAP,IAAAA,KAAK,CAACO,OAAN,GAAgB7B,IAAhB;AACAyC,IAAAA,cAAc,CAACnB,KAAK,CAACO,OAAP,CAAd;AACAJ,IAAAA,QAAQ,CAACI,OAAT,GAAmB,IAAnB;AACAoB,IAAAA,UAAU,CAAC,MAAM;AACboB,MAAAA,OAAO;AACP5C,MAAAA,QAAQ,CAACI,OAAT,GAAmB,KAAnB;AACH,KAHS,EAGPjB,iBAHO,CAAV;AAIH,GAb6B,EAa3B,CAACY,SAAD,EAAYC,QAAZ,EAAsBH,KAAtB,EAA6BL,UAA7B,EAAyCoD,OAAzC,EAAkDzD,iBAAlD,EAAqEL,cAArE,EAAqFkC,cAArF,EAAqGI,kBAArG,CAb2B,CAA9B;AAeA,QAAM+B,SAAS,GAAGnG,WAAW,CAAC,CAACoG,MAAD,EAASC,KAAT,KAAmB;AAC7C,UAAMC,OAAO,GAAID,KAAK,CAACE,IAAN,KAAe,WAAhB,GAA+BF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBF,OAAhD,GAA0DD,KAAK,CAACC,OAAhF;AACAzC,IAAAA,eAAe,CAACyC,OAAO,GAAGF,MAAX,CAAf;AACH,GAH4B,EAG1B,CAACvC,eAAD,CAH0B,CAA7B;AAMA,QAAM4C,SAAS,GAAGzG,WAAW,CAACqG,KAAK,IAAI;AACnC,UAAMK,eAAe,GAAGL,KAAK,CAACvC,MAAN,CAAa6C,OAAb,CAAqB,4BAArB,CAAxB;AACA,QAAI,CAACD,eAAD,IAAoB,CAAC1E,MAAzB,EAAiC;AACjCiB,IAAAA,WAAW,CAACG,OAAZ,GAAsB,EAAtB;AACA,UAAMC,IAAI,GAAGqD,eAAe,CAACnD,qBAAhB,EAAb;AACA,UAAM+C,OAAO,GAAID,KAAK,CAACE,IAAN,KAAe,YAAhB,GAAgCF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBF,OAAjD,GAA2DD,KAAK,CAACC,OAAjF;AACA,UAAMF,MAAM,GAAGE,OAAO,GAAGjD,IAAI,CAACuD,IAAf,GAAsB/D,KAAK,CAACO,OAAN,GAAgBZ,UAArD;AACA,UAAMqE,iBAAiB,GAAGV,SAAS,CAACW,IAAV,CAAe,IAAf,EAAqBV,MAArB,CAA1B;;AAEA,UAAMW,OAAO,GAAG,MAAM;AAClB9B,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwC0B,iBAAxC;AACA5B,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsC4B,OAAtC;AACA9B,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwC0B,iBAAxC;AACA5B,MAAAA,MAAM,CAACE,mBAAP,CAA2B,UAA3B,EAAuC4B,OAAvC;AACAvD,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAyC,MAAAA,UAAU;AACb,KAPD;;AASAhB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqC2B,iBAArC;AACA5B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqC2B,iBAArC;AACA5B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC6B,OAAnC;AACA9B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC6B,OAApC;AACAvD,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAvB4B,EAuB1B,CAACxB,MAAD,EAASwB,gBAAT,EAA2BX,KAA3B,EAAkCL,UAAlC,EAA8CyD,UAA9C,EAA0DE,SAA1D,EAAqElD,WAArE,CAvB0B,CAA7B;AAyBA,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAgC,IAAA,GAAG,EAAElB,MAArC;AAA6C,IAAA,WAAW,EAAE0E,SAA1D;AAAqE,IAAA,YAAY,EAAEA,SAAnF;AACI,IAAA,MAAM,EAAEO,CAAC,IAAIA,CAAC,CAACC,cAAF,EADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK5F,MAAM,IAAIA,MAAM,YAAYqD,KAA5B,IAAqCrD,MAAM,CAACuD,GAAP,CAAW,CAACY,KAAD,EAAQ0B,KAAR,KAAkB;AAC/D,QAAIC,OAAO,GAAG,OAAd;;AACA,QAAIzE,aAAa,GAAG,CAAhB,KAAsB,CAAtB,IAA2BwE,KAAK,KAAKjG,IAAI,CAACC,GAAL,CAAS4B,aAAa,CAACM,OAAvB,IAAkCnC,IAAI,CAACoD,KAAL,CAAW3B,aAAa,GAAG,CAA3B,CAA3E,EAA0G;AACtGyE,MAAAA,OAAO,IAAI,YAAX;AACH;;AACD,WAAQ;AAAI,MAAA,GAAG,EAAE/G,IAAI,CAACgH,KAAL,EAAT;AAAuB,MAAA,SAAS,EAAED,OAAlC;AACI,MAAA,KAAK,EAAE;AAACpC,QAAAA,KAAK,EAAElD,aAAa,IAAI;AAAzB,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACiD2D,KADjD,CAAR;AAEH,GAPqC,CAF1C,CADJ,CADJ;AAeH,CAzQD;;AA0QA,eAAepE,MAAf","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport UUID from \"uuidjs\";\r\nimport style from \"./slider.scss\"\r\n\r\nconst rmLast = (arr, direction) => {\r\n    direction = direction < 0 ? \"next\" : \"prev\";\r\n    let last = arr.length - 1;\r\n    let _arr = [...arr];\r\n    while (last >= 0) {\r\n        if (direction === \"next\" && arr[last] < 0) break;\r\n        if (direction === \"prev\" && arr[last] > 0) break;\r\n        _arr.pop();\r\n        last--;\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst sumLastSameDirection = (arr, {max}) => {\r\n    let _arr = [...arr];\r\n    if (arr.length > 1 && arr[arr.length - 1] * arr[arr.length - 2] > 0) {\r\n        let last = _arr.pop();\r\n        let prev = _arr.pop();\r\n        let sum = last + prev;\r\n        if (max && Math.abs(sum) > max) {\r\n            sum = (sum > 0) ? max : -max;\r\n        }\r\n        _arr.push(sum);\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst Slider = ({\r\n        slides: initSlides,\r\n        next: nextHandle,\r\n        prev: prevHandle,\r\n        getLength: getLengthHandle,\r\n        onChange,\r\n        minSlideWidth = style.minSlideWidth,\r\n        onStepDragging = false\r\n    }) => {\r\n    const slider = useRef();\r\n    const [active, setActive] = useState(false);\r\n    const [overLapRatio] = useState(2);\r\n    const [animationDuration] = useState(parseInt(style.animatioDuration) * 1000);\r\n\r\n    const [_containerRect, setContainerRect] = useState(null);\r\n    const [slideWidth, setSlideWidth] = useState(null);\r\n    const [visibleSlides, setVisibleSlides] = useState(null);\r\n    const [slides, setSlides] = useState(null);\r\n\r\n    const shift = useRef();\r\n    const balancedShift = useRef();\r\n    const translate = useRef();\r\n    const inAction = useRef();\r\n    const actionQueue = useRef();\r\n    const currentSlide = useRef();\r\n\r\n    const containerRect = useCallback(() => {\r\n        if (!slider.current) return 0;\r\n        let rect = _containerRect\r\n        if (!rect) {\r\n            rect = slider.current.parentElement.getBoundingClientRect()\r\n            setContainerRect(rect);\r\n        }\r\n        return rect;\r\n    }, [_containerRect, setContainerRect])\r\n\r\n    const updateTransition = useCallback(value => {\r\n        if (!slider.current) return;\r\n        value ?\r\n            slider.current.classList.add('slider-transition--active')\r\n            :\r\n            slider.current.classList.remove('slider-transition--active')\r\n\r\n    }, [slider])\r\n\r\n    const updateTranslate = useCallback(target => {\r\n        if (!slider.current) return;\r\n        slider.current.style.transform = `translateX(${target}px)`\r\n        translate.current = target;\r\n    }, [slider, translate])\r\n\r\n    const updatePosition = useCallback((position, sWidth) => {\r\n        if (!slider.current || isNaN(position) || !active) return;\r\n        updateTranslate(position * (slideWidth || sWidth));\r\n    }, [slider, slideWidth, updateTranslate, active])\r\n\r\n    const updateCurrentSlide = useCallback((direction = 0) =>{\r\n        let current = currentSlide.current ?? Math.floor(visibleSlides / 2);\r\n        //  console.log(current)\r\n        current = (current - direction) % initSlides.length;\r\n        if(current < 0){\r\n            current = initSlides.length + current;\r\n        }\r\n        currentSlide.current = current;\r\n        onChange && onChange(current);\r\n        console.log(current)\r\n    }, [currentSlide, initSlides, onChange, visibleSlides])\r\n\r\n    useEffect(()=>{\r\n        if(!visibleSlides) return;\r\n        setTimeout(() => updateCurrentSlide(), 0);\r\n    }, [visibleSlides, updateCurrentSlide])\r\n\r\n    useEffect(() => {\r\n        if (!visibleSlides || visibleSlides > initSlides.length) {\r\n            setSlides(initSlides);\r\n            return;\r\n        }\r\n        setActive(true);\r\n\r\n        let slides = [].concat(Array(overLapRatio * 2 + 1).fill(1).map(() => initSlides)).flat();\r\n        setSlides(slides);\r\n    }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!containerRect || !minSlideWidth || !slider.current) return;\r\n        const containerWidth = containerRect().width;\r\n        const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\r\n        setVisibleSlides(visibleSlides);\r\n\r\n    }, [containerRect, minSlideWidth, slider, setVisibleSlides])\r\n\r\n    useEffect(() => {\r\n        if (!slides) return;\r\n        shift.current = -initSlides.length * overLapRatio;\r\n        balancedShift.current = shift.current;\r\n        updatePosition(shift.current);\r\n    }, [slideWidth, updatePosition, shift, balancedShift, initSlides, slides, overLapRatio])\r\n\r\n    useEffect(() => {\r\n        const resetSize = () => setContainerRect(null);\r\n        window.addEventListener(\"resize\", resetSize);\r\n        return () => window.removeEventListener(\"resize\", resetSize);\r\n    }, [setContainerRect])\r\n\r\n    useEffect(() => {\r\n        if (!visibleSlides || !containerRect || !slides) return;\r\n        const slideWidth = containerRect().width / visibleSlides\r\n        setSlideWidth(slideWidth);\r\n        let width = slideWidth * slides.length;\r\n        if(visibleSlides > slides.length) {\r\n            width = containerRect().width;\r\n        }\r\n        slider.current.style.width = width  + \"px\";\r\n    }, [containerRect, visibleSlides, slides]);\r\n\r\n\r\n\r\n    const appendSlides = useCallback(amount => {\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.shift();\r\n                _slides.push(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const prependSlides = useCallback(amount => {\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.pop();\r\n                _slides.unshift(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const actionRef = useRef();\r\n    const balance = useCallback(() => {\r\n        const diff = balancedShift.current - shift.current;\r\n        if (!diff) {\r\n            return;\r\n        }\r\n        (diff < 0) ? prependSlides(Math.abs(diff)) : appendSlides(diff);\r\n        updateTransition(false);\r\n        shift.current = balancedShift.current;\r\n        updatePosition(shift.current);\r\n        setTimeout(() => {\r\n            actionRef.current && actionRef.current();\r\n        }, 0)\r\n    }, [shift, balancedShift, prependSlides, appendSlides, updateTransition, updatePosition, actionRef])\r\n\r\n\r\n    const action = useCallback((direction) => {\r\n        if (inAction.current) {\r\n            if (!direction) return;\r\n            let queue = actionQueue.current || [];\r\n            queue = rmLast([...queue], direction);\r\n            queue = sumLastSameDirection([...queue, direction], {max: 3})\r\n            actionQueue.current = queue;\r\n            return;\r\n        }\r\n        direction = direction || (actionQueue.current && actionQueue.current.shift());\r\n        if (!direction) return;\r\n\r\n        inAction.current = true;\r\n        updateTransition(true);\r\n        shift.current += direction;\r\n        updatePosition(shift.current, slideWidth);\r\n        setTimeout(() => {\r\n            inAction.current = false;\r\n            balance();\r\n        }, animationDuration);\r\n        updateCurrentSlide(direction);\r\n    }, [balance, animationDuration, updatePosition, inAction, updateTransition, shift, slideWidth, updateCurrentSlide])\r\n\r\n    useEffect(() => {\r\n        actionRef.current = (...arg) => action(...arg);\r\n    }, [action, actionRef])\r\n\r\n    const next = useCallback(() => {\r\n        if(!active) return ;\r\n        action(-1);\r\n    }, [action, active])\r\n\r\n    useEffect(() => nextHandle && nextHandle(next), [next, nextHandle])\r\n\r\n    const prev = useCallback(() => {\r\n        if(!active) return ;\r\n        action(1);\r\n    }, [action, active])\r\n\r\n    useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle]);\r\n\r\n    const getLength = useCallback(()=>{\r\n        return initSlides.length;\r\n    }, [initSlides])\r\n\r\n    useEffect(()=> getLengthHandle && getLengthHandle(getLength), [getLength, getLengthHandle])\r\n\r\n    const endDraging = useCallback(() => {\r\n        let next = Math.round(translate.current / slideWidth);\r\n        if (onStepDragging) {\r\n            next = next > shift.current ? shift.current + 1 : shift.current - 1;\r\n        }\r\n        updateCurrentSlide(next - shift.current );\r\n        shift.current = next;\r\n        updatePosition(shift.current);\r\n        inAction.current = true;\r\n        setTimeout(() => {\r\n            balance();\r\n            inAction.current = false;\r\n        }, animationDuration);\r\n    }, [translate, inAction, shift, slideWidth, balance, animationDuration, onStepDragging, updatePosition, updateCurrentSlide])\r\n\r\n    const mouseMove = useCallback((shiftX, event) => {\r\n        const clientX = (event.type === \"touchmove\") ? event.touches[0].clientX : event.clientX;\r\n        updateTranslate(clientX - shiftX);\r\n    }, [updateTranslate])\r\n\r\n\r\n    const mouseDown = useCallback(event => {\r\n        const sliderContainer = event.target.closest(\".carousel-slider-container\");\r\n        if (!sliderContainer || !active) return;\r\n        actionQueue.current = [];\r\n        const rect = sliderContainer.getBoundingClientRect();\r\n        const clientX = (event.type === \"touchstart\") ? event.touches[0].clientX : event.clientX;\r\n        const shiftX = clientX - rect.left - shift.current * slideWidth;\r\n        const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\r\n\r\n        const mouseUp = () => {\r\n            window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\r\n            window.removeEventListener(\"mouseup\", mouseUp);\r\n            window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\r\n            window.removeEventListener(\"touchend\", mouseUp)\r\n            updateTransition(true);\r\n            endDraging();\r\n        }\r\n\r\n        window.addEventListener(\"mousemove\", mouseMoveWithArgs);\r\n        window.addEventListener(\"touchmove\", mouseMoveWithArgs);\r\n        window.addEventListener(\"mouseup\", mouseUp);\r\n        window.addEventListener(\"touchend\", mouseUp);\r\n        updateTransition(false);\r\n    }, [active, updateTransition, shift, slideWidth, endDraging, mouseMove, actionQueue])\r\n\r\n    return (\r\n        <div className=\"carousel-slider-container\">\r\n            <ul className=\"carousel-slider\" ref={slider} onMouseDown={mouseDown} onTouchStart={mouseDown}\r\n                onDrag={e => e.preventDefault()}>\r\n                {slides && slides instanceof Array && slides.map((slide, index) => {\r\n                    let classes = \"slide\";\r\n                    if (visibleSlides % 2 !== 0 && index === Math.abs(balancedShift.current) + Math.floor(visibleSlides / 2)) {\r\n                        classes += \" slide-mid\";\r\n                    }\r\n                    return (<li key={UUID.genV1()} className={classes}\r\n                                style={{width: minSlideWidth || \"initial\"}}>{slide}</li>)\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}