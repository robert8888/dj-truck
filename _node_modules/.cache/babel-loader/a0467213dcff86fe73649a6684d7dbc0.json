{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Deck\\\\Looper\\\\MiniSlider\\\\MiniSlider.js\";\nimport React from \"react\";\nimport withRefSize from \"./../../../../common/HOC/withRefSize\";\nimport \"./mini-slider.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nclass MiniSlider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.ref = React.createRef();\n    this.state = {\n      currentSlide: this.props.initValue || 0\n    };\n    this.props.onChange && this.props.onChange(this.state.currentSlide);\n  }\n\n  changeSlide(event) {\n    let nextSlide = this.state.currentSlide;\n    let x = event.clientX - event.target.getBoundingClientRect().left;\n    const clickSide = x > this.props.size.container.width / 2 ? \"right\" : \"left\";\n\n    if (clickSide === \"right\" && nextSlide < this.props.renderItems.length - 1) {\n      nextSlide++;\n    } else if (clickSide === \"left\" && nextSlide >= 1) {\n      nextSlide--;\n    }\n\n    this.setState({ ...this.state,\n      currentSlide: nextSlide\n    });\n    this.props.onChange && this.props.onChange(nextSlide);\n  }\n\n  render() {\n    const listStyle = {\n      transform: \"translateX(-\" + this.state.currentSlide + \"00%)\"\n    };\n    const hocEvnetsHandlers = this.props.evnetsHandlers || {};\n    const classNames = this.props.className || \"\";\n    return React.createElement(\"div\", {\n      className: \"slider-container \" + classNames,\n      onClick: this.changeSlide.bind(this),\n      ref: this.props.exportRef.bind(this, \"container\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faCircle,\n      className: \"ctr ctr-minus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faCircle,\n      className: \"ctr ctr-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"slider-list\",\n      style: listStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.renderItems.map(item => item)));\n  }\n\n}\n\nexport default withRefSize(MiniSlider);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/app/components/Console/Deck/Looper/MiniSlider/MiniSlider.js"],"names":["React","withRefSize","FontAwesomeIcon","faCircle","MiniSlider","Component","constructor","args","ref","createRef","state","currentSlide","props","initValue","onChange","changeSlide","event","nextSlide","x","clientX","target","getBoundingClientRect","left","clickSide","size","container","width","renderItems","length","setState","render","listStyle","transform","hocEvnetsHandlers","evnetsHandlers","classNames","className","bind","exportRef","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAO,oBAAP;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,mCAAzB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAM,GAAGA,IAAT;AACA,SAAKC,GAAL,GAAWR,KAAK,CAACS,SAAN,EAAX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,KAAKC,KAAL,CAAWC,SAAX,IAAwB;AAD3B,KAAb;AAGC,SAAKD,KAAL,CAAWE,QAAX,IAAuB,KAAKF,KAAL,CAAWE,QAAX,CAAoB,KAAKJ,KAAL,CAAWC,YAA/B,CAAxB;AACD;;AAGDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAIC,SAAS,GAAG,KAAKP,KAAL,CAAWC,YAA3B;AAEA,QAAIO,CAAC,GAAGF,KAAK,CAACG,OAAN,GAAiBH,KAAK,CAACI,MAAN,CAAaC,qBAAb,GAAqCC,IAA9D;AAGA,UAAMC,SAAS,GAAKL,CAAC,GAAG,KAAKN,KAAL,CAAWY,IAAX,CAAgBC,SAAhB,CAA0BC,KAA1B,GAAkC,CAAxC,GAA6C,OAA7C,GAAuD,MAAzE;;AACA,QAAIH,SAAS,KAAK,OAAd,IAAyBN,SAAS,GAAG,KAAKL,KAAL,CAAWe,WAAX,CAAuBC,MAAvB,GAAgC,CAAzE,EAA4E;AAC1EX,MAAAA,SAAS;AACV,KAFD,MAEO,IAAIM,SAAS,KAAK,MAAd,IAAwBN,SAAS,IAAI,CAAzC,EAA4C;AACjDA,MAAAA,SAAS;AACV;;AACD,SAAKY,QAAL,CAAc,EAAE,GAAG,KAAKnB,KAAV;AAAiBC,MAAAA,YAAY,EAAEM;AAA/B,KAAd;AACC,SAAKL,KAAL,CAAWE,QAAX,IAAuB,KAAKF,KAAL,CAAWE,QAAX,CAAoBG,SAApB,CAAxB;AACD;;AAGDa,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG;AAChBC,MAAAA,SAAS,EAAE,iBAAiB,KAAKtB,KAAL,CAAWC,YAA5B,GAA2C;AADtC,KAAlB;AAIA,UAAMsB,iBAAiB,GAAG,KAAKrB,KAAL,CAAWsB,cAAX,IAA6B,EAAvD;AACA,UAAMC,UAAU,GAAG,KAAKvB,KAAL,CAAWwB,SAAX,IAAwB,EAA3C;AAEA,WACE;AACE,MAAA,SAAS,EAAE,sBAAsBD,UADnC;AAEE,MAAA,OAAO,EAAE,KAAKpB,WAAL,CAAiBsB,IAAjB,CAAsB,IAAtB,CAFX;AAGE,MAAA,GAAG,EAAE,KAAKzB,KAAL,CAAW0B,SAAX,CAAqBD,IAArB,CAA0B,IAA1B,EAAgC,WAAhC,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAElC,QAAvB;AAAiC,MAAA,SAAS,EAAC,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEA,QAAvB;AAAiC,MAAA,SAAS,EAAC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,KAAK,EAAE4B,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWe,WAAX,CAAuBY,GAAvB,CAA2BC,IAAI,IAAIA,IAAnC,CADH,CANJ,CADF;AAYD;;AAhDsC;;AAmDzC,eAAevC,WAAW,CAACG,UAAD,CAA1B","sourcesContent":["import React from \"react\";\r\nimport withRefSize from \"./../../../../common/HOC/withRefSize\";\r\nimport \"./mini-slider.scss\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass MiniSlider extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.ref = React.createRef();\r\n    this.state = {\r\n      currentSlide: this.props.initValue || 0,\r\n    };\r\n    (this.props.onChange && this.props.onChange(this.state.currentSlide))\r\n  }\r\n\r\n\r\n  changeSlide(event) {\r\n    let nextSlide = this.state.currentSlide;\r\n    \r\n    let x = event.clientX  - event.target.getBoundingClientRect().left;\r\n\r\n\r\n    const clickSide = ( x > this.props.size.container.width / 2) ? \"right\" : \"left\";\r\n    if (clickSide === \"right\" && nextSlide < this.props.renderItems.length - 1) {\r\n      nextSlide++;\r\n    } else if (clickSide === \"left\" && nextSlide >= 1) {\r\n      nextSlide--;\r\n    }\r\n    this.setState({ ...this.state, currentSlide: nextSlide });\r\n    (this.props.onChange && this.props.onChange(nextSlide))\r\n  }\r\n\r\n\r\n  render() {\r\n    const listStyle = {\r\n      transform: \"translateX(-\" + this.state.currentSlide + \"00%)\",\r\n    };\r\n\r\n    const hocEvnetsHandlers = this.props.evnetsHandlers || {};\r\n    const classNames = this.props.className || \"\";\r\n\r\n    return (\r\n      <div\r\n        className={\"slider-container \" + classNames}\r\n        onClick={this.changeSlide.bind(this)}\r\n        ref={this.props.exportRef.bind(this, \"container\")}>\r\n          <FontAwesomeIcon icon={faCircle} className=\"ctr ctr-minus\" />\r\n          <FontAwesomeIcon icon={faCircle} className=\"ctr ctr-plus\" />\r\n          <ul className=\"slider-list\" style={listStyle}>\r\n            {this.props.renderItems.map(item => item)}\r\n          </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRefSize(MiniSlider);\r\n"]},"metadata":{},"sourceType":"module"}