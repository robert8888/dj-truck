{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecords\\\\UserRecords.js\";\nimport queryString from \"query-string\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Container, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { reqRecs, setFooterType } from \"./../../actions\";\nimport { useAuth0 } from \"./../../auth0/react-auth0-spa\";\nimport Pagin from \"./../common/components/Pagin/Pagin\";\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\nimport RecordSearch from \"./../common/components/RecordSearch/RecordSearch\";\nimport UserProfile from \"./../common/components/UserProfile/UserProfile\";\nimport { usePlayer } from \"./../common/Hooks/usePlayer\";\nimport useRecordSearchUrl from \"./../common/Hooks/useRecordSearchURL\";\nimport \"./user-records.scss\";\nconst UserRecords = React.memo(({\n  setFooter,\n  requestList,\n  userId,\n  isCurrentUser,\n  // searchQuery,\n  recordsList,\n  countAll\n}) => {\n  ///-----------Turn of footer--------------------\n  useEffect(() => {\n    console.log(\"settin ffoter player\");\n    setFooter(\"player\");\n  }, [setFooter]); //--------------------------------\n\n  const [controls, player] = usePlayer(); //-------------------------\n\n  const {\n    loading,\n    isAuthenticated\n  } = useAuth0();\n  const [pageTitle, setPageTitle] = useState(\"Records\");\n  const [displaySearch, setSearchDisplaing] = useState(false);\n  const [getSerachUrl] = useRecordSearchUrl();\n  const history = useHistory();\n  const {\n    user: nickname,\n    genres\n  } = useParams();\n  const queryStr = useLocation().search;\n  let {\n    pageSize,\n    page,\n    preloaded,\n    searchOpt,\n    _genres,\n    search: searchQuery\n  } = useMemo(() => {\n    const values = queryString.parse(queryStr);\n    return {\n      pageSize: +values.pageSize,\n      page: +values.page,\n      preloaded: values.preloaded,\n      current: values.current,\n      searchOpt: values.searchOpt,\n      _genres: values.genres,\n      search: values.search\n    };\n  }, [queryStr]);\n  const [_pageSize, setPageSize] = useState(20);\n  const [_page, setPage] = useState(0);\n  useEffect(() => {\n    if (preloaded && recordsList.length > 0 || loading) {\n      return;\n    }\n\n    if (isAuthenticated && !userId) {\n      return;\n    }\n\n    let pg = page || 0;\n    let pgSize = pageSize || _pageSize;\n    let searchConsole = true;\n    const where = {};\n\n    if (searchQuery) {\n      where.query = searchQuery;\n\n      if (searchOpt) {\n        let opt = searchOpt.split(',');\n        where.queryOpt = opt;\n      }\n\n      setPageTitle(\"Search: \" + searchQuery);\n    }\n\n    if (genres) {\n      where.genreNames = genres.split(\",\");\n    }\n\n    if (_genres) {\n      where.genreNames = _genres.split(\",\");\n    }\n\n    if (nickname) {\n      where.nickname = nickname;\n      setPageTitle(nickname + \" user records\");\n      searchConsole = false;\n    } else if (userId && isCurrentUser) {\n      where.userId = userId;\n      setPageTitle(\"Your records\");\n      searchConsole = false;\n    }\n\n    setSearchDisplaing(searchConsole);\n    requestList(pgSize, pg, where);\n    setPageSize(pgSize);\n    setPage(pg);\n  }, [userId, requestList, _pageSize, page, pageSize, preloaded, setPageTitle, searchQuery, genres, _genres, loading, isAuthenticated, isCurrentUser, nickname, searchOpt, recordsList.length]);\n  const getNextPageUrl = useCallback((page, pageSize) => {\n    let url = window.location.pathname;\n    url += '?pageSize=' + pageSize;\n    url += '&page=' + page;\n    let search = window.location.search;\n    search = search.replace(/pageSize=\\d+/, '');\n    search = search.replace(/&page=\\d+/, '');\n    search = search.replace('?', '&');\n    url += search;\n    url = url.replace(/&{2,}/g, \"&\");\n    return url;\n  }, []);\n  const changePageSize = useCallback(pageSize => {\n    history.push(getNextPageUrl(_page, pageSize));\n  }, [history, _page, getNextPageUrl]);\n  const goToPage = useCallback(page => {\n    history.push(getNextPageUrl(page, _pageSize));\n  }, [history, _pageSize, getNextPageUrl]);\n  const onSearch = useCallback((queryStr, searchOpt) => {\n    if (!queryStr) {\n      history.push(\"/records\");\n    }\n\n    const url = getSerachUrl(queryStr, {\n      searchOpt,\n      searchParams: {\n        genres: [genres, _genres]\n      }\n    });\n    history.push(url);\n  }, [history, getSerachUrl, _genres, genres]);\n  return React.createElement(Container, {\n    className: \"app layout container-xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-records\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, nickname && React.createElement(UserProfile, {\n    nickname: nickname,\n    withGenres: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), displaySearch && React.createElement(RecordSearch, {\n    title: \"Dj Truck Records\",\n    onSearch: onSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"user-records-top-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, pageTitle), React.createElement(DropdownButton, {\n    alignRight: true,\n    className: \"btn-pagger\",\n    title: _pageSize + \" on page \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \" 10 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 20),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \" 20 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 30),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \" 30 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 50),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \" 50 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 75),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \" 75 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 100),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \" 100 \"))), React.createElement(RecordsList, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(Pagin, {\n    current: _page,\n    call: goToPage,\n    all: Math.floor(countAll / _pageSize),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(PlayerControls, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  })));\n});\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId,\n  userNickname: state.user.nickname\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (pageSize, page, where) => dispatch(reqRecs(pageSize, page, where)),\n  setFooter: type => dispatch(setFooterType(type))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecords/UserRecords.js"],"names":["queryString","React","useCallback","useEffect","useMemo","useState","Container","Dropdown","DropdownButton","connect","useHistory","useLocation","useParams","reqRecs","setFooterType","useAuth0","Pagin","PlayerControls","RecordsList","RecordSearch","UserProfile","usePlayer","useRecordSearchUrl","UserRecords","memo","setFooter","requestList","userId","isCurrentUser","recordsList","countAll","console","log","controls","player","loading","isAuthenticated","pageTitle","setPageTitle","displaySearch","setSearchDisplaing","getSerachUrl","history","user","nickname","genres","queryStr","search","pageSize","page","preloaded","searchOpt","_genres","searchQuery","values","parse","current","_pageSize","setPageSize","_page","setPage","length","pg","pgSize","searchConsole","where","query","opt","split","queryOpt","genreNames","getNextPageUrl","url","window","location","pathname","replace","changePageSize","push","goToPage","onSearch","searchParams","bind","Math","floor","mapStateToProps","state","records","list","dbId","userNickname","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import queryString from \"query-string\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport {Container, Dropdown, DropdownButton} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { reqRecs, setFooterType } from \"./../../actions\";\r\nimport { useAuth0 } from \"./../../auth0/react-auth0-spa\";\r\nimport Pagin from \"./../common/components/Pagin/Pagin\";\r\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\r\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\r\nimport RecordSearch from \"./../common/components/RecordSearch/RecordSearch\";\r\nimport UserProfile from \"./../common/components/UserProfile/UserProfile\";\r\nimport { usePlayer } from \"./../common/Hooks/usePlayer\";\r\nimport useRecordSearchUrl from \"./../common/Hooks/useRecordSearchURL\";\r\nimport \"./user-records.scss\";\r\n\r\nconst UserRecords = React.memo(({\r\n    setFooter,\r\n    requestList,\r\n    userId,\r\n    isCurrentUser,\r\n   // searchQuery,\r\n    recordsList,\r\n    countAll }) => {\r\n    ///-----------Turn of footer--------------------\r\n\r\n    useEffect(() => {\r\n        console.log(\"settin ffoter player\")\r\n        setFooter(\"player\")\r\n    }, [setFooter])\r\n    //--------------------------------\r\n\r\n    const [controls, player] = usePlayer();\r\n    //-------------------------\r\n    const { loading, isAuthenticated } = useAuth0();\r\n    const [pageTitle, setPageTitle] = useState(\"Records\");\r\n    const [displaySearch, setSearchDisplaing] = useState(false);\r\n    const [getSerachUrl] = useRecordSearchUrl();\r\n    const history = useHistory();\r\n    const { user: nickname, genres } = useParams();\r\n\r\n\r\n    const queryStr = useLocation().search;\r\n    let { pageSize, page, preloaded, searchOpt, _genres , search:searchQuery} = useMemo(() => {\r\n        const values = queryString.parse(queryStr)\r\n        return {\r\n            pageSize: +values.pageSize,\r\n            page: +values.page,\r\n            preloaded: values.preloaded,\r\n            current: values.current,\r\n            searchOpt: values.searchOpt,\r\n            _genres: values.genres,\r\n            search: values.search\r\n        }\r\n    }, [queryStr])\r\n\r\n    const [_pageSize, setPageSize] = useState(20);\r\n    const [_page, setPage] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if ((preloaded && recordsList.length > 0) || loading) { return }\r\n\r\n        if (isAuthenticated && !userId) { return }\r\n        let pg = page || 0;\r\n        let pgSize = pageSize || _pageSize;\r\n\r\n        let searchConsole = true;\r\n\r\n        const where = {};\r\n        if (searchQuery) {\r\n            where.query = searchQuery;\r\n            if (searchOpt) {\r\n                let opt = searchOpt.split(',');\r\n                where.queryOpt = opt;\r\n            }\r\n            setPageTitle(\"Search: \" + searchQuery)\r\n\r\n        }\r\n\r\n        if (genres) {\r\n            where.genreNames = genres.split(\",\");\r\n        }\r\n         \r\n        if(_genres){\r\n            where.genreNames = _genres.split(\",\")\r\n        }\r\n\r\n        if (nickname) {\r\n            where.nickname = nickname;\r\n            setPageTitle(nickname + \" user records\")\r\n            searchConsole = false;\r\n        } else if (userId && isCurrentUser) {\r\n            where.userId = userId;\r\n            setPageTitle(\"Your records\")\r\n            searchConsole = false;\r\n        }\r\n        \r\n\r\n        setSearchDisplaing(searchConsole);\r\n\r\n        requestList(pgSize, pg, where);\r\n        setPageSize(pgSize);\r\n        setPage(pg)\r\n\r\n    }, [userId,\r\n        requestList,\r\n        _pageSize,\r\n        page,\r\n        pageSize,\r\n        preloaded,\r\n        setPageTitle,\r\n        searchQuery,\r\n        genres,\r\n        _genres,\r\n        loading,\r\n        isAuthenticated,\r\n        isCurrentUser,\r\n        nickname,\r\n        searchOpt,\r\n        recordsList.length,\r\n    ])\r\n\r\n    const getNextPageUrl = useCallback((page, pageSize) => {\r\n        let url = window.location.pathname;\r\n        url += '?pageSize=' + pageSize;\r\n        url += '&page=' + page;\r\n        let search = window.location.search;\r\n        search = search.replace(/pageSize=\\d+/, '');\r\n        search = search.replace(/&page=\\d+/, '');\r\n        search = search.replace('?', '&');\r\n        url += search;\r\n        url = url.replace(/&{2,}/g, \"&\");\r\n        return url;\r\n    }, [])\r\n\r\n    const changePageSize = useCallback((pageSize) => {\r\n        history.push(getNextPageUrl(_page, pageSize));\r\n    }, [history, _page, getNextPageUrl])\r\n\r\n    const goToPage = useCallback((page) => {\r\n        history.push(getNextPageUrl(page, _pageSize))\r\n    }, [history, _pageSize, getNextPageUrl])\r\n\r\n    const onSearch = useCallback((queryStr, searchOpt) => {\r\n        if(!queryStr){\r\n            history.push(\"/records\")\r\n        }\r\n        const url = getSerachUrl(queryStr, {\r\n            searchOpt,\r\n            searchParams: { genres: [genres, _genres] }\r\n        })\r\n\r\n        history.push(url);\r\n    }, [history, getSerachUrl, _genres, genres])\r\n\r\n    \r\n    return (\r\n        <Container className=\"app layout container-xl\" >\r\n            <div className=\"user-records\">\r\n                {nickname && <UserProfile nickname={nickname} withGenres/>}\r\n                {displaySearch && <RecordSearch title=\"Dj Truck Records\" onSearch={onSearch} />}\r\n                <div className=\"user-records-top-bar\">\r\n                    <h2 className=\"title\">{pageTitle}</h2>\r\n                    <DropdownButton\r\n                        alignRight\r\n                        className=\"btn-pagger\"\r\n                        title={_pageSize + \" on page \"}>\r\n                        <Dropdown.Item onClick={changePageSize.bind(null, 10)}> 10 </Dropdown.Item>\r\n                        <Dropdown.Item onClick={changePageSize.bind(null, 20)}> 20 </Dropdown.Item>\r\n                        <Dropdown.Item onClick={changePageSize.bind(null, 30)}> 30 </Dropdown.Item>\r\n                        <Dropdown.Item onClick={changePageSize.bind(null, 50)}> 50 </Dropdown.Item>\r\n                        <Dropdown.Item onClick={changePageSize.bind(null, 75)}> 75 </Dropdown.Item>\r\n                        <Dropdown.Item onClick={changePageSize.bind(null, 100)}> 100 </Dropdown.Item>\r\n                    </DropdownButton>\r\n                </div>\r\n\r\n                <RecordsList\r\n                    list={recordsList}\r\n                    controls={controls}\r\n                    player={player} />\r\n                <Pagin\r\n                    current={_page}\r\n                    call={goToPage}\r\n                    all={Math.floor(countAll / _pageSize)} />\r\n                <PlayerControls\r\n                    list={recordsList}\r\n                    controls={controls}\r\n                    player={player} />\r\n            </div>\r\n        </Container>\r\n    )\r\n    \r\n\r\n\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n    userNickname: state.user.nickname,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (pageSize, page, where) => dispatch(reqRecs(pageSize, page, where)),\r\n    setFooter : (type) => dispatch(setFooterType(type))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords)\r\n"]},"metadata":{},"sourceType":"module"}