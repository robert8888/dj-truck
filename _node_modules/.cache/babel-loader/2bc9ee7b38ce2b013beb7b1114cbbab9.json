{"ast":null,"code":"import { Log, Logger } from \"./../../utils/logger/logger\";\nconst apiUrl = process.env.REACT_APP_SC_API_URL;\nconst maxResults = 10;\nexport async function search(query = \"\", limit = maxResults) {\n  const publicErrorMsg = `Sorry during conectig to soundcloud api occured problem. Searching the soundlcoud database is not posible in this moment`;\n  const comand = \"/api/search?q=\";\n  const options = '&maxResults=' + limit;\n  const url = apiUrl + comand + encodeURI(query) + options;\n  let data = await fetch(url).then(res => res.json()).catch(error => {\n    Logger.push(Log.Error(['api', 'soundcloud', 'search'], \"Can't recive search data from soundcloud\" + error.message, publicErrorMsg, error));\n  });\n  return data;\n}\nexport default {\n  search,\n  getUrl: id => {\n    return apiUrl + `/api/download?id=` + id;\n  },\n  getStreamUrl: id => {\n    return apiUrl + `/api/stream?id=` + id;\n  },\n  getUrlToExternall: async id => {\n    const trackData = await fetch(apiUrl + \"/api/resolve\").then(res => res.json());\n    if (!trackData) return \"www.soundcloud.com\";\n    return trackData === null || trackData === void 0 ? void 0 : trackData.permalink_url;\n  }\n};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/apis/sc/scApi.js"],"names":["Log","Logger","apiUrl","process","env","REACT_APP_SC_API_URL","maxResults","search","query","limit","publicErrorMsg","comand","options","url","encodeURI","data","fetch","then","res","json","catch","error","push","Error","message","getUrl","id","getStreamUrl","getUrlToExternall","trackData","permalink_url"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,6BAA5B;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA3B;AACA,MAAMC,UAAU,GAAG,EAAnB;AAGA,OAAO,eAAeC,MAAf,CAAsBC,KAAK,GAAG,EAA9B,EAAkCC,KAAK,GAAGH,UAA1C,EAAsD;AACzD,QAAMI,cAAc,GAAK,0HAAzB;AAEA,QAAMC,MAAM,GAAG,gBAAf;AACA,QAAMC,OAAO,GAAG,iBAAiBH,KAAjC;AACA,QAAMI,GAAG,GAAGX,MAAM,GAAGS,MAAT,GAAkBG,SAAS,CAACN,KAAD,CAA3B,GAAqCI,OAAjD;AAEA,MAAIG,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAL,CAAWI,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EAAmCC,KAAnC,CAA0CC,KAAK,IAAI;AAChEpB,IAAAA,MAAM,CAACqB,IAAP,CAAYtB,GAAG,CAACuB,KAAJ,CACR,CAAC,KAAD,EAAQ,YAAR,EAAsB,QAAtB,CADQ,EAER,6CAA6CF,KAAK,CAACG,OAF3C,EAGRd,cAHQ,EAIRW,KAJQ,CAAZ;AAMH,GAPgB,CAAjB;AASA,SAAON,IAAP;AACH;AAED,eAAe;AACXR,EAAAA,MADW;AAGXkB,EAAAA,MAAM,EAAGC,EAAD,IAAQ;AACZ,WAAOxB,MAAM,GAAI,mBAAV,GAA+BwB,EAAtC;AACH,GALU;AAOXC,EAAAA,YAAY,EAAGD,EAAD,IAAQ;AAClB,WAAOxB,MAAM,GAAI,iBAAV,GAA6BwB,EAApC;AACH,GATU;AAWXE,EAAAA,iBAAiB,EAAE,MAAOF,EAAP,IAAc;AAC7B,UAAMG,SAAS,GAAG,MAAMb,KAAK,CAACd,MAAM,GAAG,cAAV,CAAL,CAA+Be,IAA/B,CAAqCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA5C,CAAxB;AACA,QAAG,CAACU,SAAJ,EAAe,OAAO,oBAAP;AAEf,WAAOA,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAEC,aAAlB;AACH;AAhBU,CAAf","sourcesContent":["import { Log, Logger } from \"./../../utils/logger/logger\";\r\n\r\nconst apiUrl = process.env.REACT_APP_SC_API_URL;\r\nconst maxResults = 10\r\n\r\n\r\nexport async function search(query = \"\", limit = maxResults) {\r\n    const publicErrorMsg =  `Sorry during conectig to soundcloud api occured problem. Searching the soundlcoud database is not posible in this moment`\r\n   \r\n    const comand = \"/api/search?q=\";\r\n    const options = '&maxResults=' + limit;\r\n    const url = apiUrl + comand + encodeURI(query) + options;\r\n\r\n    let data = await fetch(url).then(res => res.json()).catch( error => {\r\n        Logger.push(Log.Error(\r\n            ['api', 'soundcloud', 'search'],\r\n            \"Can't recive search data from soundcloud\" + error.message,\r\n            publicErrorMsg,\r\n            error\r\n        ))\r\n    });\r\n\r\n    return data;\r\n}\r\n\r\nexport default {\r\n    search,\r\n\r\n    getUrl: (id) => {\r\n        return apiUrl + `/api/download?id=` + id;\r\n    },\r\n\r\n    getStreamUrl: (id) => {\r\n        return apiUrl + `/api/stream?id=` + id;\r\n    },\r\n\r\n    getUrlToExternall: async (id) => {\r\n        const trackData = await fetch(apiUrl + \"/api/resolve\").then( res => res.json());\r\n        if(!trackData) return \"www.soundcloud.com\";\r\n\r\n        return trackData?.permalink_url;\r\n    }\r\n} \r\n"]},"metadata":{},"sourceType":"module"}