{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\console\\\\components\\\\common\\\\RangeSlider\\\\Slider.js\";\nimport React from \"react\";\nimport debounce from \"lodash/debounce\";\nimport \"./slider.scss\"; //props\n//from - \n//to \n//onChange\n//value\n//step\n//stick-zero\n//vertival or horizontal\n\nclass Slider extends React.Component {\n  //helper\n  preventDrag(e) {\n    e.preventDefault();\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      sliderRange: null,\n      sliderCurrnetPosition: null,\n      sliderPrevPosition: null,\n      isDragged: false,\n      isTemp: false,\n      // is temporary value return as second arguemnt onChange callback\n      thumbSize: 0,\n      sliderAreaOffset: 0\n    };\n\n    this.getPostion = value => {\n      const {\n        from,\n        range\n      } = this.getRange();\n      const progress = (value - from) / range;\n      const position = progress * this.state.sliderRange;\n      return position + this.state.thumbSize / 2;\n    };\n\n    this.evalValue = position => {\n      const {\n        from,\n        range\n      } = this.getRange(this.props.from, this.props.to);\n      const progress = (position - this.state.thumbSize / 2) / this.state.sliderRange;\n      let value = range * progress + from;\n      return value;\n    };\n\n    this.setValue = value => {\n      const {\n        from,\n        range\n      } = this.getRange();\n      const progress = (value - from) / range;\n      const position = progress * this.state.sliderRange;\n      this.setPosition(position + this.state.thumbSize / 2);\n    };\n\n    this.setPosition = (currentPosition, prevPosition) => {\n      let position = this.boundPosition(currentPosition);\n      this.setState({ ...this.state,\n        sliderCurrnetPosition: position,\n        sliderPrevPosition: prevPosition || this.state.sliderPrevPosition\n      }, () => {\n        if (this.props.onChange) {\n          this.props.onChange(this.evalValue(this.state.sliderCurrnetPosition), this.state.isTemp);\n        }\n      });\n      this.updateStyles();\n    };\n\n    this.mouseDownHandle = event => {\n      if (event.target === this.sliderAreaElement.current || event.target === this.sliderRangeElement.current) {\n        //temporary jummp\n        this.setState({ ...this.state,\n          isTemp: true\n        });\n        const rect = this.sliderAreaElement.current.getBoundingClientRect();\n        const position = this.props.horizontal ? event.clientX - rect.left : event.clientY - rect.top;\n        const current = this.state.sliderCurrnetPosition || this.getPostion(this.props.initValue || 0);\n        this.setPosition(position, current);\n      } // dragging\n      else if (event.target === this.sliderThumbElement.current) {\n          this.setState({ ...this.state,\n            isDragged: true\n          });\n          const rect = this.sliderThumbElement.current.getBoundingClientRect();\n          const shiftY = event.clientY - rect.top;\n          const shiftX = event.clientX - rect.left;\n          document.addEventListener(\"mousemove\", e => this.mouseMoveHandler.call(this, e, shiftY, shiftX));\n          document.addEventListener(\"dragstart\", this.preventDrag);\n        }\n\n      document.addEventListener(\"mouseup\", this.mouseUpHandler);\n      document.addEventListener(\"dragend\", this.mouseUpHandler);\n    };\n\n    this.mouseUpHandler = event => {\n      if (this.state.isDragged) {\n        this.setState({ ...this.state,\n          isDragged: false\n        });\n      } else {\n        this.setState({ ...this.state,\n          isTemp: false\n        });\n\n        if (this.props.step) {\n          const step = this.props.step;\n          let prevVal = this.evalValue(this.state.sliderPrevPosition);\n\n          if (this.state.sliderCurrnetPosition > this.state.sliderPrevPosition) {\n            prevVal += step;\n          } else {\n            prevVal -= step;\n          }\n\n          this.setPosition(this.getPostion(prevVal));\n        } else {\n          this.setPosition(this.state.sliderPrevPosition);\n        }\n      }\n\n      document.removeEventListener(\"mousemove\", this.mouseMoveHandler.bind(this));\n      document.removeEventListener(\"mouseup\", this.mouseUpHandler);\n      document.removeEventListener(\"dragend\", this.mouseUpHandler);\n      document.removeEventListener(\"dragstart\", this.preventDrag);\n    };\n\n    this.mouseMoveHandler = (event, shiftY, shiftX) => {\n      if (!this.state.isDragged) return;\n      let position;\n\n      if (this.props.horizontal) {\n        position = event.clientX - this.state.sliderAreaOffset - shiftX + this.state.thumbSize / 2;\n      } else {\n        position = event.clientY - this.state.sliderAreaOffset - shiftY + this.state.thumbSize / 2;\n      }\n\n      this.setPosition(position);\n    };\n\n    this.sliderRangeElement = React.createRef();\n    this.sliderThumbElement = React.createRef();\n    this.sliderAreaElement = React.createRef();\n  }\n\n  getRange() {\n    const from = this.props.from;\n    const to = this.props.to;\n    return {\n      from,\n      to,\n      range: from * to < 0 ? Math.abs(to) + Math.abs(from) : to - from\n    };\n  }\n\n  boundPosition(position) {\n    return Math.min(Math.max(position, this.state.thumbSize / 2), this.state.sliderRange + this.state.thumbSize / 2);\n  }\n\n  stickiPostion(position) {\n    if (this.props.stickiZero && this.props.from * this.props.to < 0) {\n      let valueFromPostion = this.evalValue(position);\n\n      if (Math.abs(valueFromPostion) - this.props.stickiZero < 0) {\n        return this.getPostion(0, this.state, this.props);\n      }\n    }\n\n    return position;\n  }\n\n  updateStyles() {\n    let position = this.stickiPostion(this.state.sliderCurrnetPosition);\n\n    if (this.props.horizontal) {\n      this.sliderThumbElement.current.style.left = position + \"px\";\n    } else {\n      this.sliderThumbElement.current.style.top = position + \"px\";\n    }\n  }\n\n  updateState() {\n    const thumbRect = this.sliderThumbElement.current.getBoundingClientRect();\n    const areaRect = this.sliderAreaElement.current.getBoundingClientRect();\n    const rangeRect = this.sliderRangeElement.current.getBoundingClientRect();\n    this.setState(state => {\n      const _state = { ...state\n      };\n\n      if (this.props.horizontal) {\n        _state.sliderRange = rangeRect.width;\n        _state.sliderAreaOffset = areaRect.left;\n        _state.thumbSize = thumbRect.width;\n      } else {\n        _state.sliderRange = rangeRect.height;\n        _state.sliderAreaOffset = areaRect.top;\n        _state.thumbSize = thumbRect.height;\n      }\n\n      return _state;\n    }, () => {\n      if (this.props.value !== undefined) {\n        this.setValue(this.props.value);\n      }\n    });\n  }\n\n  componentDidMount() {\n    setTimeout(this.updateState.bind(this), 100);\n    this.updateStateDebounced = debounce(this.updateState.bind(this), 300);\n    window.addEventListener(\"resize\", this.updateStateDebounced);\n    this.sliderAreaElement.current.addEventListener(\"mousedown\", this.mouseDownHandle.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateStateDebounced);\n  }\n\n  componentDidUpdate(prevProbs) {\n    if (this.props.value && this.props.value !== prevProbs.value) {\n      let position = this.getPostion(this.props.value);\n\n      if (position !== this.state.sliderCurrnetPosition) {\n        this.setPosition(position);\n      }\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.value !== nextProps.value;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"slider\" + (this.props.className ? \" \" + this.props.className : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.sliderAreaElement,\n      className: \"slider-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.sliderRangeElement,\n      className: \"slider-range\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"slider-thumb\",\n      ref: this.sliderThumbElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/common/RangeSlider/Slider.js"],"names":["React","debounce","Slider","Component","preventDrag","e","preventDefault","constructor","state","sliderRange","sliderCurrnetPosition","sliderPrevPosition","isDragged","isTemp","thumbSize","sliderAreaOffset","getPostion","value","from","range","getRange","progress","position","evalValue","props","to","setValue","setPosition","currentPosition","prevPosition","boundPosition","setState","onChange","updateStyles","mouseDownHandle","event","target","sliderAreaElement","current","sliderRangeElement","rect","getBoundingClientRect","horizontal","clientX","left","clientY","top","initValue","sliderThumbElement","shiftY","shiftX","document","addEventListener","mouseMoveHandler","call","mouseUpHandler","step","prevVal","removeEventListener","bind","createRef","Math","abs","min","max","stickiPostion","stickiZero","valueFromPostion","style","updateState","thumbRect","areaRect","rangeRect","_state","width","height","undefined","componentDidMount","setTimeout","updateStateDebounced","window","componentWillUnmount","componentDidUpdate","prevProbs","shouldComponentUpdate","nextProps","nextState","render","className"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport debounce from \"lodash/debounce\";\r\nimport \"./slider.scss\";\r\n\r\n//props\r\n//from - \r\n//to \r\n//onChange\r\n//value\r\n//step\r\n//stick-zero\r\n//vertival or horizontal\r\n\r\n\r\nclass Slider extends React.Component {\r\n  //helper\r\n  preventDrag(e){ e.preventDefault() }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.sliderRangeElement = React.createRef();\r\n    this.sliderThumbElement = React.createRef();\r\n    this.sliderAreaElement = React.createRef();\r\n  }\r\n\r\n  state = {\r\n\r\n    sliderRange: null,\r\n    sliderCurrnetPosition: null,\r\n    sliderPrevPosition: null,\r\n    isDragged: false,\r\n    isTemp: false, // is temporary value return as second arguemnt onChange callback\r\n\r\n    thumbSize: 0,\r\n    sliderAreaOffset: 0\r\n  };\r\n\r\n  getRange () {\r\n    const from = this.props.from;\r\n    const to = this.props.to;\r\n    return {\r\n      from,\r\n      to,\r\n      range: from * to < 0 ? Math.abs(to) + Math.abs(from) : to - from\r\n    };\r\n  };\r\n\r\n  getPostion = (value) => {\r\n    const { from, range } = this.getRange();\r\n    const progress = (value - from) / range;\r\n    const position = progress * this.state.sliderRange;\r\n    return position + this.state.thumbSize / 2;\r\n  };\r\n\r\n\r\n\r\n  evalValue = position => {\r\n    const { from, range } = this.getRange(this.props.from, this.props.to);\r\n    const progress =\r\n      (position - this.state.thumbSize / 2) / this.state.sliderRange;\r\n\r\n    let value = range * progress + from;\r\n    return value;\r\n  };\r\n\r\n  setValue = value => {\r\n    const { from, range } = this.getRange();\r\n    const progress = (value - from) / range;\r\n    const position = progress * this.state.sliderRange;\r\n    this.setPosition(position + this.state.thumbSize / 2);\r\n  };\r\n\r\n  boundPosition(position) {\r\n    return Math.min(\r\n      Math.max(position, this.state.thumbSize / 2),\r\n      this.state.sliderRange + this.state.thumbSize / 2\r\n    );\r\n  }\r\n\r\n  stickiPostion(position) {\r\n    if (this.props.stickiZero && this.props.from * this.props.to < 0) {\r\n      let valueFromPostion = this.evalValue(position);\r\n      if (Math.abs(valueFromPostion) - this.props.stickiZero < 0) {\r\n        return this.getPostion(0, this.state, this.props);\r\n      }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  setPosition = (currentPosition, prevPosition) => {\r\n    let position = this.boundPosition(currentPosition);\r\n\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        sliderCurrnetPosition: position,\r\n        sliderPrevPosition: prevPosition || this.state.sliderPrevPosition\r\n      },\r\n      () => {\r\n        if (this.props.onChange) {\r\n          this.props.onChange(\r\n            this.evalValue(this.state.sliderCurrnetPosition),\r\n            this.state.isTemp\r\n          );\r\n        }\r\n      }\r\n    );\r\n\r\n    this.updateStyles();\r\n  };\r\n\r\n  updateStyles(){\r\n    let position = this.stickiPostion(this.state.sliderCurrnetPosition);\r\n    if (this.props.horizontal) {\r\n      this.sliderThumbElement.current.style.left = position + \"px\";\r\n    } else {\r\n      this.sliderThumbElement.current.style.top = position + \"px\";\r\n    }\r\n  }\r\n\r\n\r\n\r\n  mouseDownHandle = event => {\r\n    if (\r\n      event.target === this.sliderAreaElement.current ||\r\n      event.target === this.sliderRangeElement.current\r\n    ) {\r\n      //temporary jummp\r\n      this.setState({ ...this.state, isTemp: true });\r\n      const rect = this.sliderAreaElement.current.getBoundingClientRect();\r\n      const position = this.props.horizontal\r\n        ? event.clientX - rect.left\r\n        : event.clientY - rect.top;\r\n      \r\n      const current = this.state.sliderCurrnetPosition || this.getPostion(this.props.initValue || 0) \r\n      this.setPosition(position, current);\r\n    } // dragging\r\n    else if (event.target === this.sliderThumbElement.current) {\r\n      this.setState({ ...this.state, isDragged: true });\r\n      const rect = this.sliderThumbElement.current.getBoundingClientRect();\r\n      const shiftY = event.clientY - rect.top;\r\n      const shiftX = event.clientX - rect.left;\r\n      document.addEventListener(\"mousemove\", e =>\r\n        this.mouseMoveHandler.call(this, e, shiftY, shiftX)\r\n      );\r\n      document.addEventListener(\"dragstart\", this.preventDrag);\r\n    }\r\n\r\n    document.addEventListener(\"mouseup\", this.mouseUpHandler);\r\n    document.addEventListener(\"dragend\", this.mouseUpHandler);\r\n  };\r\n\r\n  mouseUpHandler = event => {\r\n    if (this.state.isDragged) {\r\n      this.setState({ ...this.state, isDragged: false });\r\n    } else {\r\n      this.setState({ ...this.state, isTemp: false });\r\n      if (this.props.step) {\r\n        const step = this.props.step;\r\n        let prevVal = this.evalValue(this.state.sliderPrevPosition);\r\n        if (this.state.sliderCurrnetPosition > this.state.sliderPrevPosition) {\r\n          prevVal += step;\r\n        } else {\r\n          prevVal -= step;\r\n        }\r\n        this.setPosition(this.getPostion(prevVal));\r\n      } else {\r\n        this.setPosition(this.state.sliderPrevPosition);\r\n      }\r\n    }\r\n\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveHandler.bind(this));\r\n    document.removeEventListener(\"mouseup\", this.mouseUpHandler);\r\n    document.removeEventListener(\"dragend\", this.mouseUpHandler);\r\n    document.removeEventListener(\"dragstart\", this.preventDrag);\r\n  };\r\n\r\n  mouseMoveHandler = (event, shiftY, shiftX) => {\r\n    if (!this.state.isDragged) return;\r\n    let position;\r\n    if (this.props.horizontal) {\r\n      position =\r\n        event.clientX -\r\n        this.state.sliderAreaOffset -\r\n        shiftX +\r\n        this.state.thumbSize / 2;\r\n    } else {\r\n      position =\r\n        event.clientY -\r\n        this.state.sliderAreaOffset -\r\n        shiftY +\r\n        this.state.thumbSize / 2;\r\n    }\r\n    this.setPosition(position);\r\n  };\r\n\r\n  updateState(){\r\n    const thumbRect = this.sliderThumbElement.current.getBoundingClientRect();\r\n    const areaRect = this.sliderAreaElement.current.getBoundingClientRect();\r\n    const rangeRect = this.sliderRangeElement.current.getBoundingClientRect();\r\n\r\n    this.setState(\r\n      state => {\r\n        const _state = { ...state };\r\n        if (this.props.horizontal) {\r\n          _state.sliderRange = rangeRect.width;\r\n          _state.sliderAreaOffset = areaRect.left;\r\n          _state.thumbSize = thumbRect.width;\r\n        } else {\r\n          _state.sliderRange = rangeRect.height;\r\n          _state.sliderAreaOffset = areaRect.top;\r\n          _state.thumbSize = thumbRect.height;\r\n        }\r\n        return _state;\r\n      },\r\n      () => {\r\n        if (this.props.value !== undefined) {\r\n          this.setValue(this.props.value);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    setTimeout(this.updateState.bind(this), 100) ;\r\n\r\n    this.updateStateDebounced = debounce(this.updateState.bind(this), 300)\r\n    window.addEventListener(\"resize\", this.updateStateDebounced);\r\n\r\n    this.sliderAreaElement.current\r\n      .addEventListener(\"mousedown\",this.mouseDownHandle.bind(this));\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.removeEventListener('resize', this.updateStateDebounced);\r\n  }\r\n\r\n  componentDidUpdate(prevProbs){\r\n    if( this.props.value && this.props.value !== prevProbs.value){\r\n      let position = this.getPostion(this.props.value);\r\n      if(position !== this.state.sliderCurrnetPosition){\r\n        this.setPosition(position);\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    return (this.props.value !== nextProps.value)\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div \r\n        className={ \"slider\" + (this.props.className ? \" \" + this.props.className : \"\")}\r\n      >\r\n        <div ref={this.sliderAreaElement} className=\"slider-area\">\r\n          <div ref={this.sliderRangeElement} className=\"slider-range\" />\r\n          <div\r\n            className=\"slider-thumb\"\r\n            ref={this.sliderThumbElement}\r\n            \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}