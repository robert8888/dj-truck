{"ast":null,"code":"import { put, call } from 'redux-saga/effects';\nimport { getApi } from \"./../apis/apiProvider\";\nimport { calcAccurateBpmAndOffset } from './../utils/bpm/analyzer';\nimport { setBpmAndOffset } from '../actions';\nexport default function* calcBpmAsync(action) {\n  const source = action.track.source;\n  const id = action.track.id;\n  const api = getApi(source);\n  const url = api.getUrl(id); // console.log(action)\n\n  yield put(setBpmAndOffset(action.track._id, action.playlist, \"calculaiting\", null));\n  let {\n    offset,\n    bpm\n  } = yield call(calcAccurateBpmAndOffset, url);\n  yield put(setBpmAndOffset(action.track._id, action.playlist, bpm, offset));\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/sagas/calcBpmSaga.js"],"names":["put","call","getApi","calcAccurateBpmAndOffset","setBpmAndOffset","calcBpmAsync","action","source","track","id","api","url","getUrl","_id","playlist","offset","bpm"],"mappings":"AACA,SAASA,GAAT,EAAeC,IAAf,QAA0B,oBAA1B;AAEA,SAAQC,MAAR,QAAqB,uBAArB;AACA,SAAQC,wBAAR,QAAuC,yBAAvC;AACA,SAAUC,eAAV,QAAiC,YAAjC;AAGA,eAAe,UAAUC,YAAV,CAAuBC,MAAvB,EAA8B;AACzC,QAAMC,MAAM,GAAGD,MAAM,CAACE,KAAP,CAAaD,MAA5B;AACA,QAAME,EAAE,GAAGH,MAAM,CAACE,KAAP,CAAaC,EAAxB;AAEA,QAAMC,GAAG,GAAGR,MAAM,CAACK,MAAD,CAAlB;AACA,QAAMI,GAAG,GAAGD,GAAG,CAACE,MAAJ,CAAWH,EAAX,CAAZ,CALyC,CAO1C;;AACA,QAAMT,GAAG,CAACI,eAAe,CAACE,MAAM,CAACE,KAAP,CAAaK,GAAd,EAAmBP,MAAM,CAACQ,QAA1B,EAAoC,cAApC,EAAoD,IAApD,CAAhB,CAAT;AACC,MAAI;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkB,MAAMf,IAAI,CAAEE,wBAAF,EAA4BQ,GAA5B,CAAhC;AACA,QAAMX,GAAG,CAACI,eAAe,CAACE,MAAM,CAACE,KAAP,CAAaK,GAAd,EAAmBP,MAAM,CAACQ,QAA1B,EAAoCE,GAApC,EAAyCD,MAAzC,CAAhB,CAAT;AAEH","sourcesContent":["\r\nimport { put , call} from 'redux-saga/effects';\r\n\r\nimport {getApi} from \"./../apis/apiProvider\";\r\nimport {calcAccurateBpmAndOffset} from './../utils/bpm/analyzer';\r\nimport {  setBpmAndOffset } from '../actions';\r\n\r\n\r\nexport default function* calcBpmAsync(action){\r\n    const source = action.track.source;\r\n    const id = action.track.id;\r\n\r\n    const api = getApi(source);\r\n    const url = api.getUrl(id);\r\n\r\n   // console.log(action)\r\n   yield put(setBpmAndOffset(action.track._id, action.playlist, \"calculaiting\", null))\r\n    let { offset, bpm } = yield call( calcAccurateBpmAndOffset, url);\r\n    yield put(setBpmAndOffset(action.track._id, action.playlist, bpm, offset))\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}