{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\ExternalSearch\\\\SerachList\\\\SearchListItem\\\\SearchListItem.js\";\nimport React from \"react\";\nimport { getApi } from \"./../../../../../../apis/apiProvider\";\nimport { stripHtml } from \"./../../../../../../utils/html/htmlHelper\";\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\n\nconst SearchListItem = props => {\n  var _thumbnails$default;\n\n  const {\n    title,\n    description,\n    sourceId: id,\n    thumbnails,\n    duration,\n    source\n  } = props.item;\n  const api = getApi(source);\n  const sourceUrl = api.getUrlToExternall(id);\n\n  const formatTime = time => {\n    if (!time) return null;\n\n    if (typeof time === \"number\") {\n      let t = time;\n\n      if (source === \"SoundCloud\") {\n        console.log(\"dziele\");\n        t = t / 1000;\n      }\n\n      formater.secondsToStr(t);\n    } else if (typeof time === \"string\" && time.startsWith(\"PT\")) {\n      time.substr(2, time.length).toLowerCase();\n    }\n  };\n\n  const handleClick = () => {\n    const track = { ...props.item //_id: UUID.genV1().toString(),\n\n    };\n\n    if (track.source === \"YouTube\" && typeof track.duration === \"string\") {\n      track.duration = formater.ptToSeconds(track.duration);\n    }\n\n    props.addToListHandle(track);\n    props.closeListHandle();\n  };\n\n  return React.createElement(\"li\", {\n    className: \"search-list-item\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-item-thumbnails\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"youtube thumbnail\",\n    className: \"thumbnail-img\",\n    src: thumbnails === null || thumbnails === void 0 ? void 0 : (_thumbnails$default = thumbnails.default) === null || _thumbnails$default === void 0 ? void 0 : _thumbnails$default.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"thumbnail-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, formatTime(duration))), React.createElement(\"div\", {\n    className: \"list-item-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, stripHtml(title)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, stripHtml(description)), React.createElement(\"a\", {\n    href: sourceUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" \", sourceUrl, \" \")));\n};\n\nexport default SearchListItem;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/ExternalSearch/SerachList/SearchListItem/SearchListItem.js"],"names":["React","getApi","stripHtml","formater","SearchListItem","props","title","description","sourceId","id","thumbnails","duration","source","item","api","sourceUrl","getUrlToExternall","formatTime","time","t","console","log","secondsToStr","startsWith","substr","length","toLowerCase","handleClick","track","ptToSeconds","addToListHandle","closeListHandle","default","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sCAAvB;AACA,SAASC,SAAT,QAA0B,2CAA1B;AACA,SAASC,QAAT,QAAyB,6CAAzB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM;AACFC,IAAAA,KADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA,QAAQ,EAAEC,EAHR;AAIFC,IAAAA,UAJE;AAKFC,IAAAA,QALE;AAMFC,IAAAA;AANE,MAOFP,KAAK,CAACQ,IAPV;AASA,QAAMC,GAAG,GAAGb,MAAM,CAACW,MAAD,CAAlB;AAEA,QAAMG,SAAS,GAAGD,GAAG,CAACE,iBAAJ,CAAsBP,EAAtB,CAAlB;;AAEA,QAAMQ,UAAU,GAAGC,IAAI,IAAI;AACvB,QAAG,CAACA,IAAJ,EAAU,OAAO,IAAP;;AAEV,QAAG,OAAOA,IAAP,KAAgB,QAAnB,EAA4B;AACxB,UAAIC,CAAC,GAAGD,IAAR;;AACA,UAAGN,MAAM,KAAK,YAAd,EAA2B;AACvBQ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAF,QAAAA,CAAC,GAAGA,CAAC,GAAG,IAAR;AACH;;AACDhB,MAAAA,QAAQ,CAACmB,YAAT,CAAsBH,CAAtB;AACH,KAPD,MAOO,IAAG,OAAOD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACK,UAAL,CAAgB,IAAhB,CAA/B,EAAqD;AACxDL,MAAAA,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeN,IAAI,CAACO,MAApB,EAA4BC,WAA5B;AACH;AACJ,GAbD;;AAeA,QAAMC,WAAW,GAAG,MAAM;AACtB,UAAMC,KAAK,GAAG,EACV,GAAGvB,KAAK,CAACQ,IADC,CAEV;;AAFU,KAAd;;AAIA,QAAIe,KAAK,CAAChB,MAAN,KAAiB,SAAjB,IAA8B,OAAOgB,KAAK,CAACjB,QAAb,KAA0B,QAA5D,EAAsE;AAClEiB,MAAAA,KAAK,CAACjB,QAAN,GAAiBR,QAAQ,CAAC0B,WAAT,CAAqBD,KAAK,CAACjB,QAA3B,CAAjB;AACH;;AACDN,IAAAA,KAAK,CAACyB,eAAN,CAAsBF,KAAtB;AACAvB,IAAAA,KAAK,CAAC0B,eAAN;AACH,GAVD;;AAYA,SACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAiC,IAAA,OAAO,EAAEJ,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,mBAAT;AAA6B,IAAA,SAAS,EAAC,eAAvC;AAAuD,IAAA,GAAG,EAAEjB,UAAF,aAAEA,UAAF,8CAAEA,UAAU,CAAEsB,OAAd,wDAAE,oBAAqBC,GAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkChB,UAAU,CAACN,QAAD,CAA5C,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,SAAS,CAACI,KAAD,CAAd,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,SAAS,CAACK,WAAD,CAAb,CAFJ,EAGI;AAAG,IAAA,IAAI,EAAEQ,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAsBA,SAAtB,MAHJ,CALJ,CADJ;AAaH,CAvDD;;AAyDA,eAAeX,cAAf","sourcesContent":["import React from \"react\";\r\nimport { getApi } from \"./../../../../../../apis/apiProvider\";\r\nimport { stripHtml } from \"./../../../../../../utils/html/htmlHelper\";\r\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\r\n\r\nconst SearchListItem = (props) => {\r\n\r\n    const {\r\n        title,\r\n        description,\r\n        sourceId: id,\r\n        thumbnails,\r\n        duration,\r\n        source\r\n    } = props.item;\r\n\r\n    const api = getApi(source);\r\n\r\n    const sourceUrl = api.getUrlToExternall(id);\r\n\r\n    const formatTime = time => {\r\n        if(!time) return null;\r\n\r\n        if(typeof time === \"number\"){\r\n            let t = time; \r\n            if(source === \"SoundCloud\"){\r\n                console.log(\"dziele\")\r\n                t = t / 1000;\r\n            }\r\n            formater.secondsToStr(t);\r\n        } else if(typeof time === \"string\" && time.startsWith(\"PT\")){\r\n            time.substr(2, time.length).toLowerCase()\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        const track = {\r\n            ...props.item,\r\n            //_id: UUID.genV1().toString(),\r\n        }\r\n        if (track.source === \"YouTube\" && typeof track.duration === \"string\") {\r\n            track.duration = formater.ptToSeconds(track.duration);\r\n        }\r\n        props.addToListHandle(track);\r\n        props.closeListHandle();\r\n    }\r\n\r\n    return (\r\n        <li className=\"search-list-item\" onClick={handleClick}>\r\n            <div className=\"list-item-thumbnails\">\r\n                <img alt=\"youtube thumbnail\" className=\"thumbnail-img\" src={thumbnails?.default?.url} />\r\n                <span className=\"thumbnail-time\">{formatTime(duration)}</span>\r\n            </div>\r\n            <div className=\"list-item-details\">\r\n                <h5>{stripHtml(title)}</h5>\r\n                <p>{stripHtml(description)}</p>\r\n                <a href={sourceUrl}> {sourceUrl} </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SearchListItem"]},"metadata":{},"sourceType":"module"}