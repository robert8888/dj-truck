{"ast":null,"code":"import React,{useRef,useCallback}from\"react\";var RenameIntput=function RenameIntput(props){var onChange=props.onChange;var renameInputRef=useRef();var callOnChange=useCallback(function(){if(onChange&&renameInputRef.current){onChange(renameInputRef.current.value);}},[onChange,renameInputRef]);return React.createElement(\"input\",{type:\"text\",className:\"rename-input\",defaultValue:props.name,ref:renameInputRef,onBlur:callOnChange.bind(null),onKeyPress:function onKeyPress(event){if(event.key===\"Enter\")callOnChange();},autoFocus:true});};export default RenameIntput;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayListExplorer/Explorer/ExplorerTree/RenameInput/RenameInput.js"],"names":["React","useRef","useCallback","RenameIntput","props","onChange","renameInputRef","callOnChange","current","value","name","bind","event","key"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,WAAxB,KAA2C,OAA3C,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC1B,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACC,QAAvB,CACA,GAAMC,CAAAA,cAAc,CAAGL,MAAM,EAA7B,CAEA,GAAMM,CAAAA,YAAY,CAAGL,WAAW,CAAC,UAAI,CACjC,GAAGG,QAAQ,EAAIC,cAAc,CAACE,OAA9B,CAAsC,CAClCH,QAAQ,CAACC,cAAc,CAACE,OAAf,CAAuBC,KAAxB,CAAR,CACH,CACJ,CAJ+B,CAI7B,CAACJ,QAAD,CAAWC,cAAX,CAJ6B,CAAhC,CAMA,MACI,8BACI,IAAI,CAAC,MADT,CAEI,SAAS,CAAC,cAFd,CAGI,YAAY,CAAEF,KAAK,CAACM,IAHxB,CAII,GAAG,CAAEJ,cAJT,CAKI,MAAM,CAAEC,YAAY,CAACI,IAAb,CAAkB,IAAlB,CALZ,CAMI,UAAU,CAAE,oBAAAC,KAAK,CAAI,CAAE,GAAIA,KAAK,CAACC,GAAN,GAAc,OAAlB,CAA2BN,YAAY,GAAI,CANtE,CAOI,SAAS,KAPb,EADJ,CAWH,CArBD,CAuBA,cAAeJ,CAAAA,YAAf","sourcesContent":["import React, { useRef, useCallback } from \"react\"\r\n\r\nconst RenameIntput = props => {\r\n    const onChange = props.onChange;\r\n    const renameInputRef = useRef();\r\n\r\n    const callOnChange = useCallback(()=>{\r\n        if(onChange && renameInputRef.current){\r\n            onChange(renameInputRef.current.value);\r\n        }\r\n    }, [onChange, renameInputRef])\r\n\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className=\"rename-input\"\r\n            defaultValue={props.name}\r\n            ref={renameInputRef}\r\n            onBlur={callOnChange.bind(null)}\r\n            onKeyPress={event => { if (event.key === \"Enter\") callOnChange() }}\r\n            autoFocus\r\n        />\r\n    )\r\n}    \r\n\r\nexport default RenameIntput;"]},"metadata":{},"sourceType":"module"}