{"ast":null,"code":"import _objectSpread from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{ACTIONS}from\"./../../actions\";import{produce}from\"imer\";var initState={list:[],countAll:null,currentRecord:null,deleteStatus:\"IDLE\"};export default function recordsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.RECS_LOAD:{var nextState=_objectSpread({},state,{list:action.records});if(action.countAll!==null&&action.countAll!==undefined){nextState.countAll=action.countAll;}return nextState;}case ACTIONS.RECS_SET_DATA:{var _nextState=_objectSpread({},state,{currentRecord:action.recData});return _nextState;}case ACTIONS.RECS_SET_DELETE_STATUS:{var _nextState2=_objectSpread({},state,{deleteStatus:action.status});return _nextState2;}case ACTIONS.RECS_POST_COMMENT:{console.log(\"commment datais\",action.commentData);return produce(state,function(draftState){var comments=state.currentRecord.comments;comments.push(action.commentData);draftState.currentRecord.comments=comments;});}case ACTIONS.RECS_UPDATE_COMMENT:{return produce(state,function(draftState){draftState.currentRecord.comments=state.currentRecord.comments.map(function(comment){if(comment.id===action.commentData.id){comment.text=action.commentData.text;}return comment;});});}case ACTIONS.RECS_DELETE_COMMENT:{return produce(state,function(draftState){draftState.currentRecord.comments=state.currentRecord.comments.filter(function(comment){return comment.id!==action.commentId;});});}case ACTIONS.RECS_ADD_FAVORITE:{var recordId=action.recordId;return produce(state,function(draftState){var _state$currentRecord;if(((_state$currentRecord=state.currentRecord)===null||_state$currentRecord===void 0?void 0:_state$currentRecord.id)===recordId){draftState.currentRecord.favorited=true;}draftState.list=state.list.map(function(record){if(record.id===recordId){record.favorited=true;}return record;});});}case ACTIONS.RECS_RM_FAVORITE:{var _recordId=action.recordId;return produce(state,function(draftState){var _state$currentRecord2;if(((_state$currentRecord2=state.currentRecord)===null||_state$currentRecord2===void 0?void 0:_state$currentRecord2.id)===_recordId){draftState.currentRecord.favorited=false;}draftState.list=state.list.map(function(record){if(record.id===_recordId){record.favorited=false;}return record;});});}default:return state;}}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/reducers/records/recordsReducer.js"],"names":["ACTIONS","produce","initState","list","countAll","currentRecord","deleteStatus","recordsReducer","state","action","type","RECS_LOAD","nextState","records","undefined","RECS_SET_DATA","recData","RECS_SET_DELETE_STATUS","status","RECS_POST_COMMENT","console","log","commentData","draftState","comments","push","RECS_UPDATE_COMMENT","map","comment","id","text","RECS_DELETE_COMMENT","filter","commentId","RECS_ADD_FAVORITE","recordId","favorited","record","RECS_RM_FAVORITE"],"mappings":"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","sourcesContent":["import {ACTIONS} from \"./../../actions\";\r\nimport {produce} from \"imer\";\r\n\r\n\r\nconst initState={\r\n    list: [],\r\n    countAll: null,\r\n    currentRecord: null,\r\n\r\n    deleteStatus: \"IDLE\",\r\n}\r\n\r\nexport default function recordsReducer(state = initState, action){\r\n    switch(action.type){\r\n        case ACTIONS.RECS_LOAD : {\r\n            const nextState = {\r\n                ...state,\r\n                list : action.records,\r\n            }\r\n            if(action.countAll !== null && action.countAll !== undefined){\r\n                nextState.countAll = action.countAll;\r\n            }\r\n            return nextState;\r\n        }\r\n\r\n        case ACTIONS.RECS_SET_DATA: {\r\n            const nextState = {\r\n                ...state,\r\n                currentRecord: action.recData,\r\n            }   \r\n            return nextState;\r\n        }\r\n\r\n        case ACTIONS.RECS_SET_DELETE_STATUS: {\r\n            const nextState = {\r\n                ...state,\r\n                deleteStatus : action.status,\r\n            }\r\n            return nextState;\r\n        }\r\n\r\n        case ACTIONS.RECS_POST_COMMENT: {\r\n            console.log(\"commment datais\" , action.commentData)\r\n            return produce(state, draftState => {\r\n                const comments = state.currentRecord.comments;\r\n                comments.push(action.commentData);\r\n                draftState.currentRecord.comments = comments;\r\n            })\r\n        }\r\n\r\n        case ACTIONS.RECS_UPDATE_COMMENT: {\r\n            return produce(state, draftState => {\r\n                draftState.currentRecord.comments = \r\n                    state.currentRecord.comments.map(comment => {\r\n                        if(comment.id === action.commentData.id){\r\n                            comment.text = action.commentData.text;\r\n                        } \r\n                        return comment;\r\n                    })\r\n            })\r\n        }\r\n\r\n        case ACTIONS.RECS_DELETE_COMMENT: {\r\n            return produce(state, draftState => {\r\n                draftState.currentRecord.comments = \r\n                     state.currentRecord.comments.filter(comment => comment.id !== action.commentId)\r\n            })\r\n        }\r\n\r\n        case ACTIONS.RECS_ADD_FAVORITE : {\r\n            const {recordId} = action;\r\n            return produce(state, draftState =>{\r\n                if(state.currentRecord?.id === recordId) {\r\n                    draftState.currentRecord.favorited = true;\r\n                }\r\n                draftState.list = state.list.map( record => {\r\n                    if(record.id === recordId){\r\n                        record.favorited = true;\r\n                    }\r\n                    return record;\r\n                })\r\n            })\r\n        }\r\n\r\n        case ACTIONS.RECS_RM_FAVORITE:{\r\n            const {recordId} = action;\r\n            return produce(state, draftState =>{\r\n                if(state.currentRecord?.id === recordId) {\r\n                    draftState.currentRecord.favorited = false;\r\n                }\r\n                draftState.list = state.list.map( record => {\r\n                    if(record.id === recordId){\r\n                        record.favorited = false;\r\n                    }\r\n                    return record;\r\n                })\r\n            })\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}