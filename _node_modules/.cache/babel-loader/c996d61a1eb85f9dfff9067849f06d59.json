{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordComments\\\\RecordComments.js\";\nimport React, { useState, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./record-comments.scss\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst RecordComments = ({\n  recordId,\n  commentList,\n  postComment,\n  deleteComment\n}) => {\n  const [comment, setComment] = useState(\"\");\n  const [showButton, setShowButton] = useState(false);\n  const updateComment = useCallback(e => {\n    setComment(e.target.value);\n  }, [setComment]);\n  const submitComment = useCallback(e => {\n    e.preventDefault();\n    const content = e.target.elements.commentConntent;\n    console.log(content);\n  }, [postComment]);\n  return React.createElement(\"div\", {\n    className: \"record-comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: submitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Post your comment\"), React.createElement(Form.Control, {\n    className: \"record-comments-control\",\n    type: \"textarea\",\n    as: \"textarea\",\n    name: \"comment-conntent\",\n    value: comment,\n    onFocus: setShowButton.bind(null, true),\n    onBlure: setShowButton.bind(null, false),\n    onChange: updateComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), showButton && React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Post\")));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordComments);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordComments/RecordComments.js"],"names":["React","useState","useCallback","connect","Form","Button","RecordComments","recordId","commentList","postComment","deleteComment","comment","setComment","showButton","setShowButton","updateComment","e","target","value","submitComment","preventDefault","content","elements","commentConntent","console","log","bind","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,wBAAP;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,WAAxB;AAAqCC,EAAAA;AAArC,CAAD,KAAwD;AAC3E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMc,aAAa,GAAGb,WAAW,CAAEc,CAAD,IAAK;AACnCJ,IAAAA,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFgC,EAE/B,CAACN,UAAD,CAF+B,CAAjC;AAIA,QAAMO,aAAa,GAAGjB,WAAW,CAAEc,CAAD,IAAO;AACrCA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,OAAO,GAAGL,CAAC,CAACC,MAAF,CAASK,QAAT,CAAkBC,eAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACH,GAJgC,EAI/B,CAACZ,WAAD,CAJ+B,CAAjC;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEU,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAII,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,SAAS,EAAC,yBADd;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,IAAI,EAAC,kBAJT;AAKI,IAAA,KAAK,EAAER,OALX;AAMI,IAAA,OAAO,EAAEG,aAAa,CAACY,IAAd,CAAmB,IAAnB,EAAyB,IAAzB,CANb;AAOI,IAAA,OAAO,EAAEZ,aAAa,CAACY,IAAd,CAAmB,IAAnB,EAAyB,KAAzB,CAPb;AAQI,IAAA,QAAQ,EAAEX,aARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAeKF,UAAU,IAAI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfnB,CADJ,CADJ;AAsBH,CApCD;;AAqCA,MAAMc,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK,EAAL,CAAnC;;AAIA,eAAe3B,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvB,cAA7C,CAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./record-comments.scss\";\r\nimport {Form, Button} from \"react-bootstrap\"\r\n\r\nconst RecordComments = ({recordId, commentList, postComment, deleteComment}) =>{\r\n    const [comment, setComment] = useState(\"\")\r\n    const [showButton, setShowButton] = useState(false);\r\n\r\n    const updateComment = useCallback((e)=>{\r\n        setComment(e.target.value)\r\n    },[setComment])\r\n\r\n    const submitComment = useCallback((e) => {\r\n        e.preventDefault();\r\n        const content = e.target.elements.commentConntent;\r\n        console.log(content)\r\n    },[postComment])\r\n\r\n    return (\r\n        <div className=\"record-comments\">\r\n            <Form onSubmit={submitComment}>\r\n                <Form.Group>\r\n                    <Form.Label>\r\n                        Post your comment\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        className=\"record-comments-control\"\r\n                        type=\"textarea\" \r\n                        as=\"textarea\"\r\n                        name=\"comment-conntent\"\r\n                        value={comment}\r\n                        onFocus={setShowButton.bind(null, true)}\r\n                        onBlure={setShowButton.bind(null, false)}\r\n                        onChange={updateComment}/>\r\n                </Form.Group>\r\n                {showButton && <Button type=\"submit\">Post</Button>}\r\n            </Form>\r\n                       \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordComments)"]},"metadata":{},"sourceType":"module"}