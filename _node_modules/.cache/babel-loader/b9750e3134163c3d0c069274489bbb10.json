{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\WaveSurfer\\\\WaveSurfer.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport WaveSurferElement from \"wavesurfer\";\nimport colors from \"./../../../css/colors.scss\";\n\nconst getCssColor = (variable, name) => colors[\"deck\" + name.toUpperCase() + variable];\n\nconst masterConfig = (container, height, name) => ({\n  // name deck A or B \n  container: container,\n  waveColor: getCssColor('Primary', name) || 'white',\n  progressColor: getCssColor('PrimaryDark', name) || 'gray',\n  autoCenter: true,\n  scrollParent: true,\n  hideScrollbar: true,\n  fillParent: false,\n  height: height,\n  minPxPerSec: 150\n});\n\nconst slaveConfig = (container, height, name) => ({\n  container: container,\n  waveColor: getCssColor('Primary', name) || 'white',\n  progressColor: getCssColor('PrimaryDark', name) || 'gray',\n  fillParent: true,\n  scrollParent: false,\n  hideScrollbar: true,\n  scrollParent: false,\n  height: height\n});\n\nconst config = (type, container, height, name) => {\n  switch (type) {\n    case \"master\":\n      return masterConfig(container, height, name);\n\n    case \"slave\":\n      return slaveConfig(container, height, name);\n\n    default:\n      return {};\n  }\n};\n\nconst WaveSurfer = props => {\n  let [waveSurfer, setWaveSurfer] = useState(null);\n  let container = useRef(null);\n  useEffect(() => {\n    console.log('main use effect');\n\n    if (!waveSurfer) {\n      setWaveSurfer(WaveSurferElement.create(config(props.type, container.current, props.height, props.name)));\n    } else {\n      let duration = 0;\n\n      const startUpdating = () => setInterval(() => {\n        props.exportProgressHandler(waveSurfer.getCurrentTime() / duration);\n      }, 1000);\n\n      waveSurfer.on('ready', () => {\n        // waveSurfer.play();\n        if (props.exportPeaksHandler) {\n          duration = waveSurfer.getDuration();\n          let resolution = 430;\n          let peaks = waveSurfer.backend.getPeaks(resolution, 0, resolution);\n          props.exportPeaksHandler(peaks);\n        }\n\n        if (props.exportProgressHandler) {\n          startUpdating();\n        }\n      });\n\n      if (props.exportSeekToHandler) {\n        waveSurfer.on('seek', progress => props.exportSeekToHandler(progress));\n      }\n    }\n  }, [props.type, props.height, props.name, props.exportPeaksHandler, props.exportProgressHandler, props.exportSeekToHandler, waveSurfer]);\n  useEffect(() => {\n    console.log('url');\n\n    if (waveSurfer && props.type === \"master\" && props.url !== \"\") {\n      waveSurfer.load(props.url);\n    }\n  }, [props.url, waveSurfer]);\n  useEffect(() => {\n    console.log('peaks');\n\n    if (waveSurfer) {\n      waveSurfer.load(null, props.peaks);\n    }\n  }, [props.peaks, waveSurfer]);\n  useEffect(() => {\n    console.log('update progress');\n\n    if (props.progress && waveSurfer) {\n      waveSurfer.drawer.progress(props.progress);\n    }\n  }, [props.progress, waveSurfer]);\n  useEffect(() => {\n    console.log('seek to');\n\n    if (props.seekTo && waveSurfer) {\n      waveSurfer.seekTo(props.seekTo);\n\n      if (!waveSurfer.isPlaying()) {\n        waveSurfer.play();\n      }\n    }\n  }, [props.seekTo, waveSurfer]);\n  return React.createElement(\"div\", {\n    ref: container,\n    style: {\n      height: props.height + \"px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"  \");\n};\n\nexport default WaveSurfer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/WaveSurfer/WaveSurfer.js"],"names":["React","useState","useRef","useEffect","WaveSurferElement","colors","getCssColor","variable","name","toUpperCase","masterConfig","container","height","waveColor","progressColor","autoCenter","scrollParent","hideScrollbar","fillParent","minPxPerSec","slaveConfig","config","type","WaveSurfer","props","waveSurfer","setWaveSurfer","console","log","create","current","duration","startUpdating","setInterval","exportProgressHandler","getCurrentTime","on","exportPeaksHandler","getDuration","resolution","peaks","backend","getPeaks","exportSeekToHandler","progress","url","load","drawer","seekTo","isPlaying","play"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport WaveSurferElement from \"wavesurfer\";\r\nimport colors from \"./../../../css/colors.scss\";\r\n\r\nconst getCssColor= (variable, name) => colors[ \"deck\" + name.toUpperCase() + variable ]; \r\n\r\nconst masterConfig = (container, height, name) => ({ // name deck A or B \r\n    container: container,\r\n    waveColor: getCssColor('Primary', name) || 'white',\r\n    progressColor: getCssColor('PrimaryDark', name) || 'gray',\r\n    autoCenter : true,\r\n    scrollParent: true,\r\n    hideScrollbar:true,\r\n    fillParent: false,\r\n    height: height,\r\n    minPxPerSec : 150\r\n})\r\n\r\nconst slaveConfig = (container, height, name) => ({\r\n    container: container,\r\n    waveColor: getCssColor('Primary', name) || 'white',\r\n    progressColor: getCssColor('PrimaryDark', name) || 'gray',\r\n    fillParent: true,\r\n    scrollParent : false,\r\n    hideScrollbar: true,\r\n    scrollParent : false,\r\n    height: height,\r\n})\r\n\r\nconst config = (type, container, height, name) => {\r\n    switch(type){\r\n        case \"master\" : return masterConfig(container, height, name);\r\n        case \"slave\" : return slaveConfig(container, height, name );\r\n        default : return {};\r\n    }\r\n}\r\n\r\n\r\n\r\nconst  WaveSurfer = (props) => {\r\n\r\n    let [ waveSurfer, setWaveSurfer ] = useState(null);\r\n    let container = useRef(null);\r\n\r\n\r\n    \r\n    useEffect( ()=> {\r\n        console.log('main use effect')\r\n        if(!waveSurfer){\r\n            setWaveSurfer(WaveSurferElement.create(config(\r\n                props.type, \r\n                container.current,\r\n                props.height, \r\n                props.name,\r\n                )))\r\n        } else {\r\n            let duration = 0; \r\n            const startUpdating = () => setInterval(()=>{props.exportProgressHandler(waveSurfer.getCurrentTime()/duration)}, 1000);\r\n            waveSurfer.on('ready', ()=> {\r\n               // waveSurfer.play();\r\n                if(props.exportPeaksHandler){\r\n                    duration = waveSurfer.getDuration();\r\n                    let resolution = 430;\r\n                    let peaks = waveSurfer.backend.getPeaks(resolution, 0, resolution);\r\n                    props.exportPeaksHandler(peaks);\r\n                }\r\n                if(props.exportProgressHandler){\r\n                    startUpdating();\r\n                } \r\n            })\r\n\r\n            if(props.exportSeekToHandler){\r\n                waveSurfer.on('seek', (progress) => props.exportSeekToHandler(progress))\r\n            }\r\n        }\r\n    }, [props.type,\r\n        props.height, \r\n        props.name, \r\n        props.exportPeaksHandler,\r\n        props.exportProgressHandler,\r\n        props.exportSeekToHandler,\r\n        waveSurfer]);\r\n\r\n    useEffect( () => {\r\n        console.log('url')\r\n        if(waveSurfer && props.type === \"master\" && props.url !== \"\" ){\r\n            waveSurfer.load(props.url);\r\n        }\r\n    }, [props.url, waveSurfer])\r\n\r\n    useEffect( () => {\r\n        console.log('peaks')\r\n        if(waveSurfer){\r\n            waveSurfer.load(null, props.peaks);\r\n        }\r\n    }, [props.peaks, waveSurfer])\r\n\r\n    useEffect( ()=>{\r\n        console.log('update progress')\r\n        if(props.progress && waveSurfer){\r\n           waveSurfer.drawer.progress(props.progress);\r\n        }\r\n    }, [props.progress, waveSurfer])\r\n\r\n    useEffect( ()=>{\r\n        console.log('seek to')\r\n        if(props.seekTo && waveSurfer){\r\n            waveSurfer.seekTo(props.seekTo);\r\n            if(!waveSurfer.isPlaying()){\r\n                waveSurfer.play();\r\n          \r\n            }\r\n        }\r\n    }, [props.seekTo, waveSurfer])\r\n\r\n\r\n    return (\r\n        <div ref={ container } style={{ height: props.height + \"px\" }} >  </div>\r\n    )\r\n    \r\n};\r\n\r\nexport default WaveSurfer;"]},"metadata":{},"sourceType":"module"}