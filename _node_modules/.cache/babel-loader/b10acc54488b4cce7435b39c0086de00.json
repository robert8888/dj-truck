{"ast":null,"code":"import * as graphQlQueries from \"./qlQueries\";\nconst url = process.env.REACT_APP_USER_ASSETS_API;\nexport async function callQuery(query, token, variables) {\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({\n      query: query,\n      variables: variables\n    })\n  });\n  let json = await response.json();\n  return json;\n}\nexport async function callQueryUploadSingle(query, token, variables) {\n  const body = new FormData();\n  body.append('operations', JSON.stringify({\n    query,\n    variables\n  }));\n  body.append('map', JSON.stringify({\n    \"0\": [\"variables.file\"]\n  }));\n  body.append('0', variables.file);\n  const options = {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'multipart/form-data',\n      'Accept': 'application/json'\n    },\n    body\n  };\n  delete options.headers['Content-Type'];\n  const response = await fetch(url, options);\n  let json = await response.json();\n  return json;\n}\nexport default {\n  callQuery,\n  callQueryUploadSingle,\n  queries: graphQlQueries\n};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/apis/userAssets/userApi.js"],"names":["graphQlQueries","url","process","env","REACT_APP_USER_ASSETS_API","callQuery","query","token","variables","response","fetch","method","headers","Authorization","body","JSON","stringify","json","callQueryUploadSingle","FormData","append","file","options","queries"],"mappings":"AAAA,OAAO,KAAKA,cAAZ,MAAgC,aAAhC;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAAxB;AAEA,OAAO,eAAeC,SAAf,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkD;AACrD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAC9BU,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASN,KAAM,EAD1B;AAEL,sBAAgB,kBAFX;AAGL,gBAAU;AAHL,KAFqB;AAQ9BO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBV,MAAAA,KAAK,EAAEA,KADU;AAEjBE,MAAAA,SAAS,EAAEA;AAFM,KAAf;AARwB,GAAN,CAA5B;AAaA,MAAIS,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAT,EAAjB;AACA,SAAOA,IAAP;AACH;AAED,OAAO,eAAeC,qBAAf,CAAqCZ,KAArC,EAA4CC,KAA5C,EAAmDC,SAAnD,EAA6D;AAChE,QAAMM,IAAI,GAAG,IAAIK,QAAJ,EAAb;AACAL,EAAAA,IAAI,CAACM,MAAL,CACI,YADJ,EAEIL,IAAI,CAACC,SAAL,CAAe;AACXV,IAAAA,KADW;AAEXE,IAAAA;AAFW,GAAf,CAFJ;AAOAM,EAAAA,IAAI,CAACM,MAAL,CAAY,KAAZ,EAAmBL,IAAI,CAACC,SAAL,CAAe;AAC9B,SAAK,CAAC,gBAAD;AADyB,GAAf,CAAnB;AAGAF,EAAAA,IAAI,CAACM,MAAL,CAAY,GAAZ,EAAiBZ,SAAS,CAACa,IAA3B;AAEA,QAAMC,OAAO,GAAG;AACZX,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASN,KAAM,EAD1B;AAEL,sBAAgB,qBAFX;AAGL,gBAAU;AAHL,KAFG;AAOZO,IAAAA;AAPY,GAAhB;AASA,SAAOQ,OAAO,CAACV,OAAR,CAAgB,cAAhB,CAAP;AAEA,QAAMH,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAMqB,OAAN,CAA5B;AACA,MAAIL,IAAI,GAAG,MAAOR,QAAQ,CAACQ,IAAT,EAAlB;AACA,SAAOA,IAAP;AACH;AAED,eAAe;AACXZ,EAAAA,SADW;AAEXa,EAAAA,qBAFW;AAGXK,EAAAA,OAAO,EAAEvB;AAHE,CAAf","sourcesContent":["import * as graphQlQueries from \"./qlQueries\";\r\n\r\nconst url = process.env.REACT_APP_USER_ASSETS_API;\r\n\r\nexport async function callQuery(query, token, variables) {\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n\r\n        },\r\n        body: JSON.stringify({\r\n            query: query,\r\n            variables: variables\r\n        }),\r\n    })\r\n    let json = await response.json();\r\n    return json;\r\n}\r\n\r\nexport async function callQueryUploadSingle(query, token, variables){\r\n    const body = new FormData();\r\n    body.append(\r\n        'operations',\r\n        JSON.stringify({\r\n            query,\r\n            variables\r\n        })\r\n    )\r\n    body.append('map', JSON.stringify({\r\n        \"0\": [\"variables.file\"] \r\n    }))\r\n    body.append('0', variables.file);\r\n    \r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'multipart/form-data',\r\n            'Accept': 'application/json',\r\n        },\r\n        body\r\n    }\r\n    delete options.headers['Content-Type'];\r\n    \r\n    const response = await fetch(url, options)\r\n    let json = await  response.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    callQuery,\r\n    callQueryUploadSingle,\r\n    queries: graphQlQueries\r\n}"]},"metadata":{},"sourceType":"module"}