{"ast":null,"code":"import { ACTIONS } from \"../../actions\";\nimport { put, call, select, takeEvery } from 'redux-saga/effects';\nimport { getToken } from \"./../../auth0/getToken\";\nimport { getApi } from \"./../../apis/apiProvider\";\nexport default function* watcher() {\n  yield takeEvery(ACTIONS.U_REQ_UPDATE_PICTURE, handel);\n} //const getToken = state => state.user.token\n\nfunction* handel(action) {\n  const token = yield select(getToken);\n\n  try {\n    const {\n      callQueryUploadSingle,\n      queries\n    } = getApi(\"UserAssets\");\n    const query = queries.updateUserPictureQl;\n    const variables = {\n      file: action.file\n    };\n    const result = yield callQueryUploadSingle(query, token, variables);\n    console.log(result);\n\n    if (!result.errors) {//  yield put(setRecData(recordData))\n    } else {\n      throw new Error(\"Can't load record data from database\");\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/user/reqUpdatePicture.js"],"names":["ACTIONS","put","call","select","takeEvery","getToken","getApi","watcher","U_REQ_UPDATE_PICTURE","handel","action","token","callQueryUploadSingle","queries","query","updateUserPictureQl","variables","file","result","console","log","errors","Error","e","message"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,oBAA7C;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAGA,eAAe,UAAUC,OAAV,GAAoB;AAC/B,QAAMH,SAAS,CAACJ,OAAO,CAACQ,oBAAT,EAA+BC,MAA/B,CAAf;AACH,C,CAED;;AAEA,UAAUA,MAAV,CAAiBC,MAAjB,EAAyB;AACrB,QAAMC,KAAK,GAAG,MAAMR,MAAM,CAACE,QAAD,CAA1B;;AAEA,MAAI;AACA,UAAM;AAAEO,MAAAA,qBAAF;AAAyBC,MAAAA;AAAzB,QAAqCP,MAAM,CAAC,YAAD,CAAjD;AAEA,UAAMQ,KAAK,GAAGD,OAAO,CAACE,mBAAtB;AACA,UAAMC,SAAS,GAAG;AAAEC,MAAAA,IAAI,EAAEP,MAAM,CAACO;AAAf,KAAlB;AACA,UAAMC,MAAM,GAAG,MAAMN,qBAAqB,CAACE,KAAD,EAAQH,KAAR,EAAeK,SAAf,CAA1C;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,QAAI,CAACA,MAAM,CAACG,MAAZ,EAAoB,CAChB;AACH,KAFD,MAEO;AACH,YAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;AACJ,GAdD,CAcE,OAAOC,CAAP,EAAU;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACC,OAAd;AACH;AACJ","sourcesContent":["import { ACTIONS } from \"../../actions\";\r\nimport { put, call, select, takeEvery } from 'redux-saga/effects';\r\nimport { getToken } from \"./../../auth0/getToken\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n\r\n\r\nexport default function* watcher() {\r\n    yield takeEvery(ACTIONS.U_REQ_UPDATE_PICTURE, handel);\r\n}\r\n\r\n//const getToken = state => state.user.token\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        const { callQueryUploadSingle, queries } = getApi(\"UserAssets\");\r\n\r\n        const query = queries.updateUserPictureQl;\r\n        const variables = { file: action.file };\r\n        const result = yield callQueryUploadSingle(query, token, variables);\r\n\r\n        console.log(result);\r\n\r\n        if (!result.errors) {\r\n            //  yield put(setRecData(recordData))\r\n        } else {\r\n            throw new Error(\"Can't load record data from database\")\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}