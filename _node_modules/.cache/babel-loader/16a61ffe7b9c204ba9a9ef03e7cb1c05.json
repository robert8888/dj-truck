{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Deck\\\\TrackInfo\\\\TrackInfo.js\";\nimport React, { Fragment, useRef, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./track-info.scss\";\nimport { calcBpm } from \"./../../../../../../utils/bpm/converter.js\";\nimport { stripHtml } from \"./../../../../../../utils/html/htmlHelper.js\";\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\nimport TrackDuration from \"./TrackDuration/TrackDuration\";\nimport TrackTitle from \"./TrackTitle/TrackTitle\";\nimport TimeLeft from \"./TimeLeft/TimeLeft\";\n\nconst TrackInfo = props => {\n  var _track$details$thumbn, _track$details$thumbn2, _track$details$thumbn3, _track$details$thumbn4;\n\n  const track = props.track;\n  const timeLeft = useRef();\n  useEffect(() => {// timeLeft.current.textContent = track.state.timeLeft;\n    //  console.log(track.state.timeLeft)\n  }, [timeLeft, track.state.timeLeft]); //formtatin track titile .... Bolding author \n\n  let title = stripHtml(track.details.title);\n  let seprator = title.indexOf(\"-\");\n\n  if (seprator !== -1) {\n    title = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, title.substr(0, seprator)), \" \", title.substr(seprator, title.length));\n  } //\n\n\n  return React.createElement(\"div\", {\n    className: \"track-info deck-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"track-info-thumbnail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, ((_track$details$thumbn = track.details.thumbnail) === null || _track$details$thumbn === void 0 ? void 0 : (_track$details$thumbn2 = _track$details$thumbn.default) === null || _track$details$thumbn2 === void 0 ? void 0 : _track$details$thumbn2.url) && React.createElement(\"img\", {\n    alt: \"track thumbnails\",\n    src: (_track$details$thumbn3 = track.details.thumbnail) === null || _track$details$thumbn3 === void 0 ? void 0 : (_track$details$thumbn4 = _track$details$thumbn3.default) === null || _track$details$thumbn4 === void 0 ? void 0 : _track$details$thumbn4.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"track-info-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(TrackTitle, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"track-info-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TimeLeft, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(TrackDuration, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"track-info-bpm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"track-bpm-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, track.details.bpm && calcBpm(track.details.bpm, track.state.pitch).toFixed(2)), React.createElement(\"span\", {\n    className: \"tarck-bpm-pitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, track.state.pitch.toFixed(2) + \"%\"), React.createElement(\"span\", {\n    className: \"track-bpm-init\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, track.details.bpm && track.details.bpm.toFixed(2))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  track: {\n    details: state.console.channel[ownProps.name].track,\n    state: state.console.channel[ownProps.name].playBackState\n  }\n});\n\nexport default connect(mapStateToProps)(TrackInfo);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Console/Deck/TrackInfo/TrackInfo.js"],"names":["React","Fragment","useRef","useEffect","connect","calcBpm","stripHtml","formater","TrackDuration","TrackTitle","TimeLeft","TrackInfo","props","track","timeLeft","state","title","details","seprator","indexOf","substr","length","name","thumbnail","default","url","bpm","pitch","toFixed","mapStateToProps","ownProps","console","channel","playBackState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mBAAP;AAGA,SAASC,OAAT,QAAwB,4CAAxB;AACA,SAASC,SAAT,QAA0B,8CAA1B;AACA,SAASC,QAAT,QAAyB,6CAAzB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AAEA,QAAMC,QAAQ,GAAGZ,MAAM,EAAvB;AAEAC,EAAAA,SAAS,CAAC,MAAI,CACX;AACF;AACA,GAHQ,EAGN,CAACW,QAAD,EAAWD,KAAK,CAACE,KAAN,CAAYD,QAAvB,CAHM,CAAT,CALuB,CAUvB;;AACA,MAAIE,KAAK,GAAGV,SAAS,CAACO,KAAK,CAACI,OAAN,CAAcD,KAAf,CAArB;AACA,MAAIE,QAAQ,GAAGF,KAAK,CAACG,OAAN,CAAc,GAAd,CAAf;;AACA,MAAGD,QAAQ,KAAK,CAAC,CAAjB,EAAmB;AACfF,IAAAA,KAAK,GAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgBF,QAAhB,CAAP,CAAV,OAAoDF,KAAK,CAACI,MAAN,CAAaF,QAAb,EAAuBF,KAAK,CAACK,MAA7B,CAApD,CAAT;AACH,GAfsB,CAgBvB;;;AAEA,SACI;AAAK,IAAA,SAAS,EAAE,qBAAqBT,KAAK,CAACU,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,0BAAAT,KAAK,CAACI,OAAN,CAAcM,SAAd,0GAAyBC,OAAzB,kFAAkCC,GAAlC,KAAyC;AAC3C,IAAA,GAAG,EAAC,kBADuC;AAE3C,IAAA,GAAG,4BAAEZ,KAAK,CAACI,OAAN,CAAcM,SAAhB,qFAAE,uBAAyBC,OAA3B,2DAAE,uBAAkCC,GAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/C,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEb,KAAK,CAACU,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CANJ,EASI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEV,KAAK,CAACU,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEV,KAAK,CAACU,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,EAaI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMT,KAAK,CAACI,OAAN,CAAcS,GAAd,IAAqBrB,OAAO,CAACQ,KAAK,CAACI,OAAN,CAAcS,GAAf,EAAoBb,KAAK,CAACE,KAAN,CAAYY,KAAhC,CAAP,CAA8CC,OAA9C,CAAsD,CAAtD,CAD3B,CADJ,EAII;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMf,KAAK,CAACE,KAAN,CAAYY,KAAZ,CAAkBC,OAAlB,CAA0B,CAA1B,IAA+B,GADrC,CAJJ,EAOI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMf,KAAK,CAACI,OAAN,CAAcS,GAAd,IAAqBb,KAAK,CAACI,OAAN,CAAcS,GAAd,CAAkBE,OAAlB,CAA0B,CAA1B,CAD3B,CAPJ,CAbJ,CADJ;AA2BH,CA7CD;;AA+CA,MAAMC,eAAe,GAAG,CAACd,KAAD,EAAQe,QAAR,MAAsB;AAC1CjB,EAAAA,KAAK,EAAG;AACJI,IAAAA,OAAO,EAAGF,KAAK,CAACgB,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACR,IAA/B,EAAqCT,KAD3C;AAEJE,IAAAA,KAAK,EAAGA,KAAK,CAACgB,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACR,IAA/B,EAAqCW;AAFzC;AADkC,CAAtB,CAAxB;;AASA,eAAe7B,OAAO,CAACyB,eAAD,CAAP,CAAyBlB,SAAzB,CAAf","sourcesContent":["import React, { Fragment, useRef, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./track-info.scss\";\r\n\r\n\r\nimport { calcBpm } from \"./../../../../../../utils/bpm/converter.js\";\r\nimport { stripHtml } from \"./../../../../../../utils/html/htmlHelper.js\";\r\nimport { formater } from \"./../../../../../../utils/time/timeFromater\"\r\nimport TrackDuration from \"./TrackDuration/TrackDuration\";\r\nimport TrackTitle from \"./TrackTitle/TrackTitle\";\r\nimport TimeLeft from \"./TimeLeft/TimeLeft\";\r\n\r\nconst TrackInfo = props => {\r\n    const track = props.track;\r\n\r\n    const timeLeft = useRef();\r\n    \r\n    useEffect(()=>{\r\n       // timeLeft.current.textContent = track.state.timeLeft;\r\n     //  console.log(track.state.timeLeft)\r\n    }, [timeLeft, track.state.timeLeft])\r\n    \r\n    //formtatin track titile .... Bolding author \r\n    let title = stripHtml(track.details.title);\r\n    let seprator = title.indexOf(\"-\");\r\n    if(seprator !== -1){\r\n        title = (<Fragment><span>{title.substr(0, seprator)}</span> {title.substr(seprator, title.length)}</Fragment>);\r\n    }\r\n    //\r\n \r\n    return (\r\n        <div className={\"track-info deck-\" + props.name}>\r\n            <div className=\"track-info-thumbnail\">\r\n                {(track.details.thumbnail?.default?.url && <img \r\n                alt=\"track thumbnails\"\r\n                src={track.details.thumbnail?.default?.url}></img>)}\r\n            </div>\r\n            <div className=\"track-info-description\">\r\n                 <TrackTitle name={props.name}/>\r\n            </div>\r\n            <div className=\"track-info-time\">\r\n                <TimeLeft name={props.name}/>\r\n                <TrackDuration name={props.name}/>\r\n            </div>\r\n            <div className=\"track-info-bpm\">\r\n                <span className=\"track-bpm-current\">\r\n                    { track.details.bpm && calcBpm(track.details.bpm, track.state.pitch).toFixed(2) }\r\n                </span>\r\n                <span className=\"tarck-bpm-pitch\">\r\n                    { track.state.pitch.toFixed(2) + \"%\"}\r\n                </span>\r\n                <span className=\"track-bpm-init\">\r\n                    { track.details.bpm && track.details.bpm.toFixed(2) }\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    track : {\r\n        details : state.console.channel[ownProps.name].track,\r\n        state : state.console.channel[ownProps.name].playBackState,\r\n    }\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(TrackInfo);"]},"metadata":{},"sourceType":"module"}