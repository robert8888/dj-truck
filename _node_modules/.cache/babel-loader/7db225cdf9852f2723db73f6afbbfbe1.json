{"ast":null,"code":"import { ACTIONS, pushDirContent } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\"; // import requestDirContetQuery from \"./../../qlQueries/requestDirContent\";\n\nimport { get } from \"lodash/object\";\nexport default function* loadDirRequest() {\n  yield takeEvery(ACTIONS.PL_LOAD_DIR_REQUEST, handel);\n}\n\nconst getToken = state => state.user.token;\n\nconst getCurrentSelection = state => state.playList.currentSelection;\n\nconst getCurrent = (state, path) => get(state.playList, path);\n\nexport function* handel(action) {\n  const {\n    callQuery,\n    queries\n  } = getApi(\"UserAssets\");\n  const token = yield select(getToken);\n  const currentSelection = yield select(getCurrentSelection);\n  const current = yield select(getCurrent, currentSelection);\n\n  if (!current._loaded && token) {\n    try {\n      yield put(showLoading());\n      let dirContent = yield callQuery(queries.loadDirContentQl(current._id), token);\n\n      if (!dirContent.data.dir) {\n        return;\n      }\n\n      dirContent = dirContent.data.dir;\n      const isRoot = false;\n      yield put(pushDirContent(dirContent, isRoot, action.path, action.open));\n    } catch (err) {\n      console.log(\"can't load dir from api\");\n      console.log(err.message);\n    } finally {\n      yield put(hideLoading());\n    }\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/loadDirRequestSaga.js"],"names":["ACTIONS","pushDirContent","takeEvery","select","put","getApi","get","loadDirRequest","PL_LOAD_DIR_REQUEST","handel","getToken","state","user","token","getCurrentSelection","playList","currentSelection","getCurrent","path","action","callQuery","queries","current","_loaded","showLoading","dirContent","loadDirContentQl","_id","data","dir","isRoot","open","err","console","log","message","hideLoading"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,cAAlB,QAAwC,eAAxC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB,C,CACA;;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,eAAe,UAAUC,cAAV,GAA2B;AACtC,QAAML,SAAS,CAACF,OAAO,CAACQ,mBAAT,EAA8BC,MAA9B,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,MAAMC,mBAAmB,GAAGH,KAAK,IAAIA,KAAK,CAACI,QAAN,CAAeC,gBAApD;;AAEA,MAAMC,UAAU,GAAG,CAACN,KAAD,EAAQO,IAAR,KAAiBZ,GAAG,CAACK,KAAK,CAACI,QAAP,EAAiBG,IAAjB,CAAvC;;AAEA,OAAO,UAAUT,MAAV,CAAiBU,MAAjB,EAAyB;AAC5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBhB,MAAM,CAAC,YAAD,CAArC;AACA,QAAMQ,KAAK,GAAG,MAAMV,MAAM,CAACO,QAAD,CAA1B;AACA,QAAMM,gBAAgB,GAAG,MAAMb,MAAM,CAACW,mBAAD,CAArC;AACA,QAAMQ,OAAO,GAAG,MAAMnB,MAAM,CAACc,UAAD,EAAaD,gBAAb,CAA5B;;AAEA,MAAI,CAACM,OAAO,CAACC,OAAT,IAAoBV,KAAxB,EAA+B;AAC3B,QAAI;AACA,YAAMT,GAAG,CAACoB,WAAW,EAAZ,CAAT;AACA,UAAIC,UAAU,GAAG,MAAML,SAAS,CAACC,OAAO,CAACK,gBAAR,CAAyBJ,OAAO,CAACK,GAAjC,CAAD,EAAwCd,KAAxC,CAAhC;;AACA,UAAI,CAACY,UAAU,CAACG,IAAX,CAAgBC,GAArB,EAA0B;AACtB;AACH;;AAEDJ,MAAAA,UAAU,GAAGA,UAAU,CAACG,IAAX,CAAgBC,GAA7B;AACA,YAAMC,MAAM,GAAG,KAAf;AACA,YAAM1B,GAAG,CAACH,cAAc,CAACwB,UAAD,EAAaK,MAAb,EAAqBX,MAAM,CAACD,IAA5B,EAAkCC,MAAM,CAACY,IAAzC,CAAf,CAAT;AACH,KAVD,CAUE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH,KAbD,SAaU;AACN,YAAM/B,GAAG,CAACgC,WAAW,EAAZ,CAAT;AACH;AACJ;AACJ","sourcesContent":["import { ACTIONS, pushDirContent } from \"../../actions\";\r\nimport { takeEvery, select, put } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n// import requestDirContetQuery from \"./../../qlQueries/requestDirContent\";\r\nimport { get } from \"lodash/object\";\r\n\r\nexport default function* loadDirRequest() {\r\n    yield takeEvery(ACTIONS.PL_LOAD_DIR_REQUEST, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nconst getCurrentSelection = state => state.playList.currentSelection;\r\n\r\nconst getCurrent = (state, path) => get(state.playList, path);\r\n\r\nexport function* handel(action) {\r\n    const { callQuery, queries } = getApi(\"UserAssets\");\r\n    const token = yield select(getToken);\r\n    const currentSelection = yield select(getCurrentSelection);\r\n    const current = yield select(getCurrent, currentSelection);\r\n\r\n    if (!current._loaded && token) {\r\n        try {\r\n            yield put(showLoading());\r\n            let dirContent = yield callQuery(queries.loadDirContentQl(current._id), token);\r\n            if (!dirContent.data.dir) {\r\n                return;\r\n            }\r\n\r\n            dirContent = dirContent.data.dir;\r\n            const isRoot = false;\r\n            yield put(pushDirContent(dirContent, isRoot, action.path, action.open));\r\n        } catch (err) {\r\n            console.log(\"can't load dir from api\");\r\n            console.log(err.message);\r\n        } finally {\r\n            yield put(hideLoading())\r\n        }\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}