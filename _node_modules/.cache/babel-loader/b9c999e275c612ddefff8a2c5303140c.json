{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\PlayerControls.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport PlaybackButton from \"./PlaybackButton/PlaybackButton\";\nimport \"./player-controls.scss\";\nimport ProgressSlider from \"./ProgressSlider/ProgressSlider\";\nimport RecordDetails from \"./RecordDetails/RecordDetails\";\nimport Volume from \"./Volume/Volume\";\n\nconst PlayerControls = ({\n  controls,\n  player,\n  list\n}) => {\n  const [currentRecord, setCurrentRecrod] = useState(null);\n  const [currentRecordDetails, setCurrentRecrodDails] = useState(null);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.subscribeCurrent(setCurrentRecrod);\n    return () => {\n      player.unSubscribeCurrent(setCurrentRecrod);\n    };\n  }, [player, setCurrentRecrod]);\n  useEffect(() => {\n    if (!list) {\n      return;\n    }\n\n    let currentId = currentRecord === null || currentRecord === void 0 ? void 0 : currentRecord.id;\n\n    if (!currentId) {\n      currentId = player.getCurrent().id;\n    }\n\n    console.log(currentId, list);\n    list = list instanceof Array ? list : [list];\n    const current = list.find(item => item.id === currentId);\n    if (!current) return;\n    setCurrentRecrodDails(current);\n  }, [player, list, currentRecord, setCurrentRecrodDails]);\n  return React.createElement(\"div\", {\n    className: \"record-player-controls_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"record-player-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(PlaybackButton, {\n    playback: controls.playback,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(ProgressSlider, {\n    seek: controls.seek,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Volume, {\n    setVolume: controls.setVolume,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(RecordDetails, Object.assign({}, currentRecordDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))))));\n};\n\nexport default PlayerControls;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/PlayerControls.js"],"names":["React","useEffect","useState","Col","Container","Row","PlaybackButton","ProgressSlider","RecordDetails","Volume","PlayerControls","controls","player","list","currentRecord","setCurrentRecrod","currentRecordDetails","setCurrentRecrodDails","subscribeCurrent","unSubscribeCurrent","currentId","id","getCurrent","console","log","Array","current","find","item","playback","seek","setVolume"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAO,wBAAP;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,MAAX;AAAoBC,EAAAA;AAApB,CAAD,KAA+B;AAClD,QAAM,CAACC,aAAD,EAAiBC,gBAAjB,IAAqCb,QAAQ,CAAC,IAAD,CAAnD;AACA,QAAM,CAACc,oBAAD,EAAuBC,qBAAvB,IAAgDf,QAAQ,CAAC,IAAD,CAA9D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACW,MAAJ,EAAW;AACP;AACH;;AACDA,IAAAA,MAAM,CAACM,gBAAP,CAAwBH,gBAAxB;AAEA,WAAO,MAAI;AACPH,MAAAA,MAAM,CAACO,kBAAP,CAA0BJ,gBAA1B;AACH,KAFD;AAGH,GATQ,EASN,CAACH,MAAD,EAASG,gBAAT,CATM,CAAT;AAWAd,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACY,IAAJ,EAAU;AAAC;AAAS;;AACpB,QAAIO,SAAS,GAAGN,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEO,EAA/B;;AAEA,QAAG,CAACD,SAAJ,EAAc;AACVA,MAAAA,SAAS,GAAGR,MAAM,CAACU,UAAP,GAAoBD,EAAhC;AACH;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBP,IAAvB;AAEAA,IAAAA,IAAI,GAAIA,IAAI,YAAYY,KAAjB,GAA0BZ,IAA1B,GAAiC,CAACA,IAAD,CAAxC;AAEA,UAAMa,OAAO,GAAGb,IAAI,CAACc,IAAL,CAAWC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYD,SAA/B,CAAhB;AAEA,QAAG,CAACM,OAAJ,EAAa;AAEbT,IAAAA,qBAAqB,CAACS,OAAD,CAArB;AAEH,GAjBQ,EAiBN,CAACd,MAAD,EAASC,IAAT,EAAeC,aAAf,EAA8BG,qBAA9B,CAjBM,CAAT;AAmBA,SACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEN,QAAQ,CAACkB,QAAnC;AAA6C,IAAA,MAAM,EAAEjB,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAED,QAAQ,CAACmB,IAA/B;AAAqC,IAAA,MAAM,EAAElB,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAID,QAAQ,CAACoB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,aAAD,oBAAmBf,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJJ,CADJ,CADJ,CADJ,CADJ,CADJ;AAiBH,CAnDD;;AAqDA,eAAeN,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport PlaybackButton from \"./PlaybackButton/PlaybackButton\";\r\nimport \"./player-controls.scss\";\r\nimport ProgressSlider from \"./ProgressSlider/ProgressSlider\";\r\nimport RecordDetails from \"./RecordDetails/RecordDetails\";\r\nimport Volume from \"./Volume/Volume\";\r\n\r\n\r\nconst PlayerControls = ({controls, player,  list}) => {\r\n    const [currentRecord , setCurrentRecrod] = useState(null);\r\n    const [currentRecordDetails, setCurrentRecrodDails] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.subscribeCurrent(setCurrentRecrod);\r\n\r\n        return ()=>{\r\n            player.unSubscribeCurrent(setCurrentRecrod)\r\n        }\r\n    }, [player, setCurrentRecrod])\r\n\r\n    useEffect(()=>{\r\n        if(!list) {return; }\r\n        let currentId = currentRecord?.id;\r\n        \r\n        if(!currentId){\r\n            currentId = player.getCurrent().id;\r\n        }\r\n        console.log(currentId, list)\r\n\r\n        list = (list instanceof Array) ? list : [list];\r\n\r\n        const current = list.find( item => item.id === currentId)\r\n       \r\n        if(!current) return; \r\n        \r\n        setCurrentRecrodDails(current)\r\n        \r\n    }, [player, list, currentRecord, setCurrentRecrodDails])\r\n\r\n    return (\r\n        <div className=\"record-player-controls_container\">\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"record-player-controls\">\r\n                            <PlaybackButton playback={controls.playback} player={player}/>\r\n                            <ProgressSlider seek={controls.seek} player={player} />\r\n                            <Volume setVolume = {controls.setVolume}/>\r\n                            <RecordDetails {...currentRecordDetails}/>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerControls;"]},"metadata":{},"sourceType":"module"}