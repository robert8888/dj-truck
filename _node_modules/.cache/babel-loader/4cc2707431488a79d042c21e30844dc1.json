{"ast":null,"code":"import { ACTIONS, endRecording, consoleResetChannels } from \"../actions\";\nimport RECORD_STATE from \"./../reducers/console/recorder/stateDef\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nexport default function* interceptLoadtrack() {\n  yield takeEvery(ACTIONS.CONSOLE_STOP_ALL, handel);\n}\n\nconst isRecording = state => state.recorder.recordingState === RECORD_STATE.RECORDING;\n\nfunction* handel() {\n  yield put(consoleResetChannels());\n  const recording = yield select(isRecording);\n  if (!recording) return;\n  yield put(endRecording());\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/recorder/onStopAllSaga.js"],"names":["ACTIONS","endRecording","consoleResetChannels","RECORD_STATE","takeEvery","select","put","interceptLoadtrack","CONSOLE_STOP_ALL","handel","isRecording","state","recorder","recordingState","RECORDING","recording"],"mappings":"AAAA,SAAUA,OAAV,EAAmBC,YAAnB,EAAiCC,oBAAjC,QAA4D,YAA5D;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAsC,oBAAtC;AAGA,eAAe,UAAUC,kBAAV,GAA+B;AAC1C,QAAMH,SAAS,CAACJ,OAAO,CAACQ,gBAAT,EAA2BC,MAA3B,CAAf;AACH;;AAGD,MAAMC,WAAW,GAAGC,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,cAAf,KAAkCV,YAAY,CAACW,SAA5E;;AAEA,UAAUL,MAAV,GAAkB;AACd,QAAMH,GAAG,CAACJ,oBAAoB,EAArB,CAAT;AAEA,QAAMa,SAAS,GAAG,MAAMV,MAAM,CAACK,WAAD,CAA9B;AACA,MAAG,CAACK,SAAJ,EAAe;AACf,QAAMT,GAAG,CAACL,YAAY,EAAb,CAAT;AACH","sourcesContent":["import {  ACTIONS, endRecording, consoleResetChannels} from \"../actions\";\r\nimport RECORD_STATE from \"./../reducers/console/recorder/stateDef\";\r\nimport { takeEvery, select, put} from \"redux-saga/effects\";\r\n\r\n\r\nexport default function* interceptLoadtrack() {\r\n    yield takeEvery(ACTIONS.CONSOLE_STOP_ALL, handel)\r\n}\r\n\r\n\r\nconst isRecording = state => state.recorder.recordingState === RECORD_STATE.RECORDING; \r\n\r\nfunction* handel(){\r\n    yield(put(consoleResetChannels()))\r\n\r\n    const recording = yield select(isRecording);\r\n    if(!recording) return;\r\n    yield(put(endRecording()))\r\n}"]},"metadata":{},"sourceType":"module"}