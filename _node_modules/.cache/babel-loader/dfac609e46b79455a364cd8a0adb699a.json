{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Carousel-slider\\\\Slider.js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport UUID from \"uuidjs\";\nimport style from \"./slider.scss\";\n\nconst Slider = ({\n  slides,\n  next,\n  prev,\n  minSlideWidth = style.minSlideWidth\n}) => {\n  const slider = useRef();\n\n  const _containerWidth = useRef();\n\n  const [visibleSlides, setVisibleSlides] = useState(null);\n  const [slideWidth, setSlideWidth] = useState(null);\n  const containerWidth = useCallback(() => {\n    if (!slider.current) return 0;\n\n    if (!_containerWidth.current) {\n      _containerWidth.current = slider.current.parentElement.getBoundingClientRect().width;\n    }\n\n    return _containerWidth.current;\n  }, [_containerWidth]);\n  useEffect(() => {\n    if (!containerWidth() || !minSlideWidth) return;\n    const slides = ~~(containerWidth() / parseInt(minSlideWidth));\n    const slideWidth = containerWidth() / slides;\n    setVisibleSlides(slides);\n    setSlideWidth(slideWidth);\n    slider.current.style.width = slideWidth * slides + \"px\";\n  }, [containerWidth, minSlideWidth, setVisibleSlides, setSlideWidth]);\n  console.log(containerWidth(), visibleSlides, slideWidth, parseInt(minSlideWidth));\n  return React.createElement(\"ul\", {\n    className: \"carousel-slider\",\n    ref: slider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, slides && slides instanceof Array && slides.map(slide => React.createElement(\"li\", {\n    key: UUID.genV1(),\n    className: \"slide\",\n    style: {\n      width: minSlideWidth || \"initial\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, slide)));\n};\n\nexport default Slider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Carousel-slider/Slider.js"],"names":["React","useCallback","useEffect","useRef","useState","UUID","style","Slider","slides","next","prev","minSlideWidth","slider","_containerWidth","visibleSlides","setVisibleSlides","slideWidth","setSlideWidth","containerWidth","current","parentElement","getBoundingClientRect","width","parseInt","console","log","Array","map","slide","genV1"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA8D,OAA9D;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,IAAT;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,aAAa,GAAGL,KAAK,CAACK;AAA3C,CAAD,KAA+D;AAC1E,QAAMC,MAAM,GAAGT,MAAM,EAArB;;AACA,QAAMU,eAAe,GAAGV,MAAM,EAA9B;;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAMc,cAAc,GAAGjB,WAAW,CAAC,MAAI;AACnC,QAAG,CAACW,MAAM,CAACO,OAAX,EAAoB,OAAO,CAAP;;AACpB,QAAG,CAACN,eAAe,CAACM,OAApB,EAA4B;AACxBN,MAAAA,eAAe,CAACM,OAAhB,GAA0BP,MAAM,CAACO,OAAP,CAAeC,aAAf,CAA6BC,qBAA7B,GAAqDC,KAA/E;AACH;;AACD,WAAQT,eAAe,CAACM,OAAxB;AACH,GANiC,EAM/B,CAACN,eAAD,CAN+B,CAAlC;AAQAX,EAAAA,SAAS,CAAC,MAAK;AACX,QAAG,CAACgB,cAAc,EAAf,IAAqB,CAACP,aAAzB,EAAwC;AACxC,UAAMH,MAAM,GAAG,CAAC,EAAEU,cAAc,KAAKK,QAAQ,CAACZ,aAAD,CAA7B,CAAhB;AACA,UAAMK,UAAU,GAAGE,cAAc,KAAKV,MAAtC;AACAO,IAAAA,gBAAgB,CAACP,MAAD,CAAhB;AACAS,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAJ,IAAAA,MAAM,CAACO,OAAP,CAAeb,KAAf,CAAqBgB,KAArB,GAA6BN,UAAU,GAAGR,MAAb,GAAsB,IAAnD;AACH,GAPQ,EAON,CAACU,cAAD,EAAiBP,aAAjB,EAAgCI,gBAAhC,EAAkDE,aAAlD,CAPM,CAAT;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,cAAc,EAA1B,EAA8BJ,aAA9B,EAA6CE,UAA7C,EAA0DO,QAAQ,CAACZ,aAAD,CAAlE;AACA,SACI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAgC,IAAA,GAAG,EAAEC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,MAAM,IAAIA,MAAM,YAAYkB,KAA5B,IAAqClB,MAAM,CAACmB,GAAP,CAAYC,KAAK,IACnD;AAAI,IAAA,GAAG,EAAEvB,IAAI,CAACwB,KAAL,EAAT;AAAuB,IAAA,SAAS,EAAE,OAAlC;AAA2C,IAAA,KAAK,EAAE;AAACP,MAAAA,KAAK,EAAEX,aAAa,IAAI;AAAzB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwFiB,KAAxF,CADkC,CAD1C,CADJ;AAOH,CA/BD;;AAgCA,eAAgBrB,MAAhB","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport UUID from \"uuidjs\";\r\nimport style from \"./slider.scss\"\r\n\r\nconst Slider = ({slides, next, prev, minSlideWidth = style.minSlideWidth}) => {\r\n    const slider = useRef();\r\n    const _containerWidth = useRef();\r\n    const [visibleSlides, setVisibleSlides] = useState(null);\r\n    const [slideWidth, setSlideWidth] = useState(null);\r\n\r\n    const containerWidth = useCallback(()=>{\r\n        if(!slider.current) return 0;\r\n        if(!_containerWidth.current){\r\n            _containerWidth.current = slider.current.parentElement.getBoundingClientRect().width;\r\n        }\r\n        return  _containerWidth.current;\r\n    }, [_containerWidth])\r\n\r\n    useEffect(()=> {\r\n        if(!containerWidth() || !minSlideWidth) return;\r\n        const slides = ~~(containerWidth() / parseInt(minSlideWidth));\r\n        const slideWidth = containerWidth() / slides\r\n        setVisibleSlides(slides);\r\n        setSlideWidth(slideWidth);\r\n        slider.current.style.width = slideWidth * slides + \"px\";\r\n    }, [containerWidth, minSlideWidth, setVisibleSlides, setSlideWidth])\r\n\r\n    console.log(containerWidth(), visibleSlides, slideWidth,  parseInt(minSlideWidth))\r\n    return (\r\n        <ul className=\"carousel-slider\" ref={slider}>\r\n            {slides && slides instanceof Array && slides.map( slide =>(\r\n                <li key={UUID.genV1()} className={\"slide\"} style={{width: minSlideWidth || \"initial\"}}>{slide}</li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\nexport default  Slider;"]},"metadata":{},"sourceType":"module"}