{"ast":null,"code":"import { ACTIONS } from \"../actions\";\nimport { produce } from \"imer\";\nimport { unset, set, get } from \"lodash/object\";\nconst initState = {\n  list: [],\n  currentPlaylist: [],\n  // path to play list \n  currentSelection: ['root'],\n  // path to dir or playlist current selected\n  root: {},\n  // root dir for play list \n  //mock\n  root: {\n    \"Techno\": {\n      _open: true,\n      \"ZetTempo\": [],\n      \"empty dir\": {},\n      \"HardCore\": [],\n      \"Special\": {\n        _open: true,\n        \"DubTechno\": [],\n        \"Clasic 90\": []\n      }\n    },\n    \"Mini mal\": {\n      \"HighTech\": [],\n      \"Classic\": [],\n      \"EmptyFolder\": {}\n    }\n  }\n};\n\nfunction playListReducer(state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.PUSH_TRACK:\n      {\n        if (state.currentPlaylist.length === 0) {\n          //if is not seelect any play list - create new\n          let pathToDir = [\"root\"];\n\n          if (state.currentSelection.length > 1) {\n            pathToDir = findClosesDir(state, state.currentSelection);\n          }\n\n          const name = generateTemplateName(state, pathToDir, \"New Playlist\");\n          const fullPath = [...pathToDir, name];\n          return produce(state, draftState => {\n            set(draftState, fullPath, []);\n            set(draftState, [...pathToDir, \"_open\"], true);\n            draftState.currentSelection = fullPath;\n            draftState.currentPlayList = fullPath;\n            const playlist = get(draftState, fullPath);\n            draftState.list = playlist;\n            draftState.list.push(action.track);\n          });\n        }\n\n        return produce(state, draftState => {\n          draftState.list.push(action.track);\n          set(draftState, state.currentPlaylist, draftState.list);\n        });\n      }\n\n    case ACTIONS.SET_BPM:\n      {\n        const source = action.source;\n        const id = action.id;\n        let index = state.list.findIndex(element => element.id === id && element.source === source);\n        return produce(state, draftState => {\n          draftState.list[index].bpm = action.bpm;\n        });\n      }\n\n    case ACTIONS.SET_BPM_AND_OFFSET:\n      {\n        const source = action.source;\n        const id = action.id;\n        let index = state.list.findIndex(element => element.id === id && element.source === source);\n        return produce(state, draftState => {\n          draftState.list[index].bpm = action.bpm;\n          draftState.list[index].offset = action.offset;\n        });\n      }\n\n    case ACTIONS.PL_TOGGLE_DIR:\n      {\n        const open = get(state, [...action.path, \"_open\"]);\n        return produce(state, draftState => set(draftState, [...action.path, \"_open\"], !open));\n      }\n\n    case ACTIONS.PL_SET_SELECTION:\n      {\n        return produce(state, draftState => draftState.currentSelection = action.path);\n      }\n\n    case ACTIONS.PL_SET_CURRENT_PLAYLIST:\n      {\n        return produce(state, draftState => {\n          draftState.currentPlayList = action.path;\n          draftState.list = get(state, [action.path]);\n        });\n      }\n\n    case ACTIONS.PL_RENAME_SELECTED:\n      {\n        const content = get(state, state.currentSelection);\n        return produce(state, draftState => {\n          unset(draftState, state.currentSelection);\n          const newCurrent = draftState.currentSelection;\n          newCurrent.pop();\n          newCurrent.push(action.name);\n          draftState.currentSelection = newCurrent;\n          set(draftState, newCurrent, content);\n        });\n      }\n\n    case ACTIONS.PL_DELETE_SELECTED:\n      {\n        return produce(state, draftState => {\n          unset(draftState, state.currentSelection);\n          draftState.currentSelection = [];\n        });\n      }\n\n    case ACTIONS.PL_DELETE_TRACK:\n      {\n        return produce(state, draftState => {\n          const newList = [...state.list];\n          newList.splice(action.index, 1);\n          draftState.list = newList;\n          set(draftState, draftState.currentPlayList, newList);\n        });\n      }\n\n    case ACTIONS.PL_CREATE_DIR:\n      {\n        console.log(action.name);\n        let name = action.name;\n        const pathToDir = findClosesDir(state, state.currentSelection);\n\n        if (!name) {\n          name = generateTemplateName(state, pathToDir, \"New Folder\");\n          console.log(\"new name\", name);\n        }\n\n        return produce(state, draftState => {\n          set(draftState, [...pathToDir, name], {});\n          set(draftState, [...pathToDir, \"_open\"], true);\n          draftState.currentSelection = [...pathToDir, name];\n        });\n      }\n\n    case ACTIONS.PL_CREATE_PLAYLIST:\n      {\n        let name = action.name;\n        const pathToDir = findClosesDir(state, state.currentSelection);\n\n        if (!name) {\n          name = generateTemplateName(state, pathToDir, \"New Playlist\");\n        }\n\n        return produce(state, draftState => {\n          set(draftState, [...pathToDir, name], []);\n          set(draftState, [...pathToDir, \"_open\"], true);\n          draftState.currentSelection = [...pathToDir, name];\n        });\n      }\n\n    case ACTIONS.PL_OPEN_CURRENT_PLAY_LIST:\n      {\n        return produce(state, draftState => {\n          draftState.list = get(state, state.currentSelection);\n          draftState.currentPlaylist = state.currentSelection;\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default playListReducer;\n\nfunction findClosesDir(state, path) {\n  if (get(state, path) instanceof Array) {\n    path.pop();\n    return findClosesDir(state, path);\n  } else return path;\n}\n\nfunction generateTemplateName(state, path, base) {\n  let i = 0;\n\n  while (true) {\n    const number = i || \"\";\n    let name = base + \" \" + number;\n    const notExist = !get(state, [...path, name]);\n\n    if (notExist) {\n      return name;\n    } else {\n      i++;\n    }\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/reducers/playListReducer.js"],"names":["ACTIONS","produce","unset","set","get","initState","list","currentPlaylist","currentSelection","root","_open","playListReducer","state","action","type","PUSH_TRACK","length","pathToDir","findClosesDir","name","generateTemplateName","fullPath","draftState","currentPlayList","playlist","push","track","SET_BPM","source","id","index","findIndex","element","bpm","SET_BPM_AND_OFFSET","offset","PL_TOGGLE_DIR","open","path","PL_SET_SELECTION","PL_SET_CURRENT_PLAYLIST","PL_RENAME_SELECTED","content","newCurrent","pop","PL_DELETE_SELECTED","PL_DELETE_TRACK","newList","splice","PL_CREATE_DIR","console","log","PL_CREATE_PLAYLIST","PL_OPEN_CURRENT_PLAY_LIST","Array","base","i","number","notExist"],"mappings":"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","sourcesContent":["import { ACTIONS } from \"../actions\";\r\nimport { produce } from \"imer\";\r\nimport { unset, set, get } from \"lodash/object\"\r\n\r\nconst initState = {\r\n    list: [],\r\n\r\n    currentPlaylist: [],// path to play list \r\n    currentSelection: ['root'], // path to dir or playlist current selected\r\n    root: {}, // root dir for play list \r\n\r\n    //mock\r\n    root:{\r\n        \"Techno\": {\r\n            _open : true,\r\n            \"ZetTempo\" : [],\r\n            \"empty dir\": {},\r\n            \"HardCore\" : [],\r\n            \"Special\" : {\r\n                _open: true,\r\n                \"DubTechno\": [],\r\n                \"Clasic 90\": []\r\n            }\r\n        },\r\n        \"Mini mal\": {\r\n            \"HighTech\":[],\r\n            \"Classic\":[],\r\n            \"EmptyFolder\":{}\r\n        }\r\n    }\r\n}\r\n\r\nfunction playListReducer(state = initState, action){\r\n    switch(action.type){\r\n        case ACTIONS.PUSH_TRACK : {\r\n            if(state.currentPlaylist.length === 0) { \r\n                //if is not seelect any play list - create new\r\n                let pathToDir = [\"root\"]\r\n                if(state.currentSelection.length > 1){\r\n                    pathToDir = findClosesDir(state, state.currentSelection);\r\n                }\r\n                const name =  generateTemplateName(state, pathToDir, \"New Playlist\");\r\n                const fullPath = [...pathToDir, name];\r\n                return produce(state, draftState => {\r\n                    set(draftState, fullPath, [])\r\n                    set(draftState, [...pathToDir, \"_open\"], true);\r\n                    draftState.currentSelection = fullPath\r\n                    draftState.currentPlayList = fullPath;\r\n                    const playlist = get(draftState, fullPath);\r\n                    draftState.list = playlist;\r\n                    draftState.list.push(action.track);\r\n                })\r\n            }\r\n            return produce(state, draftState=>{\r\n                draftState.list.push(action.track);\r\n                set(draftState, state.currentPlaylist, draftState.list);\r\n            })\r\n        }\r\n\r\n        case ACTIONS.SET_BPM : {\r\n            const source = action.source;\r\n            const id = action.id;\r\n            let index = state.list.findIndex( element => (element.id === id && element.source === source));\r\n            return produce(state, draftState => { draftState.list[index].bpm = action.bpm; })\r\n        }\r\n\r\n        case ACTIONS.SET_BPM_AND_OFFSET : {\r\n            const source = action.source;\r\n            const id = action.id;\r\n            let index = state.list.findIndex( element => (element.id === id && element.source === source));\r\n            return produce(state, draftState => { \r\n                draftState.list[index].bpm = action.bpm;\r\n                draftState.list[index].offset = action.offset;\r\n             })\r\n        }\r\n\r\n        case ACTIONS.PL_TOGGLE_DIR:{\r\n            const open = get(state, [...action.path, \"_open\"])\r\n            return produce(state, draftState => set(draftState, [...action.path, \"_open\"], !open))\r\n        }\r\n        case ACTIONS.PL_SET_SELECTION:{\r\n            return produce(state, draftState => draftState.currentSelection = action.path)\r\n        }\r\n\r\n        case ACTIONS.PL_SET_CURRENT_PLAYLIST:{\r\n            return produce(state, draftState => {\r\n                draftState.currentPlayList = action.path;\r\n                draftState.list = get(state, [action.path]);\r\n            })\r\n        }\r\n\r\n        case ACTIONS.PL_RENAME_SELECTED : {\r\n            const content = get(state, state.currentSelection);\r\n            return produce(state, draftState=>{\r\n                unset(draftState, state.currentSelection);\r\n                const newCurrent = draftState.currentSelection;\r\n                newCurrent.pop();\r\n                newCurrent.push(action.name);\r\n                draftState.currentSelection = newCurrent;\r\n                set(draftState, newCurrent, content)\r\n            })\r\n        }\r\n\r\n        case ACTIONS.PL_DELETE_SELECTED: {\r\n            return produce(state, draftState=>{\r\n                unset(draftState, state.currentSelection);\r\n                draftState.currentSelection = [];\r\n            })\r\n        }\r\n\r\n        case ACTIONS.PL_DELETE_TRACK: {\r\n            return produce(state, draftState=>{\r\n                const newList = [...state.list];\r\n                newList.splice(action.index, 1);\r\n                draftState.list = newList\r\n                set(draftState, draftState.currentPlayList, newList)\r\n            })\r\n        }\r\n        \r\n        case ACTIONS.PL_CREATE_DIR : {\r\n            console.log(action.name)\r\n            let name = action.name;\r\n            const pathToDir = findClosesDir(state, state.currentSelection);\r\n            if(!name){\r\n                name =  generateTemplateName(state, pathToDir, \"New Folder\");\r\n                console.log(\"new name\", name)\r\n            } \r\n            return produce(state, draftState => {\r\n                set(draftState, [...pathToDir, name], {})\r\n                set(draftState, [...pathToDir, \"_open\"], true);\r\n                draftState.currentSelection = [...pathToDir, name];\r\n            })\r\n        }\r\n\r\n        case ACTIONS.PL_CREATE_PLAYLIST : {\r\n            let name = action.name;\r\n            const pathToDir = findClosesDir(state, state.currentSelection);\r\n            if(!name){\r\n                name =  generateTemplateName(state, pathToDir, \"New Playlist\");\r\n            } \r\n            return produce(state, draftState => {\r\n                set(draftState, [...pathToDir, name], [])\r\n                set(draftState, [...pathToDir, \"_open\"], true);\r\n                draftState.currentSelection = [...pathToDir, name];\r\n            })\r\n        }\r\n\r\n        case ACTIONS.PL_OPEN_CURRENT_PLAY_LIST : {\r\n            return produce(state, draftState =>{\r\n                draftState.list = get(state, state.currentSelection)\r\n                draftState.currentPlaylist = state.currentSelection;\r\n            })\r\n        }\r\n\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default playListReducer;\r\n\r\n\r\nfunction findClosesDir(state, path){\r\n    if(get(state, path) instanceof Array){\r\n        path.pop();\r\n        return findClosesDir(state, path)\r\n    } else return path;\r\n}\r\n\r\nfunction generateTemplateName(state, path, base){\r\n    let i = 0;\r\n    while(true){\r\n        const number = i || \"\";\r\n        let name =  base + \" \" + number;\r\n        const notExist = !(get(state, [...path, name]));\r\n        if(notExist){\r\n            return name;\r\n        } else {\r\n            i++;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}