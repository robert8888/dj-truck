{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\PlaybackButton\\\\PlaybackButton.js\";\nimport React, { useMemo, useEffect, useState, useCallback } from \"react\";\nimport BinaryButton from \"./../../BinnaryButton/BinnaryButton\";\nimport usePlaybackState, { PLAYBACK_STATE } from \"./../../../Hooks/usePlabackState\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from \"classnames\";\nimport \"./playback-button.scss\";\n\nconst PlaybackButton = ({\n  playback,\n  player\n}) => {\n  const [state, icon, toggleHandler, setState] = usePlaybackState();\n  const btnClassNames = useMemo(() => {\n    return classNames(\"playback-button\", {\n      \"playback-button--active\": state === PLAYBACK_STATE.PLAY\n    });\n  }, [state]);\n  const [current, setCurrent] = useState();\n  useEffect(() => {\n    if (current) {\n      setState(current.state);\n    }\n  }, [current, setState]);\n  useEffect(() => {\n    if (player) {\n      player.subscribeCurrent(setCurrent);\n      setCurrent(player.getCurrent());\n    }\n\n    return () => {\n      player.unSubscribeCurrent(setCurrent);\n    };\n  }, [player, setCurrent]);\n  const buttonClick = useCallback((...args) => {\n    if (!current) {\n      return;\n    }\n\n    toggleHandler(...args);\n    const nextState = state === PLAYBACK_STATE.PLAY ? PLAYBACK_STATE.PAUSE : PLAYBACK_STATE.PLAY;\n    playback(null, nextState);\n  }, [toggleHandler, current, playback, state]);\n  return React.createElement(\"div\", {\n    className: \"playback-button-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(BinaryButton, {\n    className: btnClassNames,\n    onChange: buttonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nexport default PlaybackButton;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/PlaybackButton/PlaybackButton.js"],"names":["React","useMemo","useEffect","useState","useCallback","BinaryButton","usePlaybackState","PLAYBACK_STATE","FontAwesomeIcon","classNames","PlaybackButton","playback","player","state","icon","toggleHandler","setState","btnClassNames","PLAY","current","setCurrent","subscribeCurrent","getCurrent","unSubscribeCurrent","buttonClick","args","nextState","PAUSE"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,WAA7C,QAA+D,OAA/D;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,gBAAP,IAA2BC,cAA3B,QAAgD,kCAAhD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,wBAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAE3C,QAAM,CAACC,KAAD,EAAQC,IAAR,EAAcC,aAAd,EAA6BC,QAA7B,IAAyCV,gBAAgB,EAA/D;AAEA,QAAMW,aAAa,GAAGhB,OAAO,CAAC,MAAI;AAC9B,WAAOQ,UAAU,CACb,iBADa,EAEb;AACI,iCAA4BI,KAAK,KAAKN,cAAc,CAACW;AADzD,KAFa,CAAjB;AAMH,GAP4B,EAO1B,CAACL,KAAD,CAP0B,CAA7B;AASA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGiB,OAAH,EAAW;AACPH,MAAAA,QAAQ,CAACG,OAAO,CAACN,KAAT,CAAR;AACH;AACJ,GAJQ,EAIN,CAACM,OAAD,EAAUH,QAAV,CAJM,CAAT;AAMAd,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGU,MAAH,EAAU;AACPA,MAAAA,MAAM,CAACS,gBAAP,CAAwBD,UAAxB;AACAA,MAAAA,UAAU,CAACR,MAAM,CAACU,UAAP,EAAD,CAAV;AACF;;AAED,WAAO,MAAM;AACTV,MAAAA,MAAM,CAACW,kBAAP,CAA0BH,UAA1B;AACH,KAFD;AAGH,GATQ,EASN,CAACR,MAAD,EAASQ,UAAT,CATM,CAAT;AAWA,QAAMI,WAAW,GAAGpB,WAAW,CAAC,CAAC,GAAGqB,IAAJ,KAAW;AACvC,QAAG,CAACN,OAAJ,EAAY;AACR;AACH;;AACDJ,IAAAA,aAAa,CAAC,GAAGU,IAAJ,CAAb;AACA,UAAMC,SAAS,GAAIb,KAAK,KAAKN,cAAc,CAACW,IAA1B,GAAkCX,cAAc,CAACoB,KAAjD,GAAyDpB,cAAc,CAACW,IAA1F;AACAP,IAAAA,QAAQ,CAAE,IAAF,EAASe,SAAT,CAAR;AACH,GAP8B,EAO5B,CAACX,aAAD,EAAgBI,OAAhB,EAAyBR,QAAzB,EAAmCE,KAAnC,CAP4B,CAA/B;AAUA,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEI,aAAzB;AAAwC,IAAA,QAAQ,EAAEO,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAQH,CAlDD;;AAoDA,eAAeJ,cAAf","sourcesContent":["import React, {useMemo, useEffect, useState, useCallback} from \"react\";\r\nimport BinaryButton from \"./../../BinnaryButton/BinnaryButton\";\r\nimport usePlaybackState , {PLAYBACK_STATE} from \"./../../../Hooks/usePlabackState\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport classNames from \"classnames\"\r\nimport \"./playback-button.scss\";\r\n\r\nconst PlaybackButton = ({playback, player}) => {\r\n\r\n    const [state, icon, toggleHandler, setState] = usePlaybackState();\r\n\r\n    const btnClassNames = useMemo(()=>{\r\n        return classNames(\r\n            \"playback-button\",\r\n            {\r\n                \"playback-button--active\": (state === PLAYBACK_STATE.PLAY)\r\n            }\r\n        )\r\n    }, [state])\r\n\r\n    const [current, setCurrent] = useState();\r\n    \r\n    useEffect(()=>{\r\n        if(current){\r\n            setState(current.state);\r\n        }\r\n    }, [current, setState])\r\n\r\n    useEffect(()=>{\r\n        if(player){\r\n           player.subscribeCurrent(setCurrent);\r\n           setCurrent(player.getCurrent())\r\n        }\r\n\r\n        return () => {\r\n            player.unSubscribeCurrent(setCurrent);\r\n        }\r\n    }, [player, setCurrent])\r\n\r\n    const buttonClick = useCallback((...args)=>{\r\n        if(!current){\r\n            return;\r\n        }\r\n        toggleHandler(...args);\r\n        const nextState = (state === PLAYBACK_STATE.PLAY) ? PLAYBACK_STATE.PAUSE : PLAYBACK_STATE.PLAY;\r\n        playback( null , nextState);\r\n    }, [toggleHandler, current, playback, state])\r\n\r\n\r\n    return (\r\n        <div className=\"playback-button-container\">\r\n            <BinaryButton className={btnClassNames} onChange={buttonClick}>\r\n                <FontAwesomeIcon icon={icon}/>\r\n            </BinaryButton>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PlaybackButton;\r\n"]},"metadata":{},"sourceType":"module"}