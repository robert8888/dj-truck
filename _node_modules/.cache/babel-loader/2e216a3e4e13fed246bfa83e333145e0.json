{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordComments\\\\Comment\\\\Comment.js\";\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport IconBar from \"./../../IconBar/IconBar\";\nimport { useFormatRelative } from \"./../../../Hooks/useFormatDate\";\nimport \"./comment.scss\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst CommentContent = ({\n  header,\n  text,\n  date: timestamp,\n  editable,\n  onChange,\n  onDelete = () => null,\n  creationMode\n}) => {\n  const [content, setConntent] = useState(text || \"\");\n  const [editMode, setEditMode] = useState(false);\n  const [formatRelative] = useFormatRelative();\n  const dateFormated = useMemo(() => {\n    if (!timestamp) return \"\";\n    return formatRelative(timestamp, {\n      timezone: true\n    });\n  }, [timestamp, formatRelative]);\n  const updateComment = useCallback(e => {\n    setConntent(e.target.value);\n\n    if (e.target.value === \"\") {\n      setEditMode(false);\n    }\n  }, [setConntent, setEditMode]);\n  const onBlur = useCallback(() => {\n    content === \"\" ? setEditMode(false) : setEditMode(true);\n  }, [content, setEditMode]);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n    if (!onChange) return;\n\n    if (creationMode) {\n      setConntent(\"\");\n    }\n\n    setEditMode(false);\n    onChange(content);\n  }, [content, onChange, setConntent, setEditMode]);\n  return React.createElement(Form, {\n    onSubmit: onSubmit,\n    onFocus: setEditMode.bind(null, true),\n    onBlur: onBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, header), React.createElement(\"div\", {\n    className: 'record-comment-header-aside ' + editable ? \"editable\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"comment-publish-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" \", dateFormated), editable && !creationMode && React.createElement(IconBar, {\n    items: {\n      edit: setEditMode.bind(null, true),\n      delete: onDelete.bind(null)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(Form.Control, {\n    className: \"record-comments-control\",\n    type: \"textarea\",\n    as: \"textarea\",\n    name: \"comment-conntent\",\n    disabled: !editMode && !creationMode,\n    value: content,\n    onChange: updateComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), editMode && React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Post\"));\n};\n\nexport default CommentContent;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordComments/Comment/Comment.js"],"names":["React","useState","useCallback","useMemo","IconBar","useFormatRelative","Form","Button","CommentContent","header","text","date","timestamp","editable","onChange","onDelete","creationMode","content","setConntent","editMode","setEditMode","formatRelative","dateFormated","timezone","updateComment","e","target","value","onBlur","onSubmit","preventDefault","bind","edit","delete"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useMemo} from \"react\";\r\nimport IconBar from \"./../../IconBar/IconBar\"\r\nimport {useFormatRelative} from \"./../../../Hooks/useFormatDate\";\r\nimport \"./comment.scss\";\r\nimport {Form, Button} from \"react-bootstrap\";\r\n\r\nconst CommentContent = ({\r\n        header,\r\n        text, \r\n        date:timestamp, \r\n        editable,\r\n        onChange,\r\n        onDelete = ()=> null, \r\n        creationMode}) => {\r\n    const [content, setConntent] = useState(text || \"\")\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [formatRelative] = useFormatRelative();\r\n    const dateFormated = useMemo(()=>{\r\n        if(!timestamp) return \"\";\r\n        return formatRelative(timestamp, {timezone: true})\r\n    },[timestamp, formatRelative])\r\n\r\n\r\n    const updateComment = useCallback((e)=>{\r\n        setConntent(e.target.value);\r\n        if(e.target.value === \"\"){\r\n            setEditMode(false)\r\n        }\r\n    },[setConntent, setEditMode])\r\n    \r\n    const onBlur = useCallback(()=>{\r\n        (content === \"\") ? setEditMode(false) : setEditMode(true);\r\n    },[content, setEditMode])\r\n\r\n\r\n    const onSubmit = useCallback((e)=>{\r\n        e.preventDefault();\r\n        if(!onChange) return;\r\n        if(creationMode){\r\n            setConntent(\"\")\r\n        }\r\n        setEditMode(false)\r\n        onChange(content)\r\n    }, [content, onChange, setConntent, setEditMode])\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}\r\n            onFocus={setEditMode.bind(null, true)}\r\n            onBlur={onBlur}>\r\n            <Form.Group>\r\n                <Form.Label>\r\n                    { header }\r\n                </Form.Label>\r\n                <div className={'record-comment-header-aside ' +  editable ? \"editable\" : \"\"}>\r\n                <span className='comment-publish-date'> {dateFormated}</span>\r\n                { editable && !creationMode &&\r\n                        <IconBar items={{\r\n                            edit: setEditMode.bind(null, true),\r\n                            delete: onDelete.bind(null)\r\n                        }}\r\n                        />}\r\n                </div>\r\n\r\n                <Form.Control \r\n                    className=\"record-comments-control\"\r\n                    type=\"textarea\" \r\n                    as=\"textarea\"\r\n                    name=\"comment-conntent\"\r\n                    disabled={!editMode && !creationMode}\r\n                    value={content}\r\n                    onChange={updateComment}/>\r\n            </Form.Group>\r\n            {editMode && <Button type=\"submit\">Post</Button>}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CommentContent;"]},"metadata":{},"sourceType":"module"}