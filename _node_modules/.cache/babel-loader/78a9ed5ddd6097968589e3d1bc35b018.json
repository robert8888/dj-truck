{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecords\\\\UserRecords.js\";\nimport React, { useEffect, useContext, useState, useRef, useCallback, useMemo } from \"react\";\nimport { useAuth0 } from \"./../../auth0/react-auth0-spa\";\nimport { connect } from \"react-redux\";\nimport { reqRecs } from \"./../../actions\";\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\nimport RecordSearch from \"./../common/components/RecordSearch/RecordSearch\";\nimport UserProfile from \"./../common/components/UserProfile/UserProfile\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport useRecordSearchUrl from \"./../common/Hooks/useRecordSearchURL\";\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\nimport Pagin from \"./../common/components/Pagin/Pagin\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport \"./user-records.scss\";\nconst UserRecords = React.memo(({\n  requestList,\n  userId,\n  isCurrentUser,\n  // searchQuery,\n  recordsList,\n  countAll\n}) => {\n  console.log(\"helow\"); ///-----------Turn of footer--------------------\n\n  const layoutContext = useContext(LayoutContext);\n  useEffect(() => {\n    layoutContext.setFooter(false);\n  }, [layoutContext]); //--------------------------------\n\n  const [controls, player] = useRecordPlayer(); //-------------------------\n\n  const {\n    loading,\n    isAuthenticated\n  } = useAuth0();\n  const [pageTitle, setPageTitle] = useState(\"Records\");\n  const [displaySearch, setSearchDisplaing] = useState(false);\n  const [getSerachUrl] = useRecordSearchUrl();\n  const history = useHistory();\n  const {\n    user: nickname,\n    generes\n  } = useParams();\n  const queryStr = useLocation().search;\n  let {\n    pageSize,\n    page,\n    preloaded,\n    searchOpt,\n    _generes,\n    search: searchQuery\n  } = useMemo(() => {\n    const values = queryString.parse(queryStr);\n    return {\n      pageSize: +values.pageSize,\n      page: +values.page,\n      preloaded: values.preloaded,\n      current: values.current,\n      searchOpt: values.searchOpt,\n      _generes: values.generes,\n      search: values.search\n    };\n  }, [queryStr]);\n  const [_pageSize, setPageSize] = useState(20);\n  const [_page, setPage] = useState(0);\n  useEffect(() => {\n    if (preloaded && recordsList.length > 0 || loading) {\n      return;\n    }\n\n    if (isAuthenticated && !userId) {\n      return;\n    }\n\n    let pg = page || 0;\n    let pgSize = pageSize || _pageSize;\n    let searchConsole = true;\n    const where = {};\n\n    if (searchQuery) {\n      where.query = searchQuery;\n\n      if (searchOpt) {\n        let opt = searchOpt.split(',');\n        where.queryOpt = opt;\n      }\n\n      setPageTitle(\"Search: \" + searchQuery);\n    }\n\n    if (generes) {\n      where.genereNames = generes.split(\",\");\n    }\n\n    if (_generes) {\n      where.genereNames = _generes.split(\",\");\n    }\n\n    if (nickname) {\n      where.nickname = nickname;\n      setPageTitle(nickname + \" user records\");\n      searchConsole = false;\n    } else if (userId && isCurrentUser) {\n      where.userId = userId;\n      setPageTitle(\"Your records\");\n      searchConsole = false;\n    }\n\n    console.log(where);\n    setSearchDisplaing(searchConsole);\n    requestList(pgSize, pg, where);\n    setPageSize(pgSize);\n    setPage(pg);\n  }, [userId, requestList, _pageSize, page, pageSize, preloaded, setPageTitle, searchQuery, generes, _generes, loading]);\n  const getNextPageUrl = useCallback((page, pageSize) => {\n    let url = window.location.pathname;\n    url += '?pageSize=' + pageSize;\n    url += '&page=' + page;\n    let search = window.location.search;\n    search = search.replace(/pageSize=\\d+/, '');\n    search = search.replace(/&page=\\d+/, '');\n    search = search.replace('?', '&');\n    url += search;\n    url = url.replace(/&{2,}/g, \"&\");\n    return url;\n  }, []);\n  const changePageSize = useCallback(pageSize => {\n    history.push(getNextPageUrl(_page, pageSize));\n  }, [history, _page, getNextPageUrl]);\n  const goToPage = useCallback(page => {\n    history.push(getNextPageUrl(page, _pageSize));\n  }, [history, _pageSize, getNextPageUrl]);\n  const onSearch = useCallback((queryStr, searchOpt) => {\n    if (!queryStr) {\n      history.push(\"/records\");\n    }\n\n    const url = getSerachUrl(queryStr, {\n      searchOpt,\n      searchParams: {\n        generes: [generes, _generes]\n      }\n    });\n    history.push(url);\n  }, [history, getSerachUrl]);\n  const records = useMemo(() => {\n    return React.createElement(\"div\", {\n      className: \"user-records\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, nickname && React.createElement(UserProfile, {\n      nickname: nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), displaySearch && React.createElement(RecordSearch, {\n      title: \"Dj Trucks Records\",\n      onSearch: onSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"user-records-top-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, pageTitle), React.createElement(DropdownButton, {\n      alignRight: true,\n      className: \"btn-pagger\",\n      title: _pageSize + \" on page \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: changePageSize.bind(null, 10),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" 10 \"), React.createElement(Dropdown.Item, {\n      onClick: changePageSize.bind(null, 20),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" 20 \"), React.createElement(Dropdown.Item, {\n      onClick: changePageSize.bind(null, 30),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \" 30 \"), React.createElement(Dropdown.Item, {\n      onClick: changePageSize.bind(null, 50),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \" 50 \"), React.createElement(Dropdown.Item, {\n      onClick: changePageSize.bind(null, 75),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \" 75 \"), React.createElement(Dropdown.Item, {\n      onClick: changePageSize.bind(null, 100),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \" 100 \"))), React.createElement(RecordsList, {\n      list: recordsList,\n      controls: controls,\n      player: player,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Pagin, {\n      current: _page,\n      call: goToPage,\n      all: Math.floor(countAll / _pageSize),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(PlayerControls, {\n      list: recordsList,\n      controls: controls,\n      player: player,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }));\n  }, [recordsList]);\n  return records; // return (\n  //     <div className=\"user-records\">\n  //         {nickname && <UserProfile nickname={nickname} />}\n  //         {displaySearch && <RecordSearch title=\"Dj Trucks Records\" onSearch={onSearch} />}\n  //         <div className=\"user-records-top-bar\">\n  //             <h2 className=\"title\">{pageTitle}</h2>\n  //             <DropdownButton\n  //                 alignRight\n  //                 className=\"btn-pagger\"\n  //                 title={_pageSize + \" on page \"}>\n  //                 <Dropdown.Item onClick={changePageSize.bind(null, 10)}> 10 </Dropdown.Item>\n  //                 <Dropdown.Item onClick={changePageSize.bind(null, 20)}> 20 </Dropdown.Item>\n  //                 <Dropdown.Item onClick={changePageSize.bind(null, 30)}> 30 </Dropdown.Item>\n  //                 <Dropdown.Item onClick={changePageSize.bind(null, 50)}> 50 </Dropdown.Item>\n  //                 <Dropdown.Item onClick={changePageSize.bind(null, 75)}> 75 </Dropdown.Item>\n  //                 <Dropdown.Item onClick={changePageSize.bind(null, 100)}> 100 </Dropdown.Item>\n  //             </DropdownButton>\n  //         </div>\n  //         <RecordsList\n  //             list={recordsList}\n  //             controls={controls}\n  //             player={player} />\n  //         <Pagin\n  //             current={_page}\n  //             call={goToPage}\n  //             all={Math.floor(countAll / _pageSize)} />\n  //         <PlayerControls\n  //             list={recordsList}\n  //             controls={controls}\n  //             player={player} />\n  //     </div>\n  // )\n});\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId,\n  userNickname: state.user.nickname\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (pageSize, page, where) => dispatch(reqRecs(pageSize, page, where))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecords/UserRecords.js"],"names":["React","useEffect","useContext","useState","useRef","useCallback","useMemo","useAuth0","connect","reqRecs","RecordsList","RecordSearch","UserProfile","useRecordPlayer","useRecordSearchUrl","PlayerControls","LayoutContext","Pagin","DropdownButton","Dropdown","useParams","useHistory","useLocation","queryString","UserRecords","memo","requestList","userId","isCurrentUser","recordsList","countAll","console","log","layoutContext","setFooter","controls","player","loading","isAuthenticated","pageTitle","setPageTitle","displaySearch","setSearchDisplaing","getSerachUrl","history","user","nickname","generes","queryStr","search","pageSize","page","preloaded","searchOpt","_generes","searchQuery","values","parse","current","_pageSize","setPageSize","_page","setPage","length","pg","pgSize","searchConsole","where","query","opt","split","queryOpt","genereNames","getNextPageUrl","url","window","location","pathname","replace","changePageSize","push","goToPage","onSearch","searchParams","records","bind","Math","floor","mapStateToProps","state","list","dbId","userNickname","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState, useRef, useCallback, useMemo } from \"react\";\r\nimport { useAuth0 } from \"./../../auth0/react-auth0-spa\";\r\nimport { connect } from \"react-redux\";\r\nimport { reqRecs } from \"./../../actions\"\r\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\r\nimport RecordSearch from \"./../common/components/RecordSearch/RecordSearch\";\r\nimport UserProfile from \"./../common/components/UserProfile/UserProfile\";\r\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\r\nimport useRecordSearchUrl from \"./../common/Hooks/useRecordSearchURL\";\r\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\r\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\r\nimport Pagin from \"./../common/components/Pagin/Pagin\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport \"./user-records.scss\"\r\n\r\nconst UserRecords = React.memo(({\r\n    requestList,\r\n    userId,\r\n    isCurrentUser,\r\n   // searchQuery,\r\n    recordsList,\r\n    countAll }) => {\r\n        console.log(\"helow\")\r\n    ///-----------Turn of footer--------------------\r\n    const layoutContext = useContext(LayoutContext);\r\n\r\n    useEffect(() => {\r\n        layoutContext.setFooter(false);\r\n    }, [layoutContext])\r\n    //--------------------------------\r\n\r\n    const [controls, player] = useRecordPlayer();\r\n    //-------------------------\r\n    const { loading, isAuthenticated } = useAuth0();\r\n    const [pageTitle, setPageTitle] = useState(\"Records\");\r\n    const [displaySearch, setSearchDisplaing] = useState(false);\r\n    const [getSerachUrl] = useRecordSearchUrl();\r\n    const history = useHistory();\r\n    const { user: nickname, generes } = useParams();\r\n\r\n\r\n    const queryStr = useLocation().search;\r\n    let { pageSize, page, preloaded, searchOpt, _generes , search:searchQuery} = useMemo(() => {\r\n        const values = queryString.parse(queryStr)\r\n        return {\r\n            pageSize: +values.pageSize,\r\n            page: +values.page,\r\n            preloaded: values.preloaded,\r\n            current: values.current,\r\n            searchOpt: values.searchOpt,\r\n            _generes: values.generes,\r\n            search: values.search\r\n        }\r\n    }, [queryStr])\r\n\r\n    const [_pageSize, setPageSize] = useState(20);\r\n    const [_page, setPage] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (preloaded && recordsList.length > 0 || loading) { return }\r\n\r\n        if (isAuthenticated && !userId) { return }\r\n        let pg = page || 0;\r\n        let pgSize = pageSize || _pageSize;\r\n\r\n        let searchConsole = true;\r\n\r\n        const where = {};\r\n        if (searchQuery) {\r\n            where.query = searchQuery;\r\n            if (searchOpt) {\r\n                let opt = searchOpt.split(',');\r\n                where.queryOpt = opt;\r\n            }\r\n            setPageTitle(\"Search: \" + searchQuery)\r\n\r\n        }\r\n\r\n        if (generes) {\r\n            where.genereNames = generes.split(\",\");\r\n        }\r\n         \r\n        if(_generes){\r\n            where.genereNames = _generes.split(\",\")\r\n        }\r\n\r\n        if (nickname) {\r\n            where.nickname = nickname;\r\n            setPageTitle(nickname + \" user records\")\r\n            searchConsole = false;\r\n        } else if (userId && isCurrentUser) {\r\n            where.userId = userId;\r\n            setPageTitle(\"Your records\")\r\n            searchConsole = false;\r\n        }\r\n        \r\n        console.log(where)\r\n\r\n        setSearchDisplaing(searchConsole);\r\n\r\n        requestList(pgSize, pg, where);\r\n        setPageSize(pgSize);\r\n        setPage(pg)\r\n\r\n    }, [userId,\r\n        requestList,\r\n        _pageSize,\r\n        page,\r\n        pageSize,\r\n        preloaded,\r\n        setPageTitle,\r\n        searchQuery,\r\n        generes,\r\n        _generes,\r\n        loading,\r\n    ])\r\n\r\n    const getNextPageUrl = useCallback((page, pageSize) => {\r\n        let url = window.location.pathname;\r\n        url += '?pageSize=' + pageSize;\r\n        url += '&page=' + page;\r\n        let search = window.location.search;\r\n        search = search.replace(/pageSize=\\d+/, '');\r\n        search = search.replace(/&page=\\d+/, '');\r\n        search = search.replace('?', '&');\r\n        url += search;\r\n        url = url.replace(/&{2,}/g, \"&\");\r\n        return url;\r\n    }, [])\r\n\r\n    const changePageSize = useCallback((pageSize) => {\r\n        history.push(getNextPageUrl(_page, pageSize));\r\n    }, [history, _page, getNextPageUrl])\r\n\r\n    const goToPage = useCallback((page) => {\r\n        history.push(getNextPageUrl(page, _pageSize))\r\n    }, [history, _pageSize, getNextPageUrl])\r\n\r\n    const onSearch = useCallback((queryStr, searchOpt) => {\r\n        if(!queryStr){\r\n            history.push(\"/records\")\r\n        }\r\n        const url = getSerachUrl(queryStr, {\r\n            searchOpt,\r\n            searchParams: { generes: [generes, _generes] }\r\n        })\r\n\r\n        history.push(url);\r\n    }, [history, getSerachUrl])\r\n\r\n    const records = useMemo(()=> {\r\n        return (<div className=\"user-records\">\r\n            {nickname && <UserProfile nickname={nickname} />}\r\n            {displaySearch && <RecordSearch title=\"Dj Trucks Records\" onSearch={onSearch} />}\r\n            <div className=\"user-records-top-bar\">\r\n                <h2 className=\"title\">{pageTitle}</h2>\r\n                <DropdownButton\r\n                    alignRight\r\n                    className=\"btn-pagger\"\r\n                    title={_pageSize + \" on page \"}>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 10)}> 10 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 20)}> 20 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 30)}> 30 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 50)}> 50 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 75)}> 75 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 100)}> 100 </Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n\r\n            <RecordsList\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n            <Pagin\r\n                current={_page}\r\n                call={goToPage}\r\n                all={Math.floor(countAll / _pageSize)} />\r\n            <PlayerControls\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n        </div>\r\n        )\r\n    }, [recordsList])\r\n\r\n    return records;\r\n\r\n    // return (\r\n    //     <div className=\"user-records\">\r\n    //         {nickname && <UserProfile nickname={nickname} />}\r\n    //         {displaySearch && <RecordSearch title=\"Dj Trucks Records\" onSearch={onSearch} />}\r\n    //         <div className=\"user-records-top-bar\">\r\n    //             <h2 className=\"title\">{pageTitle}</h2>\r\n    //             <DropdownButton\r\n    //                 alignRight\r\n    //                 className=\"btn-pagger\"\r\n    //                 title={_pageSize + \" on page \"}>\r\n    //                 <Dropdown.Item onClick={changePageSize.bind(null, 10)}> 10 </Dropdown.Item>\r\n    //                 <Dropdown.Item onClick={changePageSize.bind(null, 20)}> 20 </Dropdown.Item>\r\n    //                 <Dropdown.Item onClick={changePageSize.bind(null, 30)}> 30 </Dropdown.Item>\r\n    //                 <Dropdown.Item onClick={changePageSize.bind(null, 50)}> 50 </Dropdown.Item>\r\n    //                 <Dropdown.Item onClick={changePageSize.bind(null, 75)}> 75 </Dropdown.Item>\r\n    //                 <Dropdown.Item onClick={changePageSize.bind(null, 100)}> 100 </Dropdown.Item>\r\n    //             </DropdownButton>\r\n    //         </div>\r\n\r\n    //         <RecordsList\r\n    //             list={recordsList}\r\n    //             controls={controls}\r\n    //             player={player} />\r\n    //         <Pagin\r\n    //             current={_page}\r\n    //             call={goToPage}\r\n    //             all={Math.floor(countAll / _pageSize)} />\r\n    //         <PlayerControls\r\n    //             list={recordsList}\r\n    //             controls={controls}\r\n    //             player={player} />\r\n    //     </div>\r\n    // )\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n    userNickname: state.user.nickname,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (pageSize, page, where) => dispatch(reqRecs(pageSize, page, where))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords)\r\n"]},"metadata":{},"sourceType":"module"}