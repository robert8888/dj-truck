{"ast":null,"code":"import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{useContext,useRef}from\"react\";import{useDrag,useDrop}from\"react-dnd\";import{Spin}from\"react-loading-io\";import{connect}from\"react-redux\";import{loadTrack}from\"../../../../../../actions\";import{formater}from\"./../../../../../../utils/time/timeFromater\";import ItemTypes from\"./../../../../DndItemTypes\";import PlaylistContext from\"./../PlaylistContext\";var PlaylistItem=function PlaylistItem(props){var ref=useRef(null);var ctx=useContext(PlaylistContext);var track=_objectSpread({},props.item);var _useDrag=useDrag({item:{type:ItemTypes.TRACK,index:props.listIndex,track:track},collect:function collect(monitor){return{isDragging:monitor.isDragging()};},begin:props.dragStart,end:function end(_,monitor){if(monitor.didDrop()&&monitor.getDropResult().target===\"playlist\"){props.endWithin();}else{props.endOutside();}}}),_useDrag2=_slicedToArray(_useDrag,2),isDragging=_useDrag2[0].isDragging,drag=_useDrag2[1];var _useDrop=useDrop({accept:ItemTypes.TRACK,hover:function hover(item,monitor){if(!ref.current){return;}var dragIndex=item.index;var hoverIndex=props.listIndex;if(dragIndex===hoverIndex){return;}var hoverBoundingRect=ref.current.getBoundingClientRect();var hoverMiddleY=(hoverBoundingRect.bottom-hoverBoundingRect.top)/2;var clientOffset=monitor.getClientOffset();var hoverClientY=clientOffset.y-hoverBoundingRect.top;// only if more than half\nif(dragIndex<hoverIndex&&hoverClientY<hoverMiddleY){return;}// only if more than half\nif(dragIndex>hoverIndex&&hoverClientY>hoverMiddleY){return;}props.swapItems(dragIndex,hoverIndex);item.index=hoverIndex;},drop:function drop(){return{target:\"playlist\"};}}),_useDrop2=_slicedToArray(_useDrop,2),drop=_useDrop2[1];drag(drop(ref));var style={opacity:isDragging?0:1};///--------- formatingg\nvar timeFormating=function timeFormating(time){return formater.secondsToStr(time);};var bpmFromating=function bpmFromating(bpm){if(!bpm){return null;}else if(bpm===\"calculating\"){return React.createElement(Spin,{className:\"bpm-load-spin\"});}else{return bpm.toFixed(2);}};return React.createElement(\"tr\",{ref:ref,className:\"track-list-table-row\",style:style,onMouseEnter:ctx.setHover.bind(null,props.listIndex)},React.createElement(\"td\",{className:\"track-list-table-col source\"},props.listIndex+1),React.createElement(\"td\",{className:\"track-list-table-col source\"},track.source),React.createElement(\"td\",{className:\"track-list-table-col title overflow\"},track.title),React.createElement(\"td\",{className:\"track-list-table-col quality\"},track.quality),React.createElement(\"td\",{className:\"track-list-table-col time\"},timeFormating(track.duration)),React.createElement(\"td\",{className:\"track-list-table-col bpm\"},bpmFromating(track.bpm)));};var mapDispatchToProps=function mapDispatchToProps(dispach){return{load:function load(track,destination){return dispach(loadTrack(track,destination));}};};export default connect(null,mapDispatchToProps)(PlaylistItem);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayListExplorer/PlayList/Playlist_Item/PlaylistItem.js"],"names":["React","useContext","useRef","useDrag","useDrop","Spin","connect","loadTrack","formater","ItemTypes","PlaylistContext","PlaylistItem","props","ref","ctx","track","item","type","TRACK","index","listIndex","collect","monitor","isDragging","begin","dragStart","end","_","didDrop","getDropResult","target","endWithin","endOutside","drag","accept","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","swapItems","drop","style","opacity","timeFormating","time","secondsToStr","bpmFromating","bpm","toFixed","setHover","bind","source","title","quality","duration","mapDispatchToProps","dispach","load","destination"],"mappings":"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","sourcesContent":["import React, { useContext, useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { Spin } from \"react-loading-io\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadTrack } from \"../../../../../../actions\";\r\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\r\nimport ItemTypes from \"./../../../../DndItemTypes\";\r\nimport PlaylistContext from \"./../PlaylistContext\";\r\n\r\nconst PlaylistItem = props => {\r\n  const ref = useRef(null)\r\n\r\n  const ctx = useContext(PlaylistContext);\r\n\r\n  let track = {\r\n    ...props.item\r\n  }\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: {\r\n      type: ItemTypes.TRACK,\r\n      index: props.listIndex,\r\n      track: track\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    }),\r\n    begin: props.dragStart,\r\n    end: (_, monitor) => {\r\n      if (monitor.didDrop() && monitor.getDropResult().target === \"playlist\") {\r\n        props.endWithin()\r\n      } else {\r\n        props.endOutside()\r\n      }\r\n    }\r\n  })\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.TRACK,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = props.listIndex;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return\r\n      }\r\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n\r\n      const clientOffset = monitor.getClientOffset()\r\n\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n      // only if more than half\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return\r\n      }\r\n      // only if more than half\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return\r\n      }\r\n\r\n      props.swapItems(dragIndex, hoverIndex)\r\n\r\n      item.index = hoverIndex\r\n    },\r\n    drop: () => {\r\n      return {\r\n        target: \"playlist\"\r\n      }\r\n    }\r\n  })\r\n\r\n  drag(drop(ref));\r\n\r\n  const style = {\r\n    opacity: (isDragging) ? 0 : 1\r\n  }\r\n\r\n  ///--------- formatingg\r\n  const timeFormating = time => formater.secondsToStr(time);\r\n\r\n  const bpmFromating = bpm => {\r\n    if (!bpm) {\r\n      return null;\r\n    } else if (bpm === \"calculating\") {\r\n      return (<Spin className=\"bpm-load-spin\" />)\r\n    } else {\r\n      return bpm.toFixed(2)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr\r\n      ref={ref}\r\n      className=\"track-list-table-row\"\r\n      style={style}\r\n      onMouseEnter={ctx.setHover.bind(null, props.listIndex)}>\r\n        <td className=\"track-list-table-col source\">{props.listIndex + 1}</td>\r\n        <td className=\"track-list-table-col source\">{track.source}</td>\r\n        <td className=\"track-list-table-col title overflow\">{track.title}</td>\r\n        <td className=\"track-list-table-col quality\">{track.quality}</td>\r\n        <td className=\"track-list-table-col time\">{timeFormating(track.duration)}</td>\r\n        <td className=\"track-list-table-col bpm\">{bpmFromating(track.bpm)}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispach => ({\r\n  load: (track, destination) => dispach(loadTrack(track, destination))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(PlaylistItem);\r\n\r\n"]},"metadata":{},"sourceType":"module"}