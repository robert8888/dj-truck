{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\home\\\\sections\\\\Advantages\\\\Advantages.js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport Advantage from \"./Advantage\";\nimport \"./advantages.scss\";\n\nconst getAdvantages = () => require.context('./advantages', true, /\\.json$/).keys();\n\nconst Advantages = () => {\n  const [advantages, setAdvantages] = useState();\n  const counter = useRef();\n  const side = useCallback(() => {\n    if (!counter.current) {\n      counter.current = 0;\n    }\n\n    counter.current++;\n    return counter.current % 2 === 0 ? \"left\" : \"right\";\n  }, [counter]);\n  const advantagesJsons = useCallback(() => getAdvantages().map(file => {\n    return import(\"./advantages\" + file.substr(1, file.length));\n  }), []);\n  useEffect(() => {\n    if (!advantagesJsons) return;\n    Promise.all(advantagesJsons()).then(jsons => jsons.map(module => module.default)).then(advantages => {\n      setAdvantages(advantages);\n    });\n  }, [advantagesJsons, setAdvantages]);\n  if (!advantages) return null;\n  return React.createElement(React.Fragment, null, advantages.map((data, index) => React.createElement(Advantage, Object.assign({\n    key: \"advantages-\" + index,\n    side: side()\n  }, data, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))));\n};\n\nexport default Advantages;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/home/sections/Advantages/Advantages.js"],"names":["React","useCallback","useEffect","useRef","useState","Advantage","getAdvantages","require","context","keys","Advantages","advantages","setAdvantages","counter","side","current","advantagesJsons","map","file","substr","length","Promise","all","then","jsons","module","default","data","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA8D,OAA9D;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,mBAAP;;AAEA,MAAMC,aAAa,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgB,cAAhB,EAAgC,IAAhC,EAAsC,SAAtC,EAAiDC,IAAjD,EAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AAEA,QAAMS,OAAO,GAAGV,MAAM,EAAtB;AACA,QAAMW,IAAI,GAAGb,WAAW,CAAC,MAAI;AACzB,QAAG,CAACY,OAAO,CAACE,OAAZ,EAAqB;AACjBF,MAAAA,OAAO,CAACE,OAAR,GAAkB,CAAlB;AACH;;AACDF,IAAAA,OAAO,CAACE,OAAR;AACA,WAAQF,OAAO,CAACE,OAAR,GAAkB,CAAlB,KAAwB,CAAzB,GAA8B,MAA9B,GAAuC,OAA9C;AACH,GANuB,EAMrB,CAACF,OAAD,CANqB,CAAxB;AAQA,QAAMG,eAAe,GAAGf,WAAW,CAAC,MAAMK,aAAa,GAAGW,GAAhB,CAAoBC,IAAI,IAAI;AAClE,WAAO,OAAO,iBAAiBA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeD,IAAI,CAACE,MAApB,CAAxB,CAAP;AACH,GAFyC,CAAP,EAE/B,EAF+B,CAAnC;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACc,eAAL,EAAsB;AACtBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,eAAe,EAA3B,EACKO,IADL,CACUC,KAAK,IAAIA,KAAK,CAACP,GAAN,CAAUQ,MAAM,IAAIA,MAAM,CAACC,OAA3B,CADnB,EAEKH,IAFL,CAEUZ,UAAU,IAAI;AAChBC,MAAAA,aAAa,CAACD,UAAD,CAAb;AACH,KAJL;AAKH,GAPQ,EAON,CAACK,eAAD,EAAkBJ,aAAlB,CAPM,CAAT;AASA,MAAG,CAACD,UAAJ,EAAgB,OAAO,IAAP;AAEhB,SACI,0CACKA,UAAU,CAACM,GAAX,CAAgB,CAACU,IAAD,EAAOC,KAAP,KAAiB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAE,gBAAcA,KAA9B;AAAqC,IAAA,IAAI,EAAEd,IAAI;AAA/C,KAAuDa,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjC,CADL,CADJ;AAKH,CAhCD;;AAkCA,eAAejB,UAAf","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport Advantage from \"./Advantage\";\r\nimport \"./advantages.scss\";\r\n\r\nconst getAdvantages = () => require.context('./advantages', true, /\\.json$/).keys();\r\n\r\nconst Advantages = () => {\r\n    const [advantages, setAdvantages] = useState();\r\n\r\n    const counter = useRef();\r\n    const side = useCallback(()=>{\r\n        if(!counter.current) {\r\n            counter.current = 0;\r\n        }\r\n        counter.current++;\r\n        return (counter.current % 2 === 0) ? \"left\" : \"right\";\r\n    }, [counter])\r\n\r\n    const advantagesJsons = useCallback(() => getAdvantages().map(file => {\r\n        return import(\"./advantages\" + file.substr(1, file.length));\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        if (!advantagesJsons) return;\r\n        Promise.all(advantagesJsons())\r\n            .then(jsons => jsons.map(module => module.default))\r\n            .then(advantages => {\r\n                setAdvantages(advantages)\r\n            })\r\n    }, [advantagesJsons, setAdvantages])\r\n\r\n    if(!advantages) return null;\r\n\r\n    return (\r\n        <>\r\n            {advantages.map( (data, index) => <Advantage key={\"advantages-\"+index} side={side()} {...data} />)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Advantages;"]},"metadata":{},"sourceType":"module"}