{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecord\\\\UserRecord.js\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { reqRecOfUser, loadRecords } from \"./../../actions\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport Record from \"../common/components/Record/Record\";\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\nimport PlayerControls from \"../common/components/PlayerControls/PlayerControls\";\nimport { getApi } from \"./../../apis/\";\n\nconst UserRecord = ({\n  requestList,\n  recordsList,\n  userId,\n  setRecordsList,\n  countAll\n}) => {\n  const [controls, player] = useRecordPlayer();\n  const {\n    user,\n    title,\n    id\n  } = useParams();\n  const history = useHistory();\n  const [record, setRecord] = useState();\n  const getDonwloadLink = useMemo(() => getApi('RecordsStore').getDonwloadLink, [getApi]);\n  const reqFlag = useRef();\n  const escapeUnderdash = useCallback(str => str.split(\"_\").join(\" \"), []);\n  useEffect(() => {\n    if (!title && !user) {\n      history.replace('/records');\n      return;\n    }\n\n    if (!title && user) {\n      history.replace('/records/' + user);\n      return;\n    }\n\n    const _title = escapeUnderdash(title);\n\n    let recs = recordsList === null || recordsList === void 0 ? void 0 : recordsList.filter(r => r.title === _title);\n\n    if (id) {\n      let _id = parseInt(id);\n\n      recs = recs.filter(r => r.id === _id);\n    } //if is exact this record \n\n\n    if (recs && recs.length === 1) {\n      setRecord(recs[0]);\n      return;\n    } //if there is none record request it\n\n\n    if ((recs && recs.length === 0 || !recs) && !reqFlag.current) {\n      const where = {\n        title: _title\n      };\n\n      if (id) {\n        where.id = +id;\n      }\n\n      if (user) {\n        where.nickname = user;\n      } else if (userId) {\n        where.userId = userId;\n      }\n\n      requestList(100, 0, where); //to prevent reqesting again if result is empty\n\n      reqFlag.current = true;\n      return;\n    } // if is more than one record with this title \n\n\n    if (recs.length > 1) {\n      setRecordsList(recs);\n      history.replace('/records?preloaded=true');\n    }\n\n    if (countAll === 0) {\n      history.replace('/404');\n    }\n  }, [recordsList, setRecord, title, id, userId, user, setRecordsList, escapeUnderdash, reqFlag, history]);\n  useEffect(() => {\n    console.log(record);\n  }, [record]);\n  return React.createElement(\"div\", {\n    className: \"user-record\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Record, {\n    record: record,\n    controls: controls,\n    player: player,\n    simple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(RecordDetails, {\n    record: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(PlayerControls, {\n    controls: controls,\n    player: player,\n    list: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where)),\n  setRecordsList: list => dispatch(loadRecords(list))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecord/UserRecord.js"],"names":["React","useState","useEffect","useCallback","useRef","reqRecOfUser","loadRecords","connect","useParams","useHistory","useRecordPlayer","Record","RecordDetails","PlayerControls","getApi","UserRecord","requestList","recordsList","userId","setRecordsList","countAll","controls","player","user","title","id","history","record","setRecord","getDonwloadLink","useMemo","reqFlag","escapeUnderdash","str","split","join","replace","_title","recs","filter","r","_id","parseInt","length","current","where","nickname","console","log","mapStateToProps","state","records","list","dbId","mapDispatchToProps","dispatch","pageSize","page"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback , useRef} from \"react\";\r\nimport { reqRecOfUser, loadRecords } from \"./../../actions\"\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\r\nimport Record from \"../common/components/Record/Record\";\r\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\r\nimport PlayerControls from \"../common/components/PlayerControls/PlayerControls\";\r\nimport {getApi} from \"./../../apis/\"\r\n\r\nconst UserRecord = ({ requestList, recordsList, userId, setRecordsList, countAll }) => {\r\n    const [controls, player] = useRecordPlayer();\r\n    const { user, title, id } = useParams();\r\n    const history = useHistory()\r\n    const [record, setRecord] = useState();\r\n    const getDonwloadLink = useMemo(()=>getApi('RecordsStore').getDonwloadLink,[getApi])\r\n\r\n    const reqFlag = useRef();\r\n\r\n    const escapeUnderdash = useCallback(str => str.split(\"_\").join(\" \"), []);\r\n\r\n    useEffect(() => {\r\n        if (!title && !user) { \r\n            history.replace('/records') \r\n            return;\r\n        }\r\n        if (!title && user) {\r\n            history.replace('/records/' + user)\r\n            return;\r\n        }\r\n\r\n        const _title = escapeUnderdash(title);\r\n\r\n        let recs = recordsList?.filter(r => r.title === _title)\r\n        if (id) {\r\n            let _id = parseInt(id)\r\n            recs = recs.filter(r => r.id === _id);\r\n        }\r\n        //if is exact this record \r\n        if (recs && recs.length === 1) {\r\n            setRecord(recs[0]);\r\n            return;\r\n        }\r\n        //if there is none record request it\r\n        if ((recs && recs.length === 0 || !recs) && !reqFlag.current) {\r\n\r\n            const where = { title: _title}\r\n            if (id) {\r\n                where.id = +id;\r\n            }\r\n\r\n            if (user) {\r\n                where.nickname = user;\r\n            } else if (userId) {\r\n                where.userId = userId;\r\n            }\r\n        \r\n            requestList(100, 0, where);\r\n            //to prevent reqesting again if result is empty\r\n            reqFlag.current = true;\r\n            return;\r\n        }\r\n        // if is more than one record with this title \r\n\r\n        if(recs.length > 1){\r\n            setRecordsList(recs);\r\n            history.replace('/records?preloaded=true')\r\n        }\r\n\r\n        if(countAll === 0){\r\n            history.replace('/404')\r\n        }\r\n\r\n    }, [recordsList, \r\n        setRecord, \r\n        title, \r\n        id, \r\n        userId,\r\n        user, \r\n        setRecordsList, \r\n        escapeUnderdash, \r\n        reqFlag,\r\n        history, \r\n    ])\r\n\r\n    useEffect(() => {\r\n        console.log(record)\r\n    }, [record])\r\n\r\n    return (\r\n        <div className=\"user-record\">\r\n            <Record record={record} controls={controls} player={player} simple />\r\n            <div>\r\n                <RecordDetails record={record} />\r\n            </div>\r\n            <PlayerControls controls={controls} player={player} list={record} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where)),\r\n    setRecordsList: (list) => dispatch(loadRecords(list))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}