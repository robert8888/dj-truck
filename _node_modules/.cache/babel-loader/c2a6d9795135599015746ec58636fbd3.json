{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\common\\\\ContextMenu\\\\ContextMenu.js\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\nimport UUID from \"uuidjs\";\nimport \"./context-menu.scss\";\n\nclass ErrBoundry extends React.Component {\n  componentDidCatch() {// send passive event error to moon \n  }\n\n}\n\nconst CtxMenu = props => {\n  const contextNav = useRef();\n  useEffect(() => {\n    console.log(\"replace\", contextNav.current);\n\n    if (!contextNav.current.addEventListener) {\n      return;\n    }\n\n    contextNav.current.addEventListener = contextNav.current.addEventListener._original;\n  }, [contextNav]);\n  const menuItems = useCallback(() => {\n    return Object.entries(props.items).map(([text, handler], index) => React.createElement(MenuItem, {\n      key: UUID.genV1(),\n      onClick: handler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, text));\n  }, [props.items]);\n  return React.createElement(ErrBoundry, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(ContextMenu, {\n    id: props.id,\n    ref: contextNav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, menuItems()));\n};\n\nexport default CtxMenu;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/common/ContextMenu/ContextMenu.js"],"names":["React","useCallback","useRef","useEffect","ContextMenu","MenuItem","UUID","ErrBoundry","Component","componentDidCatch","CtxMenu","props","contextNav","console","log","current","addEventListener","_original","menuItems","Object","entries","items","map","text","handler","index","genV1","id"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,WAAjB,EAA8BC,MAA9B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,mBAAtC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,qBAAP;;AAEA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAwC;AACpCC,EAAAA,iBAAiB,GAAE,CACf;AACH;;AAHmC;;AAMxC,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,QAAMC,UAAU,GAAGV,MAAM,EAAzB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,UAAU,CAACG,OAAlC;;AACA,QAAI,CAACH,UAAU,CAACG,OAAX,CAAmBC,gBAAxB,EAA0C;AACtC;AACH;;AAEDJ,IAAAA,UAAU,CAACG,OAAX,CAAmBC,gBAAnB,GACIJ,UAAU,CAACG,OAAX,CAAmBC,gBAAnB,CAAoCC,SADxC;AAEH,GARQ,EAQN,CAACL,UAAD,CARM,CAAT;AAUA,QAAMM,SAAS,GAAGjB,WAAW,CAAC,MAAM;AAChC,WAAOkB,MAAM,CAACC,OAAP,CAAeT,KAAK,CAACU,KAArB,EAA4BC,GAA5B,CAAgC,CAAC,CAACC,IAAD,EAAOC,OAAP,CAAD,EAAkBC,KAAlB,KACjC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEnB,IAAI,CAACoB,KAAL,EAAf;AAA6B,MAAA,OAAO,EAAEF,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IADH,CADC,CAAP;AAKH,GAN4B,EAM1B,CAACZ,KAAK,CAACU,KAAP,CAN0B,CAA7B;AAQA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAEV,KAAK,CAACgB,EAAvB;AAA2B,IAAA,GAAG,EAAEf,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,SAAS,EADd,CADJ,CADJ;AAOH,CA5BD;;AA8BA,eAAeR,OAAf","sourcesContent":["import React , { useCallback, useRef, useEffect } from \"react\";\r\nimport { ContextMenu, MenuItem } from \"react-contextmenu\"\r\nimport UUID from \"uuidjs\";\r\nimport \"./context-menu.scss\";\r\n\r\nclass ErrBoundry extends React.Component{\r\n    componentDidCatch(){\r\n        // send passive event error to moon \r\n    }\r\n}\r\n\r\nconst CtxMenu = props => {\r\n    const contextNav = useRef();\r\n\r\n    useEffect(() => {\r\n        console.log(\"replace\", contextNav.current)\r\n        if (!contextNav.current.addEventListener) {\r\n            return;\r\n        }\r\n        \r\n        contextNav.current.addEventListener =\r\n            contextNav.current.addEventListener._original;\r\n    }, [contextNav])\r\n\r\n    const menuItems = useCallback(() => {\r\n        return Object.entries(props.items).map(([text, handler], index) => \r\n             (<MenuItem key={UUID.genV1()} onClick={handler}>\r\n                {text}\r\n            </MenuItem>)\r\n        )\r\n    }, [props.items])\r\n\r\n    return (\r\n        <ErrBoundry>\r\n            <ContextMenu id={props.id} ref={contextNav}>\r\n                {menuItems()}\r\n            </ContextMenu>\r\n        </ErrBoundry>\r\n    )\r\n}\r\n\r\nexport default CtxMenu;"]},"metadata":{},"sourceType":"module"}