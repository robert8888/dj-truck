{"ast":null,"code":"import { produce } from \"imer\";\nimport { set } from \"lodash/set\";\nimport { ACTIONS } from \"./../../actions\";\nconst initState = {\n  current: null\n};\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.P_SET_PROFILE:\n      {\n        return { ...state,\n          current: action.profile\n        };\n      }\n\n    case ACTIONS.P_SET_PROFILE_DESCRIPTION:\n      {\n        const {\n          userId,\n          description\n        } = action;\n        return setOnCurrent(state, userId, [{\n          path: ['description'],\n          value: description\n        }]);\n      }\n\n    case ACTIONS.P_SET_PROFILE_NICKNAME:\n      {\n        const {\n          userId,\n          nickname\n        } = action;\n        return setOnCurrent(state, userId, [{\n          path: ['user', 'nickname'],\n          value: nickname\n        }]);\n      }\n\n    case ACTIONS.P_SET_PROFILE_PICTURE:\n      {\n        const {\n          userId,\n          picture\n        } = action;\n        return setOnCurrent(state, userId, [{\n          path: ['user', 'picture'],\n          value: picture\n        }]);\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction setOnCurrent(state, userId, props) {\n  const current = state.current;\n\n  if (!current || !userId || !variable || current.user.id !== userId) {\n    return state;\n  }\n\n  return produce(state, drafState => {\n    for (let prop of props) {\n      set(drafState.current, prop.path, prop.value);\n    }\n  });\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/reducers/profile/profileReducer.js"],"names":["produce","set","ACTIONS","initState","current","state","action","type","P_SET_PROFILE","profile","P_SET_PROFILE_DESCRIPTION","userId","description","setOnCurrent","path","value","P_SET_PROFILE_NICKNAME","nickname","P_SET_PROFILE_PICTURE","picture","props","variable","user","id","drafState","prop"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE;AADK,CAAlB;AAIA,eAAe,UAAUC,KAAK,GAAGF,SAAlB,EAA6BG,MAA7B,EAAqC;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKL,OAAO,CAACM,aAAb;AAA4B;AACxB,eAAO,EACH,GAAGH,KADA;AAEHD,UAAAA,OAAO,EAAEE,MAAM,CAACG;AAFb,SAAP;AAIH;;AAED,SAAKP,OAAO,CAACQ,yBAAb;AAAwC;AACpC,cAAM;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAA0BN,MAAhC;AACA,eAAOO,YAAY,CAACR,KAAD,EAAQM,MAAR,EAAgB,CAAC;AAAEG,UAAAA,IAAI,EAAG,CAAC,aAAD,CAAT;AAA0BC,UAAAA,KAAK,EAAGH;AAAlC,SAAD,CAAhB,CAAnB;AACH;;AAED,SAAKV,OAAO,CAACc,sBAAb;AAAqC;AACjC,cAAM;AAAEL,UAAAA,MAAF;AAAUM,UAAAA;AAAV,YAAuBX,MAA7B;AACA,eAAOO,YAAY,CAACR,KAAD,EAAQM,MAAR,EAAgB,CAAC;AAAEG,UAAAA,IAAI,EAAG,CAAC,MAAD,EAAS,UAAT,CAAT;AAA+BC,UAAAA,KAAK,EAAGE;AAAvC,SAAD,CAAhB,CAAnB;AACH;;AAED,SAAKf,OAAO,CAACgB,qBAAb;AAAoC;AAChC,cAAM;AAAEP,UAAAA,MAAF;AAAUQ,UAAAA;AAAV,YAAsBb,MAA5B;AACA,eAAOO,YAAY,CAACR,KAAD,EAAQM,MAAR,EAAgB,CAAC;AAAEG,UAAAA,IAAI,EAAG,CAAC,MAAD,EAAS,SAAT,CAAT;AAA8BC,UAAAA,KAAK,EAAEI;AAArC,SAAD,CAAhB,CAAnB;AACH;;AAED;AAAS,aAAOd,KAAP;AAxBb;AA0BH;;AAED,SAASQ,YAAT,CAAsBR,KAAtB,EAA6BM,MAA7B,EAAqCS,KAArC,EAA4C;AACxC,QAAMhB,OAAO,GAAGC,KAAK,CAACD,OAAtB;;AACA,MAAI,CAACA,OAAD,IACA,CAACO,MADD,IAEA,CAACU,QAFD,IAGAjB,OAAO,CAACkB,IAAR,CAAaC,EAAb,KAAoBZ,MAHxB,EAGgC;AAC5B,WAAON,KAAP;AACH;;AAED,SAAOL,OAAO,CAACK,KAAD,EAAQmB,SAAS,IAAI;AAC/B,SAAK,IAAIC,IAAT,IAAiBL,KAAjB,EAAwB;AACpBnB,MAAAA,GAAG,CAACuB,SAAS,CAACpB,OAAX,EAAoBqB,IAAI,CAACX,IAAzB,EAA+BW,IAAI,CAACV,KAApC,CAAH;AACH;AACJ,GAJa,CAAd;AAKH","sourcesContent":["import { produce } from \"imer\";\r\nimport { set } from \"lodash/set\";\r\nimport { ACTIONS } from \"./../../actions\";\r\n\r\nconst initState = {\r\n    current: null,\r\n}\r\n\r\nexport default function (state = initState, action) {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS.P_SET_PROFILE: {\r\n            return {\r\n                ...state,\r\n                current: action.profile\r\n            }\r\n        }\r\n\r\n        case ACTIONS.P_SET_PROFILE_DESCRIPTION: {\r\n            const { userId, description } = action;\r\n            return setOnCurrent(state, userId, [{ path:  ['description'], value : description }])\r\n        }\r\n\r\n        case ACTIONS.P_SET_PROFILE_NICKNAME: {\r\n            const { userId, nickname } = action;\r\n            return setOnCurrent(state, userId, [{ path:  ['user', 'nickname'], value : nickname }])\r\n        }\r\n\r\n        case ACTIONS.P_SET_PROFILE_PICTURE: {\r\n            const { userId, picture } = action;\r\n            return setOnCurrent(state, userId, [{ path:  ['user', 'picture'], value: picture }])\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction setOnCurrent(state, userId, props) {\r\n    const current = state.current;\r\n    if (!current ||\r\n        !userId ||\r\n        !variable ||\r\n        current.user.id !== userId) {\r\n        return state;\r\n    }\r\n\r\n    return produce(state, drafState => {\r\n        for (let prop of props) {\r\n            set(drafState.current, prop.path, prop.value)\r\n        }\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}