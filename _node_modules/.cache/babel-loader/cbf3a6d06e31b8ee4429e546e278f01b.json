{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Hooks\\\\Emoticons\\\\Emoticons\\\\Emoticons.js\";\nimport React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport icons from \"./emoji.json\";\nimport style from \"./emoticons-style\";\nconst iconsOnPanel = 30;\n\nconst Emoticons = ({\n  onSelect,\n  toggle\n}) => {\n  const [iconPanels, setPanels] = useState(null);\n  const [display, setDisplay] = useState(false);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const createPanels = useCallback(() => {\n    let panels = [];\n\n    for (let i = 0; i < icons.length; i += iconsOnPanel) {\n      let panel = [];\n\n      for (let j = i; j < iconsOnPanel + i && i + j < icons.length; j++) {\n        let icon = icons[j];\n        panel.push(React.createElement(\"button\", {\n          key: 'icon-' + (i + j),\n          style: style.buttonStyle,\n          onClick: onSelect.bind(null, icon.emoji),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, icon.emoji));\n      }\n\n      panels.push(React.createElement(\"section\", {\n        style: style.sectionStyle,\n        className: \"emoticons-panel\",\n        key: 'pannel-' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, panel));\n    }\n\n    return panels;\n  }, []);\n  const next = useCallback(event => {\n    event.preventDefault();\n    setCurrentSlide(c => {\n      if (c + 1 < iconPanels.length) {\n        return c + 1;\n      }\n\n      return c;\n    });\n  }, [iconPanels]);\n  const prev = useCallback(event => {\n    event.preventDefault();\n    setCurrentSlide(c => {\n      if (c - 1 > 0) {\n        return c - 1;\n      }\n\n      return c;\n    });\n  }, []);\n  const toggleHandler = useCallback(() => {\n    if (!iconPanels) {\n      setPanels(createPanels());\n    }\n\n    setDisplay(display => !display);\n  }, [setDisplay, setPanels, iconPanels, createPanels]);\n  useEffect(() => {\n    toggle.current = toggleHandler;\n  }, [toggle]);\n  const hide = useCallback(event => {\n    if (!event.target.closest('.emoticons-container') && !event.target.closest('.emoticon-btn')) {\n      window.removeEventListener('mousedown', hide);\n      setDisplay(false);\n    }\n  }, [setDisplay]);\n  useEffect(() => {\n    if (display) {\n      window.addEventListener('mousedown', hide);\n    } else {\n      window.removeEventListener('mousedown', hide);\n    }\n  }, [display, setDisplay, hide]);\n  return React.createElement(\"div\", {\n    className: \"emoticons-container emoticons-popup\",\n    style: { ...style.containerStyle,\n      display: display ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-prev\",\n    style: style.sliderNavigationButton,\n    onClick: prev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faAngleDoubleLeft,\n    style: style.iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"emoticons-slider\",\n    style: style.slideContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"emoticons-slides\",\n    style: {\n      transform: `translateX(-${currentSlide * 210}px)`,\n      transition: 'transform 0.2s'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, iconPanels)), React.createElement(\"button\", {\n    className: \"btn-prev\",\n    style: style.sliderNavigationButton,\n    onClick: next,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faAngleDoubleRight,\n    style: style.iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })));\n};\n\nexport default Emoticons;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/Emoticons/Emoticons/Emoticons.js"],"names":["React","useCallback","useMemo","useState","useEffect","FontAwesomeIcon","faAngleDoubleLeft","faAngleDoubleRight","icons","style","iconsOnPanel","Emoticons","onSelect","toggle","iconPanels","setPanels","display","setDisplay","currentSlide","setCurrentSlide","createPanels","panels","i","length","panel","j","icon","push","buttonStyle","bind","emoji","sectionStyle","next","event","preventDefault","c","prev","toggleHandler","current","hide","target","closest","window","removeEventListener","addEventListener","containerStyle","sliderNavigationButton","iconStyle","slideContainer","transform","transition"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport icons from \"./emoji.json\";\r\nimport style from  \"./emoticons-style\";\r\nconst iconsOnPanel = 30;\r\n\r\nconst Emoticons = ({ onSelect, toggle }) => {\r\n    const [iconPanels, setPanels] = useState(null);\r\n    const [display, setDisplay] = useState(false);\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n    const createPanels = useCallback(() => {\r\n        let panels = [];\r\n        for (let i = 0; i < icons.length; i += iconsOnPanel) {\r\n            let panel = [];\r\n            for (let j = i; (j < iconsOnPanel + i) && (i + j < icons.length); j++) {\r\n                let icon = icons[j]\r\n                panel.push(\r\n                    <button key={'icon-' + (i + j)} style={style.buttonStyle} onClick={onSelect.bind(null, icon.emoji)}>{icon.emoji}</button>\r\n                )\r\n            }\r\n            panels.push(\r\n                <section style={style.sectionStyle} className=\"emoticons-panel\" key={'pannel-' + i}>\r\n                    {panel}\r\n                </section>\r\n            )\r\n        }\r\n        return panels;\r\n    }, [])\r\n\r\n    const next = useCallback((event) => {\r\n        event.preventDefault();\r\n        setCurrentSlide(c => {\r\n            if (c + 1 < iconPanels.length) {\r\n                return c + 1;\r\n            }\r\n            return c;\r\n        });\r\n    }, [iconPanels])\r\n\r\n    const prev = useCallback((event) => {\r\n        event.preventDefault();\r\n        setCurrentSlide(c => {\r\n            if (c - 1 > 0) {\r\n                return c - 1;\r\n            }\r\n            return c;\r\n        })\r\n    }, [])\r\n\r\n    const toggleHandler = useCallback(() => {\r\n        if (!iconPanels) {\r\n            setPanels(createPanels())\r\n        }\r\n        setDisplay(display => !display);\r\n    }, [setDisplay, setPanels, iconPanels, createPanels])\r\n\r\n    useEffect(() => {\r\n        toggle.current = toggleHandler\r\n    }, [toggle])\r\n\r\n    const hide = useCallback(event => {\r\n        if (!event.target.closest('.emoticons-container') &&\r\n            !event.target.closest('.emoticon-btn')) {\r\n                window.removeEventListener('mousedown', hide);\r\n                setDisplay(false)\r\n        }\r\n    }, [setDisplay])\r\n\r\n    useEffect(() => {\r\n        if (display) {\r\n            window.addEventListener('mousedown', hide);\r\n        } else {\r\n            window.removeEventListener('mousedown', hide)\r\n        }\r\n    }, [display, setDisplay, hide])\r\n\r\n    return (\r\n        <div className=\"emoticons-container emoticons-popup\" style={{ ...style.containerStyle, display: (display) ? 'block' : 'none' }}>\r\n            <button className=\"btn-prev\" style={style.sliderNavigationButton} onClick={prev}>\r\n                <FontAwesomeIcon icon={faAngleDoubleLeft} style={style.iconStyle} />\r\n            </button>\r\n            <div className=\"emoticons-slider\" style={style.slideContainer}>\r\n                <div className=\"emoticons-slides\" style={{ transform: `translateX(-${currentSlide * 210}px)`, transition: 'transform 0.2s' }}>\r\n                    {iconPanels}\r\n                </div>\r\n            </div>\r\n            <button className=\"btn-prev\" style={style.sliderNavigationButton} onClick={next}>\r\n                <FontAwesomeIcon icon={faAngleDoubleRight} style={style.iconStyle} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emoticons;"]},"metadata":{},"sourceType":"module"}