{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Emoticons\\\\Emoticons.js\";\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport icons from \"./emoji.json\";\nimport \"./emoticons.scss\";\nconst perPanel = 30;\n\nconst Emoticons = ({\n  onSelect,\n  toggle\n}) => {\n  const [iconPanels, setPanels] = useState(null);\n  const panelsLen = useRef();\n  const [display, setDisplay] = useState(false);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const createPanels = useCallback((from, to) => {\n    var _to;\n\n    to = (_to = to) !== null && _to !== void 0 ? _to : from + 1;\n    if (to * perPanel > icons.length) return;\n    let panels = [];\n\n    for (let i = perPanel * from; i < perPanel * to; i += perPanel) {\n      let panel = [];\n\n      for (let j = i; j < perPanel + i && j < icons.length; j++) {\n        let icon = icons[j];\n        panel.push(React.createElement(\"button\", {\n          key: 'icon-' + (i + j),\n          className: \"emoticons-btn\",\n          onClick: onSelect.bind(null, icon.emoji),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, icon.emoji));\n      }\n\n      panels.push(React.createElement(\"section\", {\n        className: \"emoticons-panel\",\n        key: 'pannel-' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, panel));\n    }\n\n    if (!panelsLen.current) {\n      panelsLen.current = 0;\n    }\n\n    panelsLen.current += panels.length;\n    return panels;\n  }, [onSelect]);\n  const createNext = useCallback(() => {\n    setPanels(panels => [...panels, createPanels(panelsLen.current)]);\n  }, [setPanels, createPanels, panelsLen]);\n  const next = useCallback(event => {\n    event.preventDefault();\n    setCurrentSlide(c => {\n      if (c + 1 < panelsLen.current) {\n        return c + 1;\n      }\n\n      return c;\n    });\n    createNext();\n  }, [panelsLen, createNext]);\n  const prev = useCallback(event => {\n    event.preventDefault();\n    setCurrentSlide(c => {\n      if (c - 1 > 0) {\n        return c - 1;\n      }\n\n      return c;\n    });\n  }, []);\n  const toggleHandler = useCallback(() => {\n    if (!panelsLen.current) {\n      setPanels(createPanels(0, 5));\n    }\n\n    setDisplay(display => !display);\n  }, [setDisplay, setPanels, panelsLen, createPanels]);\n  useEffect(() => {\n    toggle.current = toggleHandler;\n  }, [toggle, toggleHandler]);\n  const hide = useCallback(event => {\n    if (!event.target.closest('.emoticons-container') && !event.target.closest('.emoticon-btn')) {\n      window.removeEventListener('mousedown', hide);\n      setDisplay(false);\n    }\n  }, [setDisplay]);\n  useEffect(() => {\n    if (display) {\n      window.addEventListener('mousedown', hide);\n    } else {\n      window.removeEventListener('mousedown', hide);\n    }\n  }, [display, setDisplay, hide]);\n  return React.createElement(\"div\", {\n    className: \"emoticons-container emoticons-popup\",\n    style: {\n      display: display ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"emoticons-nav-btn emoticons-btn-prev\",\n    onClick: prev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faAngleDoubleLeft,\n    className: \"emoticons-btn-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"emoticons-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"emoticons-slides\",\n    style: {\n      transform: `translateX(-${currentSlide * 210}px)`,\n      transition: 'transform 0.2s'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, iconPanels)), React.createElement(\"button\", {\n    className: \"emoticons-nav-btn  emoticons-btn-next\",\n    onClick: next,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faAngleDoubleRight,\n    className: \"emoticons-btn-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n};\n\nexport default Emoticons;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Emoticons/Emoticons.js"],"names":["faAngleDoubleLeft","faAngleDoubleRight","FontAwesomeIcon","React","useCallback","useEffect","useRef","useState","icons","perPanel","Emoticons","onSelect","toggle","iconPanels","setPanels","panelsLen","display","setDisplay","currentSlide","setCurrentSlide","createPanels","from","to","length","panels","i","panel","j","icon","push","bind","emoji","current","createNext","next","event","preventDefault","c","prev","toggleHandler","hide","target","closest","window","removeEventListener","addEventListener","transform","transition"],"mappings":"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","sourcesContent":["import { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport icons from \"./emoji.json\";\r\nimport \"./emoticons.scss\";\r\nconst perPanel = 30;\r\n\r\nconst Emoticons = ({ onSelect, toggle }) => {\r\n    const [iconPanels, setPanels] = useState(null);\r\n    const panelsLen = useRef();\r\n    const [display, setDisplay] = useState(false);\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n    const createPanels = useCallback((from, to) => {\r\n        to = to ?? from + 1;\r\n        if(to * perPanel > icons.length) return;\r\n\r\n        let panels = [];\r\n        for (let i = perPanel * from; i < perPanel * to; i += perPanel) {\r\n            let panel = [];\r\n            for (let j = i; (j < perPanel + i) && (j <  icons.length); j++) {\r\n                let icon = icons[j]\r\n                panel.push(\r\n                    <button key={'icon-' + (i + j)} className=\"emoticons-btn\" onClick={onSelect.bind(null, icon.emoji)}>{icon.emoji}</button>\r\n                )\r\n            }\r\n            panels.push(\r\n                <section className=\"emoticons-panel\" key={'pannel-' + i}>\r\n                    {panel}\r\n                </section>\r\n            )\r\n        }\r\n        if(!panelsLen.current){\r\n            panelsLen.current = 0;\r\n        }\r\n        panelsLen.current += panels.length;\r\n        return panels;\r\n    }, [onSelect])\r\n\r\n    const createNext = useCallback(()=>{\r\n        setPanels( panels => [...panels, createPanels(panelsLen.current)])\r\n    }, [setPanels, createPanels, panelsLen])\r\n\r\n    const next = useCallback((event) => {\r\n        event.preventDefault();\r\n        setCurrentSlide(c => {\r\n            if (c + 1 < panelsLen.current) {\r\n                return c + 1;\r\n            }\r\n            return c;\r\n        });\r\n        createNext();\r\n    }, [panelsLen, createNext])\r\n\r\n    const prev = useCallback((event) => {\r\n        event.preventDefault();\r\n        setCurrentSlide(c => {\r\n            if (c - 1 > 0) {\r\n                return c - 1;\r\n            }\r\n            return c;\r\n        })\r\n    }, [])\r\n\r\n    const toggleHandler = useCallback(() => {\r\n        if (!panelsLen.current) {\r\n            setPanels(createPanels(0, 5));\r\n        }\r\n        setDisplay(display => !display);\r\n    }, [setDisplay, setPanels, panelsLen, createPanels])\r\n\r\n    useEffect(() => {\r\n        toggle.current = toggleHandler\r\n    }, [toggle, toggleHandler])\r\n\r\n    const hide = useCallback(event => {\r\n        if (!event.target.closest('.emoticons-container') &&\r\n            !event.target.closest('.emoticon-btn')) {\r\n                window.removeEventListener('mousedown', hide);\r\n                setDisplay(false)\r\n        }\r\n    }, [setDisplay])\r\n\r\n    useEffect(() => {\r\n        if (display) {\r\n            window.addEventListener('mousedown', hide);\r\n        } else {\r\n            window.removeEventListener('mousedown', hide)\r\n        }\r\n    }, [display, setDisplay, hide])\r\n\r\n    return (\r\n        <div className=\"emoticons-container emoticons-popup\" style={{display: (display) ? 'block' : 'none' }}>\r\n            <button className=\"emoticons-nav-btn emoticons-btn-prev\" onClick={prev}>\r\n                <FontAwesomeIcon icon={faAngleDoubleLeft} className=\"emoticons-btn-icon\" />\r\n            </button>\r\n            <div className=\"emoticons-slider\">\r\n                <div className=\"emoticons-slides\" style={{ transform: `translateX(-${currentSlide * 210}px)`, transition: 'transform 0.2s' }}>\r\n                    {iconPanels}\r\n                </div>\r\n            </div>\r\n            <button className=\"emoticons-nav-btn  emoticons-btn-next\" onClick={next}>\r\n                <FontAwesomeIcon icon={faAngleDoubleRight} className=\"emoticons-btn-icon\" />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emoticons;"]},"metadata":{},"sourceType":"module"}