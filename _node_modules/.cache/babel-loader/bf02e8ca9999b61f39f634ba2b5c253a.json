{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { ACTIONS, setBpmAndOffset } from \"../actions\";\nimport { getApi } from \"./../apis/apiProvider\";\nimport { calcAccurateBpmAndOffset } from './../utils/bpm/analyzer';\nexport default function* watcher() {\n  yield takeEvery(ACTIONS.PL_INIT_CALC_BPM, calcBpmAsync); // yield takeEvery(ACTIONS.PUSH_TRACK, calcBpmAsync);\n}\n\nfunction* calcBpmAsync(action) {\n  try {\n    const source = action.track.source;\n    const id = action.track.sourceId;\n    const api = getApi(source);\n    const url = api.getUrl(id); // console.log(action)\n\n    yield put(setBpmAndOffset(action.track.id, action.playlist, \"calculating\", null));\n    let {\n      offset,\n      bpm\n    } = yield call(calcAccurateBpmAndOffset, url);\n    yield put(setBpmAndOffset(action.track.id, action.playlist, bpm, offset));\n  } catch (error) {\n    yield put(pushLog(Log.Error(['saga', 'playlist', 'request read dir content in tootgle dir'], \"Can't read dir conntent\" + error.message, \"Sorry. During calculating bpm occure problem\", error)));\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/calcBpmSaga.js"],"names":["call","put","takeEvery","ACTIONS","setBpmAndOffset","getApi","calcAccurateBpmAndOffset","watcher","PL_INIT_CALC_BPM","calcBpmAsync","action","source","track","id","sourceId","api","url","getUrl","playlist","offset","bpm","error","pushLog","Log","Error","message"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,YAAzC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,wBAAT,QAAyC,yBAAzC;AAEA,eAAe,UAAUC,OAAV,GAAoB;AAC/B,QAAML,SAAS,CAACC,OAAO,CAACK,gBAAT,EAA2BC,YAA3B,CAAf,CAD+B,CAEhC;AACF;;AAED,UAAUA,YAAV,CAAuBC,MAAvB,EAA+B;AAC3B,MAAG;AACC,UAAMC,MAAM,GAAGD,MAAM,CAACE,KAAP,CAAaD,MAA5B;AACA,UAAME,EAAE,GAAGH,MAAM,CAACE,KAAP,CAAaE,QAAxB;AAEA,UAAMC,GAAG,GAAGV,MAAM,CAACM,MAAD,CAAlB;AACA,UAAMK,GAAG,GAAGD,GAAG,CAACE,MAAJ,CAAWJ,EAAX,CAAZ,CALD,CAOC;;AACA,UAAMZ,GAAG,CAACG,eAAe,CAACM,MAAM,CAACE,KAAP,CAAaC,EAAd,EAAkBH,MAAM,CAACQ,QAAzB,EAAmC,aAAnC,EAAkD,IAAlD,CAAhB,CAAT;AACA,QAAI;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAkB,MAAMpB,IAAI,CAACM,wBAAD,EAA2BU,GAA3B,CAAhC;AACA,UAAMf,GAAG,CAACG,eAAe,CAACM,MAAM,CAACE,KAAP,CAAaC,EAAd,EAAkBH,MAAM,CAACQ,QAAzB,EAAmCE,GAAnC,EAAwCD,MAAxC,CAAhB,CAAT;AACH,GAXD,CAWE,OAAOE,KAAP,EAAa;AACX,UAAMpB,GAAG,CAACqB,OAAO,CAACC,GAAG,CAACC,KAAJ,CACd,CAAC,MAAD,EAAS,UAAT,EAAqB,yCAArB,CADc,EAEd,4BAA4BH,KAAK,CAACI,OAFpB,EAGd,8CAHc,EAIdJ,KAJc,CAAD,CAAR,CAAT;AAMH;AAEJ","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, setBpmAndOffset } from \"../actions\";\r\nimport { getApi } from \"./../apis/apiProvider\";\r\nimport { calcAccurateBpmAndOffset } from './../utils/bpm/analyzer';\r\n\r\nexport default function* watcher() {\r\n    yield takeEvery(ACTIONS.PL_INIT_CALC_BPM, calcBpmAsync);\r\n   // yield takeEvery(ACTIONS.PUSH_TRACK, calcBpmAsync);\r\n}\r\n\r\nfunction* calcBpmAsync(action) {\r\n    try{\r\n        const source = action.track.source;\r\n        const id = action.track.sourceId;\r\n\r\n        const api = getApi(source);\r\n        const url = api.getUrl(id);\r\n\r\n        // console.log(action)\r\n        yield put(setBpmAndOffset(action.track.id, action.playlist, \"calculating\", null))\r\n        let { offset, bpm } = yield call(calcAccurateBpmAndOffset, url);\r\n        yield put(setBpmAndOffset(action.track.id, action.playlist, bpm, offset))\r\n    } catch (error){\r\n        yield put(pushLog(Log.Error(\r\n            ['saga', 'playlist', 'request read dir content in tootgle dir'],\r\n            \"Can't read dir conntent\" + error.message,\r\n            \"Sorry. During calculating bpm occure problem\",\r\n            error\r\n        )))\r\n    }  \r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}