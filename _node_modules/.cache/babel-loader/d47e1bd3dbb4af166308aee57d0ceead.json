{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordDetails\\\\RecordDetails.js\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Button } from \"react-bootstrap\";\nimport \"./record-details.scss\";\n\nconst RecordDetails = ({\n  record,\n  userId\n}) => {\n  const [editMode, setEditMode] = useState(false);\n  const [editable, setEditable] = useState(false);\n  const [userNickname, setUserNickname] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [generes, setGeneres] = useState([]);\n  const descriptionTextArea = useRef();\n  const setFromRecord = useCallback(record => {\n    console.log(record.user.id, userId);\n\n    if (record.user.id === userId) {\n      setEditable(true);\n    }\n\n    setUserNickname(record.user.nickname || \"\");\n    setTitle(record.title || \"\");\n    setDescription(record.description || \"Some descirpiton\");\n    setGeneres(record.generes || [\"Techno\", \"Minimal\", \"Soul\"]);\n  }, [setTitle, setDescription, setGeneres, setUserNickname, setEditable]);\n  useEffect(() => {\n    if (!record) return;\n    setFromRecord(record);\n  }, [record, setFromRecord]);\n  const toggleMode = useCallback(() => {\n    const mode = !editMode;\n    setEditMode(mode);\n\n    if (!mode) {\n      setFromRecord(record);\n    }\n  }, [record, editMode, setEditMode]);\n  const updateTitle = useCallback(event => {\n    setTitle(event.target.value);\n  }, [setTitle]);\n  const updateDescription = useCallback(event => {\n    setDescription(event.target.value);\n  }, [setDescription]);\n  const updateGeneres = useCallback(event => {\n    let generes = event.target.value.split(\",\").map(genere => genere.trim());\n    setGeneres(generes);\n  }, [setGeneres]);\n  const updateRecordDetails = useCallback(event => {\n    event.preventDefault();\n    const title = event.target.elements.title.value;\n    const description = event.target.elements.description.value;\n    const generes = event.target.elements.generes.value;\n    console.log(title, description, generes);\n    setEditMode(false);\n  }, [setEditMode]); //ajust text areaf size \n\n  useEffect(() => {\n    const el = descriptionTextArea.current;\n    el.style.height = 0;\n    el.style.height = el.scrollHeight + 10 + \"px\";\n  }, [description, descriptionTextArea]);\n  return React.createElement(Form, {\n    className: \"record-details\",\n    onSubmit: updateRecordDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"record-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"User: \"), React.createElement(Form.Control, {\n    name: \"user\",\n    type: \"text\",\n    value: userNickname,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), editable && React.createElement(Form.Check, {\n    type: \"switch\",\n    id: \"switch-edit-mode\",\n    label: \"edit\",\n    className: \"switch-edit-mode\",\n    value: editMode,\n    onChange: toggleMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    className: \"record-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Title: \"), React.createElement(Form.Control, {\n    name: \"title\",\n    type: \"text\",\n    value: title,\n    onChange: updateTitle,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"record-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Description: \"), React.createElement(Form.Control, {\n    name: \"description\",\n    as: \"textarea\",\n    ref: descriptionTextArea,\n    value: description,\n    onChange: updateDescription,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"genere-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Generes: \"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"generes\",\n    value: generes.join(\", \"),\n    onChange: updateGeneres,\n    disabled: !editMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), editMode && React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \" Save \"));\n};\n\nconst mapStateToProps = state => ({\n  userId: state.user.dbId\n});\n\nexport default connect(mapStateToProps)(RecordDetails);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordDetails/RecordDetails.js"],"names":["React","useState","useEffect","useCallback","useRef","connect","Form","Button","RecordDetails","record","userId","editMode","setEditMode","editable","setEditable","userNickname","setUserNickname","title","setTitle","description","setDescription","generes","setGeneres","descriptionTextArea","setFromRecord","console","log","user","id","nickname","toggleMode","mode","updateTitle","event","target","value","updateDescription","updateGeneres","split","map","genere","trim","updateRecordDetails","preventDefault","elements","el","current","style","height","scrollHeight","join","mapStateToProps","state","dbId"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback, useRef}  from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Form , Button} from \"react-bootstrap\"\r\nimport \"./record-details.scss\";\r\n\r\nconst RecordDetails = ({record, userId}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [editable, setEditable] = useState(false);\r\n\r\n    const [userNickname, setUserNickname] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [generes, setGeneres] = useState([]);\r\n\r\n\r\n    const descriptionTextArea = useRef();\r\n\r\n    const setFromRecord = useCallback((record) => {\r\n        console.log(record.user.id , userId)\r\n        if(record.user.id === userId){\r\n            setEditable(true);\r\n        }\r\n        setUserNickname(record.user.nickname || \"\");\r\n        setTitle(record.title || \"\")\r\n        setDescription(record.description || \"Some descirpiton\")\r\n        setGeneres(record.generes || [\"Techno\", \"Minimal\", \"Soul\"]);\r\n    }, [setTitle, setDescription, setGeneres, setUserNickname, setEditable])\r\n\r\n    useEffect(()=>{\r\n        if(!record) return;\r\n        setFromRecord(record)\r\n    },[record, setFromRecord])\r\n\r\n\r\n    const toggleMode = useCallback(()=>{\r\n        const mode = !editMode;\r\n        setEditMode(mode)\r\n        if(!mode){\r\n            setFromRecord(record)\r\n        }\r\n\r\n    }, [record, editMode, setEditMode])\r\n\r\n    const updateTitle = useCallback((event) => {\r\n        setTitle(event.target.value);\r\n    }, [setTitle])\r\n\r\n    const updateDescription = useCallback( event => {\r\n\r\n        setDescription(event.target.value)\r\n    },[setDescription])\r\n\r\n            \r\n    const updateGeneres = useCallback( event => {\r\n        let generes = event.target.value.split(\",\").map( genere => genere.trim())\r\n        setGeneres(generes)\r\n    }, [setGeneres])\r\n        \r\n    const updateRecordDetails = useCallback( event => {\r\n        event.preventDefault();\r\n        const title = event.target.elements.title.value;\r\n        const description = event.target.elements.description.value;\r\n        const generes = event.target.elements.generes.value;\r\n        console.log(title, description, generes);\r\n\r\n        setEditMode(false)\r\n    }, [setEditMode])\r\n\r\n    //ajust text areaf size \r\n    useEffect(() => {\r\n        const el = descriptionTextArea.current;\r\n        el.style.height = 0;\r\n        el.style.height = el.scrollHeight + 10 + \"px\";\r\n    }, [description, descriptionTextArea])\r\n\r\n    return (\r\n        <Form className=\"record-details\" onSubmit={updateRecordDetails}>\r\n            <Form.Group className=\"record-title\">\r\n                <Form.Label>User: </Form.Label>\r\n                <Form.Control name=\"user\" type=\"text\" value={userNickname} disabled/>\r\n            </Form.Group>\r\n            {editable && <Form.Check \r\n                type=\"switch\" \r\n                id=\"switch-edit-mode\" \r\n                label=\"edit\" \r\n                className=\"switch-edit-mode\" \r\n                value={editMode} \r\n                onChange={toggleMode}/>}\r\n            <Form.Group className=\"record-title\">\r\n                <Form.Label>Title: </Form.Label>\r\n                <Form.Control name=\"title\" type=\"text\" value={title} onChange={updateTitle} disabled={!editMode}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"record-description\">\r\n                <Form.Label>Description: </Form.Label>\r\n                <Form.Control name=\"description\" as=\"textarea\" ref={descriptionTextArea} value={description} onChange={updateDescription} disabled={!editMode}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"genere-list\">\r\n                <Form.Label>Generes: </Form.Label>\r\n                <Form.Control \r\n                    type=\"text\"\r\n                    name=\"generes\"\r\n                    value={generes.join(\", \")} \r\n                    onChange={ updateGeneres } \r\n                    disabled={!editMode}/>\r\n            </Form.Group>\r\n            {editMode && <Button type=\"submit\"> Save </Button>}\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userId : state.user.dbId\r\n})\r\n\r\nexport default connect(mapStateToProps)(RecordDetails)"]},"metadata":{},"sourceType":"module"}