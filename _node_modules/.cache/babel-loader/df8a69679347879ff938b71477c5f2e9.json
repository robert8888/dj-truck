{"ast":null,"code":"const filter = require('unist-util-filter');\n\nmodule.export = transformer;\n\nfunction transformer(tree, file) {\n  console.log(\"im from trasofmrer\");\n\n  const modify = node => {\n    if (!node.children) return node;\n    let className = null;\n    let id = null;\n    const children = [];\n    node.children.forEach(child => {\n      if (child.type === 'attrClass') {\n        className = child.value;\n        return;\n      }\n\n      if (child.type === \"attrId\") {\n        id = child.value;\n        return;\n      }\n\n      if (className) {\n        child.className = className;\n        className = null;\n      }\n\n      if (id) {\n        child.id = id;\n        id = null;\n      }\n\n      if (child.children && child.children.length) {\n        child = modify(child);\n      }\n\n      children.push(child);\n    });\n    node.children = children;\n    return node;\n  };\n\n  tree = modify(tree);\n  tree = filter(tree, node => node.type !== \"attrClass\" && node.type !== \"attrId\" && node.type === \"text\" && node.value === \"\");\n  return tree;\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/introduction/MarkDonwExtesnion/remark-attr/components/transformAst.js"],"names":["filter","require","module","export","transformer","tree","file","console","log","modify","node","children","className","id","forEach","child","type","value","length","push"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;AAEAC,MAAM,CAACC,MAAP,GAAgBC,WAAhB;;AAEA,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,QAAMC,MAAM,GAAGC,IAAI,IAAI;AACnB,QAAG,CAACA,IAAI,CAACC,QAAT,EAAmB,OAAOD,IAAP;AACnB,QAAIE,SAAS,GAAG,IAAhB;AACA,QAAIC,EAAE,GAAG,IAAT;AACA,UAAMF,QAAQ,GAAG,EAAjB;AACAD,IAAAA,IAAI,CAACC,QAAL,CAAcG,OAAd,CAAsBC,KAAK,IAAG;AAC1B,UAAGA,KAAK,CAACC,IAAN,KAAe,WAAlB,EAA8B;AAC1BJ,QAAAA,SAAS,GAAGG,KAAK,CAACE,KAAlB;AACA;AACH;;AACD,UAAGF,KAAK,CAACC,IAAN,KAAe,QAAlB,EAA2B;AACvBH,QAAAA,EAAE,GAAGE,KAAK,CAACE,KAAX;AACA;AACH;;AACD,UAAGL,SAAH,EAAa;AACTG,QAAAA,KAAK,CAACH,SAAN,GAAkBA,SAAlB;AACAA,QAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,UAAGC,EAAH,EAAM;AACFE,QAAAA,KAAK,CAACF,EAAN,GAAWA,EAAX;AACAA,QAAAA,EAAE,GAAG,IAAL;AACH;;AACD,UAAGE,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeO,MAApC,EAA2C;AACvCH,QAAAA,KAAK,GAAGN,MAAM,CAACM,KAAD,CAAd;AACH;;AACDJ,MAAAA,QAAQ,CAACQ,IAAT,CAAcJ,KAAd;AACH,KArBD;AAuBAL,IAAAA,IAAI,CAACC,QAAL,GAAgBA,QAAhB;AACA,WAAOD,IAAP;AACH,GA9BD;;AAgCAL,EAAAA,IAAI,GAAGI,MAAM,CAACJ,IAAD,CAAb;AAEAA,EAAAA,IAAI,GAAGL,MAAM,CAACK,IAAD,EAAOK,IAAI,IACnBA,IAAI,CAACM,IAAL,KAAc,WAAf,IACCN,IAAI,CAACM,IAAL,KAAc,QADf,IAECN,IAAI,CAACM,IAAL,KAAc,MAAd,IAAwBN,IAAI,CAACO,KAAL,KAAe,EAH/B,CAAb;AAMA,SAAOZ,IAAP;AACH","sourcesContent":["const filter = require('unist-util-filter')\r\n\r\nmodule.export = transformer;\r\n\r\nfunction transformer(tree, file){\r\n    console.log(\"im from trasofmrer\")\r\n    const modify = node => {\r\n        if(!node.children) return node;\r\n        let className = null;\r\n        let id = null;\r\n        const children = [];\r\n        node.children.forEach(child=> {\r\n            if(child.type === 'attrClass'){\r\n                className = child.value;\r\n                return;\r\n            }\r\n            if(child.type === \"attrId\"){\r\n                id = child.value;\r\n                return;\r\n            }\r\n            if(className){\r\n                child.className = className;\r\n                className = null;\r\n            }\r\n            if(id){\r\n                child.id = id;\r\n                id = null;\r\n            }\r\n            if(child.children && child.children.length){\r\n                child = modify(child);\r\n            }\r\n            children.push(child);\r\n        })\r\n\r\n        node.children = children;\r\n        return node;\r\n    }\r\n\r\n    tree = modify(tree)\r\n\r\n    tree = filter(tree, node => (\r\n        (node.type !== \"attrClass\") &&\r\n        (node.type !== \"attrId\") &&\r\n        (node.type === \"text\" && node.value === \"\")\r\n    ))\r\n\r\n    return tree;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}