{"ast":null,"code":"import { produce } from \"imer\";\nimport { ACTIONS } from \"./../../actions\";\nconst initState = {\n  current: null\n};\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.P_SET_PROFILE:\n      {\n        return { ...state,\n          current: action.profile\n        };\n      }\n\n    case ACTIONS.P_SET_PROFILE_DESCRIPTION:\n      {\n        const {\n          userId,\n          description\n        } = action;\n        const current = state.current;\n\n        if (!userId || !description || !current || current.user.id !== userId) {\n          return state;\n        }\n\n        return produce(state, drafState => {\n          drafState.current.user.description = description;\n        });\n        return state;\n      }\n\n    case ACTIONS.P_SET_PROFILE_NICKNAME:\n      {\n        const {\n          userId,\n          nickname\n        } = action;\n        const current = state.current;\n\n        if (!userId || !nickname || !current || current.user.id !== userId) {\n          return state;\n        }\n\n        return produce(state, drafState => {\n          drafState.current.user.nickname = nickname;\n        });\n      }\n\n    case ACTIONS.P_SET_PROFILE_PICTURE:\n      {\n        const {\n          userId,\n          picture\n        } = action;\n        const current = state.current;\n\n        if (!current || !userId || !picture || current.user.id !== userId) {\n          return state;\n        }\n\n        return produce(state, drafState => {\n          drafState.current.user.picture = picture;\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction setToCurrent(state, userId, variable) {\n  const current = state.current;\n\n  if (!current || !userId || !variable || current.user.id !== userId) {\n    return state;\n  }\n\n  return produce(state, drafState => {\n    for (let [name, value] of variable) drafState.current.user[name] = value;\n  });\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/reducers/profile/profileReducer.js"],"names":["produce","ACTIONS","initState","current","state","action","type","P_SET_PROFILE","profile","P_SET_PROFILE_DESCRIPTION","userId","description","user","id","drafState","P_SET_PROFILE_NICKNAME","nickname","P_SET_PROFILE_PICTURE","picture","setToCurrent","variable","name","value"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE;AADK,CAAlB;AAIA,eAAe,UAAUC,KAAK,GAAGF,SAAlB,EAA6BG,MAA7B,EAAqC;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKL,OAAO,CAACM,aAAb;AAA4B;AACxB,eAAO,EACH,GAAGH,KADA;AAEHD,UAAAA,OAAO,EAAEE,MAAM,CAACG;AAFb,SAAP;AAIH;;AAED,SAAKP,OAAO,CAACQ,yBAAb;AAAwC;AACpC,cAAM;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAA0BN,MAAhC;AACA,cAAMF,OAAO,GAAGC,KAAK,CAACD,OAAtB;;AACA,YAAI,CAACO,MAAD,IACA,CAACC,WADD,IAEA,CAACR,OAFD,IAGAA,OAAO,CAACS,IAAR,CAAaC,EAAb,KAAoBH,MAHxB,EAGgC;AAC5B,iBAAON,KAAP;AACH;;AACD,eAAOJ,OAAO,CAACI,KAAD,EAAQU,SAAS,IAAI;AAC/BA,UAAAA,SAAS,CAACX,OAAV,CAAkBS,IAAlB,CAAuBD,WAAvB,GAAqCA,WAArC;AACH,SAFa,CAAd;AAIA,eAAOP,KAAP;AACH;;AAED,SAAKH,OAAO,CAACc,sBAAb;AAAqC;AACjC,cAAM;AAAEL,UAAAA,MAAF;AAAUM,UAAAA;AAAV,YAAuBX,MAA7B;AACA,cAAMF,OAAO,GAAGC,KAAK,CAACD,OAAtB;;AACA,YAAI,CAACO,MAAD,IACA,CAACM,QADD,IAEA,CAACb,OAFD,IAGAA,OAAO,CAACS,IAAR,CAAaC,EAAb,KAAoBH,MAHxB,EAGgC;AAC5B,iBAAON,KAAP;AACH;;AACD,eAAOJ,OAAO,CAACI,KAAD,EAAQU,SAAS,IAAI;AAC/BA,UAAAA,SAAS,CAACX,OAAV,CAAkBS,IAAlB,CAAuBI,QAAvB,GAAkCA,QAAlC;AACH,SAFa,CAAd;AAGH;;AAED,SAAKf,OAAO,CAACgB,qBAAb;AAAoC;AAChC,cAAM;AAAEP,UAAAA,MAAF;AAAUQ,UAAAA;AAAV,YAAsBb,MAA5B;AACA,cAAMF,OAAO,GAAGC,KAAK,CAACD,OAAtB;;AACA,YAAI,CAACA,OAAD,IACA,CAACO,MADD,IAEA,CAACQ,OAFD,IAGAf,OAAO,CAACS,IAAR,CAAaC,EAAb,KAAoBH,MAHxB,EAIE;AACE,iBAAON,KAAP;AACH;;AAED,eAAOJ,OAAO,CAACI,KAAD,EAAQU,SAAS,IAAI;AAC/BA,UAAAA,SAAS,CAACX,OAAV,CAAkBS,IAAlB,CAAuBM,OAAvB,GAAiCA,OAAjC;AACH,SAFa,CAAd;AAGH;;AAED;AAAS,aAAOd,KAAP;AAvDb;AAyDH;;AAED,SAASe,YAAT,CAAsBf,KAAtB,EAA6BM,MAA7B,EAAqCU,QAArC,EAA8C;AAC1C,QAAMjB,OAAO,GAAGC,KAAK,CAACD,OAAtB;;AACA,MAAG,CAACA,OAAD,IACA,CAACO,MADD,IAEA,CAACU,QAFD,IAGAjB,OAAO,CAACS,IAAR,CAAaC,EAAb,KAAoBH,MAHvB,EAG8B;AAC1B,WAAON,KAAP;AACH;;AAED,SAAOJ,OAAO,CAACI,KAAD,EAAQU,SAAS,IAAI;AAC/B,SAAI,IAAI,CAACO,IAAD,EAAOC,KAAP,CAAR,IAAyBF,QAAzB,EACAN,SAAS,CAACX,OAAV,CAAkBS,IAAlB,CAAuBS,IAAvB,IAA+BC,KAA/B;AACH,GAHa,CAAd;AAIH","sourcesContent":["import { produce } from \"imer\";\r\nimport { ACTIONS } from \"./../../actions\";\r\n\r\nconst initState = {\r\n    current: null,\r\n}\r\n\r\nexport default function (state = initState, action) {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS.P_SET_PROFILE: {\r\n            return {\r\n                ...state,\r\n                current: action.profile\r\n            }\r\n        }\r\n\r\n        case ACTIONS.P_SET_PROFILE_DESCRIPTION: {\r\n            const { userId, description } = action;\r\n            const current = state.current;\r\n            if (!userId  || \r\n                !description|| \r\n                !current || \r\n                current.user.id !== userId) {\r\n                return state;\r\n            }\r\n            return produce(state, drafState => {\r\n                drafState.current.user.description = description\r\n            })\r\n\r\n            return state;\r\n        }\r\n\r\n        case ACTIONS.P_SET_PROFILE_NICKNAME: {\r\n            const { userId, nickname } = action;\r\n            const current = state.current;\r\n            if (!userId  || \r\n                !nickname|| \r\n                !current || \r\n                current.user.id !== userId) {\r\n                return state;\r\n            }\r\n            return produce(state, drafState => {\r\n                drafState.current.user.nickname = nickname\r\n            })\r\n        }\r\n\r\n        case ACTIONS.P_SET_PROFILE_PICTURE: {\r\n            const { userId, picture } = action;\r\n            const current = state.current;\r\n            if (!current ||\r\n                !userId ||\r\n                !picture ||\r\n                current.user.id !== userId\r\n            ) {\r\n                return state;\r\n            }\r\n\r\n            return produce(state, drafState => {\r\n                drafState.current.user.picture = picture\r\n            })\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction setToCurrent(state, userId, variable){\r\n    const current = state.current;\r\n    if(!current || \r\n       !userId  || \r\n       !variable|| \r\n       current.user.id !== userId){\r\n        return state;\r\n    }\r\n\r\n    return produce(state, drafState => {\r\n        for(let [name, value] of variable)\r\n        drafState.current.user[name] = value;\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}