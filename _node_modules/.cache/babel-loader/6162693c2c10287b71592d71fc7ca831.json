{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordList\\\\ListItem\\\\WaveSurrferPlayer\\\\WaveSurferPlayer.js\";\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport WaveSurfer from \"wavesurfer\";\nimport style from \"./wave-surfer-player.scss\";\n\nconst WaveSurferPlayer = ({\n  peaks,\n  url\n}) => {\n  const containerRef = useRef(null);\n  const [container, setContainerRef] = useState(null);\n  const onContainerRef = useCallback(ref => {\n    setContainerRef(ref);\n  }, [setContainerRef]);\n  useEffect(() => {\n    if (container) {\n      const ws = new Promise((res, rej) => {\n        try {\n          const ws = WaveSurfer.create({\n            container: container,\n            barWidth: 5,\n            height: 100,\n            waveColor: style.waveColor,\n            progressColor: style.progressColor\n          });\n          res(ws);\n        } catch (err) {\n          rej(err);\n        }\n      });\n      ws.then(ws => {\n        console.log(ws.load); //ws.load(null, peaks)\n      });\n    }\n  }, [container, peaks, url]); // const container = containerRef.current\n  // const ws = useMemo(()=>{\n  //     console.log(\"call memo\", container)\n  //     return new Promise((res, rej)=> {\n  //         if(container){\n  //            res(ws)\n  //           // ws.load(null, peaks);\n  //           } else rej(null)\n  //     })\n  // }, [container])\n  // useEffect(()=>{\n  //     console.log(ws)\n  //     ws.then( ws => {\n  //         ws.load((null, peaks))\n  //     }).catch(()=>console.log(\"catch it kurwa\"))\n  // }, [peaks, url ,ws])\n\n  return React.createElement(\"div\", {\n    className: \"ws-player-container\",\n    ref: onContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  });\n};\n\nexport default WaveSurferPlayer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordList/ListItem/WaveSurrferPlayer/WaveSurferPlayer.js"],"names":["React","useRef","useEffect","useState","useCallback","WaveSurfer","style","WaveSurferPlayer","peaks","url","containerRef","container","setContainerRef","onContainerRef","ref","ws","Promise","res","rej","create","barWidth","height","waveColor","progressColor","err","then","console","log","load"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,WAA5C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAkB;AACvC,QAAMC,YAAY,GAAGT,MAAM,CAAC,IAAD,CAA3B;AAEA,QAAM,CAACU,SAAD,EAAYC,eAAZ,IAA+BT,QAAQ,CAAC,IAAD,CAA7C;AAEA,QAAMU,cAAc,GAAGT,WAAW,CAAGU,GAAD,IAAS;AACzCF,IAAAA,eAAe,CAACE,GAAD,CAAf;AACH,GAFiC,EAE/B,CAACF,eAAD,CAF+B,CAAlC;AAIAV,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGS,SAAH,EAAa;AACT,YAAMI,EAAE,GAAG,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAY;AAC/B,YAAG;AACC,gBAAMH,EAAE,GAAGV,UAAU,CAACc,MAAX,CAAkB;AACzBR,YAAAA,SAAS,EAAEA,SADc;AAEzBS,YAAAA,QAAQ,EAAE,CAFe;AAGzBC,YAAAA,MAAM,EAAE,GAHiB;AAIzBC,YAAAA,SAAS,EAAEhB,KAAK,CAACgB,SAJQ;AAKzBC,YAAAA,aAAa,EAAEjB,KAAK,CAACiB;AALI,WAAlB,CAAX;AAOAN,UAAAA,GAAG,CAACF,EAAD,CAAH;AACH,SATD,CASE,OAAOS,GAAP,EAAW;AACTN,UAAAA,GAAG,CAACM,GAAD,CAAH;AACH;AACJ,OAbU,CAAX;AAeAT,MAAAA,EAAE,CAACU,IAAH,CAASV,EAAD,IAAO;AACXW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,EAAE,CAACa,IAAf,EADW,CAEX;AACH,OAHD;AAIH;AACJ,GAtBQ,EAsBN,CAACjB,SAAD,EAAYH,KAAZ,EAAmBC,GAAnB,CAtBM,CAAT,CATuC,CAiCvC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,GAAG,EAAEI,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAzDD;;AA2DA,eAAeN,gBAAf","sourcesContent":["import React, {useRef, useEffect, useState, useCallback} from \"react\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport style from \"./wave-surfer-player.scss\"\r\n\r\nconst WaveSurferPlayer = ({peaks, url}) => {\r\n    const containerRef = useRef(null)\r\n    \r\n    const [container, setContainerRef] = useState(null);\r\n\r\n    const onContainerRef = useCallback( (ref) => {\r\n        setContainerRef(ref);\r\n    }, [setContainerRef])\r\n\r\n    useEffect(()=>{\r\n        if(container){\r\n            const ws = new Promise((res, rej)=>{\r\n                try{\r\n                    const ws = WaveSurfer.create({\r\n                        container: container,\r\n                        barWidth: 5,\r\n                        height: 100,\r\n                        waveColor: style.waveColor,\r\n                        progressColor: style.progressColor,\r\n                    })\r\n                    res(ws)\r\n                } catch (err){\r\n                    rej(err)\r\n                }\r\n            })\r\n\r\n            ws.then((ws) =>{\r\n                console.log(ws.load)\r\n                //ws.load(null, peaks)\r\n            })\r\n        }\r\n    }, [container, peaks, url])\r\n\r\n    // const container = containerRef.current\r\n    // const ws = useMemo(()=>{\r\n    //     console.log(\"call memo\", container)\r\n    //     return new Promise((res, rej)=> {\r\n    //         if(container){\r\n\r\n    //            res(ws)\r\n    //           // ws.load(null, peaks);\r\n    //           } else rej(null)\r\n    //     })\r\n    // }, [container])\r\n\r\n    // useEffect(()=>{\r\n    //     console.log(ws)\r\n    //     ws.then( ws => {\r\n    //         ws.load((null, peaks))\r\n    //     }).catch(()=>console.log(\"catch it kurwa\"))\r\n    // }, [peaks, url ,ws])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ws-player-container\" ref={onContainerRef}/>\r\n    )\r\n}\r\n\r\nexport default WaveSurferPlayer"]},"metadata":{},"sourceType":"module"}