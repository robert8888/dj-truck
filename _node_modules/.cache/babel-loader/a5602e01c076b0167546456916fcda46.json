{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\common\\\\Knob\\\\Knob.js\";\n// Spec \n// witout any option Knob is standard with value from 0 to 100 and on inti value is 0\n// -initValue:number allow to set init value\n// -showValue props allows to display numeric value on knob\n// -diplayFormula : a callbac function with will be used to show value on knob\n// -scale:number allow to scale value eg. 10 give range from 0 to 10 \n// -symetric:boolean if this props is present knob havse valeu from -100 to 100 * scale \n// -unsymetric:{negative:number, positive:number} allows to set unsymetric range value : \n//  {positive : 5 } means that values bigger than 0 are divided by 5 range is from -100 to 20 * scale\n// -quantize:number switch knob to quantize mode in witch returned values are quantize to parametr \n//       eg: 2 returns value 100, 98 , 96 ... quantize:0.05 returns values 100, 99.95.... \n// -qunatize:{negative:number, positive:number} allows to set diffrent qunatizes for negative and positives values.\n// -responseFactor if is present adjust knob response on a mouse move // default= 1 eg responseFactor 2 will increase response two times\n// -alt if is present when mouse is over and knob is not draggin it will display alt value \nimport React from \"react\";\nimport style from \"./knob.scss\";\n\nclass Knob extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 0,\n      position: 0,\n      snapShotPostion: 0,\n      idDragged: false,\n      isMouseOver: false\n    };\n    this.html = {\n      bigCircle: React.createRef(),\n      leftHalf: React.createRef(),\n      rightHalf: React.createRef(),\n      value: React.createRef(),\n      smallCircle: React.createRef(),\n      dot: React.createRef()\n    };\n  }\n\n  snap() {\n    this.setState({ ...this.state,\n      snapShotPostion: this.state.position\n    });\n  }\n\n  normalizePostion(position) {\n    if (this.props.symetric || this.props.unsymetric) {\n      return Math.min(Math.max(position, -100), 100);\n    }\n\n    return Math.min(Math.max(position, 0), 100);\n  }\n\n  quantizePosition(position) {\n    if (!this.props.quantize) return position; // value is quantaized \n\n    return this.valueToPosition(this.evalValue(position));\n  }\n\n  valueToPosition(value) {\n    let position = value;\n\n    if (this.props.scale) {\n      position = value * 100 / this.props.scale;\n    }\n\n    if (this.props.unsymetric) {\n      if (this.props.unsymetric.positive && value > 0) {\n        let scale = this.props.unsymetric.positive;\n        position = position * scale;\n      }\n\n      if (this.props.unsymetric.negative && value < 0) {\n        let scale = this.props.unsymetric.negative;\n        position = position * scale;\n      }\n    }\n\n    return position;\n  }\n\n  evalValue(position) {\n    let value = position;\n\n    if (this.props.scale) {\n      value = this.props.scale * position / 100;\n    }\n\n    if (this.props.unsymetric) {\n      if (this.props.unsymetric.positive && position > 0) {\n        let scale = this.props.unsymetric.positive;\n        value = value / scale;\n      }\n\n      if (this.props.unsymetric.negative && position < 0) {\n        let scale = this.props.unsymetric.negative;\n        value = value / scale;\n      }\n    }\n\n    if (this.props.quantize) {\n      let factor;\n\n      if (typeof this.props.quantize === \"object\") {\n        if (this.props.quantize.positive && value >= 0) {\n          factor = this.props.quantize.positive;\n        }\n\n        if (this.props.quantize.negative && value < 0) {\n          factor = this.props.quantize.negative;\n        }\n      } else if (typeof this.props.quantize === \"number\") {\n        factor = this.props.quantize;\n      }\n\n      const rest = value % factor;\n      value = value - rest;\n    } //rounding \n\n\n    return Math.floor(value * 1000000) / 1000000;\n  }\n\n  setPostion(position) {\n    position = this.normalizePostion(position);\n    const value = this.evalValue(position);\n    this.setState({ ...this.state,\n      position,\n      value\n    }, () => {\n      this.mapPostionToArms(this.state.position);\n    });\n    this.props.onChange && this.props.onChange(this.state.value);\n  }\n\n  mapPostionToArms(position) {\n    let rightArm, leftArm, dotAngle;\n    let reversArm = false;\n    position = this.quantizePosition(position);\n\n    if (this.props.symetric || this.props.unsymetric) {\n      rightArm = 88;\n      leftArm = 92;\n      dotAngle = position * 1.4;\n\n      if (position < -2) {\n        rightArm = 90 - Math.abs(position) * 1.5;\n        leftArm = 90;\n      } else if (position > 2) {\n        rightArm = 90;\n        leftArm = 90 + position * 1.5;\n      }\n    } else {\n      rightArm = -60;\n      leftArm = -60;\n      dotAngle = -150 + position * 2.95;\n      leftArm += position * 3;\n\n      if (position > 60) {\n        reversArm = true;\n        leftArm = -240 + (position - 60) * 3;\n        rightArm = -240;\n      }\n    }\n\n    this.updateStyle({\n      rightArm,\n      leftArm,\n      dotAngle,\n      reversArm\n    });\n    this.updateValue();\n  }\n\n  updateValue() {\n    let value = \"\";\n\n    if (this.isMouseOver && !this.state.isDragged && this.props.alt) {\n      value = this.props.alt.substr(0, 4).toUpperCase();\n    } else {\n      if (this.props.showValue) {\n        value = this.evalValue(this.state.position);\n      }\n\n      if (this.props.displayFormula) {\n        value = this.props.displayFormula(value);\n      }\n    }\n\n    this.html.value.current.textContent = value.toString().substr(0, 6);\n  }\n\n  updateStyle({\n    rightArm,\n    leftArm,\n    dotAngle,\n    reversArm\n  }) {\n    this.html.bigCircle.current.style.backgroundImage = `linear-gradient(` + (180 + leftArm) + `deg, ` + style.primaryDark + ` 50%, transparent 50%),\n             linear-gradient(` + (180 + rightArm) + `deg, transparent 50%, ` + style.primaryDark + ` 50%)`;\n    this.html.rightHalf.current.style.transform = `rotate(` + leftArm + `deg)`;\n    this.html.leftHalf.current.style.transform = `rotate(` + rightArm + `deg)`;\n\n    if (reversArm) {\n      this.html.leftHalf.current.classList.add(\"half--reverse\");\n    } else {\n      this.html.leftHalf.current.classList.remove(\"half--reverse\");\n    }\n\n    this.html.dot.current.style.transform = 'rotate(' + dotAngle + 'deg)';\n  }\n\n  setActive(value) {\n    if (value) {\n      this.html.value.current.classList.add(\"knob--focus\");\n      this.html.smallCircle.current.classList.add(\"small-circle--focus\");\n    } else {\n      this.html.value.current.classList.remove(\"knob--focus\");\n      this.html.smallCircle.current.classList.remove(\"small-circle--focus\");\n    }\n  } // -------------- events below\n\n\n  mouseDown(event) {\n    const startY = event.clientY;\n    let mouseMove = this.mouseMove.bind(this, startY);\n    this.snap();\n\n    const removeListener = () => {\n      document.body.removeEventListener('mousemove', mouseMove);\n      document.body.removeEventListener('mouseup', removeListener);\n      document.body.removeEventListener('mouseleave', removeListener);\n      this.setState({ ...this.setState,\n        isDragged: false\n      }, () => {\n        if (!this.state.isDragged && !this.isMouseOver) {\n          this.setActive(false);\n        }\n      });\n    };\n\n    document.body.addEventListener('mousemove', mouseMove);\n    document.body.addEventListener('mouseup', removeListener);\n    document.body.addEventListener('mouseleave', removeListener);\n    this.setState({ ...this.setState,\n      isDragged: true\n    });\n    this.setActive(true);\n  }\n\n  mouseMove(startY, event) {\n    event.stopPropagation();\n    let responsFactor = this.props.responsFactor || 1;\n    let position = this.state.snapShotPostion - (event.clientY - startY) * responsFactor;\n    this.setPostion(position);\n  }\n\n  mouseEnter() {\n    this.isMouseOver = true;\n\n    if (this.state.isDragged || this.isMouseOver) {\n      this.setActive(true);\n    }\n  }\n\n  mouseLeve() {\n    this.isMouseOver = false;\n\n    if (!this.state.isDragged && !this.isMouseOver) {\n      this.setActive(false);\n    }\n  }\n\n  mouseDoubelClick() {\n    if (this.props.dobuleClickInit) {\n      const value = this.props.initValue || 0;\n      const position = this.valueToPosition(value);\n      this.setState({ ...this.state,\n        value: value\n      }, () => {\n        this.setPostion(position);\n      });\n    }\n  } //----------------compontent metod\n\n\n  componentDidMount() {\n    let position = this.state.position;\n\n    if (this.props.initValue) {\n      position = this.valueToPosition(this.props.initValue);\n    }\n\n    this.setState({ ...this.state,\n      position: position\n    }, () => {\n      this.mapPostionToArms(position);\n    });\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.props.value !== oldProps.value) {\n      const postion = this.valueToPosition(this.props.value);\n      this.setPostion(postion);\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    console.log(this.props.value);\n    return this.props.value && this.props.value !== nextProps.value;\n  }\n\n  render() {\n    console.log(\"renderuje knoba\");\n    return React.createElement(\"div\", {\n      className: \"knob \" + this.props.className,\n      onMouseDown: this.mouseDown.bind(this),\n      onDragStart: e => e.preventDefault(),\n      onDoubleClick: this.mouseDoubelClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"knob-big-circle\",\n      ref: this.html.bigCircle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.html.rightHalf,\n      className: \"half-circle half-right\",\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      ref: this.html.leftHalf,\n      className: \"half-circle half-left \",\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), this.props.showValue && React.createElement(\"div\", {\n      ref: this.html.value,\n      className: \"knob-value \" + (this.props.showValue === \"always\" ? \"knob--focus\" : \"\"),\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      ref: this.html.smallCircle,\n      className: \"knob-small-circle \",\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      ref: this.html.dot,\n      className: \"knob-dot\",\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Knob;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/common/Knob/Knob.js"],"names":["React","style","Knob","Component","constructor","state","value","position","snapShotPostion","idDragged","isMouseOver","html","bigCircle","createRef","leftHalf","rightHalf","smallCircle","dot","snap","setState","normalizePostion","props","symetric","unsymetric","Math","min","max","quantizePosition","quantize","valueToPosition","evalValue","scale","positive","negative","factor","rest","floor","setPostion","mapPostionToArms","onChange","rightArm","leftArm","dotAngle","reversArm","abs","updateStyle","updateValue","isDragged","alt","substr","toUpperCase","showValue","displayFormula","current","textContent","toString","backgroundImage","primaryDark","transform","classList","add","remove","setActive","mouseDown","event","startY","clientY","mouseMove","bind","removeListener","document","body","removeEventListener","addEventListener","stopPropagation","responsFactor","mouseEnter","mouseLeve","mouseDoubelClick","dobuleClickInit","initValue","componentDidMount","componentDidUpdate","oldProps","postion","shouldComponentUpdate","nextProps","console","log","render","className","e","preventDefault"],"mappings":"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","sourcesContent":["\r\n\r\n// Spec \r\n// witout any option Knob is standard with value from 0 to 100 and on inti value is 0\r\n// -initValue:number allow to set init value\r\n// -showValue props allows to display numeric value on knob\r\n// -diplayFormula : a callbac function with will be used to show value on knob\r\n// -scale:number allow to scale value eg. 10 give range from 0 to 10 \r\n// -symetric:boolean if this props is present knob havse valeu from -100 to 100 * scale \r\n// -unsymetric:{negative:number, positive:number} allows to set unsymetric range value : \r\n//  {positive : 5 } means that values bigger than 0 are divided by 5 range is from -100 to 20 * scale\r\n// -quantize:number switch knob to quantize mode in witch returned values are quantize to parametr \r\n//       eg: 2 returns value 100, 98 , 96 ... quantize:0.05 returns values 100, 99.95.... \r\n// -qunatize:{negative:number, positive:number} allows to set diffrent qunatizes for negative and positives values.\r\n// -responseFactor if is present adjust knob response on a mouse move // default= 1 eg responseFactor 2 will increase response two times\r\n// -alt if is present when mouse is over and knob is not draggin it will display alt value \r\n\r\nimport React from \"react\";\r\nimport style from \"./knob.scss\";\r\n\r\n\r\nclass Knob extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.html = {\r\n            bigCircle : React.createRef(),\r\n            leftHalf : React.createRef(),\r\n            rightHalf : React.createRef(),\r\n            value : React.createRef(),\r\n            smallCircle : React.createRef(),\r\n            dot : React.createRef()\r\n        }\r\n    }\r\n\r\n    state = {\r\n        value: 0,\r\n        position: 0, \r\n        snapShotPostion: 0,\r\n\r\n        idDragged: false,\r\n        isMouseOver: false,\r\n    }\r\n\r\n    snap(){\r\n        this.setState({...this.state, snapShotPostion: this.state.position})\r\n    }\r\n\r\n    normalizePostion(position){\r\n        if(this.props.symetric || this.props.unsymetric){\r\n            return Math.min(Math.max(position, -100), 100)\r\n        } \r\n        return Math.min(Math.max(position, 0), 100)\r\n    }\r\n\r\n    quantizePosition(position){\r\n        if(!this.props.quantize) \r\n            return position;\r\n\r\n         // value is quantaized \r\n         return this.valueToPosition(this.evalValue(position));\r\n\r\n    }\r\n\r\n    valueToPosition(value){\r\n        let position = value;\r\n        if(this.props.scale){\r\n            position = value * 100 / this.props.scale;\r\n        }\r\n\r\n        if(this.props.unsymetric){\r\n            if(this.props.unsymetric.positive && value > 0 ){\r\n                let scale = this.props.unsymetric.positive;\r\n                position = position * scale;\r\n            } \r\n            if(this.props.unsymetric.negative &&  value < 0){\r\n                let scale = this.props.unsymetric.negative;\r\n                position = position * scale;\r\n            }\r\n        }\r\n        return position;\r\n    }\r\n\r\n    evalValue(position){\r\n        let value = position;\r\n        \r\n        if(this.props.scale){\r\n            value = this.props.scale * position / 100 ;\r\n        } \r\n        \r\n        if(this.props.unsymetric){\r\n            if(this.props.unsymetric.positive && position > 0 ){\r\n                let scale = this.props.unsymetric.positive;\r\n                value = value / scale;\r\n            } \r\n            if(this.props.unsymetric.negative && position < 0){\r\n                let scale = this.props.unsymetric.negative;\r\n                value = value / scale;\r\n            }\r\n        }\r\n\r\n        if(this.props.quantize){\r\n            let factor; \r\n            if(typeof this.props.quantize === \"object\"){\r\n                if(this.props.quantize.positive && value >= 0 ){\r\n                    factor = this.props.quantize.positive;\r\n                } if(this.props.quantize.negative && value < 0){\r\n                    factor = this.props.quantize.negative;\r\n                }\r\n            } else if (typeof this.props.quantize === \"number\") {\r\n                factor = this.props.quantize;\r\n            }\r\n            const rest = value % factor;\r\n            value = value - rest;\r\n        }\r\n\r\n        //rounding \r\n        return Math.floor(value * 1000000) / 1000000;\r\n    }\r\n\r\n    setPostion(position){\r\n        position =  this.normalizePostion(position);\r\n        const value = this.evalValue(position);\r\n\r\n        this.setState({...this.state, position, value}, ()=>{\r\n            this.mapPostionToArms(this.state.position)\r\n        });\r\n\r\n        (this.props.onChange && this.props.onChange(this.state.value))\r\n    }\r\n\r\n    mapPostionToArms(position){\r\n        let rightArm, leftArm, dotAngle;\r\n        let reversArm = false;\r\n        position = this.quantizePosition(position); \r\n\r\n        if(this.props.symetric || this.props.unsymetric){\r\n            rightArm = 88;\r\n            leftArm = 92; \r\n            dotAngle = position  * 1.4 ;     \r\n            \r\n            if(position < -2 ) {\r\n                rightArm = 90 - Math.abs(position) * 1.5;\r\n                leftArm = 90;\r\n            } else if(position > 2 ){\r\n                rightArm = 90;\r\n                leftArm = 90 + position * 1.5;\r\n            }\r\n        } else {\r\n            rightArm = -60;\r\n            leftArm = -60; \r\n            dotAngle = -150 + position * 2.95;\r\n            leftArm += position * 3;\r\n            if(position > 60) {\r\n                reversArm = true;\r\n                leftArm =  -240 + (position - 60) * 3;\r\n                rightArm =  -240 ;\r\n            }\r\n        }\r\n        this.updateStyle({rightArm, leftArm, dotAngle, reversArm});\r\n        this.updateValue();\r\n    }\r\n\r\n    updateValue(){\r\n        let value = \"\"\r\n        if(this.isMouseOver && !this.state.isDragged && this.props.alt){\r\n            value = this.props.alt.substr(0,4).toUpperCase();\r\n        } else {\r\n            if(this.props.showValue){\r\n                value = this.evalValue(this.state.position)\r\n            }\r\n            if(this.props.displayFormula){\r\n                value = this.props.displayFormula(value);\r\n            }\r\n        }\r\n\r\n        this.html.value.current.textContent = value.toString().substr(0,6);\r\n    }\r\n\r\n    updateStyle({rightArm, leftArm, dotAngle, reversArm}){\r\n        this.html.bigCircle.current.style.backgroundImage = \r\n            `linear-gradient(`+ (180 + leftArm)  +`deg, `+style.primaryDark+` 50%, transparent 50%),\r\n             linear-gradient(`+ (180 + rightArm) +`deg, transparent 50%, `+style.primaryDark+` 50%)`;\r\n\r\n        this.html.rightHalf.current.style.transform = `rotate(`+ leftArm +`deg)`;\r\n        this.html.leftHalf.current.style.transform = `rotate(`+ rightArm +`deg)`;\r\n        if(reversArm){\r\n            this.html.leftHalf.current.classList.add(\"half--reverse\")\r\n        } else {\r\n            this.html.leftHalf.current.classList.remove(\"half--reverse\")\r\n        }\r\n\r\n        this.html.dot.current.style.transform= 'rotate('+ dotAngle + 'deg)';\r\n    }\r\n\r\n    setActive(value){\r\n        if(value){\r\n            this.html.value.current.classList.add(\"knob--focus\")\r\n            this.html.smallCircle.current.classList.add(\"small-circle--focus\");\r\n        }else {\r\n            this.html.value.current.classList.remove(\"knob--focus\");\r\n            this.html.smallCircle.current.classList.remove(\"small-circle--focus\");\r\n        }\r\n    }\r\n\r\n    // -------------- events below\r\n\r\n    mouseDown(event){\r\n        const startY = event.clientY;\r\n        let mouseMove = this.mouseMove.bind(this, startY);\r\n        this.snap();\r\n\r\n        const removeListener = () =>{\r\n            document.body.removeEventListener('mousemove', mouseMove);\r\n            document.body.removeEventListener('mouseup', removeListener);\r\n            document.body.removeEventListener('mouseleave', removeListener);\r\n            this.setState({...this.setState, isDragged: false}, ()=>{\r\n                if(!this.state.isDragged &&  !this.isMouseOver){\r\n                    this.setActive(false);\r\n                }\r\n            })\r\n            \r\n        }\r\n\r\n        document.body.addEventListener('mousemove', mouseMove)\r\n        document.body.addEventListener('mouseup', removeListener);\r\n        document.body.addEventListener('mouseleave', removeListener);\r\n        this.setState({...this.setState, isDragged: true})\r\n        this.setActive(true);\r\n    }\r\n\r\n    mouseMove(startY, event){\r\n        event.stopPropagation();\r\n        let responsFactor = this.props.responsFactor || 1;\r\n        let position = this.state.snapShotPostion - (event.clientY  - startY) * responsFactor;\r\n        this.setPostion(position);\r\n    }\r\n\r\n    mouseEnter(){\r\n        this.isMouseOver = true;\r\n        if(this.state.isDragged ||  this.isMouseOver){\r\n            this.setActive(true);\r\n        }\r\n    }\r\n\r\n    mouseLeve(){\r\n        this.isMouseOver = false;\r\n        if(!this.state.isDragged &&  !this.isMouseOver){\r\n            this.setActive(false)\r\n        }\r\n    }\r\n\r\n    mouseDoubelClick(){\r\n        if(this.props.dobuleClickInit){\r\n            const value = this.props.initValue || 0;\r\n            const position = this.valueToPosition(value);\r\n            this.setState({...this.state, value : value}, ()=>{\r\n                this.setPostion(position)\r\n            })\r\n        }\r\n    }\r\n\r\n    //----------------compontent metod\r\n    componentDidMount(){\r\n        let position = this.state.position;\r\n        if(this.props.initValue){\r\n            position = this.valueToPosition(this.props.initValue)\r\n        }\r\n\r\n        this.setState({...this.state, position : position}, ()=>{\r\n            this.mapPostionToArms(position);\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(oldProps){\r\n        if(this.props.value !== oldProps.value){\r\n            const postion = this.valueToPosition(this.props.value);\r\n            this.setPostion(postion);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        console.log(this.props.value)\r\n        return (this.props.value && this.props.value !==  nextProps.value)\r\n    }\r\n\r\n    render(){\r\n        console.log(\"renderuje knoba\")\r\n        \r\n        return (\r\n            <div \r\n                className={\"knob \" + this.props.className} \r\n                onMouseDown={this.mouseDown.bind(this)}\r\n                onDragStart={ e => e.preventDefault()}\r\n                onDoubleClick={this.mouseDoubelClick.bind(this)}\r\n                >\r\n                <div \r\n                    className=\"knob-big-circle\"\r\n                    ref={this.html.bigCircle}>\r\n                    <div \r\n                        ref = {this.html.rightHalf}\r\n                        className=\"half-circle half-right\"\r\n                        onMouseEnter={ this.mouseEnter.bind(this)}\r\n                        onMouseLeave={ this.mouseLeve.bind(this)}/>\r\n                    <div \r\n                        ref = {this.html.leftHalf} \r\n                        className=\"half-circle half-left \"\r\n                        onMouseEnter={ this.mouseEnter.bind(this)}\r\n                        onMouseLeave={ this.mouseLeve.bind(this)}/>\r\n                    {( this.props.showValue && \r\n                        <div\r\n                            ref={this.html.value} \r\n                            className={\"knob-value \" + ((this.props.showValue === \"always\") ? \"knob--focus\" : \"\")}\r\n                            onMouseEnter={ this.mouseEnter.bind(this)}\r\n                            onMouseLeave={ this.mouseLeve.bind(this)}>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div \r\n                    ref={this.html.smallCircle}\r\n                    className={\"knob-small-circle \"}\r\n                    onMouseEnter={ this.mouseEnter.bind(this) }\r\n                    onMouseLeave={ this.mouseLeve.bind(this) }\r\n                    />\r\n                <div \r\n                    ref={this.html.dot}\r\n                    className=\"knob-dot\"\r\n                    onMouseEnter={ this.mouseEnter.bind(this) }\r\n                    onMouseLeave={ this.mouseLeve.bind(this) }/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Knob;"]},"metadata":{},"sourceType":"module"}