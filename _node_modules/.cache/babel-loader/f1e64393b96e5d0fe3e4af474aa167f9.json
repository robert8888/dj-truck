{"ast":null,"code":"import { useState, useCallback } from \"react\";\nexport function useDoubleClickSeparetly({\n  clickHandler,\n  doubleClickHandler\n}) {\n  const [lastClick, setLastClick] = useState(null);\n  const [timerHandler, setTimerHandler] = useState(null);\n  const liClickHandler = useCallback((...args) => {\n    const now = new Date().getTime();\n\n    if (timerHandler === null) {\n      setLastClick(now);\n      setTimerHandler(setTimeout(() => {\n        clickHandler(...args);\n        clearTimeout(timerHandler);\n        setTimerHandler(null);\n      }, 200));\n    } else if (now - lastClick < 200) {\n      doubleClickHandler(...args);\n      setLastClick(null);\n      clearTimeout(timerHandler);\n      setTimerHandler(null);\n    }\n  }, [lastClick, setLastClick, timerHandler, setTimerHandler, clickHandler, doubleClickHandler]);\n  return [liClickHandler];\n}\nexport function useDoubleClick({\n  clickHandler,\n  doubleClickHandler\n}) {\n  const [lastClick, setLastClick] = useState(null);\n  const liClickHandler = useCallback((...args) => {\n    const now = new Date().getTime();\n\n    if (args[args.length - 1].stopPropagation) {\n      args[args.length - 1].stopPropagation();\n    }\n\n    setLastClick(now);\n    clickHandler(...args);\n\n    if (now - lastClick < 300) {\n      doubleClickHandler(...args);\n      setLastClick(null);\n    }\n  }, [lastClick, setLastClick, clickHandler, doubleClickHandler]);\n  return [liClickHandler];\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayListExplorer/Explorer/ExplorerTree/useDoubleClick.js"],"names":["useState","useCallback","useDoubleClickSeparetly","clickHandler","doubleClickHandler","lastClick","setLastClick","timerHandler","setTimerHandler","liClickHandler","args","now","Date","getTime","setTimeout","clearTimeout","useDoubleClick","length","stopPropagation"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,SAASC,uBAAT,CAAiC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAjC,EAAuE;AAC1E,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAMS,cAAc,GAAGR,WAAW,CAAC,CAAC,GAAGS,IAAJ,KAAa;AAC5C,UAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;;AACA,QAAIN,YAAY,KAAK,IAArB,EAA2B;AACvBD,MAAAA,YAAY,CAACK,GAAD,CAAZ;AACAH,MAAAA,eAAe,CAACM,UAAU,CAAC,MAAM;AAC7BX,QAAAA,YAAY,CAAC,GAAGO,IAAJ,CAAZ;AACAK,QAAAA,YAAY,CAACR,YAAD,CAAZ;AACAC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACH,OAJyB,EAIvB,GAJuB,CAAX,CAAf;AAKH,KAPD,MAOO,IAAIG,GAAG,GAAGN,SAAN,GAAkB,GAAtB,EAA2B;AAC9BD,MAAAA,kBAAkB,CAAC,GAAGM,IAAJ,CAAlB;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAS,MAAAA,YAAY,CAACR,YAAD,CAAZ;AACAC,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AACJ,GAfiC,EAe/B,CAACH,SAAD,EACCC,YADD,EAECC,YAFD,EAGCC,eAHD,EAICL,YAJD,EAKCC,kBALD,CAf+B,CAAlC;AAsBA,SAAO,CAACK,cAAD,CAAP;AACH;AAED,OAAO,SAASO,cAAT,CAAwB;AAAEb,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAxB,EAA8D;AACjE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMS,cAAc,GAAGR,WAAW,CAAC,CAAC,GAAGS,IAAJ,KAAa;AAC5C,UAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;;AACA,QAAGH,IAAI,CAACA,IAAI,CAACO,MAAL,GAAY,CAAb,CAAJ,CAAoBC,eAAvB,EAAuC;AACnCR,MAAAA,IAAI,CAACA,IAAI,CAACO,MAAL,GAAY,CAAb,CAAJ,CAAoBC,eAApB;AACH;;AACDZ,IAAAA,YAAY,CAACK,GAAD,CAAZ;AACAR,IAAAA,YAAY,CAAC,GAAGO,IAAJ,CAAZ;;AACA,QAAIC,GAAG,GAAGN,SAAN,GAAkB,GAAtB,EAA2B;AACvBD,MAAAA,kBAAkB,CAAC,GAAGM,IAAJ,CAAlB;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GAXiC,EAW/B,CAACD,SAAD,EACCC,YADD,EAECH,YAFD,EAGCC,kBAHD,CAX+B,CAAlC;AAgBA,SAAO,CAACK,cAAD,CAAP;AACH","sourcesContent":["import { useState, useCallback } from \"react\"\r\n\r\nexport function useDoubleClickSeparetly({ clickHandler, doubleClickHandler }) {\r\n    const [lastClick, setLastClick] = useState(null);\r\n    const [timerHandler, setTimerHandler] = useState(null);\r\n    const liClickHandler = useCallback((...args) => {\r\n        const now = new Date().getTime();\r\n        if (timerHandler === null) {\r\n            setLastClick(now);\r\n            setTimerHandler(setTimeout(() => {\r\n                clickHandler(...args);\r\n                clearTimeout(timerHandler);\r\n                setTimerHandler(null);\r\n            }, 200))\r\n        } else if (now - lastClick < 200) {\r\n            doubleClickHandler(...args);\r\n            setLastClick(null)\r\n            clearTimeout(timerHandler);\r\n            setTimerHandler(null);\r\n        }\r\n    }, [lastClick,\r\n        setLastClick,\r\n        timerHandler,\r\n        setTimerHandler,\r\n        clickHandler,\r\n        doubleClickHandler])\r\n\r\n    return [liClickHandler]\r\n}\r\n\r\nexport function useDoubleClick({ clickHandler, doubleClickHandler }) {\r\n    const [lastClick, setLastClick] = useState(null);\r\n\r\n    const liClickHandler = useCallback((...args) => {\r\n        const now = new Date().getTime();\r\n        if(args[args.length-1].stopPropagation){\r\n            args[args.length-1].stopPropagation();\r\n        }\r\n        setLastClick(now);\r\n        clickHandler(...args);\r\n        if (now - lastClick < 300) {\r\n            doubleClickHandler(...args);\r\n            setLastClick(null)\r\n        }\r\n    }, [lastClick,\r\n        setLastClick,\r\n        clickHandler,\r\n        doubleClickHandler])\r\n\r\n    return [liClickHandler]\r\n}"]},"metadata":{},"sourceType":"module"}