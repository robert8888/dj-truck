{"ast":null,"code":"import { produce } from \"imer\";\nimport { ACTIONS } from \"./../../actions\";\nconst initState = {\n  current: null\n};\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.P_SET_PROFILE:\n      {\n        return { ...state,\n          current: action.profile\n        };\n      }\n\n    case ACTIONS.P_SET_PROFILE_DESCRIPTION:\n      {\n        const {\n          userId,\n          description\n        } = action;\n        return setOnCurrent(state, userId, {\n          desc\n        });\n      }\n\n    case ACTIONS.P_SET_PROFILE_NICKNAME:\n      {\n        const {\n          userId,\n          nickname\n        } = action;\n        return setOnCurrent(state, userId, {\n          nickname\n        });\n      }\n\n    case ACTIONS.P_SET_PROFILE_PICTURE:\n      {\n        const {\n          userId,\n          picture\n        } = action;\n        return setOnCurrent(state, userId, {\n          picture\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nfunction setOnCurrent(state, userId, variable) {\n  const current = state.current;\n\n  if (!current || !userId || !variable || current.user.id !== userId) {\n    return state;\n  }\n\n  return produce(state, drafState => {\n    for (let [name, value] of variable) {\n      drafState.current.user[name] = value;\n    }\n  });\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/reducers/profile/profileReducer.js"],"names":["produce","ACTIONS","initState","current","state","action","type","P_SET_PROFILE","profile","P_SET_PROFILE_DESCRIPTION","userId","description","setOnCurrent","desc","P_SET_PROFILE_NICKNAME","nickname","P_SET_PROFILE_PICTURE","picture","variable","user","id","drafState","name","value"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE;AADK,CAAlB;AAIA,eAAe,UAAUC,KAAK,GAAGF,SAAlB,EAA6BG,MAA7B,EAAqC;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKL,OAAO,CAACM,aAAb;AAA4B;AACxB,eAAO,EACH,GAAGH,KADA;AAEHD,UAAAA,OAAO,EAAEE,MAAM,CAACG;AAFb,SAAP;AAIH;;AAED,SAAKP,OAAO,CAACQ,yBAAb;AAAwC;AACpC,cAAM;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,YAA0BN,MAAhC;AACA,eAAOO,YAAY,CAACR,KAAD,EAAQM,MAAR,EAAgB;AAACG,UAAAA;AAAD,SAAhB,CAAnB;AACH;;AAED,SAAKZ,OAAO,CAACa,sBAAb;AAAqC;AACjC,cAAM;AAAEJ,UAAAA,MAAF;AAAUK,UAAAA;AAAV,YAAuBV,MAA7B;AACA,eAAOO,YAAY,CAACR,KAAD,EAAQM,MAAR,EAAgB;AAACK,UAAAA;AAAD,SAAhB,CAAnB;AACH;;AAED,SAAKd,OAAO,CAACe,qBAAb;AAAoC;AAChC,cAAM;AAAEN,UAAAA,MAAF;AAAUO,UAAAA;AAAV,YAAsBZ,MAA5B;AACA,eAAOO,YAAY,CAACR,KAAD,EAAQM,MAAR,EAAgB;AAACO,UAAAA;AAAD,SAAhB,CAAnB;AACH;;AAED;AAAS,aAAOb,KAAP;AAxBb;AA0BH;;AAED,SAASQ,YAAT,CAAsBR,KAAtB,EAA6BM,MAA7B,EAAqCQ,QAArC,EAA8C;AAC1C,QAAMf,OAAO,GAAGC,KAAK,CAACD,OAAtB;;AACA,MAAG,CAACA,OAAD,IACA,CAACO,MADD,IAEA,CAACQ,QAFD,IAGAf,OAAO,CAACgB,IAAR,CAAaC,EAAb,KAAoBV,MAHvB,EAG8B;AAC1B,WAAON,KAAP;AACH;;AAED,SAAOJ,OAAO,CAACI,KAAD,EAAQiB,SAAS,IAAI;AAC/B,SAAI,IAAI,CAACC,IAAD,EAAOC,KAAP,CAAR,IAAyBL,QAAzB,EAAkC;AAC9BG,MAAAA,SAAS,CAAClB,OAAV,CAAkBgB,IAAlB,CAAuBG,IAAvB,IAA+BC,KAA/B;AACH;AACJ,GAJa,CAAd;AAKH","sourcesContent":["import { produce } from \"imer\";\r\nimport { ACTIONS } from \"./../../actions\";\r\n\r\nconst initState = {\r\n    current: null,\r\n}\r\n\r\nexport default function (state = initState, action) {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS.P_SET_PROFILE: {\r\n            return {\r\n                ...state,\r\n                current: action.profile\r\n            }\r\n        }\r\n\r\n        case ACTIONS.P_SET_PROFILE_DESCRIPTION: {\r\n            const { userId, description } = action;\r\n            return setOnCurrent(state, userId, {desc})\r\n        }\r\n\r\n        case ACTIONS.P_SET_PROFILE_NICKNAME: {\r\n            const { userId, nickname } = action;\r\n            return setOnCurrent(state, userId, {nickname})\r\n        }\r\n\r\n        case ACTIONS.P_SET_PROFILE_PICTURE: {\r\n            const { userId, picture } = action;\r\n            return setOnCurrent(state, userId, {picture})\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nfunction setOnCurrent(state, userId, variable){\r\n    const current = state.current;\r\n    if(!current || \r\n       !userId  || \r\n       !variable|| \r\n       current.user.id !== userId){\r\n        return state;\r\n    }\r\n\r\n    return produce(state, drafState => {\r\n        for(let [name, value] of variable){\r\n            drafState.current.user[name] = value;\r\n        }\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}