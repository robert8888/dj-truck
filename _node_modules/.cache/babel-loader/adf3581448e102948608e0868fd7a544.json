{"ast":null,"code":"import { hideLoading, showLoading } from 'react-redux-loading-bar';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { ACTIONS, setSearchResults } from \"../../actions\";\nimport { getApi } from './../../apis/apiProvider';\nexport default function* watcher() {\n  yield takeEvery(ACTIONS.SEARCH_START, searchAsync);\n}\n\nfunction* searchAsync(action) {\n  const path = ['saga', 'externalSearch', 'call to exteranl miusic source search api'];\n  const {\n    text: query,\n    source,\n    limit\n  } = action;\n\n  try {\n    yield put(showLoading());\n    const api = getApi(source);\n    const results = yield call(api.search, query, limit);\n    yield put(setSearchResults(results));\n    yield put(pushLog(new Log(`Successful recive search result for query${query} on source: ${source}`, path)));\n  } catch (error) {\n    yield put(pushLog(Log.Error(path, \"Durring searching occured error: \" + error.message, \"Sorry. During process of searching track occurred a problem\", error)));\n  } finally {\n    yield put(hideLoading());\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/externalSearch/SearchSaga.js"],"names":["hideLoading","showLoading","call","put","takeEvery","ACTIONS","setSearchResults","getApi","watcher","SEARCH_START","searchAsync","action","path","text","query","source","limit","api","results","search","pushLog","Log","error","Error","message"],"mappings":"AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,eAA1C;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,eAAe,UAAUC,OAAV,GAAoB;AAC/B,QAAMJ,SAAS,CAACC,OAAO,CAACI,YAAT,EAAuBC,WAAvB,CAAf;AACH;;AAGD,UAAUA,WAAV,CAAsBC,MAAtB,EAA8B;AAC1B,QAAMC,IAAI,GAAG,CAAC,MAAD,EAAS,gBAAT,EAA2B,2CAA3B,CAAb;AACA,QAAM;AAACC,IAAAA,IAAI,EAAEC,KAAP;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,MAA+BL,MAArC;;AACA,MAAI;AACA,UAAMR,GAAG,CAACF,WAAW,EAAZ,CAAT;AACA,UAAMgB,GAAG,GAAGV,MAAM,CAACQ,MAAD,CAAlB;AACA,UAAMG,OAAO,GAAG,MAAMhB,IAAI,CAACe,GAAG,CAACE,MAAL,EAAaL,KAAb,EAAoBE,KAApB,CAA1B;AACA,UAAMb,GAAG,CAACG,gBAAgB,CAACY,OAAD,CAAjB,CAAT;AAEA,UAAMf,GAAG,CAACiB,OAAO,CACb,IAAIC,GAAJ,CAAS,4CAA2CP,KAAM,eAAcC,MAAO,EAA/E,EAAkFH,IAAlF,CADa,CAAR,CAAT;AAGH,GATD,CASE,OAAMU,KAAN,EAAY;AACV,UAAMnB,GAAG,CAACiB,OAAO,CAACC,GAAG,CAACE,KAAJ,CACdX,IADc,EAEd,sCAAsCU,KAAK,CAACE,OAF9B,EAGd,6DAHc,EAIdF,KAJc,CAAD,CAAR,CAAT;AAMH,GAhBD,SAgBU;AACN,UAAMnB,GAAG,CAACH,WAAW,EAAZ,CAAT;AACH;AACJ","sourcesContent":["\r\nimport { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, setSearchResults } from \"../../actions\";\r\nimport { getApi } from './../../apis/apiProvider';\r\n\r\nexport default function* watcher() {\r\n    yield takeEvery(ACTIONS.SEARCH_START, searchAsync);\r\n}\r\n\r\n\r\nfunction* searchAsync(action) {\r\n    const path = ['saga', 'externalSearch', 'call to exteranl miusic source search api']\r\n    const {text: query, source, limit} = action;\r\n    try {\r\n        yield put(showLoading());\r\n        const api = getApi(source);\r\n        const results = yield call(api.search, query, limit);\r\n        yield put(setSearchResults(results));\r\n\r\n        yield put(pushLog(\r\n            new Log(`Successful recive search result for query${query} on source: ${source}`, path)\r\n        ))\r\n    } catch(error){\r\n        yield put(pushLog(Log.Error(\r\n            path,\r\n            \"Durring searching occured error: \" + error.message,\r\n            \"Sorry. During process of searching track occurred a problem\",\r\n            error\r\n        )))\r\n    } finally {\r\n        yield put(hideLoading())\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}