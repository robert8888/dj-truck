{"ast":null,"code":"import { ACTIONS } from \"./../../actions\";\nimport { takeEvery, call } from \"redux-saga/effects\";\nimport { LOG_TYPES } from \"./../../utils/logger/logger\";\nconst environment = process.env.NODE_ENV;\nexport default function* watchPushLog(action) {\n  if (environment === \"development\") {\n    yield takeEvery(ACTIONS.LOG_PUSH, handler);\n  }\n}\n\nfunction* handler(action) {\n  const {\n    log\n  } = action;\n\n  if (![LOG_TYPES.DEBUG, LOG_TYPES.ERROR].includes(log.type)) {\n    return;\n  }\n\n  yield call(print, log);\n}\n\nfunction print(log) {\n  switch (log.type) {\n    case LOG_TYPES.ERROR:\n      {\n        var _log$error, _log$error2;\n\n        console.group(\"ERROR\");\n        console.log(log.path);\n        console.error((_log$error = log.error) === null || _log$error === void 0 ? void 0 : _log$error.message);\n        console.log((_log$error2 = log.error) === null || _log$error2 === void 0 ? void 0 : _log$error2.stack);\n        console.log(log.message.private);\n        console.log(log.message.public);\n        console.groupEnd();\n        break;\n      }\n\n    case LOG_TYPES.DEBUG:\n      {\n        console.group(\"DEBUG MSG\");\n        console.log(log.path);\n        console.log(log.message.private);\n        log.message.public && console.log(log.message.public);\n        console.groupEnd();\n        break;\n      }\n\n    default:\n      return;\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/logger/print.js"],"names":["ACTIONS","takeEvery","call","LOG_TYPES","environment","process","env","NODE_ENV","watchPushLog","action","LOG_PUSH","handler","log","DEBUG","ERROR","includes","type","print","console","group","path","error","message","stack","private","public","groupEnd"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,iBAAtB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,QAA8B,oBAA9B;AACA,SAAQC,SAAR,QAAwB,6BAAxB;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAhC;AAEA,eAAe,UAAUC,YAAV,CAAuBC,MAAvB,EAA8B;AACzC,MAAGL,WAAW,KAAK,aAAnB,EAAiC;AAC7B,UAAMH,SAAS,CAACD,OAAO,CAACU,QAAT,EAAmBC,OAAnB,CAAf;AACH;AACJ;;AAED,UAAUA,OAAV,CAAkBF,MAAlB,EAAyB;AACrB,QAAM;AAACG,IAAAA;AAAD,MAAQH,MAAd;;AAEA,MAAG,CAAC,CAACN,SAAS,CAACU,KAAX,EACCV,SAAS,CAACW,KADX,EACkBC,QADlB,CAC2BH,GAAG,CAACI,IAD/B,CAAJ,EAC0C;AACtC;AACH;;AACD,QAAMd,IAAI,CAACe,KAAD,EAAQL,GAAR,CAAV;AACH;;AAED,SAASK,KAAT,CAAeL,GAAf,EAAmB;AACf,UAAOA,GAAG,CAACI,IAAX;AACI,SAAKb,SAAS,CAACW,KAAf;AAAuB;AAAA;;AACnBI,QAAAA,OAAO,CAACC,KAAR,CAAc,OAAd;AACAD,QAAAA,OAAO,CAACN,GAAR,CAAYA,GAAG,CAACQ,IAAhB;AACAF,QAAAA,OAAO,CAACG,KAAR,eAAcT,GAAG,CAACS,KAAlB,+CAAc,WAAWC,OAAzB;AACAJ,QAAAA,OAAO,CAACN,GAAR,gBAAYA,GAAG,CAACS,KAAhB,gDAAY,YAAWE,KAAvB;AACAL,QAAAA,OAAO,CAACN,GAAR,CAAYA,GAAG,CAACU,OAAJ,CAAYE,OAAxB;AACAN,QAAAA,OAAO,CAACN,GAAR,CAAYA,GAAG,CAACU,OAAJ,CAAYG,MAAxB;AACAP,QAAAA,OAAO,CAACQ,QAAR;AACA;AACH;;AACD,SAAKvB,SAAS,CAACU,KAAf;AAAuB;AACnBK,QAAAA,OAAO,CAACC,KAAR,CAAc,WAAd;AACAD,QAAAA,OAAO,CAACN,GAAR,CAAYA,GAAG,CAACQ,IAAhB;AACAF,QAAAA,OAAO,CAACN,GAAR,CAAYA,GAAG,CAACU,OAAJ,CAAYE,OAAxB;AACCZ,QAAAA,GAAG,CAACU,OAAJ,CAAYG,MAAZ,IAAsBP,OAAO,CAACN,GAAR,CAAYA,GAAG,CAACU,OAAJ,CAAYG,MAAxB,CAAvB;AACAP,QAAAA,OAAO,CAACQ,QAAR;AACA;AACH;;AACD;AAAS;AAnBb;AAqBH","sourcesContent":["import {ACTIONS} from \"./../../actions\";\r\nimport {takeEvery, call} from \"redux-saga/effects\"\r\nimport {LOG_TYPES} from \"./../../utils/logger/logger\";\r\n\r\nconst environment = process.env.NODE_ENV; \r\n\r\nexport default function* watchPushLog(action){\r\n    if(environment === \"development\"){\r\n        yield takeEvery(ACTIONS.LOG_PUSH, handler)\r\n    }\r\n}\r\n\r\nfunction* handler(action){\r\n    const {log} = action;\r\n\r\n    if(![LOG_TYPES.DEBUG, \r\n         LOG_TYPES.ERROR].includes(log.type)) {\r\n        return;\r\n    }\r\n    yield call(print, log)\r\n}\r\n\r\nfunction print(log){\r\n    switch(log.type){\r\n        case LOG_TYPES.ERROR : {\r\n            console.group(\"ERROR\");\r\n            console.log(log.path);\r\n            console.error(log.error?.message);\r\n            console.log(log.error?.stack);\r\n            console.log(log.message.private);\r\n            console.log(log.message.public)\r\n            console.groupEnd();\r\n            break;\r\n        }\r\n        case LOG_TYPES.DEBUG : {\r\n            console.group(\"DEBUG MSG\");\r\n            console.log(log.path);\r\n            console.log(log.message.private);\r\n            (log.message.public && console.log(log.message.public))\r\n            console.groupEnd();\r\n            break;\r\n        }\r\n        default: return;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}