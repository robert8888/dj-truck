{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordList\\\\Record\\\\WaveSurrferPlayer\\\\WaveSurferPlayer.js\";\nimport React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport WaveSurfer from \"wavesurfer\";\nimport style from \"./wave-surfer-player.scss\";\nimport useWindowSize from \"../../../../Hooks/useWindowSize\";\nimport debounce from \"lodash/debounce\";\n\nconst WaveSurferPlayer = ({\n  item: {\n    peaks,\n    id,\n    duration\n  },\n  seek,\n  player\n}) => {\n  const [container, setContainerRef] = useState(null);\n  const [ws, setWs] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n  const [windowWidth, _] = useWindowSize();\n  const onContainerRef = useCallback(ref => {\n    setContainerRef(ref);\n  }, [setContainerRef]);\n  const drawPeaks = useCallback((container, peaks, ws) => {\n    if (!container || !peaks || !ws) {\n      return;\n    }\n\n    console.log(container);\n    let width = container === null || container === void 0 ? void 0 : container.getBoundingClientRect().width;\n    const start = 0;\n    const end = peaks.length / 2;\n\n    if (window.devicePixelRatio) {\n      width *= window.devicePixelRatio;\n    }\n\n    ws.drawer.drawPeaks(peaks, width, start, end);\n    setLoaded(true);\n  }, [setLoaded]);\n  useEffect(() => {\n    if (container && !loaded) {\n      const ws = new Promise((res, rej) => {\n        try {\n          const ws = WaveSurfer.create({\n            container: container,\n            barWidth: 2,\n            height: 100,\n            waveColor: style.waveColor,\n            progressColor: style.progressColor,\n            barMinHeight: 0,\n            hideScrollbar: true\n          });\n          res(ws);\n        } catch (err) {\n          rej(err);\n        }\n      });\n      ws.then(ws => {\n        setWs(ws);\n        return ws;\n      });\n      ws.then(ws => {\n        if (peaks) {\n          // let width = container?.getBoundingClientRect().width;\n          // const start = 0;\n          // const end = peaks.length / 2;\n          // if (window.devicePixelRatio) {\n          //     width *= window.devicePixelRatio;\n          // }\n          // ws.drawer.drawPeaks(peaks, width, start, end);\n          // setLoaded(true)\n          drawPeaks(container, peaks, ws);\n        }\n\n        if (seek) {\n          ws.on('seek', progress => {\n            seek({\n              id,\n              progress,\n              duration\n            });\n            ws.drawer.progress(progress);\n          });\n        }\n      });\n    }\n  }, [container, peaks, setWs]);\n  useEffect(() => {\n    if (ws && progress) {\n      ws.drawer.progress(progress);\n    }\n  }, [ws, progress]);\n  const getProgressData = useCallback(() => {\n    return {\n      duration,\n      progress\n    };\n  }, [duration, progress]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.subscribeProgress(id, setProgress);\n    player.addProgressProvider(id, getProgressData);\n    return () => {\n      player.unSubscribeProgress(id);\n      player.removeProgressProvider(id);\n    };\n  }, [player, getProgressData]);\n  const debouncedUpdate = useMemo(() => {\n    return debounce(drawPeaks.bind(null, ws, peaks, container), 500);\n  }, [ws, peaks, container]);\n  useEffect(() => {\n    if (loaded) {\n      debouncedUpdate();\n    }\n  }, [windowWidth, loaded]);\n  return React.createElement(\"div\", {\n    key: \"ws\" + id,\n    className: \"ws-player-container\",\n    ref: onContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  });\n};\n\nexport default WaveSurferPlayer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordList/Record/WaveSurrferPlayer/WaveSurferPlayer.js"],"names":["React","useEffect","useState","useCallback","useMemo","WaveSurfer","style","useWindowSize","debounce","WaveSurferPlayer","item","peaks","id","duration","seek","player","container","setContainerRef","ws","setWs","progress","setProgress","loaded","setLoaded","windowWidth","_","onContainerRef","ref","drawPeaks","console","log","width","getBoundingClientRect","start","end","length","window","devicePixelRatio","drawer","Promise","res","rej","create","barWidth","height","waveColor","progressColor","barMinHeight","hideScrollbar","err","then","on","getProgressData","subscribeProgress","addProgressProvider","unSubscribeProgress","removeProgressProvider","debouncedUpdate","bind"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback, useMemo } from \"react\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport style from \"./wave-surfer-player.scss\";\r\nimport useWindowSize from \"../../../../Hooks/useWindowSize\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst WaveSurferPlayer = ({ item: { peaks, id, duration },  seek , player }) => {\r\n    const [container, setContainerRef] = useState(null);\r\n    const [ws, setWs] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [windowWidth, _] = useWindowSize()\r\n\r\n    const onContainerRef = useCallback((ref) => {\r\n        setContainerRef(ref);\r\n    }, [setContainerRef])\r\n\r\n    const drawPeaks = useCallback((container, peaks, ws) => {\r\n        if(!container || !peaks || !ws ){\r\n            return;\r\n        }\r\n        console.log(container)\r\n        let width = container?.getBoundingClientRect().width;\r\n        const start = 0;\r\n        const end = peaks.length / 2;\r\n        if (window.devicePixelRatio) {\r\n            width *= window.devicePixelRatio;\r\n        }\r\n        ws.drawer.drawPeaks(peaks, width, start, end);\r\n        setLoaded(true)\r\n    }, [setLoaded])\r\n\r\n    useEffect(() => {\r\n        if (container && !loaded) {\r\n            const ws = new Promise((res, rej) => {\r\n                try {\r\n                    const ws = WaveSurfer.create({\r\n                        container: container,\r\n                        barWidth: 2,\r\n                        height: 100,\r\n                        waveColor: style.waveColor,\r\n                        progressColor: style.progressColor,\r\n                        barMinHeight: 0,\r\n                        hideScrollbar: true,\r\n                    })\r\n                    res(ws)\r\n                } catch (err) {\r\n                    rej(err)\r\n                }\r\n            })\r\n            ws.then(ws => {\r\n                setWs(ws);\r\n                return ws;\r\n            })\r\n\r\n            ws.then((ws) => {\r\n                if (peaks) {\r\n                    // let width = container?.getBoundingClientRect().width;\r\n                    // const start = 0;\r\n                    // const end = peaks.length / 2;\r\n                    // if (window.devicePixelRatio) {\r\n                    //     width *= window.devicePixelRatio;\r\n                    // }\r\n                    // ws.drawer.drawPeaks(peaks, width, start, end);\r\n                    // setLoaded(true)\r\n                    drawPeaks(container, peaks, ws);\r\n                }\r\n                if (seek) {\r\n                    ws.on('seek', (progress) => {\r\n                        seek({\r\n                            id,\r\n                            progress,\r\n                            duration,\r\n                        })\r\n                        ws.drawer.progress(progress);\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [container, peaks, setWs])\r\n\r\n    useEffect(() => {\r\n        if (ws && progress) {\r\n            ws.drawer.progress(progress);\r\n        }\r\n    }, [ws, progress])\r\n\r\n    const getProgressData = useCallback(() => {\r\n        return {\r\n            duration,\r\n            progress,\r\n        }\r\n    }, [duration, progress])\r\n\r\n    useEffect(() => {\r\n        if (!player) {\r\n            return;\r\n        }\r\n        player.subscribeProgress(id, setProgress);\r\n        player.addProgressProvider(id, getProgressData);\r\n        return () => {\r\n            player.unSubscribeProgress(id);\r\n            player.removeProgressProvider(id);\r\n        }\r\n    }, [player, getProgressData])\r\n\r\n\r\n    const debouncedUpdate = useMemo(()=>{\r\n        return debounce(drawPeaks.bind(null, ws, peaks, container), 500)\r\n    }, [ws, peaks , container])\r\n\r\n    useEffect(()=>{\r\n        if(loaded){\r\n            debouncedUpdate();\r\n        }\r\n    }, [windowWidth, loaded])\r\n\r\n    return (\r\n        <div key={\"ws\" + id} className=\"ws-player-container\" ref={onContainerRef} />\r\n    )\r\n}\r\n\r\nexport default WaveSurferPlayer"]},"metadata":{},"sourceType":"module"}