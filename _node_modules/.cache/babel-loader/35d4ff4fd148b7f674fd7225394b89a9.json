{"ast":null,"code":"import { deleteTrack, ACTIONS } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport { showLoading, hideLoading } from 'react-redux-loading-bar';\nexport default function* deleteSelectedRequestSaga() {\n  yield takeEvery(ACTIONS.PL_DELETE_TRACK_REQUEST, handel);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* handel(action) {\n  const {\n    callQuery,\n    queries\n  } = getApi(\"UserAssets\");\n  const token = yield select(getToken);\n\n  if (!token) {\n    return yield put(deleteTrack(action.index));\n  }\n\n  try {\n    yield put(showLoading());\n    let res = yield callQuery(queries.deleteQl.deleteTrack(action.id), token);\n\n    if (!res.errors && res.data.deleteTrack) {\n      yield put(deleteTrack(action.index));\n    }\n  } catch (err) {\n    console.log(\"can't delete track in database, problem with api call\");\n    console.log(err.message);\n  } finally {\n    yield put(hideLoading());\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/deleteTrackRequestSaga.js"],"names":["deleteTrack","ACTIONS","takeEvery","select","put","getApi","showLoading","hideLoading","deleteSelectedRequestSaga","PL_DELETE_TRACK_REQUEST","handel","getToken","state","user","token","action","callQuery","queries","index","res","deleteQl","id","errors","data","err","console","log","message"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,eAArC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;AAGA,eAAe,UAAUC,yBAAV,GAAsC;AACjD,QAAMN,SAAS,CAACD,OAAO,CAACQ,uBAAT,EAAkCC,MAAlC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUJ,MAAV,CAAiBK,MAAjB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBZ,MAAM,CAAC,YAAD,CAArC;AACA,QAAMS,KAAK,GAAG,MAAMX,MAAM,CAACQ,QAAD,CAA1B;;AACA,MAAI,CAACG,KAAL,EAAY;AACR,WAAO,MAAMV,GAAG,CAACJ,WAAW,CAACe,MAAM,CAACG,KAAR,CAAZ,CAAhB;AACH;;AACD,MAAI;AACA,UAAMd,GAAG,CAACE,WAAW,EAAZ,CAAT;AACA,QAAIa,GAAG,GAAG,MAAMH,SAAS,CAACC,OAAO,CAACG,QAAR,CAAiBpB,WAAjB,CAA6Be,MAAM,CAACM,EAApC,CAAD,EAA0CP,KAA1C,CAAzB;;AACA,QAAI,CAACK,GAAG,CAACG,MAAL,IAAeH,GAAG,CAACI,IAAJ,CAASvB,WAA5B,EAAyC;AACrC,YAAMI,GAAG,CAACJ,WAAW,CAACe,MAAM,CAACG,KAAR,CAAZ,CAAT;AACH;AAEJ,GAPD,CAOE,OAAOM,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH,GAVD,SAUU;AACN,UAAMvB,GAAG,CAACG,WAAW,EAAZ,CAAT;AACH;AACJ","sourcesContent":["import { deleteTrack, ACTIONS } from \"../../actions\";\r\nimport { takeEvery, select, put } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\r\n\r\n\r\nexport default function* deleteSelectedRequestSaga() {\r\n    yield takeEvery(ACTIONS.PL_DELETE_TRACK_REQUEST, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nfunction* handel(action) {\r\n    const { callQuery, queries } = getApi(\"UserAssets\");\r\n    const token = yield select(getToken);\r\n    if (!token) {\r\n        return yield put(deleteTrack(action.index));\r\n    }\r\n    try {\r\n        yield put(showLoading());\r\n        let res = yield callQuery(queries.deleteQl.deleteTrack(action.id), token);\r\n        if (!res.errors && res.data.deleteTrack) {\r\n            yield put(deleteTrack(action.index));\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(\"can't delete track in database, problem with api call\");\r\n        console.log(err.message);\r\n    } finally {\r\n        yield put(hideLoading())\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}