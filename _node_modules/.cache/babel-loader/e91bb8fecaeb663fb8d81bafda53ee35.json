{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\console\\\\components\\\\Console\\\\Mixer\\\\componets\\\\RecordTime\\\\RecordTime.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { formater as timeFormater } from \"./../../../../../../../utils/time/timeFromater\";\nimport classNames from \"classnames\";\nimport \"./record-time.scss\";\n\nconst RecordTime = props => {\n  const [time, setTime] = useState(0);\n  const [timerInterval, setIntervalHandler] = useState(null);\n  useEffect(() => {\n    if (props.runing && !timerInterval) {\n      setIntervalHandler(setInterval(() => {\n        setTime(time => ++time);\n      }, 1000));\n    } else if (!props.runing && timerInterval) {\n      clearInterval(timerInterval);\n      setIntervalHandler(null);\n    }\n  }, [props.runing, setTime, setIntervalHandler, timerInterval]);\n  const clearHandler = useCallback(() => {\n    setTime(0);\n  }, [setTime]);\n  useEffect(() => {\n    if (props.clearHandler instanceof Function) {\n      props.clearHandler(clearHandler);\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"record-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, timeFormater.secondsToStr(time)));\n};\n\nexport default RecordTime;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Mixer/componets/RecordTime/RecordTime.js"],"names":["React","useState","useEffect","useCallback","formater","timeFormater","classNames","RecordTime","props","time","setTime","timerInterval","setIntervalHandler","runing","setInterval","clearInterval","clearHandler","Function","secondsToStr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAAQC,QAAQ,IAAIC,YAApB,QAAuC,gDAAvC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,oBAAP;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACU,aAAD,EAAgBC,kBAAhB,IAAsCX,QAAQ,CAAC,IAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGM,KAAK,CAACK,MAAN,IAAgB,CAACF,aAApB,EAAkC;AAC9BC,MAAAA,kBAAkB,CAACE,WAAW,CAAC,MAAI;AAC/BJ,QAAAA,OAAO,CAACD,IAAI,IAAI,EAAEA,IAAX,CAAP;AACH,OAF6B,EAE3B,IAF2B,CAAZ,CAAlB;AAGH,KAJD,MAIO,IAAG,CAACD,KAAK,CAACK,MAAP,IAAiBF,aAApB,EAAmC;AACtCI,MAAAA,aAAa,CAACJ,aAAD,CAAb;AACAC,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;AAEJ,GAVQ,EAUP,CAAEJ,KAAK,CAACK,MAAR,EACEH,OADF,EAEEE,kBAFF,EAGED,aAHF,CAVO,CAAT;AAgBA,QAAMK,YAAY,GAAGb,WAAW,CAAC,MAAI;AACjCO,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAF+B,EAE7B,CAACA,OAAD,CAF6B,CAAhC;AAIAR,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGM,KAAK,CAACQ,YAAN,YAA8BC,QAAjC,EAA0C;AACtCT,MAAAA,KAAK,CAACQ,YAAN,CAAmBA,YAAnB;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQX,YAAY,CAACa,YAAb,CAA0BT,IAA1B,CAAR,CADJ,CADJ;AAKH,CAnCD;;AAqCA,eAAeF,UAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {formater as timeFormater }from \"./../../../../../../../utils/time/timeFromater\";\r\nimport classNames from \"classnames\";\r\nimport \"./record-time.scss\"\r\n\r\nconst RecordTime = props => {\r\n    const [time, setTime] = useState(0);\r\n    const [timerInterval, setIntervalHandler] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(props.runing && !timerInterval){\r\n            setIntervalHandler(setInterval(()=>{\r\n                setTime(time => ++time);\r\n            }, 1000))\r\n        } else if(!props.runing && timerInterval) {\r\n            clearInterval(timerInterval);\r\n            setIntervalHandler(null);\r\n        }\r\n\r\n    },[ props.runing, \r\n        setTime, \r\n        setIntervalHandler,\r\n        timerInterval\r\n    ])\r\n\r\n    const clearHandler = useCallback(()=>{\r\n        setTime(0)\r\n    }, [setTime])\r\n\r\n    useEffect(()=>{\r\n        if(props.clearHandler instanceof Function){\r\n            props.clearHandler(clearHandler)\r\n        }\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"record-time\">\r\n            <span>{ timeFormater.secondsToStr(time) }</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecordTime;"]},"metadata":{},"sourceType":"module"}