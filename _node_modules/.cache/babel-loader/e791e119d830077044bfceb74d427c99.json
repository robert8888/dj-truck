{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\common\\\\Knob\\\\Knob.js\";\n// Spec \n// witout any option Knob is standard with value from 0 to 100 and on inti value is 0\n// -initValue:number allow to set init value\n// -showValue props allows to display numeric value on knob\n// -diplayFormula : a callbac function with will be used to show value on knob\n// -scale:number allow to scale value eg. 10 give range from 0 to 10 \n// -symetric:boolean if this props is present knob havse valeu from -100 to 100 * scale \n// -unsymetric:{negative:number, positive:number} allows to set unsymetric range value : \n//  {positive : 5 } means that values bigger than 0 are divided by 5 range is from -100 to 20 * scale\n// -quantize:number switch knob to quantize mode in witch returned values are quantize to parametr \n//       eg: 2 returns value 100, 98 , 96 ... quantize:0.05 returns values 100, 99.95.... \n// -qunatize:{negative:number, positive:number} allows to set diffrent qunatizes for negative and positives values.\n// -responseFactor if is present adjust knob response on a mouse move // default= 1 eg responseFactor 2 will increase response two times\n// -alt if is present when mouse is over and knob is not draggin it will display alt value \nimport React from \"react\";\nimport style from \"./knob.scss\";\n\nclass Knob extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: 0,\n      position: 0,\n      // form 0 to 100\n      snapShotPostion: 0,\n      //\n      rightArm: 90,\n      // form -60 to 90 - this is midle\n      leftArm: 90,\n      // from 90 to 240 \n      dotAngle: 0,\n      reversArm: false,\n      //for not symetri linera gradient swap\n      idDragged: false,\n      isMouseOver: false,\n      isActive: false\n    };\n  }\n\n  snap() {\n    this.setState({ ...this.state,\n      snapShotPostion: this.state.position\n    });\n  }\n\n  normalizePostion(position) {\n    if (this.props.symetric || this.props.unsymetric) {\n      return Math.min(Math.max(position, -100), 100);\n    }\n\n    return Math.min(Math.max(position, 0), 100);\n  }\n\n  quantizePosition(position) {\n    if (!this.props.quantize) return position; // value is quantaized \n\n    return this.valueToPosition(this.evalValue(position));\n  }\n\n  static staticValueToPostion(that, value) {\n    let position = value;\n\n    if (that.props.scale) {\n      position = value * 100 / that.props.scale;\n    }\n\n    if (that.props.unsymetric) {\n      if (that.props.unsymetric.positive && value > 0) {\n        let scale = that.props.unsymetric.positive;\n        position = position * scale;\n      }\n\n      if (this.props.unsymetric.negative && value < 0) {\n        let scale = that.props.unsymetric.negative;\n        position = position * scale;\n      }\n    }\n\n    return position;\n  }\n\n  valueToPosition(value) {\n    Knob.staticValueToPostion(this, value);\n  }\n\n  evalValue(position) {\n    let value = position;\n\n    if (this.props.scale) {\n      value = this.props.scale * position / 100;\n    }\n\n    if (this.props.unsymetric) {\n      if (this.props.unsymetric.positive && position > 0) {\n        let scale = this.props.unsymetric.positive;\n        value = value / scale;\n      }\n\n      if (this.props.unsymetric.negative && position < 0) {\n        let scale = this.props.unsymetric.negative;\n        value = value / scale;\n      }\n    }\n\n    if (this.props.quantize) {\n      let factor;\n\n      if (typeof this.props.quantize === \"object\") {\n        if (this.props.quantize.positive && value >= 0) {\n          factor = this.props.quantize.positive;\n        }\n\n        if (this.props.quantize.negative && value < 0) {\n          factor = this.props.quantize.negative;\n        }\n      } else if (typeof this.props.quantize === \"number\") {\n        factor = this.props.quantize;\n      }\n\n      const rest = value % factor;\n      value = value - rest;\n    } //rounding \n\n\n    return Math.floor(value * 1000000) / 1000000;\n  }\n\n  setPostion(position) {\n    position = this.normalizePostion(position);\n    const value = this.evalValue(position);\n    this.setState({ ...this.state,\n      position,\n      value\n    }, () => {\n      this.mapPostionToArms(this.state.position);\n    });\n    this.props.onChange && this.props.onChange(this.state.value);\n  }\n\n  mapPostionToArms(position) {\n    let rightArm, leftArm, dotAngle;\n    let reversArm = false;\n    position = this.quantizePosition(position);\n\n    if (this.props.symetric || this.props.unsymetric) {\n      rightArm = 88;\n      leftArm = 92;\n      dotAngle = position * 1.4;\n\n      if (position < -2) {\n        rightArm = 90 - Math.abs(position) * 1.5;\n        leftArm = 90;\n      } else if (position > 2) {\n        rightArm = 90;\n        leftArm = 90 + position * 1.5;\n      }\n    } else {\n      rightArm = -60;\n      leftArm = -60;\n      dotAngle = -150 + position * 2.95;\n      leftArm += position * 3;\n\n      if (position > 60) {\n        reversArm = true;\n        leftArm = -240 + (position - 60) * 3;\n        rightArm = -240;\n      }\n    }\n\n    this.setState({ ...this.state,\n      rightArm,\n      leftArm,\n      dotAngle,\n      reversArm\n    });\n  } // -------------- events below\n\n\n  mouseDown(event) {\n    const startY = event.clientY;\n    let mouseMove = this.mouseMove.bind(this, startY);\n    this.snap();\n\n    const removeListener = () => {\n      document.body.removeEventListener('mousemove', mouseMove);\n      document.body.removeEventListener('mouseup', removeListener);\n      document.body.removeEventListener('mouseleave', removeListener);\n      this.setState({ ...this.setState,\n        isDragged: false\n      }, () => {\n        if (!this.state.isDragged && !this.state.isMouseOver) {\n          this.setState({ ...this.state,\n            isActive: false\n          });\n        }\n      });\n    };\n\n    document.body.addEventListener('mousemove', mouseMove);\n    document.body.addEventListener('mouseup', removeListener);\n    document.body.addEventListener('mouseleave', removeListener);\n    this.setState({ ...this.setState,\n      isDragged: true,\n      isActive: true\n    });\n  }\n\n  mouseMove(startY, event) {\n    event.stopPropagation();\n    let responsFactor = this.props.responsFactor || 1;\n    let position = this.state.snapShotPostion - (event.clientY - startY) * responsFactor;\n    this.setPostion(position);\n  }\n\n  mouseEnter() {\n    this.setState({ ...this.setState,\n      isMouseOver: true\n    }, () => {\n      if (this.state.isDragged || this.state.isMouseOver) {\n        this.setState({ ...this.state,\n          isActive: true\n        });\n      }\n    });\n  }\n\n  mouseLeve() {\n    this.setState({ ...this.setState,\n      isMouseOver: false\n    }, () => {\n      if (!this.state.isDragged && !this.state.isMouseOver) {\n        this.setState({ ...this.state,\n          isActive: false\n        });\n      }\n    });\n  }\n\n  mouseDoubelClick() {\n    if (this.props.dobuleClickInit) {\n      const value = this.props.initValue || 0;\n      const position = this.valueToPosition(value);\n      this.setPostion(position);\n    }\n  } //----------------compontent metod\n\n\n  componentDidMount() {\n    let position = this.state.position;\n\n    if (this.props.initValue) {\n      position = this.valueToPosition(this.props.initValue);\n    }\n\n    this.setState({ ...this.state,\n      position: position\n    }, () => {\n      this.mapPostionToArms(position);\n    });\n  }\n\n  render() {\n    let value = \"\";\n\n    if (this.state.isMouseOver && !this.state.isDragged && this.props.alt) {\n      value = this.props.alt.substr(0, 4).toUpperCase();\n    } else {\n      if (this.props.showValue) {\n        value = this.evalValue(this.state.position);\n      }\n\n      if (this.props.displayFormula) {\n        value = this.props.displayFormula(value);\n      }\n    }\n\n    value = value.toString().substr(0, 6);\n    return React.createElement(\"div\", {\n      className: \"knob \" + this.props.className,\n      onMouseDown: this.mouseDown.bind(this),\n      onDragStart: e => e.preventDefault(),\n      onDoubleClick: this.mouseDoubelClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"knob-big-circle\",\n      style: {\n        backgroundImage: `linear-gradient(` + (180 + this.state.leftArm) + `deg, ` + style.primaryDark + ` 50%, transparent 50%),\n                                       linear-gradient(` + (180 + this.state.rightArm) + `deg, transparent 50%, ` + style.primaryDark + ` 50%)`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"half-circle half-right\",\n      style: {\n        transform: `rotate(` + this.state.leftArm + `deg)`\n      },\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"half-circle half-left \" + (this.state.reversArm ? \"half--reverse\" : \"\"),\n      style: {\n        transform: `rotate(` + this.state.rightArm + `deg)`\n      },\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), this.props.showValue && React.createElement(\"div\", {\n      className: \"knob-value \" + (this.state.isActive || this.props.showValue === \"always\" ? \"knob--focus\" : \"\"),\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, value)), React.createElement(\"div\", {\n      className: \"knob-small-circle \" + (this.state.isActive ? \"small-circle--focus\" : \"\"),\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"knob-dot\",\n      style: {\n        transform: 'rotate(' + this.state.dotAngle + 'deg)'\n      },\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Knob;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/common/Knob/Knob.js"],"names":["React","style","Knob","Component","state","value","position","snapShotPostion","rightArm","leftArm","dotAngle","reversArm","idDragged","isMouseOver","isActive","snap","setState","normalizePostion","props","symetric","unsymetric","Math","min","max","quantizePosition","quantize","valueToPosition","evalValue","staticValueToPostion","that","scale","positive","negative","factor","rest","floor","setPostion","mapPostionToArms","onChange","abs","mouseDown","event","startY","clientY","mouseMove","bind","removeListener","document","body","removeEventListener","isDragged","addEventListener","stopPropagation","responsFactor","mouseEnter","mouseLeve","mouseDoubelClick","dobuleClickInit","initValue","componentDidMount","render","alt","substr","toUpperCase","showValue","displayFormula","toString","className","e","preventDefault","backgroundImage","primaryDark","transform"],"mappings":";AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAGA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,QAAQ,EAAE,CAFN;AAES;AACbC,MAAAA,eAAe,EAAE,CAHb;AAGe;AAEnBC,MAAAA,QAAQ,EAAE,EALN;AAKU;AACdC,MAAAA,OAAO,EAAE,EANL;AAMS;AACbC,MAAAA,QAAQ,EAAE,CAPN;AAQJC,MAAAA,SAAS,EAAE,KARP;AAQa;AAEjBC,MAAAA,SAAS,EAAE,KAVP;AAWJC,MAAAA,WAAW,EAAE,KAXT;AAYJC,MAAAA,QAAQ,EAAE;AAZN,KAFsB;AAAA;;AAiB9BC,EAAAA,IAAI,GAAE;AACF,SAAKC,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAgBG,MAAAA,eAAe,EAAE,KAAKH,KAAL,CAAWE;AAA5C,KAAd;AACH;;AAEDW,EAAAA,gBAAgB,CAACX,QAAD,EAAU;AACtB,QAAG,KAAKY,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWE,UAArC,EAAgD;AAC5C,aAAOC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASjB,QAAT,EAAmB,CAAC,GAApB,CAAT,EAAmC,GAAnC,CAAP;AACH;;AACD,WAAOe,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASjB,QAAT,EAAmB,CAAnB,CAAT,EAAgC,GAAhC,CAAP;AACH;;AAEDkB,EAAAA,gBAAgB,CAAClB,QAAD,EAAU;AACtB,QAAG,CAAC,KAAKY,KAAL,CAAWO,QAAf,EACI,OAAOnB,QAAP,CAFkB,CAIrB;;AACA,WAAO,KAAKoB,eAAL,CAAqB,KAAKC,SAAL,CAAerB,QAAf,CAArB,CAAP;AAEJ;;AAED,SAAOsB,oBAAP,CAA4BC,IAA5B,EAAkCxB,KAAlC,EAAwC;AACpC,QAAIC,QAAQ,GAAGD,KAAf;;AACA,QAAGwB,IAAI,CAACX,KAAL,CAAWY,KAAd,EAAoB;AAChBxB,MAAAA,QAAQ,GAAGD,KAAK,GAAG,GAAR,GAAcwB,IAAI,CAACX,KAAL,CAAWY,KAApC;AACH;;AAGD,QAAGD,IAAI,CAACX,KAAL,CAAWE,UAAd,EAAyB;AACrB,UAAGS,IAAI,CAACX,KAAL,CAAWE,UAAX,CAAsBW,QAAtB,IAAkC1B,KAAK,GAAG,CAA7C,EAAgD;AAC5C,YAAIyB,KAAK,GAAGD,IAAI,CAACX,KAAL,CAAWE,UAAX,CAAsBW,QAAlC;AACAzB,QAAAA,QAAQ,GAAGA,QAAQ,GAAGwB,KAAtB;AACH;;AACD,UAAG,KAAKZ,KAAL,CAAWE,UAAX,CAAsBY,QAAtB,IAAmC3B,KAAK,GAAG,CAA9C,EAAgD;AAC5C,YAAIyB,KAAK,GAAGD,IAAI,CAACX,KAAL,CAAWE,UAAX,CAAsBY,QAAlC;AACA1B,QAAAA,QAAQ,GAAGA,QAAQ,GAAGwB,KAAtB;AACH;AACJ;;AACD,WAAOxB,QAAP;AACH;;AAEDoB,EAAAA,eAAe,CAACrB,KAAD,EAAO;AAClBH,IAAAA,IAAI,CAAC0B,oBAAL,CAA0B,IAA1B,EAA+BvB,KAA/B;AACH;;AAEDsB,EAAAA,SAAS,CAACrB,QAAD,EAAU;AACf,QAAID,KAAK,GAAGC,QAAZ;;AAEA,QAAG,KAAKY,KAAL,CAAWY,KAAd,EAAoB;AAChBzB,MAAAA,KAAK,GAAG,KAAKa,KAAL,CAAWY,KAAX,GAAmBxB,QAAnB,GAA8B,GAAtC;AACH;;AAED,QAAG,KAAKY,KAAL,CAAWE,UAAd,EAAyB;AACrB,UAAG,KAAKF,KAAL,CAAWE,UAAX,CAAsBW,QAAtB,IAAkCzB,QAAQ,GAAG,CAAhD,EAAmD;AAC/C,YAAIwB,KAAK,GAAG,KAAKZ,KAAL,CAAWE,UAAX,CAAsBW,QAAlC;AACA1B,QAAAA,KAAK,GAAGA,KAAK,GAAGyB,KAAhB;AACH;;AACD,UAAG,KAAKZ,KAAL,CAAWE,UAAX,CAAsBY,QAAtB,IAAkC1B,QAAQ,GAAG,CAAhD,EAAkD;AAC9C,YAAIwB,KAAK,GAAG,KAAKZ,KAAL,CAAWE,UAAX,CAAsBY,QAAlC;AACA3B,QAAAA,KAAK,GAAGA,KAAK,GAAGyB,KAAhB;AACH;AACJ;;AAED,QAAG,KAAKZ,KAAL,CAAWO,QAAd,EAAuB;AACnB,UAAIQ,MAAJ;;AACA,UAAG,OAAO,KAAKf,KAAL,CAAWO,QAAlB,KAA+B,QAAlC,EAA2C;AACvC,YAAG,KAAKP,KAAL,CAAWO,QAAX,CAAoBM,QAApB,IAAgC1B,KAAK,IAAI,CAA5C,EAA+C;AAC3C4B,UAAAA,MAAM,GAAG,KAAKf,KAAL,CAAWO,QAAX,CAAoBM,QAA7B;AACH;;AAAC,YAAG,KAAKb,KAAL,CAAWO,QAAX,CAAoBO,QAApB,IAAgC3B,KAAK,GAAG,CAA3C,EAA6C;AAC3C4B,UAAAA,MAAM,GAAG,KAAKf,KAAL,CAAWO,QAAX,CAAoBO,QAA7B;AACH;AACJ,OAND,MAMO,IAAI,OAAO,KAAKd,KAAL,CAAWO,QAAlB,KAA+B,QAAnC,EAA6C;AAChDQ,QAAAA,MAAM,GAAG,KAAKf,KAAL,CAAWO,QAApB;AACH;;AAED,YAAMS,IAAI,GAAG7B,KAAK,GAAG4B,MAArB;AACA5B,MAAAA,KAAK,GAAGA,KAAK,GAAG6B,IAAhB;AACH,KAhCc,CAkCf;;;AACA,WAAOb,IAAI,CAACc,KAAL,CAAW9B,KAAK,GAAG,OAAnB,IAA8B,OAArC;AACH;;AAED+B,EAAAA,UAAU,CAAC9B,QAAD,EAAU;AAChBA,IAAAA,QAAQ,GAAI,KAAKW,gBAAL,CAAsBX,QAAtB,CAAZ;AACA,UAAMD,KAAK,GAAG,KAAKsB,SAAL,CAAerB,QAAf,CAAd;AAEA,SAAKU,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAgBE,MAAAA,QAAhB;AAA0BD,MAAAA;AAA1B,KAAd,EAAgD,MAAI;AAChD,WAAKgC,gBAAL,CAAsB,KAAKjC,KAAL,CAAWE,QAAjC;AACH,KAFD;AAIC,SAAKY,KAAL,CAAWoB,QAAX,IAAuB,KAAKpB,KAAL,CAAWoB,QAAX,CAAoB,KAAKlC,KAAL,CAAWC,KAA/B,CAAxB;AACH;;AAGDgC,EAAAA,gBAAgB,CAAC/B,QAAD,EAAU;AACtB,QAAIE,QAAJ,EAAcC,OAAd,EAAuBC,QAAvB;AACA,QAAIC,SAAS,GAAG,KAAhB;AACAL,IAAAA,QAAQ,GAAG,KAAKkB,gBAAL,CAAsBlB,QAAtB,CAAX;;AAEA,QAAG,KAAKY,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWE,UAArC,EAAgD;AAC5CZ,MAAAA,QAAQ,GAAG,EAAX;AACAC,MAAAA,OAAO,GAAG,EAAV;AACAC,MAAAA,QAAQ,GAAGJ,QAAQ,GAAI,GAAvB;;AAEA,UAAGA,QAAQ,GAAG,CAAC,CAAf,EAAmB;AACfE,QAAAA,QAAQ,GAAG,KAAKa,IAAI,CAACkB,GAAL,CAASjC,QAAT,IAAqB,GAArC;AACAG,QAAAA,OAAO,GAAG,EAAV;AACH,OAHD,MAGO,IAAGH,QAAQ,GAAG,CAAd,EAAiB;AACpBE,QAAAA,QAAQ,GAAG,EAAX;AACAC,QAAAA,OAAO,GAAG,KAAKH,QAAQ,GAAG,GAA1B;AACH;AACJ,KAZD,MAYO;AACHE,MAAAA,QAAQ,GAAG,CAAC,EAAZ;AACAC,MAAAA,OAAO,GAAG,CAAC,EAAX;AACAC,MAAAA,QAAQ,GAAG,CAAC,GAAD,GAAOJ,QAAQ,GAAG,IAA7B;AACAG,MAAAA,OAAO,IAAIH,QAAQ,GAAG,CAAtB;;AACA,UAAGA,QAAQ,GAAG,EAAd,EAAkB;AACdK,QAAAA,SAAS,GAAG,IAAZ;AACAF,QAAAA,OAAO,GAAI,CAAC,GAAD,GAAO,CAACH,QAAQ,GAAG,EAAZ,IAAkB,CAApC;AACAE,QAAAA,QAAQ,GAAI,CAAC,GAAb;AACH;AAEJ;;AAED,SAAKQ,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAgBI,MAAAA,QAAhB;AAA0BC,MAAAA,OAA1B;AAAmCC,MAAAA,QAAnC;AAA6CC,MAAAA;AAA7C,KAAd;AACH,GA9I6B,CAgJ9B;;;AAEA6B,EAAAA,SAAS,CAACC,KAAD,EAAO;AACZ,UAAMC,MAAM,GAAGD,KAAK,CAACE,OAArB;AACA,QAAIC,SAAS,GAAG,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,EAA0BH,MAA1B,CAAhB;AACA,SAAK3B,IAAL;;AAEA,UAAM+B,cAAc,GAAG,MAAK;AACxBC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,mBAAd,CAAkC,WAAlC,EAA+CL,SAA/C;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAcC,mBAAd,CAAkC,SAAlC,EAA6CH,cAA7C;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,mBAAd,CAAkC,YAAlC,EAAgDH,cAAhD;AACA,WAAK9B,QAAL,CAAc,EAAC,GAAG,KAAKA,QAAT;AAAmBkC,QAAAA,SAAS,EAAE;AAA9B,OAAd,EAAoD,MAAI;AACpD,YAAG,CAAC,KAAK9C,KAAL,CAAW8C,SAAZ,IAA0B,CAAC,KAAK9C,KAAL,CAAWS,WAAzC,EAAqD;AACjD,eAAKG,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAgBU,YAAAA,QAAQ,EAAE;AAA1B,WAAd;AACH;AACJ,OAJD;AAMH,KAVD;;AAYAiC,IAAAA,QAAQ,CAACC,IAAT,CAAcG,gBAAd,CAA+B,WAA/B,EAA4CP,SAA5C;AACAG,IAAAA,QAAQ,CAACC,IAAT,CAAcG,gBAAd,CAA+B,SAA/B,EAA0CL,cAA1C;AACAC,IAAAA,QAAQ,CAACC,IAAT,CAAcG,gBAAd,CAA+B,YAA/B,EAA6CL,cAA7C;AACA,SAAK9B,QAAL,CAAc,EAAC,GAAG,KAAKA,QAAT;AAAmBkC,MAAAA,SAAS,EAAE,IAA9B;AAAoCpC,MAAAA,QAAQ,EAAC;AAA7C,KAAd;AACH;;AAED8B,EAAAA,SAAS,CAACF,MAAD,EAASD,KAAT,EAAe;AACpBA,IAAAA,KAAK,CAACW,eAAN;AACA,QAAIC,aAAa,GAAG,KAAKnC,KAAL,CAAWmC,aAAX,IAA4B,CAAhD;AACA,QAAI/C,QAAQ,GAAG,KAAKF,KAAL,CAAWG,eAAX,GAA6B,CAACkC,KAAK,CAACE,OAAN,GAAiBD,MAAlB,IAA4BW,aAAxE;AACA,SAAKjB,UAAL,CAAgB9B,QAAhB;AACH;;AAEDgD,EAAAA,UAAU,GAAE;AACR,SAAKtC,QAAL,CAAc,EAAC,GAAG,KAAKA,QAAT;AAAmBH,MAAAA,WAAW,EAAE;AAAhC,KAAd,EAAqD,MAAI;AACrD,UAAG,KAAKT,KAAL,CAAW8C,SAAX,IAAyB,KAAK9C,KAAL,CAAWS,WAAvC,EAAmD;AAC/C,aAAKG,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAgBU,UAAAA,QAAQ,EAAE;AAA1B,SAAd;AACH;AACJ,KAJD;AAKH;;AAEDyC,EAAAA,SAAS,GAAE;AACP,SAAKvC,QAAL,CAAc,EAAC,GAAG,KAAKA,QAAT;AAAmBH,MAAAA,WAAW,EAAE;AAAhC,KAAd,EAAsD,MAAI;AACtD,UAAG,CAAC,KAAKT,KAAL,CAAW8C,SAAZ,IAA0B,CAAC,KAAK9C,KAAL,CAAWS,WAAzC,EAAqD;AACjD,aAAKG,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAgBU,UAAAA,QAAQ,EAAE;AAA1B,SAAd;AACH;AACJ,KAJD;AAKH;;AAED0C,EAAAA,gBAAgB,GAAE;AACd,QAAG,KAAKtC,KAAL,CAAWuC,eAAd,EAA8B;AAC1B,YAAMpD,KAAK,GAAG,KAAKa,KAAL,CAAWwC,SAAX,IAAwB,CAAtC;AACA,YAAMpD,QAAQ,GAAG,KAAKoB,eAAL,CAAqBrB,KAArB,CAAjB;AACA,WAAK+B,UAAL,CAAgB9B,QAAhB;AACH;AACJ,GAtM6B,CAwM9B;;;AACAqD,EAAAA,iBAAiB,GAAE;AACf,QAAIrD,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;;AACA,QAAG,KAAKY,KAAL,CAAWwC,SAAd,EAAwB;AACpBpD,MAAAA,QAAQ,GAAG,KAAKoB,eAAL,CAAqB,KAAKR,KAAL,CAAWwC,SAAhC,CAAX;AACH;;AAED,SAAK1C,QAAL,CAAc,EAAC,GAAG,KAAKZ,KAAT;AAAgBE,MAAAA,QAAQ,EAAGA;AAA3B,KAAd,EAAoD,MAAI;AACpD,WAAK+B,gBAAL,CAAsB/B,QAAtB;AACH,KAFD;AAIH;;AAEDsD,EAAAA,MAAM,GAAE;AACJ,QAAIvD,KAAK,GAAG,EAAZ;;AACA,QAAG,KAAKD,KAAL,CAAWS,WAAX,IAA0B,CAAC,KAAKT,KAAL,CAAW8C,SAAtC,IAAmD,KAAKhC,KAAL,CAAW2C,GAAjE,EAAqE;AACjExD,MAAAA,KAAK,GAAG,KAAKa,KAAL,CAAW2C,GAAX,CAAeC,MAAf,CAAsB,CAAtB,EAAwB,CAAxB,EAA2BC,WAA3B,EAAR;AACH,KAFD,MAEO;AACH,UAAG,KAAK7C,KAAL,CAAW8C,SAAd,EAAwB;AACpB3D,QAAAA,KAAK,GAAG,KAAKsB,SAAL,CAAe,KAAKvB,KAAL,CAAWE,QAA1B,CAAR;AACH;;AACD,UAAG,KAAKY,KAAL,CAAW+C,cAAd,EAA6B;AACzB5D,QAAAA,KAAK,GAAG,KAAKa,KAAL,CAAW+C,cAAX,CAA0B5D,KAA1B,CAAR;AACH;AACJ;;AAEDA,IAAAA,KAAK,GAAGA,KAAK,CAAC6D,QAAN,GAAiBJ,MAAjB,CAAwB,CAAxB,EAA0B,CAA1B,CAAR;AAEA,WACI;AAAK,MAAA,SAAS,EAAE,UAAU,KAAK5C,KAAL,CAAWiD,SAArC;AACI,MAAA,WAAW,EAAE,KAAK3B,SAAL,CAAeK,IAAf,CAAoB,IAApB,CADjB;AAEI,MAAA,WAAW,EAAGuB,CAAC,IAAIA,CAAC,CAACC,cAAF,EAFvB;AAGI,MAAA,aAAa,EAAE,KAAKb,gBAAL,CAAsBX,IAAtB,CAA2B,IAA3B,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AACpCyB,QAAAA,eAAe,EAAI,kBAAD,IAAqB,MAAM,KAAKlE,KAAL,CAAWK,OAAtC,IAAkD,OAAlD,GAAyDR,KAAK,CAACsE,WAA/D,GAA4E;wDAA5E,IACqB,MAAM,KAAKnE,KAAL,CAAWI,QADtC,IACkD,wBADlD,GAC0EP,KAAK,CAACsE,WADhF,GAC6F;AAF3E,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAK,MAAA,SAAS,EAAC,wBAAf;AACK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAG,SAAD,GAAW,KAAKpE,KAAL,CAAWK,OAAtB,GAAgC;AAA5C,OADZ;AAEK,MAAA,YAAY,EAAG,KAAK6C,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CAFpB;AAGK,MAAA,YAAY,EAAG,KAAKU,SAAL,CAAeV,IAAf,CAAoB,IAApB,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAQI;AAAK,MAAA,SAAS,EAAE,4BAA6B,KAAKzC,KAAL,CAAWO,SAAZ,GAAwB,eAAxB,GAA0C,EAAtE,CAAhB;AACK,MAAA,KAAK,EAAE;AAAC6D,QAAAA,SAAS,EAAG,SAAD,GAAW,KAAKpE,KAAL,CAAWI,QAAtB,GAAiC;AAA7C,OADZ;AAEK,MAAA,YAAY,EAAG,KAAK8C,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CAFpB;AAGK,MAAA,YAAY,EAAG,KAAKU,SAAL,CAAeV,IAAf,CAAoB,IAApB,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAaO,KAAK3B,KAAL,CAAW8C,SAAX,IACC;AAAK,MAAA,SAAS,EAAE,iBAAkB,KAAK5D,KAAL,CAAWU,QAAX,IAAuB,KAAKI,KAAL,CAAW8C,SAAX,KAAyB,QAAjD,GAA6D,aAA7D,GAA6E,EAA9F,CAAhB;AACA,MAAA,YAAY,EAAG,KAAKV,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CADf;AAEA,MAAA,YAAY,EAAG,KAAKU,SAAL,CAAeV,IAAf,CAAoB,IAApB,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGExC,KAHF,CAdR,CAJJ,EAwBI;AACI,MAAA,SAAS,EAAE,wBAAyB,KAAKD,KAAL,CAAWU,QAAZ,GAAwB,qBAAxB,GAAgD,EAAxE,CADf;AAEI,MAAA,YAAY,EAAG,KAAKwC,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CAFnB;AAGI,MAAA,YAAY,EAAG,KAAKU,SAAL,CAAeV,IAAf,CAAoB,IAApB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBJ,EA6BI;AAAK,MAAA,SAAS,EAAC,UAAf;AACI,MAAA,KAAK,EAAE;AAAC2B,QAAAA,SAAS,EAAE,YAAW,KAAKpE,KAAL,CAAWM,QAAtB,GAAiC;AAA7C,OADX;AAEI,MAAA,YAAY,EAAG,KAAK4C,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CAFnB;AAGI,MAAA,YAAY,EAAG,KAAKU,SAAL,CAAeV,IAAf,CAAoB,IAApB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,CADJ;AAqCH;;AAzQ6B;;AA6QlC,eAAe3C,IAAf","sourcesContent":["\r\n\r\n// Spec \r\n// witout any option Knob is standard with value from 0 to 100 and on inti value is 0\r\n// -initValue:number allow to set init value\r\n// -showValue props allows to display numeric value on knob\r\n// -diplayFormula : a callbac function with will be used to show value on knob\r\n// -scale:number allow to scale value eg. 10 give range from 0 to 10 \r\n// -symetric:boolean if this props is present knob havse valeu from -100 to 100 * scale \r\n// -unsymetric:{negative:number, positive:number} allows to set unsymetric range value : \r\n//  {positive : 5 } means that values bigger than 0 are divided by 5 range is from -100 to 20 * scale\r\n// -quantize:number switch knob to quantize mode in witch returned values are quantize to parametr \r\n//       eg: 2 returns value 100, 98 , 96 ... quantize:0.05 returns values 100, 99.95.... \r\n// -qunatize:{negative:number, positive:number} allows to set diffrent qunatizes for negative and positives values.\r\n// -responseFactor if is present adjust knob response on a mouse move // default= 1 eg responseFactor 2 will increase response two times\r\n// -alt if is present when mouse is over and knob is not draggin it will display alt value \r\n\r\nimport React from \"react\";\r\nimport style from \"./knob.scss\";\r\n\r\n\r\nclass Knob extends React.Component{\r\n\r\n    state = {\r\n        value: 0,\r\n        position: 0, // form 0 to 100\r\n        snapShotPostion: 0,//\r\n\r\n        rightArm: 90, // form -60 to 90 - this is midle\r\n        leftArm: 90, // from 90 to 240 \r\n        dotAngle: 0,\r\n        reversArm: false,//for not symetri linera gradient swap\r\n\r\n        idDragged: false,\r\n        isMouseOver: false,\r\n        isActive: false,\r\n    }\r\n\r\n    snap(){\r\n        this.setState({...this.state, snapShotPostion: this.state.position})\r\n    }\r\n\r\n    normalizePostion(position){\r\n        if(this.props.symetric || this.props.unsymetric){\r\n            return Math.min(Math.max(position, -100), 100)\r\n        } \r\n        return Math.min(Math.max(position, 0), 100)\r\n    }\r\n\r\n    quantizePosition(position){\r\n        if(!this.props.quantize) \r\n            return position;\r\n\r\n         // value is quantaized \r\n         return this.valueToPosition(this.evalValue(position));\r\n\r\n    }\r\n\r\n    static staticValueToPostion(that, value){\r\n        let position = value;\r\n        if(that.props.scale){\r\n            position = value * 100 / that.props.scale;\r\n        }\r\n\r\n\r\n        if(that.props.unsymetric){\r\n            if(that.props.unsymetric.positive && value > 0 ){\r\n                let scale = that.props.unsymetric.positive;\r\n                position = position * scale;\r\n            } \r\n            if(this.props.unsymetric.negative &&  value < 0){\r\n                let scale = that.props.unsymetric.negative;\r\n                position = position * scale;\r\n            }\r\n        }\r\n        return position;\r\n    }\r\n\r\n    valueToPosition(value){\r\n        Knob.staticValueToPostion(this,value);\r\n    }\r\n\r\n    evalValue(position){\r\n        let value = position;\r\n        \r\n        if(this.props.scale){\r\n            value = this.props.scale * position / 100 ;\r\n        } \r\n        \r\n        if(this.props.unsymetric){\r\n            if(this.props.unsymetric.positive && position > 0 ){\r\n                let scale = this.props.unsymetric.positive;\r\n                value = value / scale;\r\n            } \r\n            if(this.props.unsymetric.negative && position < 0){\r\n                let scale = this.props.unsymetric.negative;\r\n                value = value / scale;\r\n            }\r\n        }\r\n\r\n        if(this.props.quantize){\r\n            let factor; \r\n            if(typeof this.props.quantize === \"object\"){\r\n                if(this.props.quantize.positive && value >= 0 ){\r\n                    factor = this.props.quantize.positive;\r\n                } if(this.props.quantize.negative && value < 0){\r\n                    factor = this.props.quantize.negative;\r\n                }\r\n            } else if (typeof this.props.quantize === \"number\") {\r\n                factor = this.props.quantize;\r\n            }\r\n\r\n            const rest = value % factor;\r\n            value = value - rest;\r\n        }\r\n\r\n        //rounding \r\n        return Math.floor(value * 1000000) / 1000000;\r\n    }\r\n\r\n    setPostion(position){\r\n        position =  this.normalizePostion(position);\r\n        const value = this.evalValue(position);\r\n\r\n        this.setState({...this.state, position, value}, ()=>{\r\n            this.mapPostionToArms(this.state.position)\r\n        });\r\n\r\n        (this.props.onChange && this.props.onChange(this.state.value))\r\n    }\r\n\r\n\r\n    mapPostionToArms(position){\r\n        let rightArm, leftArm, dotAngle;\r\n        let reversArm = false;\r\n        position = this.quantizePosition(position); \r\n\r\n        if(this.props.symetric || this.props.unsymetric){\r\n            rightArm = 88;\r\n            leftArm = 92; \r\n            dotAngle = position  * 1.4 ;     \r\n            \r\n            if(position < -2 ) {\r\n                rightArm = 90 - Math.abs(position) * 1.5;\r\n                leftArm = 90;\r\n            } else if(position > 2 ){\r\n                rightArm = 90;\r\n                leftArm = 90 + position * 1.5;\r\n            }\r\n        } else {\r\n            rightArm = -60;\r\n            leftArm = -60; \r\n            dotAngle = -150 + position * 2.95;\r\n            leftArm += position * 3;\r\n            if(position > 60) {\r\n                reversArm = true;\r\n                leftArm =  -240 + (position - 60) * 3;\r\n                rightArm =  -240 ;\r\n            }\r\n\r\n        }\r\n\r\n        this.setState({...this.state, rightArm, leftArm, dotAngle, reversArm});\r\n    }\r\n\r\n    // -------------- events below\r\n\r\n    mouseDown(event){\r\n        const startY = event.clientY;\r\n        let mouseMove = this.mouseMove.bind(this, startY);\r\n        this.snap();\r\n\r\n        const removeListener = () =>{\r\n            document.body.removeEventListener('mousemove', mouseMove);\r\n            document.body.removeEventListener('mouseup', removeListener);\r\n            document.body.removeEventListener('mouseleave', removeListener);\r\n            this.setState({...this.setState, isDragged: false}, ()=>{\r\n                if(!this.state.isDragged &&  !this.state.isMouseOver){\r\n                    this.setState({...this.state, isActive: false})\r\n                }\r\n            })\r\n            \r\n        }\r\n\r\n        document.body.addEventListener('mousemove', mouseMove)\r\n        document.body.addEventListener('mouseup', removeListener);\r\n        document.body.addEventListener('mouseleave', removeListener);\r\n        this.setState({...this.setState, isDragged: true, isActive:true})\r\n    }\r\n\r\n    mouseMove(startY, event){\r\n        event.stopPropagation();\r\n        let responsFactor = this.props.responsFactor || 1;\r\n        let position = this.state.snapShotPostion - (event.clientY  - startY) * responsFactor;\r\n        this.setPostion(position);\r\n    }\r\n\r\n    mouseEnter(){\r\n        this.setState({...this.setState, isMouseOver: true}, ()=>{\r\n            if(this.state.isDragged ||  this.state.isMouseOver){\r\n                this.setState({...this.state, isActive: true})\r\n            }\r\n        });\r\n    }\r\n\r\n    mouseLeve(){\r\n        this.setState({...this.setState, isMouseOver: false}, ()=>{\r\n            if(!this.state.isDragged &&  !this.state.isMouseOver){\r\n                this.setState({...this.state, isActive: false})\r\n            }\r\n        });\r\n    }\r\n\r\n    mouseDoubelClick(){\r\n        if(this.props.dobuleClickInit){\r\n            const value = this.props.initValue || 0;\r\n            const position = this.valueToPosition(value);\r\n            this.setPostion(position)\r\n        }\r\n    }\r\n\r\n    //----------------compontent metod\r\n    componentDidMount(){\r\n        let position = this.state.position;\r\n        if(this.props.initValue){\r\n            position = this.valueToPosition(this.props.initValue)\r\n        }\r\n\r\n        this.setState({...this.state, position : position}, ()=>{\r\n            this.mapPostionToArms(position);\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        let value = \"\"\r\n        if(this.state.isMouseOver && !this.state.isDragged && this.props.alt){\r\n            value = this.props.alt.substr(0,4).toUpperCase();\r\n        } else {\r\n            if(this.props.showValue){\r\n                value = this.evalValue(this.state.position)\r\n            }\r\n            if(this.props.displayFormula){\r\n                value = this.props.displayFormula(value);\r\n            }\r\n        }\r\n\r\n        value = value.toString().substr(0,6);\r\n        \r\n        return (\r\n            <div className={\"knob \" + this.props.className}\r\n                onMouseDown={this.mouseDown.bind(this)}\r\n                onDragStart={ e => e.preventDefault()}\r\n                onDoubleClick={this.mouseDoubelClick.bind(this)}>\r\n                <div className=\"knob-big-circle\" style={{\r\n                    backgroundImage : `linear-gradient(`+ (180 + this.state.leftArm)  +`deg, `+style.primaryDark+` 50%, transparent 50%),\r\n                                       linear-gradient(`+ (180 + this.state.rightArm) +`deg, transparent 50%, `+style.primaryDark+` 50%)`\r\n                }}>\r\n                    <div className=\"half-circle half-right\"\r\n                         style={{transform: `rotate(`+ this.state.leftArm +`deg)`}}\r\n                         onMouseEnter={ this.mouseEnter.bind(this)}\r\n                         onMouseLeave={ this.mouseLeve.bind(this)}/>\r\n                    <div className={\"half-circle half-left \" + ((this.state.reversArm) ?\"half--reverse\" : \"\" )}\r\n                         style={{transform: `rotate(`+ this.state.rightArm +`deg)`}}\r\n                         onMouseEnter={ this.mouseEnter.bind(this)}\r\n                         onMouseLeave={ this.mouseLeve.bind(this)}/>\r\n\r\n                    {( this.props.showValue && \r\n                        <div className={\"knob-value \" + ((this.state.isActive || this.props.showValue === \"always\") ? \"knob--focus\" : \"\")}\r\n                        onMouseEnter={ this.mouseEnter.bind(this)}\r\n                        onMouseLeave={ this.mouseLeve.bind(this)}>\r\n                        { value }\r\n                    </div>)}\r\n                </div>\r\n                <div \r\n                    className={\"knob-small-circle \" + ((this.state.isActive) ? \"small-circle--focus\" : \"\")}\r\n                    onMouseEnter={ this.mouseEnter.bind(this) }\r\n                    onMouseLeave={ this.mouseLeve.bind(this) }\r\n                    />\r\n                <div className=\"knob-dot\"\r\n                    style={{transform: 'rotate('+ this.state.dotAngle + 'deg)'}}\r\n                    onMouseEnter={ this.mouseEnter.bind(this) }\r\n                    onMouseLeave={ this.mouseLeve.bind(this) }/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Knob;"]},"metadata":{},"sourceType":"module"}