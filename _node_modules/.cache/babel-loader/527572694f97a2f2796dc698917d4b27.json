{"ast":null,"code":"import _slicedToArray from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback,useMemo}from\"react\";import{formater as timeFormater}from\"./../../../../../../../utils/time/timeFromater\";import classNames from\"classnames\";import\"./record-time.scss\";var RecordTime=function RecordTime(_ref){var runing=_ref.runing,prepering=_ref.prepering,clearHandler=_ref.clearHandler;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),time=_useState2[0],setTime=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),timerInterval=_useState4[0],setIntervalHandler=_useState4[1];useEffect(function(){if(runing&&!timerInterval){setIntervalHandler(setInterval(function(){setTime(function(time){return++time;});},1000));}else if(!runing&&timerInterval){clearInterval(timerInterval);setIntervalHandler(null);}},[runing,setTime,setIntervalHandler,timerInterval]);var clear=useCallback(function(){setTime(0);},[setTime]);useEffect(function(){if(clearHandler instanceof Function){clearHandler(clear);}},[clearHandler,clear]);var containerClassNames=useMemo(function(){return classNames(\"record-time\",{\"record-time--prepering\":prepering});},[prepering]);return React.createElement(\"div\",{className:containerClassNames},React.createElement(\"span\",null,timeFormater.secondsToStr(time)));};export default RecordTime;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Mixer/componets/RecordTime/RecordTime.js"],"names":["React","useState","useEffect","useCallback","useMemo","formater","timeFormater","classNames","RecordTime","runing","prepering","clearHandler","time","setTime","timerInterval","setIntervalHandler","setInterval","clearInterval","clear","Function","containerClassNames","secondsToStr"],"mappings":"kHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,CAAkDC,OAAlD,KAAiE,OAAjE,CACA,OAAQC,QAAQ,GAAIC,CAAAA,YAApB,KAAuC,gDAAvC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAO,oBAAP,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAuC,IAArCC,CAAAA,MAAqC,MAArCA,MAAqC,CAA7BC,SAA6B,MAA7BA,SAA6B,CAAlBC,YAAkB,MAAlBA,YAAkB,eAC9BV,QAAQ,CAAC,CAAD,CADsB,wCAC/CW,IAD+C,eACzCC,OADyC,8BAEVZ,QAAQ,CAAC,IAAD,CAFE,yCAE/Ca,aAF+C,eAEhCC,kBAFgC,eAItDb,SAAS,CAAC,UAAI,CACV,GAAGO,MAAM,EAAI,CAACK,aAAd,CAA4B,CACxBC,kBAAkB,CAACC,WAAW,CAAC,UAAI,CAC/BH,OAAO,CAAC,SAAAD,IAAI,QAAI,EAAEA,IAAN,EAAL,CAAP,CACH,CAF6B,CAE3B,IAF2B,CAAZ,CAAlB,CAGH,CAJD,IAIO,IAAG,CAACH,MAAD,EAAWK,aAAd,CAA6B,CAChCG,aAAa,CAACH,aAAD,CAAb,CACAC,kBAAkB,CAAC,IAAD,CAAlB,CACH,CAEJ,CAVQ,CAUP,CAAEN,MAAF,CACEI,OADF,CAEEE,kBAFF,CAGED,aAHF,CAVO,CAAT,CAgBA,GAAMI,CAAAA,KAAK,CAAGf,WAAW,CAAC,UAAI,CAC1BU,OAAO,CAAC,CAAD,CAAP,CACH,CAFwB,CAEtB,CAACA,OAAD,CAFsB,CAAzB,CAIAX,SAAS,CAAC,UAAI,CACV,GAAGS,YAAY,WAAYQ,CAAAA,QAA3B,CAAoC,CAChCR,YAAY,CAACO,KAAD,CAAZ,CACH,CACJ,CAJQ,CAIN,CAACP,YAAD,CAAeO,KAAf,CAJM,CAAT,CAMA,GAAME,CAAAA,mBAAmB,CAAGhB,OAAO,CAAC,UAAI,CACpC,MAAOG,CAAAA,UAAU,CACb,aADa,CAEb,CACI,yBAA0BG,SAD9B,CAFa,CAAjB,CAMH,CAPkC,CAOhC,CAACA,SAAD,CAPgC,CAAnC,CASA,MACI,4BAAK,SAAS,CAAEU,mBAAhB,EACI,gCAAQd,YAAY,CAACe,YAAb,CAA0BT,IAA1B,CAAR,CADJ,CADJ,CAKH,CA5CD,CA8CA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport {formater as timeFormater }from \"./../../../../../../../utils/time/timeFromater\";\r\nimport classNames from \"classnames\";\r\nimport \"./record-time.scss\"\r\n\r\nconst RecordTime = ({runing, prepering, clearHandler}) => {\r\n    const [time, setTime] = useState(0);\r\n    const [timerInterval, setIntervalHandler] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(runing && !timerInterval){\r\n            setIntervalHandler(setInterval(()=>{\r\n                setTime(time => ++time);\r\n            }, 1000))\r\n        } else if(!runing && timerInterval) {\r\n            clearInterval(timerInterval);\r\n            setIntervalHandler(null);\r\n        }\r\n\r\n    },[ runing, \r\n        setTime, \r\n        setIntervalHandler,\r\n        timerInterval\r\n    ])\r\n\r\n    const clear = useCallback(()=>{\r\n        setTime(0)\r\n    }, [setTime])\r\n\r\n    useEffect(()=>{\r\n        if(clearHandler instanceof Function){\r\n            clearHandler(clear)\r\n        }\r\n    }, [clearHandler, clear])\r\n\r\n    const containerClassNames = useMemo(()=>{\r\n        return classNames(\r\n            \"record-time\",\r\n            {\r\n                \"record-time--prepering\": prepering\r\n            }\r\n        )\r\n    }, [prepering])\r\n\r\n    return(\r\n        <div className={containerClassNames}>\r\n            <span>{ timeFormater.secondsToStr(time) }</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecordTime;"]},"metadata":{},"sourceType":"module"}