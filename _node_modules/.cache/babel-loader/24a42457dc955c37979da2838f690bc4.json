{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(renameSelectedRequestSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handle);import{get}from\"lodash/object\";import{hideLoading,showLoading}from'react-redux-loading-bar';import{put,select,takeEvery}from\"redux-saga/effects\";import{ACTIONS,moveTo,pushLog}from\"../../actions\";import{getApi}from\"./../../apis/apiProvider\";import{Log}from\"./../../utils/logger/logger\";import errorParser from\"./../../utils/serverErrorParser/errorParser\";export default function renameSelectedRequestSaga(){return _regeneratorRuntime.wrap(function renameSelectedRequestSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(ACTIONS.PL_MOVE_TO_REQUEST,handle);case 2:case\"end\":return _context.stop();}}},_marked);}var getToken=function getToken(state){return state.user.token;};var getElement=function getElement(state,path){return get(state.playList,path);};var getTargetId=function getTargetId(state,path){return get(state.playList,path)._id;};function handle(action){var path,token,_getApi,callQuery,queries,element,targetId,query,response;return _regeneratorRuntime.wrap(function handle$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:path=['saga','playlist','request move element to'];_context2.next=3;return select(getToken);case 3:token=_context2.sent;if(token){_context2.next=8;break;}_context2.next=7;return put(moveTo(action.pathFrom,action.pathTo));case 7:return _context2.abrupt(\"return\");case 8:_context2.prev=8;_context2.next=11;return put(showLoading());case 11:_getApi=getApi(\"UserAssets\"),callQuery=_getApi.callQuery,queries=_getApi.queries;_context2.next=14;return select(getElement,action.pathFrom);case 14:element=_context2.sent;_context2.next=17;return select(getTargetId,action.pathTo);case 17:targetId=_context2.sent;if(element._type===\"dir\"){query=queries.moveQl.moveDir(element._id,targetId);}else if(element._type===\"playlist\"){query=queries.moveQl.movePlaylist(element._id,targetId);}_context2.next=21;return callQuery(query,token);case 21:response=_context2.sent;if(!response.errors){_context2.next=24;break;}throw new Error('Server response contains errors '+errorParser(response.errors));case 24:_context2.next=26;return put(moveTo(action.pathFrom,action.pathTo));case 26:_context2.next=28;return put(pushLog(new Log(\"Element sucessful moved el:\".concat(element._id,\" target: \").concat(targetId),path)));case 28:_context2.next=34;break;case 30:_context2.prev=30;_context2.t0=_context2[\"catch\"](8);_context2.next=34;return put(pushLog(Log.Error(path,\"Can't move seletcted element to\"+_context2.t0.message,\"Sorry. During process moving element occurred a problem\",_context2.t0)));case 34:_context2.prev=34;_context2.next=37;return put(hideLoading());case 37:return _context2.finish(34);case 38:case\"end\":return _context2.stop();}}},_marked2,null,[[8,30,34,38]]);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/reqMoveToSaga.js"],"names":["renameSelectedRequestSaga","handle","get","hideLoading","showLoading","put","select","takeEvery","ACTIONS","moveTo","pushLog","getApi","Log","errorParser","PL_MOVE_TO_REQUEST","getToken","state","user","token","getElement","path","playList","getTargetId","_id","action","pathFrom","pathTo","callQuery","queries","element","targetId","_type","query","moveQl","moveDir","movePlaylist","response","errors","Error","message"],"mappings":"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","sourcesContent":["import { get } from \"lodash/object\";\r\nimport { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport { put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTIONS, moveTo, pushLog } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { Log } from \"./../../utils/logger/logger\";\r\nimport errorParser from \"./../../utils/serverErrorParser/errorParser\";\r\n\r\nexport default function* renameSelectedRequestSaga() {\r\n    yield takeEvery(ACTIONS.PL_MOVE_TO_REQUEST, handle)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nconst getElement = (state, path) => get(state.playList, path);\r\n\r\nconst getTargetId = (state, path) => get(state.playList, path)._id;\r\n\r\nfunction* handle(action) {\r\n    const path = ['saga', 'playlist', 'request move element to'];\r\n    const token = yield select(getToken);\r\n    \r\n    if (!token) {\r\n        yield put(moveTo(action.pathFrom, action.pathTo));\r\n        return;\r\n    }\r\n    try {\r\n        yield put(showLoading());\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n        const element = yield select(getElement, action.pathFrom);\r\n        const targetId = yield select(getTargetId, action.pathTo);\r\n        let query;\r\n        if(element._type === \"dir\"){\r\n            query = queries.moveQl.moveDir(element._id, targetId);\r\n        } else if(element._type === \"playlist\"){\r\n            query = queries.moveQl.movePlaylist(element._id, targetId);\r\n        }\r\n\r\n        let response = yield callQuery(query, token);\r\n\r\n        if(response.errors){\r\n            throw new Error('Server response contains errors '+ errorParser(response.errors))\r\n        }\r\n\r\n\r\n        yield put(moveTo(action.pathFrom, action.pathTo))\r\n    \r\n        yield put(pushLog(\r\n                new Log(`Element sucessful moved el:${element._id} target: ${targetId}`, path)\r\n            ))\r\n    } catch (error) {\r\n        yield put(pushLog(Log.Error(\r\n            path,\r\n            \"Can't move seletcted element to\" + error.message,\r\n            \"Sorry. During process moving element occurred a problem\",\r\n            error\r\n        )))\r\n    } finally{\r\n      yield put(hideLoading())\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}