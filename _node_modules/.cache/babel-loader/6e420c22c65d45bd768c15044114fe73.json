{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\PitchControl\\\\PitchControl.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./pitch-control.scss\";\n\nclass PitchControl extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      sliderRange: null,\n      sliderCurrnetPosition: null,\n      sliderPrevPosition: null,\n      isDragged: false\n    };\n\n    this.mouseDownHandle = (event, sliderRange) => {\n      if (event.target === this.sliderAreaElement.current || event.target === this.sliderRangeElement.current) {\n        // area clicked\n        let clickY = event.clientY - this.sliderAreaElement.current.getBoundingClientRect().top;\n        this.setPosition(clickY, this.state.sliderCurrnetPosition);\n        /*this.setState ( state => {\r\n            const _state = {...state};\r\n            _state.sliderPrevPosition = state.sliderCurrnetPosition;\r\n            _state.sliderCurrnetPosition = clickY;\r\n            return _state;\r\n        })*/\n      } else if (event.target === this.sliderThumbElement.current) {\n        // thumb clicked\n        this.setState({ ...this.state,\n          isDragged: true\n        });\n        document.addEventListener('mousemove', this.mouseMoveHandler.bind(this)); //, event, shiftY, topOffset));\n\n        document.addEventListener('dragstart', e => e.preventDefault()); // this.mouseMoveHandler.bind(this))\n      }\n\n      document.addEventListener('mouseup', this.mouseUpHandler);\n      document.addEventListener('dragend', this.mouseUpHandler);\n    };\n\n    this.mouseUpHandler = event => {\n      if (this.state.isDragged) {\n        this.setState({ ...this.state,\n          isDragged: false\n        });\n      } else {\n        this.setPosition(this.state.sliderPrevPosition);\n      }\n\n      document.removeEventListener('mousemove', this.mouseMoveHandler.bind(this));\n      document.removeEventListener('dragover', this.mouseMoveHandler.bind(this));\n      document.removeEventListener('mouseup', this.mouseUpHandler);\n      document.removeEventListener('dragend', this.mouseUpHandler);\n    };\n\n    this.mouseMoveHandler = event => {\n      if (!this.state.isDragged) return;\n      const topOffset = this.sliderAreaElement.current.getBoundingClientRect().top;\n      const thumbHeight = this.sliderThumbElement.current.getBoundingClientRect().height;\n      let position = event.clientY - topOffset;\n      position = Math.min(Math.max(position, thumbHeight / 2), this.state.sliderRange + thumbHeight / 2);\n      this.setPosition(position);\n    };\n\n    this.sliderRangeElement = React.createRef(null);\n    this.sliderThumbElement = React.createRef(null);\n    this.sliderAreaElement = React.createRef(null);\n  }\n\n  setPosition(currentPosition, prevPosition) {\n    this.setState({ ...this.state,\n      sliderCurrnetPosition: currentPosition,\n      sliderPrevPosition: prevPosition || this.state.sliderPrevPosition\n    }); //\n\n    console.log('dispach action');\n  }\n\n  componentDidMount() {\n    let top = parseInt(window.getComputedStyle(this.sliderThumbElement.current).top);\n    let range = parseInt(window.getComputedStyle(this.sliderRangeElement.current).height);\n    this.setState(state => {\n      const _state = { ...state\n      };\n      _state.sliderCurrnetPosition = top;\n      _state.sliderRange = range;\n      return _state;\n    });\n    this.sliderAreaElement.current.addEventListener('mousedown', this.mouseDownHandle.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pitch-control \" + \"pitch-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.sliderAreaElement,\n      className: \"pitch-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.sliderRangeElement,\n      className: \"slider-range\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      ref: this.sliderThumbElement,\n      style: (this.state.sliderCurrnetPosition !== null || this.state.sliderCurrnetPosition !== undefined) && {\n        top: this.state.sliderCurrnetPosition\n      },\n      className: \"slider-thumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default PitchControl;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/PitchControl/PitchControl.js"],"names":["React","useState","useEffect","useRef","PitchControl","Component","constructor","state","sliderRange","sliderCurrnetPosition","sliderPrevPosition","isDragged","mouseDownHandle","event","target","sliderAreaElement","current","sliderRangeElement","clickY","clientY","getBoundingClientRect","top","setPosition","sliderThumbElement","setState","document","addEventListener","mouseMoveHandler","bind","e","preventDefault","mouseUpHandler","removeEventListener","topOffset","thumbHeight","height","position","Math","min","max","createRef","currentPosition","prevPosition","console","log","componentDidMount","parseInt","window","getComputedStyle","range","_state","render","props","name","undefined"],"mappings":"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","sourcesContent":["import React, { useState , useEffect, useRef} from \"react\";\r\nimport \"./pitch-control.scss\";\r\n\r\nclass PitchControl extends React.Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.sliderRangeElement = React.createRef(null);\r\n        this.sliderThumbElement = React.createRef(null);\r\n        this.sliderAreaElement = React.createRef(null);\r\n    }\r\n\r\n    state = {\r\n        sliderRange: null,\r\n        sliderCurrnetPosition: null,\r\n        sliderPrevPosition: null,\r\n\r\n        isDragged : false,\r\n    }\r\n\r\n    setPosition(currentPosition, prevPosition){\r\n        this.setState({...this.state, \r\n            sliderCurrnetPosition : currentPosition,\r\n            sliderPrevPosition : prevPosition || this.state.sliderPrevPosition,\r\n        });\r\n        //\r\n        console.log('dispach action')\r\n    }\r\n\r\n    mouseDownHandle = (event, sliderRange) =>{\r\n        if(event.target === this.sliderAreaElement.current || event.target === this.sliderRangeElement.current){ // area clicked\r\n            let clickY = event.clientY - this.sliderAreaElement.current.getBoundingClientRect().top;\r\n            this.setPosition(clickY, this.state.sliderCurrnetPosition);\r\n            /*this.setState ( state => {\r\n                const _state = {...state};\r\n                _state.sliderPrevPosition = state.sliderCurrnetPosition;\r\n                _state.sliderCurrnetPosition = clickY;\r\n                return _state;\r\n            })*/\r\n        } else if(event.target === this.sliderThumbElement.current){ // thumb clicked\r\n            this.setState({...this.state, isDragged: true});\r\n            document.addEventListener('mousemove',  this.mouseMoveHandler.bind(this))//, event, shiftY, topOffset));\r\n            document.addEventListener('dragstart', e => e.preventDefault())// this.mouseMoveHandler.bind(this))\r\n        }\r\n        document.addEventListener('mouseup', this.mouseUpHandler);\r\n        document.addEventListener('dragend', this.mouseUpHandler);\r\n    }\r\n\r\n    mouseUpHandler = event => {\r\n        if(this.state.isDragged){\r\n            this.setState({...this.state, isDragged: false});\r\n        } else {\r\n            this.setPosition(this.state.sliderPrevPosition);\r\n        }\r\n\r\n        document.removeEventListener('mousemove', this.mouseMoveHandler.bind(this));\r\n        document.removeEventListener('dragover', this.mouseMoveHandler.bind(this));\r\n        document.removeEventListener('mouseup', this.mouseUpHandler);\r\n        document.removeEventListener('dragend', this.mouseUpHandler);\r\n    }\r\n\r\n    mouseMoveHandler = (event) =>{\r\n        if(!this.state.isDragged) return;\r\n\r\n        const topOffset = this.sliderAreaElement.current.getBoundingClientRect().top;\r\n        const thumbHeight = this.sliderThumbElement.current.getBoundingClientRect().height;\r\n        let position = event.clientY - topOffset;\r\n        position = Math.min(Math.max(position, thumbHeight/2), this.state.sliderRange + thumbHeight/2);\r\n\r\n        this.setPosition(position);\r\n    }\r\n\r\n    componentDidMount(){\r\n        let top = parseInt(window.getComputedStyle(this.sliderThumbElement.current).top);\r\n        let range = parseInt(window.getComputedStyle(this.sliderRangeElement.current).height)\r\n\r\n        this.setState( state => {\r\n            const _state = {...state};\r\n            _state.sliderCurrnetPosition = top;\r\n            _state.sliderRange = range;\r\n            return _state;\r\n        })\r\n\r\n        this.sliderAreaElement.current.addEventListener('mousedown',  this.mouseDownHandle.bind(this));\r\n    }\r\n\r\n\r\n    render(){\r\n            return (\r\n                <div className={\"pitch-control \" + \"pitch-\" + this.props.name}>\r\n                    <div ref={this.sliderAreaElement} className=\"pitch-area\">\r\n                        <div ref={this.sliderRangeElement} className=\"slider-range\"/>\r\n                        <div ref={this.sliderThumbElement} style={ (this.state.sliderCurrnetPosition !== null || this.state.sliderCurrnetPosition !== undefined) && {top: this.state.sliderCurrnetPosition}}  className=\"slider-thumb\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n}\r\n\r\nexport default PitchControl;"]},"metadata":{},"sourceType":"module"}