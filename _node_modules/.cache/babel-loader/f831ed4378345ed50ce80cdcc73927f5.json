{"ast":null,"code":"import React from \"react\";\nimport WaveSurfer from \"wavesurfer\";\nimport config from \"./configuration\";\nimport \"./player.scss\";\n\nclass Player extends React.Component {\n  constructor() {\n    super();\n    this.masterContainer = React.useRef();\n    this.slaveContainer = React.useRef();\n  }\n\n  componentDidMount() {\n    this.master = WaveSurfer.create(config.master(this.masterContainer, this.props.name));\n    this.slave = WaveSurfer.create(config.slave(this.slaveContainer, this.props.name));\n    this.master.on('ready', () => {\n      this.currentDuration = this.master.getDuration();\n      this.slave.load(null, this.master.backend.getPeaks(430, 0, 430));\n      startSync();\n    });\n    this.slave.on('seek', progress => {\n      this.master.seekTo(progress);\n\n      if (!this.master.isPlaying()) {\n        this.master.play();\n      }\n    });\n\n    const startSync = () => {\n      this.syncHandle = setInterval(() => {\n        this.slave.drawer.progress(this.master.getCurrentTime() / this.currentDuration);\n      }, 100);\n    };\n  }\n\n  render() {\n    return {\n      /* <div className=\"player\">\r\n          <div className=\"master\" ref={ this.masterContainer } />\r\n          <div className=\"slave\" ref={ this.slaveContainer } /> \r\n      </div>*/\n    };\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/Player/Player.js"],"names":["React","WaveSurfer","config","Player","Component","constructor","masterContainer","useRef","slaveContainer","componentDidMount","master","create","props","name","slave","on","currentDuration","getDuration","load","backend","getPeaks","startSync","progress","seekTo","isPlaying","play","syncHandle","setInterval","drawer","getCurrentTime","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,eAAL,GAAuBN,KAAK,CAACO,MAAN,EAAvB;AACA,SAAKC,cAAL,GAAsBR,KAAK,CAACO,MAAN,EAAtB;AACH;;AAIDE,EAAAA,iBAAiB,GAAE;AACf,SAAKC,MAAL,GAAcT,UAAU,CAACU,MAAX,CAAkBT,MAAM,CAACQ,MAAP,CAAc,KAAKJ,eAAnB,EAAoC,KAAKM,KAAL,CAAWC,IAA/C,CAAlB,CAAd;AACA,SAAKC,KAAL,GAAab,UAAU,CAACU,MAAX,CAAkBT,MAAM,CAACY,KAAP,CAAa,KAAKN,cAAlB,EAAkC,KAAKI,KAAL,CAAWC,IAA7C,CAAlB,CAAb;AAGA,SAAKH,MAAL,CAAYK,EAAZ,CAAe,OAAf,EAAwB,MAAI;AACxB,WAAKC,eAAL,GAAuB,KAAKN,MAAL,CAAYO,WAAZ,EAAvB;AACA,WAAKH,KAAL,CAAWI,IAAX,CAAgB,IAAhB,EAAsB,KAAKR,MAAL,CAAYS,OAAZ,CAAoBC,QAApB,CAA6B,GAA7B,EAAkC,CAAlC,EAAqC,GAArC,CAAtB;AACAC,MAAAA,SAAS;AACZ,KAJD;AAMA,SAAKP,KAAL,CAAWC,EAAX,CAAc,MAAd,EAAuBO,QAAD,IAAY;AAC9B,WAAKZ,MAAL,CAAYa,MAAZ,CAAmBD,QAAnB;;AACA,UAAG,CAAC,KAAKZ,MAAL,CAAYc,SAAZ,EAAJ,EAA4B;AACxB,aAAKd,MAAL,CAAYe,IAAZ;AACH;AACJ,KALD;;AAOA,UAAMJ,SAAS,GAAG,MAAM;AACpB,WAAKK,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChC,aAAKb,KAAL,CAAWc,MAAX,CAAkBN,QAAlB,CAA2B,KAAKZ,MAAL,CAAYmB,cAAZ,KAA+B,KAAKb,eAA/D;AACH,OAF4B,EAE1B,GAF0B,CAA7B;AAGH,KAJD;AAKH;;AAEDc,EAAAA,MAAM,GAAE;AACJ,WACG;AAAC;;;;AAAD,KADH;AAMH;;AAzCgC;;AA4CrC,eAAe3B,MAAf","sourcesContent":["import React from \"react\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport config from \"./configuration\";\r\nimport \"./player.scss\"\r\n\r\nclass Player extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.masterContainer = React.useRef();\r\n        this.slaveContainer = React.useRef();\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount(){\r\n        this.master = WaveSurfer.create(config.master(this.masterContainer, this.props.name));\r\n        this.slave = WaveSurfer.create(config.slave(this.slaveContainer, this.props.name));\r\n\r\n\r\n        this.master.on('ready', ()=>{\r\n            this.currentDuration = this.master.getDuration();\r\n            this.slave.load(null, this.master.backend.getPeaks(430, 0, 430))\r\n            startSync()\r\n        })\r\n\r\n        this.slave.on('seek', (progress)=>{\r\n            this.master.seekTo(progress);\r\n            if(!this.master.isPlaying()){\r\n                this.master.play();\r\n            }\r\n        })\r\n\r\n        const startSync = () => {\r\n            this.syncHandle = setInterval(() => {\r\n                this.slave.drawer.progress(this.master.getCurrentTime() / this.currentDuration);\r\n            }, 100)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n           {/* <div className=\"player\">\r\n                <div className=\"master\" ref={ this.masterContainer } />\r\n                <div className=\"slave\" ref={ this.slaveContainer } /> \r\n        </div>*/}\r\n        )\r\n    }\r\n}\r\n\r\nexport default Player;"]},"metadata":{},"sourceType":"module"}