{"ast":null,"code":"import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _get from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";/**\r\n * Adapted from https://github.com/web-audio-components/simple-reverb\r\n */import Effect from\"./../effect\";import worker from\"./buildImpulseWebWorker\";import WebWorker from\"./../../../../../../../utils/worker/workerSetup\";var Reverb=/*#__PURE__*/function(_Effect){_inherits(Reverb,_Effect);_createClass(Reverb,null,[{key:\"defaultParams\",value:function defaultParams(){return{params:{seconds:{min:1,max:50,defaultValue:3,type:\"float\",description:\"time\"},decay:{min:0,max:100,defaultValue:2,type:\"float\",description:\"decay\"},reverse:{min:0,max:1,defaultValue:0,type:\"bool\",description:\"rev\"}}};}}]);function Reverb(context,params){var _this;_classCallCheck(this,Reverb);_this=_possibleConstructorReturn(this,_getPrototypeOf(Reverb).call(this));_this.inputNode=_this.outputNode=context.createConvolver();_this._context=context;_this._default=Reverb.defaultParams().params;_this._initParams(params);_this.configWorker();_this._buildImpulse();return _this;}_createClass(Reverb,[{key:\"configWorker\",value:function configWorker(){var _this2=this;this._buildImpulseWorker=new WebWorker(worker);this._buildImpulseWorker.addEventListener(\"message\",function(e){if(e.data[0].type===\"IMPLUSE\"){var impulseL=e.data[1];var impulseR=e.data[2];var length=e.data[0].length;var impulse=_this2._context.createBuffer(2,length,_this2._context.sampleRate);impulse.copyToChannel(impulseL,0,0);impulse.copyToChannel(impulseR,1,0);_this2.inputNode.buffer=impulse;}});}},{key:\"connect\",value:function connect(input,dest){_get(_getPrototypeOf(Reverb.prototype),\"connect\",this).call(this,input,dest);if(!this._buildImpulseWorker){this.configWorker();}}},{key:\"disconnect\",value:function disconnect(){_get(_getPrototypeOf(Reverb.prototype),\"disconnect\",this).call(this);this._buildImpulseWorker.terminate();delete this._buildImpulseWorker;}},{key:\"_buildImpulse\",value:function _buildImpulse(){if(!this._buildImpulseWorker){return;}var rate=this._context.sampleRate;var length=rate*this.seconds;var impulse=this._context.createBuffer(2,length,rate);var impulseR=new Float32Array(length);var impulseL=new Float32Array(length);impulse.copyFromChannel(impulseL,0,0);impulse.copyFromChannel(impulseR,1,0);this._buildImpulseWorker.postMessage([{type:\"BUILD_IMPULSE\",length:length,decay:this._decay,reverse:this._reverse},impulseL,impulseR]);}},{key:\"name\",get:function get(){return\"Reverb\";}},{key:\"seconds\",get:function get(){return this._seconds;},set:function set(value){value=this._valueToRange(value,\"seconds\");this._seconds=value;this._buildImpulse();}},{key:\"decay\",get:function get(){return this._decay;},set:function set(value){value=this._valueToRange(value,\"decay\");this._decay=value;this._buildImpulse();}},{key:\"reverse\",get:function get(){return this._reverse;},set:function set(value){this._reverse=value===1||value===\"true\";this._buildImpulse();}}]);return Reverb;}(Effect);export{Reverb as default};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/effector/effects/reverb/reverb.js"],"names":["Effect","worker","WebWorker","Reverb","params","seconds","min","max","defaultValue","type","description","decay","reverse","context","inputNode","outputNode","createConvolver","_context","_default","defaultParams","_initParams","configWorker","_buildImpulse","_buildImpulseWorker","addEventListener","e","data","impulseL","impulseR","length","impulse","createBuffer","sampleRate","copyToChannel","buffer","input","dest","terminate","rate","Float32Array","copyFromChannel","postMessage","_decay","_reverse","_seconds","value","_valueToRange"],"mappings":"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","sourcesContent":["/**\r\n * Adapted from https://github.com/web-audio-components/simple-reverb\r\n */\r\nimport Effect from \"./../effect\";\r\nimport worker from \"./buildImpulseWebWorker\";\r\nimport WebWorker from \"./../../../../../../../utils/worker/workerSetup\";\r\n\r\nexport default class Reverb extends Effect {\r\n    static defaultParams() {\r\n        return {\r\n            params: {\r\n                seconds: {\r\n                    min: 1,\r\n                    max: 50,\r\n                    defaultValue: 3,\r\n                    type: \"float\",\r\n                    description: \"time\"\r\n                },\r\n                decay: {\r\n                    min: 0,\r\n                    max: 100,\r\n                    defaultValue: 2,\r\n                    type: \"float\",\r\n                    description: \"decay\"\r\n                },\r\n                reverse: {\r\n                    min: 0,\r\n                    max: 1,\r\n                    defaultValue: 0,\r\n                    type: \"bool\",\r\n                    description : \"rev\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor(context, params) {\r\n        super();\r\n        this.inputNode = this.outputNode = context.createConvolver()\r\n        this._context = context;\r\n        this._default = Reverb.defaultParams().params;\r\n\r\n        this._initParams(params);\r\n        this.configWorker();\r\n        this._buildImpulse();\r\n    }\r\n\r\n    configWorker(){\r\n        this._buildImpulseWorker = new WebWorker(worker);\r\n        this._buildImpulseWorker.addEventListener(\"message\", e =>{\r\n            if(e.data[0].type === \"IMPLUSE\"){\r\n                const impulseL = e.data[1];\r\n                const impulseR = e.data[2];\r\n                const length = e.data[0].length;\r\n         \r\n                const impulse = this._context.createBuffer(2, length, this._context.sampleRate);\r\n                impulse.copyToChannel(impulseL, 0, 0);\r\n                impulse.copyToChannel(impulseR, 1, 0);\r\n                this.inputNode.buffer = impulse;\r\n            }\r\n        })\r\n    }\r\n\r\n    connect(input, dest) {\r\n        super.connect(input, dest);\r\n        if(!this._buildImpulseWorker){\r\n            this.configWorker();\r\n        }\r\n    }\r\n\r\n    disconnect() {\r\n        super.disconnect();\r\n        this._buildImpulseWorker.terminate();\r\n        delete this._buildImpulseWorker;\r\n    }\r\n\r\n    _buildImpulse(){\r\n        if(!this._buildImpulseWorker){\r\n            return;\r\n        }\r\n        let rate = this._context.sampleRate;\r\n        const length = rate * this.seconds;\r\n\r\n        const impulse = this._context.createBuffer(2, length, rate);\r\n        const impulseR = new Float32Array(length);\r\n        const impulseL = new Float32Array(length);\r\n        impulse.copyFromChannel(impulseL, 0, 0);\r\n        impulse.copyFromChannel(impulseR, 1, 0);\r\n\r\n        this._buildImpulseWorker.postMessage([{\r\n            type: \"BUILD_IMPULSE\",\r\n            length : length,\r\n            decay : this._decay,\r\n            reverse : this._reverse\r\n        }, impulseL, impulseR])\r\n    }\r\n\r\n    get name(){\r\n        return \"Reverb\";\r\n    }\r\n\r\n    get seconds() {\r\n        return this._seconds;\r\n    }\r\n\r\n    set seconds(value) {\r\n        value = this._valueToRange(value, \"seconds\")\r\n        this._seconds = value;\r\n        this._buildImpulse();\r\n    }\r\n\r\n    get decay() {\r\n        return this._decay;\r\n    }\r\n\r\n    set decay(value) {\r\n        value = this._valueToRange(value, \"decay\")\r\n        this._decay = value;\r\n        this._buildImpulse();\r\n    }\r\n\r\n    get reverse() {\r\n        return this._reverse;\r\n    };\r\n\r\n    set reverse(value) {\r\n        this._reverse = (value === 1 || value === \"true\");\r\n        this._buildImpulse();\r\n    }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}