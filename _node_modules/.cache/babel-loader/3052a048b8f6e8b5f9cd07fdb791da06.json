{"ast":null,"code":"import { createDir, ACTIONS, loadDirRequest } from \"../../actions\";\nimport { takeEvery, select, put, call } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport { generateTemplateName as generateName, findClosesDir } from \"./../../reducers/console/playlist/utils\";\nimport { get } from \"lodash/object\";\nimport UUID from \"uuidjs\";\nimport { handel as loadDirSagaHanedl } from \"./loadDirRequestSaga\";\nexport default function* createDirRequestSaga() {\n  yield takeEvery(ACTIONS.PL_CREATE_DIR_REQEST, callApi);\n}\n\nconst getToken = state => state.user.token;\n\nconst getCurrentSelection = state => state.playList.currentSelection;\n\nconst getParentPath = (state, currentSelection) => findClosesDir(state, currentSelection);\n\nconst generateDirName = (state, parrentPath, base) => generateName(state.playList, parrentPath, base);\n\nconst getParrentId = (state, path) => get(state.playList, path);\n\nfunction* callApi(action) {\n  const {\n    callQuery,\n    queries\n  } = getApi(\"UserAssets\");\n  const token = yield select(getToken);\n  let renameMode = false;\n\n  if (!token) {\n    if (!action.name) {\n      renameMode = true;\n    }\n\n    return yield put(createDir(action.name), UUID.genV1().toString(), renameMode);\n  }\n\n  try {\n    var _result$data;\n\n    yield put(showLoading());\n    const currentSelection = yield select(getCurrentSelection);\n    const parrentPath = yield select(getParentPath, currentSelection);\n    let dirName;\n\n    if (!action.name) {\n      dirName = yield select(generateDirName, parrentPath, \"New folder\");\n      renameMode = true;\n    } else {\n      dirName = yield select(generateDirName, parrentPath, action.name);\n    }\n\n    const parrent = yield select(getParrentId, parrentPath);\n\n    if (!parrent._loaded) {\n      yield call(loadDirSagaHanedl, {\n        path: parrentPath\n      });\n    }\n\n    let result = yield callQuery(queries.createDirQl(parrent._id, dirName), token);\n\n    if (result.errors || !((_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.createDir)) {\n      throw new Error(\"unable to create dir\", JSON.stringify(result.errors));\n    }\n\n    const id = result.data.createDir.id;\n    yield put(createDir(dirName, id, renameMode));\n    yield put(hideLoading());\n  } catch (err) {\n    console.log(\"probllem with api call\");\n    console.log(err.message);\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/createDirRequestSaga.js"],"names":["createDir","ACTIONS","loadDirRequest","takeEvery","select","put","call","getApi","generateTemplateName","generateName","findClosesDir","get","UUID","handel","loadDirSagaHanedl","createDirRequestSaga","PL_CREATE_DIR_REQEST","callApi","getToken","state","user","token","getCurrentSelection","playList","currentSelection","getParentPath","generateDirName","parrentPath","base","getParrentId","path","action","callQuery","queries","renameMode","name","genV1","toString","showLoading","dirName","parrent","_loaded","result","createDirQl","_id","errors","data","Error","JSON","stringify","id","hideLoading","err","console","log","message"],"mappings":"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","sourcesContent":["import { createDir, ACTIONS, loadDirRequest } from \"../../actions\";\r\nimport { takeEvery, select, put, call } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { generateTemplateName as generateName, findClosesDir } from \"./../../reducers/console/playlist/utils\";\r\nimport { get } from \"lodash/object\";\r\nimport UUID from \"uuidjs\"\r\nimport { handel as loadDirSagaHanedl } from \"./loadDirRequestSaga\";\r\n\r\nexport default function* createDirRequestSaga() {\r\n    yield takeEvery(ACTIONS.PL_CREATE_DIR_REQEST, callApi)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nconst getCurrentSelection = state => state.playList.currentSelection;\r\n\r\nconst getParentPath = (state, currentSelection) =>\r\n    findClosesDir(state, currentSelection)\r\n\r\nconst generateDirName = (state, parrentPath, base) =>\r\n    generateName(state.playList, parrentPath, base);\r\n\r\nconst getParrentId = (state, path) => get(state.playList, path);\r\n\r\n\r\n\r\nfunction* callApi(action) {\r\n    const { callQuery, queries } = getApi(\"UserAssets\");\r\n    const token = yield select(getToken);\r\n    let renameMode = false;\r\n    if (!token) {\r\n        if (!action.name) {\r\n            renameMode = true;\r\n        }\r\n        return yield put(createDir(action.name), UUID.genV1().toString(), renameMode);\r\n    }\r\n    try {\r\n        yield put(showLoading());\r\n        const currentSelection = yield select(getCurrentSelection);\r\n        const parrentPath = yield select(getParentPath, currentSelection);\r\n\r\n        let dirName;\r\n        if (!action.name) {\r\n            dirName = yield select(generateDirName, parrentPath, \"New folder\");\r\n            renameMode = true;\r\n        } else {\r\n            dirName = yield select(generateDirName, parrentPath, action.name);\r\n        }\r\n\r\n        const parrent = yield select(getParrentId, parrentPath);\r\n        if (!parrent._loaded) {\r\n            yield call(loadDirSagaHanedl, { path: parrentPath })\r\n        }\r\n\r\n        let result = yield callQuery(queries.createDirQl(parrent._id, dirName), token);\r\n\r\n        if (result.errors || !result.data?.createDir) {\r\n            throw new Error(\"unable to create dir\", JSON.stringify(result.errors))\r\n        }\r\n        const id = result.data.createDir.id;\r\n\r\n        yield put(createDir(dirName, id, renameMode));\r\n        yield put(hideLoading())\r\n    } catch (err) {\r\n        console.log(\"probllem with api call\");\r\n        console.log(err.message);\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}