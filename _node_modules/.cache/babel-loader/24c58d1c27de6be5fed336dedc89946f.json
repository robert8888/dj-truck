{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\Volume\\\\Volume.js\";\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVolumeUp, faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport { toRange } from \"./../../../../../utils/math/argRanges\";\nimport classNames from \"classnames\";\nimport \"./volume.scss\";\n\nconst Volume = ({\n  setVolume\n}) => {\n  const [level, setLevel] = useState(1);\n  const [preMuted, setPremutedLevel] = useState(null);\n  const [icon, setIcon] = useState(faVolumeUp);\n  const [expand, setExpand] = useState(false);\n  const slider = useRef();\n  const sliderGuide = useRef();\n  const sliderProgress = useRef();\n  const sliderThumb = useRef();\n  const volumeBtn = useRef();\n  useEffect(() => {\n    if (localStorage.getItem('volume-level')) {//setLevel(localStorage.getItem('volume-level'))\n    }\n  }, [setLevel]);\n  useEffect(() => {\n    if (level === 0) {\n      setIcon(faVolumeMute);\n    } else {\n      setIcon(faVolumeUp);\n    }\n\n    if (setVolume) {\n      setVolume(level);\n      localStorage.setItem('volume-level');\n    }\n  }, [level]);\n  const sliderMouseDown = useCallback(e => {\n    if (e.target === sliderThumb.current) {\n      return;\n    }\n\n    const guide = sliderGuide.current.getBoundingClientRect();\n    let level = (guide.height - (e.clientY - guide.top)) / guide.height;\n    level = toRange(level, 0, 1);\n    setLevel(level);\n  }, [sliderGuide, setLevel]);\n  const updatePosition = useCallback(level => {\n    const position = sliderGuide.current.getBoundingClientRect().height * level;\n    sliderThumb.current.style.transform = `translateY(-${position}px)`;\n    sliderProgress.current.style.transform = `scaleY(${position}) translateY(-50%)`;\n  }, [sliderProgress, sliderThumb, sliderGuide]);\n  useEffect(() => {\n    updatePosition(level);\n  }, [level]);\n  const windowMouseMove = useCallback((shiftY, e) => {\n    const guide = sliderGuide.current.getBoundingClientRect();\n    let level = (guide.height - (e.clientY - guide.top + shiftY)) / guide.height;\n    level = toRange(level, 0, 1);\n    setLevel(level);\n  }, [sliderGuide, setLevel]);\n  const thumbMouseDown = useCallback(e => {\n    const thumb = sliderThumb.current.getBoundingClientRect();\n    const shiftY = thumb.height / 2 - (e.clientY - thumb.top);\n    const windowMM = windowMouseMove.bind(null, shiftY);\n    window.addEventListener('mousemove', windowMM);\n\n    const abordDrag = e => e.preventDefault();\n\n    const mouseUp = () => {\n      window.removeEventListener('mousemove', windowMM);\n      window.removeEventListener('mouseup', mouseUp);\n      window.removeEventListener('dragstart', abordDrag);\n    };\n\n    window.addEventListener('mouseup', mouseUp);\n    window.addEventListener('dragstart', abordDrag);\n  }, [sliderThumb, windowMouseMove]);\n  const colapse = useCallback(e => {\n    if (e.target !== slider.current && e.target.parentElement !== slider.current && e.target.closest('button') !== volumeBtn.current) {\n      setExpand(false);\n    }\n  }, [slider, setExpand]);\n  useEffect(() => {\n    if (expand) {\n      window.addEventListener('mousedown', colapse);\n      updatePosition(level);\n    } else {\n      window.removeEventListener('mousedown', colapse);\n    }\n  }, [expand, level, updatePosition]);\n  const sliderClassNames = useMemo(() => {\n    return classNames('volume-slider', {\n      'expand': expand\n    });\n  }, [expand]);\n  const btnClick = useCallback(() => {\n    if (!expand) {\n      setExpand(true);\n    } else if (expand) {\n      if (level) {\n        setPremutedLevel(level);\n        setLevel(0);\n      } else if (preMuted) {\n        setLevel(preMuted);\n        setPremutedLevel(null);\n      }\n    }\n  }, [expand, setExpand, level, setLevel, preMuted, setPremutedLevel]);\n  return React.createElement(\"div\", {\n    className: \"volume\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"volume-btn\",\n    onClick: btnClick,\n    ref: volumeBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: sliderClassNames,\n    ref: slider,\n    onMouseDown: sliderMouseDown,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"volume-slider-guide\",\n    ref: sliderGuide,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"volume-slider-progress\",\n    ref: sliderProgress,\n    draggable: \"faslse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"volume-slider-thumb\",\n    ref: sliderThumb,\n    onMouseDown: thumbMouseDown,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })));\n};\n\nexport default Volume;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/Volume/Volume.js"],"names":["React","useState","useEffect","useRef","useCallback","useMemo","FontAwesomeIcon","faVolumeUp","faVolumeMute","toRange","classNames","Volume","setVolume","level","setLevel","preMuted","setPremutedLevel","icon","setIcon","expand","setExpand","slider","sliderGuide","sliderProgress","sliderThumb","volumeBtn","localStorage","getItem","setItem","sliderMouseDown","e","target","current","guide","getBoundingClientRect","height","clientY","top","updatePosition","position","style","transform","windowMouseMove","shiftY","thumbMouseDown","thumb","windowMM","bind","window","addEventListener","abordDrag","preventDefault","mouseUp","removeEventListener","colapse","parentElement","closest","sliderClassNames","btnClick"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, useCallback, useMemo} from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faVolumeUp, faVolumeMute  } from '@fortawesome/free-solid-svg-icons';\r\nimport {toRange} from \"./../../../../../utils/math/argRanges\";\r\nimport classNames from \"classnames\";\r\nimport \"./volume.scss\"\r\n\r\nconst Volume = ({setVolume}) => {\r\n    const [level , setLevel] = useState(1);\r\n    const [preMuted, setPremutedLevel] = useState(null);\r\n    const [icon , setIcon] = useState(faVolumeUp);\r\n    const [expand , setExpand] = useState(false);\r\n    const slider = useRef();\r\n    const sliderGuide = useRef();\r\n    const sliderProgress = useRef();\r\n    const sliderThumb = useRef();\r\n    const volumeBtn = useRef();\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('volume-level')){\r\n            //setLevel(localStorage.getItem('volume-level'))\r\n        }\r\n    }, [setLevel]);\r\n\r\n    useEffect(()=>{\r\n        if(level === 0){\r\n            setIcon(faVolumeMute)\r\n        } else {\r\n            setIcon(faVolumeUp)\r\n        }\r\n        if(setVolume){\r\n            setVolume(level);\r\n            localStorage.setItem('volume-level');\r\n        }\r\n    }, [level])\r\n\r\n    const sliderMouseDown = useCallback((e)=>{\r\n        if(e.target === sliderThumb.current){\r\n            return;\r\n        }\r\n        const guide = sliderGuide.current.getBoundingClientRect();\r\n        let level = (guide.height -  (e.clientY - guide.top)) / guide.height;\r\n        level = toRange(level, 0 ,1);\r\n        setLevel(level)\r\n    }, [sliderGuide, setLevel])\r\n\r\n    const updatePosition = useCallback((level) => {\r\n        const position = sliderGuide.current.getBoundingClientRect().height * level;\r\n        sliderThumb.current.style.transform = `translateY(-${position}px)`;\r\n        sliderProgress.current.style.transform = `scaleY(${position}) translateY(-50%)`\r\n    }, [sliderProgress, sliderThumb, sliderGuide])\r\n\r\n    useEffect(()=>{\r\n        updatePosition(level);\r\n    }, [level])\r\n\r\n    const windowMouseMove = useCallback((shiftY, e)=>{\r\n        const guide = sliderGuide.current.getBoundingClientRect();\r\n        let level = (guide.height - (e.clientY - guide.top + shiftY)) / guide.height;\r\n        level = toRange(level, 0 ,1);\r\n        setLevel(level)\r\n    }, [sliderGuide, setLevel])\r\n\r\n    const thumbMouseDown = useCallback((e)=>{\r\n        const thumb = sliderThumb.current.getBoundingClientRect()\r\n        const shiftY = (thumb.height / 2 )  - (e.clientY - thumb.top);\r\n        const windowMM = windowMouseMove.bind(null, shiftY);\r\n        window.addEventListener('mousemove', windowMM)\r\n        const abordDrag = e => e.preventDefault()\r\n        const mouseUp = ()=>{\r\n            window.removeEventListener('mousemove', windowMM);\r\n            window.removeEventListener('mouseup', mouseUp);\r\n            window.removeEventListener('dragstart', abordDrag);\r\n        }\r\n        window.addEventListener('mouseup', mouseUp);\r\n        window.addEventListener('dragstart', abordDrag);\r\n    }, [sliderThumb, windowMouseMove])\r\n\r\n    const colapse = useCallback((e)=>{\r\n        if( e.target !== slider.current && \r\n            e.target.parentElement !== slider.current &&\r\n            e.target.closest('button') !== volumeBtn.current ){\r\n            setExpand(false)\r\n        }\r\n    }, [slider, setExpand]);\r\n\r\n    useEffect(()=>{\r\n        if(expand){\r\n            window.addEventListener('mousedown', colapse)\r\n            updatePosition(level)\r\n        } else {\r\n            window.removeEventListener('mousedown', colapse);\r\n        }\r\n    }, [expand, \r\n        level,\r\n        updatePosition])\r\n\r\n    const sliderClassNames = useMemo(()=>{\r\n        return classNames(\r\n            'volume-slider', {\r\n                'expand' : expand,\r\n            }\r\n        )\r\n    }, [expand])\r\n\r\n    const btnClick = useCallback(()=>{\r\n        if(!expand){\r\n            setExpand(true)\r\n        } else if(expand){\r\n            if(level){\r\n                setPremutedLevel(level)\r\n                setLevel(0)\r\n            } else if(preMuted){\r\n                setLevel(preMuted);\r\n                setPremutedLevel(null);\r\n            }\r\n        }\r\n    }, [expand,\r\n        setExpand,\r\n        level,\r\n        setLevel, \r\n        preMuted, \r\n        setPremutedLevel])\r\n\r\n    return (\r\n        <div className=\"volume\">\r\n            <button className=\"volume-btn\" onClick={btnClick} ref={volumeBtn}>\r\n                <FontAwesomeIcon icon={icon}/>\r\n            </button>\r\n            <div className={sliderClassNames} ref={slider} onMouseDown={sliderMouseDown} draggable=\"false\">\r\n                <div className=\"volume-slider-guide\" ref={sliderGuide} draggable=\"false\"/>\r\n                <div className=\"volume-slider-progress\" ref={sliderProgress} draggable=\"faslse\"/>\r\n                <div className=\"volume-slider-thumb\" ref={sliderThumb} onMouseDown={thumbMouseDown} draggable=\"false\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Volume;"]},"metadata":{},"sourceType":"module"}