{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Hooks\\\\Emoticons\\\\Emoticons\\\\Emoticons.js\";\nimport React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport UUID from 'uuidjs';\nimport icons from \"./emoji.json\";\nconst iconsOnPanel = 30;\nconst buttonStyle = {\n  background: 'transparent',\n  border: 'none',\n  boxShadow: 'none',\n  outline: 'none',\n  width: '16.6%',\n  height: '20%'\n};\nconst sectionStyle = {\n  width: '100%',\n  height: '100%',\n  display: 'inline-block',\n  verticalAlign: 'top',\n  whiteSpace: 'normal'\n};\nconst slideContainer = {\n  overflow: 'hidden',\n  width: '210px',\n  whiteSpace: 'nowrap',\n  display: 'inline-block',\n  position: 'sticki',\n  bottom: '50px',\n  transform: ''\n};\nconst containerStyle = {\n  position: 'absolute',\n  //display: 'inline-block',\n  transform: 'translate(-150px ,-185px)',\n  width: '250px',\n  height: '130px',\n  background: 'white',\n  boxSizing: 'content-box',\n  padding: '5px'\n};\nconst sliderNavigationButton = { ...buttonStyle,\n  display: 'inline-block',\n  width: '20px',\n  height: '100%',\n  top: '50%',\n  verticalAlign: 'top'\n};\nconst iconStyle = {\n  transform: 'translateX(-25%)'\n};\n\nconst Emoticons = ({\n  onSelect,\n  toggle\n}) => {\n  const [iconPanels, setPanels] = useState(null);\n  const createPanels = useCallback(() => {\n    let panels = [];\n\n    for (let i = 0; i < icons.length; i += iconsOnPanel) {\n      let panel = [];\n\n      for (let j = i; j < iconsOnPanel + i && i + j < icons.length; j++) {\n        let icon = icons[j];\n        panel.push(React.createElement(\"button\", {\n          key: 'icon-' + (i + j),\n          style: buttonStyle,\n          onClick: onSelect.bind(null, icon.emoji),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, icon.emoji));\n      }\n\n      panels.push(React.createElement(\"section\", {\n        style: sectionStyle,\n        className: \"emoticons-panel\",\n        key: 'pannel-' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, panel));\n    }\n\n    return panels;\n  }, []);\n  const [current, setCurrent] = useState(0);\n  const next = useCallback(event => {\n    event.preventDefault();\n    setCurrent(c => {\n      if (c + 1 < iconPanels.length) {\n        return c + 1;\n      }\n\n      return c;\n    });\n  }, [iconPanels]);\n  const prev = useCallback(event => {\n    event.preventDefault();\n    setCurrent(c => {\n      if (c - 1 > 0) {\n        return c - 1;\n      }\n\n      return c;\n    });\n  }, []);\n  const [display, setDisplay] = useState(false);\n  const toggleHandler = useCallback(() => {\n    if (!iconPanels) {\n      setPanels(createPanels());\n    }\n\n    setDisplay(display => !display);\n  }, [setDisplay, setPanels, iconPanels, createPanels]);\n  useEffect(() => {\n    toggle.current = toggleHandler;\n  }, [toggle]);\n  const hide = useCallback(event => {\n    if (!event.target.closest('.emoticons-container') && !event.target.closest('.emoticon-btn')) {\n      window.removeEventListener('mousedown', hide);\n      setDisplay(false);\n    }\n  }, [setDisplay]);\n  useEffect(() => {\n    if (display) {\n      window.addEventListener('mousedown', hide);\n    } else {\n      console.log();\n      window.removeEventListener('mousedown', hide);\n    }\n  }, [display, setDisplay, hide]);\n  return React.createElement(\"div\", {\n    className: \"emoticons-container emoticons-popup\",\n    style: { ...containerStyle,\n      display: display ? 'block' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-prev\",\n    style: sliderNavigationButton,\n    onClick: prev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faAngleDoubleLeft,\n    style: iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"emoticons-slider\",\n    style: slideContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"emoticons-slides\",\n    style: {\n      transform: `translateX(-${current * 210}px)`,\n      transition: 'transform 0.2s'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, iconPanels)), React.createElement(\"button\", {\n    className: \"btn-prev\",\n    style: sliderNavigationButton,\n    onClick: next,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faAngleDoubleRight,\n    style: iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })));\n};\n\nexport default Emoticons;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/Emoticons/Emoticons/Emoticons.js"],"names":["React","useCallback","useMemo","useState","useEffect","FontAwesomeIcon","faAngleDoubleLeft","faAngleDoubleRight","UUID","icons","iconsOnPanel","buttonStyle","background","border","boxShadow","outline","width","height","sectionStyle","display","verticalAlign","whiteSpace","slideContainer","overflow","position","bottom","transform","containerStyle","boxSizing","padding","sliderNavigationButton","top","iconStyle","Emoticons","onSelect","toggle","iconPanels","setPanels","createPanels","panels","i","length","panel","j","icon","push","bind","emoji","current","setCurrent","next","event","preventDefault","c","prev","setDisplay","toggleHandler","hide","target","closest","window","removeEventListener","addEventListener","console","log","transition"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport UUID from 'uuidjs'\r\nimport icons from \"./emoji.json\";\r\nconst iconsOnPanel = 30;\r\n\r\nconst buttonStyle = {\r\n    background: 'transparent',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    outline: 'none',\r\n    width: '16.6%',\r\n    height: '20%'\r\n}\r\n\r\nconst sectionStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'inline-block',\r\n    verticalAlign: 'top',\r\n    whiteSpace: 'normal'\r\n}\r\n\r\nconst slideContainer = {\r\n    overflow: 'hidden',\r\n    width: '210px',\r\n    whiteSpace: 'nowrap',\r\n    display: 'inline-block',\r\n    position: 'sticki',\r\n    bottom: '50px',\r\n    transform: '',\r\n\r\n}\r\n\r\nconst containerStyle = {\r\n    position: 'absolute',\r\n    //display: 'inline-block',\r\n    transform: 'translate(-150px ,-185px)',\r\n    width: '250px',\r\n    height: '130px',\r\n    background: 'white',\r\n    boxSizing: 'content-box',\r\n    padding: '5px',\r\n}\r\n\r\nconst sliderNavigationButton = {\r\n    ...buttonStyle,\r\n    display: 'inline-block',\r\n    width: '20px',\r\n    height: '100%',\r\n    top: '50%',\r\n    verticalAlign: 'top'\r\n}\r\n\r\nconst iconStyle = {\r\n    transform: 'translateX(-25%)',\r\n}\r\n\r\nconst Emoticons = ({ onSelect, toggle }) => {\r\n    const [iconPanels , setPanels] = useState(null);\r\n\r\n    const createPanels = useCallback(() => {\r\n        let panels = [];\r\n        for (let i = 0; i < icons.length; i += iconsOnPanel) {\r\n            let panel = [];\r\n            for (let j = i; (j < iconsOnPanel + i) && (i + j < icons.length); j++) {\r\n                let icon = icons[j]\r\n                panel.push(\r\n                    <button key={'icon-' + (i + j)} style={buttonStyle} onClick={onSelect.bind(null, icon.emoji)}>{icon.emoji}</button>\r\n                )\r\n            }\r\n            panels.push(\r\n                <section style={sectionStyle} className=\"emoticons-panel\" key={'pannel-' + i}>\r\n                    {panel}\r\n                </section>\r\n            )\r\n        }\r\n        return panels;\r\n    }, [])\r\n\r\n    const [current, setCurrent] = useState(0);\r\n\r\n    const next = useCallback((event) => {\r\n        event.preventDefault();\r\n        setCurrent(c => {\r\n            if (c + 1 < iconPanels.length) {\r\n                return c + 1;\r\n            }\r\n            return c;\r\n        });\r\n    }, [iconPanels])\r\n\r\n    const prev = useCallback((event) => {\r\n        event.preventDefault();\r\n        setCurrent(c => {\r\n            if (c - 1 > 0) {\r\n                return c - 1;\r\n            }\r\n            return c;\r\n        })\r\n    }, [])\r\n\r\n    const [display, setDisplay] = useState(false);\r\n\r\n    const toggleHandler = useCallback(() => {\r\n        if(!iconPanels){\r\n            setPanels(createPanels())\r\n        }\r\n        setDisplay(display => !display);\r\n    }, [setDisplay, setPanels, iconPanels, createPanels])\r\n\r\n    useEffect(() => {\r\n        toggle.current = toggleHandler\r\n    }, [toggle])\r\n\r\n    const hide = useCallback( event =>{\r\n        if(!event.target.closest('.emoticons-container') && \r\n            !event.target.closest('.emoticon-btn')){\r\n            window.removeEventListener('mousedown', hide);\r\n            setDisplay(false)\r\n        }\r\n    },[setDisplay])\r\n\r\n    useEffect(()=>{\r\n        if(display){\r\n            window.addEventListener('mousedown', hide);\r\n        } else {\r\n            console.log()\r\n            window.removeEventListener('mousedown', hide)\r\n        }\r\n    }, [display, setDisplay, hide])\r\n\r\n    return (\r\n        <div className=\"emoticons-container emoticons-popup\" style={{ ...containerStyle, display: (display) ? 'block' : 'none' }}>\r\n            <button className=\"btn-prev\" style={sliderNavigationButton} onClick={prev}>\r\n                <FontAwesomeIcon icon={faAngleDoubleLeft} style={iconStyle} />\r\n            </button>\r\n            <div className=\"emoticons-slider\" style={slideContainer}>\r\n                <div className=\"emoticons-slides\" style={{ transform: `translateX(-${current * 210}px)`, transition: 'transform 0.2s' }}>\r\n                    {iconPanels}\r\n                </div>\r\n\r\n            </div>\r\n            <button className=\"btn-prev\" style={sliderNavigationButton} onClick={next}>\r\n                <FontAwesomeIcon icon={faAngleDoubleRight} style={iconStyle} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emoticons;"]},"metadata":{},"sourceType":"module"}