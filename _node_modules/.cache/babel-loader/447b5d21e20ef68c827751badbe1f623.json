{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\PitchControl\\\\PitchControl.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./pitch-control.scss\";\n\nclass PitchControl extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      sliderRange: null,\n      sliderCurrnetPosition: null,\n      sliderPrevPosition: null,\n      isDragged: false\n    };\n\n    this.evalValue = () => {\n      let from = this.props.from;\n      let to = this.props.to;\n      let range = from * to < 0 ? Math.abs(to) + Math.abs(from) : to - from;\n      console.log(range);\n      let progress = this.state.sliderRange / this.state.sliderCurrnetPosition;\n    };\n\n    this.setPosition = (currentPosition, prevPosition) => {\n      this.setState({ ...this.state,\n        sliderCurrnetPosition: currentPosition,\n        sliderPrevPosition: prevPosition || this.state.sliderPrevPosition\n      });\n      this.evalValue();\n    };\n\n    this.mouseDownHandle = (event, sliderRange) => {\n      if (event.target === this.sliderAreaElement.current || event.target === this.sliderRangeElement.current) {\n        let clickY = event.clientY - this.sliderAreaElement.current.getBoundingClientRect().top;\n        this.setPosition(clickY, this.state.sliderCurrnetPosition);\n      } else if (event.target === this.sliderThumbElement.current) {\n        this.setState({ ...this.state,\n          isDragged: true\n        });\n        document.addEventListener('mousemove', this.mouseMoveHandler.bind(this));\n        document.addEventListener('dragstart', e => e.preventDefault());\n      }\n\n      document.addEventListener('mouseup', this.mouseUpHandler);\n      document.addEventListener('dragend', this.mouseUpHandler);\n    };\n\n    this.mouseUpHandler = event => {\n      if (this.state.isDragged) {\n        this.setState({ ...this.state,\n          isDragged: false\n        });\n      } else {\n        this.setPosition(this.state.sliderPrevPosition);\n      }\n\n      document.removeEventListener('mousemove', this.mouseMoveHandler.bind(this));\n      document.removeEventListener('mouseup', this.mouseUpHandler);\n      document.removeEventListener('dragend', this.mouseUpHandler);\n    };\n\n    this.mouseMoveHandler = event => {\n      if (!this.state.isDragged) return;\n      const topOffset = this.sliderAreaElement.current.getBoundingClientRect().top;\n      const thumbHeight = this.sliderThumbElement.current.getBoundingClientRect().height;\n      let position = event.clientY - topOffset;\n      position = Math.min(Math.max(position, thumbHeight / 2), this.state.sliderRange + thumbHeight / 2);\n      this.setPosition(position);\n    };\n\n    this.sliderRangeElement = React.createRef(null);\n    this.sliderThumbElement = React.createRef(null);\n    this.sliderAreaElement = React.createRef(null);\n  }\n\n  componentDidMount() {\n    let top = parseInt(window.getComputedStyle(this.sliderThumbElement.current).top);\n    let range = parseInt(window.getComputedStyle(this.sliderRangeElement.current).height);\n    this.setState(state => {\n      const _state = { ...state\n      };\n      _state.sliderCurrnetPosition = top;\n      _state.sliderRange = range;\n      return _state;\n    });\n    this.sliderAreaElement.current.addEventListener('mousedown', this.mouseDownHandle.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pitch-control \" + \"pitch-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.sliderAreaElement,\n      className: \"pitch-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.sliderRangeElement,\n      className: \"slider-range\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      ref: this.sliderThumbElement,\n      style: (this.state.sliderCurrnetPosition !== null || this.state.sliderCurrnetPosition !== undefined) && {\n        top: this.state.sliderCurrnetPosition\n      },\n      className: \"slider-thumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default PitchControl;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/PitchControl/PitchControl.js"],"names":["React","useState","useEffect","useRef","PitchControl","Component","constructor","state","sliderRange","sliderCurrnetPosition","sliderPrevPosition","isDragged","evalValue","from","props","to","range","Math","abs","console","log","progress","setPosition","currentPosition","prevPosition","setState","mouseDownHandle","event","target","sliderAreaElement","current","sliderRangeElement","clickY","clientY","getBoundingClientRect","top","sliderThumbElement","document","addEventListener","mouseMoveHandler","bind","e","preventDefault","mouseUpHandler","removeEventListener","topOffset","thumbHeight","height","position","min","max","createRef","componentDidMount","parseInt","window","getComputedStyle","_state","render","name","undefined"],"mappings":"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","sourcesContent":["import React, { useState , useEffect, useRef} from \"react\";\r\nimport \"./pitch-control.scss\";\r\n\r\nclass PitchControl extends React.Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.sliderRangeElement = React.createRef(null);\r\n        this.sliderThumbElement = React.createRef(null);\r\n        this.sliderAreaElement = React.createRef(null);\r\n    }\r\n\r\n    state = {\r\n        sliderRange: null,\r\n        sliderCurrnetPosition: null,\r\n        sliderPrevPosition: null,\r\n        isDragged : false,\r\n    }\r\n\r\n    evalValue = () => {\r\n        let from = this.props.from;\r\n        let to = this.props.to;\r\n        let range = (from * to < 0) ?  Math.abs(to) + Math.abs(from) : to - from;\r\n\r\n        console.log(range);\r\n        let progress = this.state.sliderRange / this.state.sliderCurrnetPosition;\r\n    }\r\n\r\n    setPosition = (currentPosition, prevPosition) => {\r\n        this.setState({...this.state, \r\n            sliderCurrnetPosition : currentPosition,\r\n            sliderPrevPosition : prevPosition || this.state.sliderPrevPosition,\r\n        });\r\n        \r\n        this.evalValue();\r\n    }\r\n\r\n    mouseDownHandle = (event, sliderRange) =>{\r\n        if(event.target === this.sliderAreaElement.current || event.target === this.sliderRangeElement.current){ \r\n            let clickY = event.clientY - this.sliderAreaElement.current.getBoundingClientRect().top;\r\n            this.setPosition(clickY, this.state.sliderCurrnetPosition);\r\n        } else \r\n            if(event.target === this.sliderThumbElement.current){ \r\n            this.setState({...this.state, isDragged: true});\r\n            document.addEventListener('mousemove',  this.mouseMoveHandler.bind(this))\r\n            document.addEventListener('dragstart', e => e.preventDefault())\r\n        }\r\n        document.addEventListener('mouseup', this.mouseUpHandler);\r\n        document.addEventListener('dragend', this.mouseUpHandler);\r\n    }\r\n\r\n    mouseUpHandler = event => {\r\n        if(this.state.isDragged){\r\n            this.setState({...this.state, isDragged: false});\r\n        } else {\r\n            this.setPosition(this.state.sliderPrevPosition);\r\n        }\r\n\r\n        document.removeEventListener('mousemove', this.mouseMoveHandler.bind(this));\r\n        document.removeEventListener('mouseup', this.mouseUpHandler);\r\n        document.removeEventListener('dragend', this.mouseUpHandler);\r\n    }\r\n\r\n    mouseMoveHandler = (event) =>{\r\n        if(!this.state.isDragged) return;\r\n\r\n        const topOffset = this.sliderAreaElement.current.getBoundingClientRect().top;\r\n        const thumbHeight = this.sliderThumbElement.current.getBoundingClientRect().height;\r\n\r\n        let position = event.clientY - topOffset;\r\n        position = Math.min(Math.max(position, thumbHeight/2), this.state.sliderRange + thumbHeight/2);\r\n\r\n        this.setPosition(position);\r\n    }\r\n\r\n    componentDidMount(){\r\n        let top = parseInt(window.getComputedStyle(this.sliderThumbElement.current).top);\r\n        let range = parseInt(window.getComputedStyle(this.sliderRangeElement.current).height)\r\n\r\n        this.setState( state => {\r\n            const _state = {...state};\r\n            _state.sliderCurrnetPosition = top;\r\n            _state.sliderRange = range;\r\n            return _state;\r\n        })\r\n\r\n        this.sliderAreaElement.current.addEventListener('mousedown',  this.mouseDownHandle.bind(this));\r\n    }\r\n\r\n\r\n    render(){\r\n            return (\r\n                <div className={\"pitch-control \" + \"pitch-\" + this.props.name}>\r\n                    <div ref={this.sliderAreaElement} className=\"pitch-area\">\r\n                        <div ref={this.sliderRangeElement} className=\"slider-range\"/>\r\n                        <div ref={this.sliderThumbElement} style={ (this.state.sliderCurrnetPosition !== null || this.state.sliderCurrnetPosition !== undefined) && {top: this.state.sliderCurrnetPosition}}  className=\"slider-thumb\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n}\r\n\r\nexport default PitchControl;"]},"metadata":{},"sourceType":"module"}