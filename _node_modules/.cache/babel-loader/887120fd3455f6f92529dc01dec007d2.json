{"ast":null,"code":"import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import\"./peak-level-meter--vertical.scss\";// there is 30 leds indicators\n// 25 is blue and calc from bottom last 25 is zero dB.\nvar PeakLevelMater=/*#__PURE__*/function(_React$PureComponent){_inherits(PeakLevelMater,_React$PureComponent);function PeakLevelMater(){var _getPrototypeOf2;var _this;_classCallCheck(this,PeakLevelMater);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(PeakLevelMater)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.size=30;_this.rightChannel=[];_this.leftChannel=[];_this.leftRefs=new Array(_this.size);_this.rightRefs=new Array(_this.size);for(var i=0;i<_this.size;i++){_this.leftRefs[i]=React.createRef();_this.rightRefs[i]=React.createRef();_this.rightChannel.push(React.createElement(\"div\",{ref:_this.rightRefs[i],key:'right-'+i,className:\"level-meter-led right-bar led-\"+i}));_this.leftChannel.push(React.createElement(\"div\",{ref:_this.leftRefs[i],key:'left-'+i,className:\"level-meter-led left-bar led-\"+i}));}// this.mixerChannelInterface = this.props.interface; \n_this.breakFlag=false;_this.lastCall=0;return _this;}_createClass(PeakLevelMater,[{key:\"updateLedStates\",value:function updateLedStates(){if(this.breakFlag){return;}requestAnimationFrame(this.updateLedStates.bind(this));//throtell to 50ms\nvar now=new Date().getTime();if(now-this.lastCall<30){return;}this.lastCall=now;//drawing ...\nvar peakMeter=this.props.interface.getPeakMeter();var ledOn=25+peakMeter.peakdB/2;for(var i=0;i<this.size;i++){this.leftRefs[i].current.classList.toggle(\"led--on\",i<=ledOn);this.rightRefs[i].current.classList.toggle(\"led--on\",i<=ledOn);}}},{key:\"checkActive\",value:function checkActive(){if(this.props.active&&this.props.interface){this.breakFlag=false;setTimeout(this.updateLedStates.bind(this),100);}else{this.breakFlag=true;}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.checkActive();}},{key:\"componentDidMount\",value:function componentDidMount(){this.checkActive();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.breakFlag=true;}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"peak-level-meter \"+this.props.className},React.createElement(\"div\",{className:\"meter-channel\"},this.leftChannel),React.createElement(\"div\",{className:\"meter-channel\"},this.rightChannel));}}]);return PeakLevelMater;}(React.PureComponent);export default PeakLevelMater;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Mixer/componets/PeakLevelMeter/PeakLevelMeterV.js"],"names":["React","PeakLevelMater","args","size","rightChannel","leftChannel","leftRefs","Array","rightRefs","i","createRef","push","breakFlag","lastCall","requestAnimationFrame","updateLedStates","bind","now","Date","getTime","peakMeter","props","interface","getPeakMeter","ledOn","peakdB","current","classList","toggle","active","setTimeout","checkActive","className","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nimport \"./peak-level-meter--vertical.scss\";\r\n// there is 30 leds indicators\r\n// 25 is blue and calc from bottom last 25 is zero dB.\r\n\r\nclass PeakLevelMater extends React.PureComponent {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.size = 30;\r\n\r\n\r\n        this.rightChannel = [];\r\n        this.leftChannel = [];\r\n\r\n        this.leftRefs = new Array(this.size);\r\n        this.rightRefs = new Array(this.size);\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            this.leftRefs[i] = React.createRef();\r\n            this.rightRefs[i] = React.createRef();\r\n\r\n            this.rightChannel.push(\r\n                <div\r\n                    ref={this.rightRefs[i]}\r\n                    key={'right-' + i}\r\n                    className={\"level-meter-led right-bar led-\" + i} />\r\n            )\r\n            this.leftChannel.push(\r\n                <div\r\n                    ref={this.leftRefs[i]}\r\n                    key={'left-' + i}\r\n                    className={\"level-meter-led left-bar led-\" + i} />\r\n            )\r\n        }\r\n\r\n       // this.mixerChannelInterface = this.props.interface; \r\n        this.breakFlag = false;\r\n        this.lastCall = 0;\r\n\r\n    }\r\n\r\n    updateLedStates() {\r\n        if (this.breakFlag) {\r\n            return;\r\n        }\r\n\r\n        requestAnimationFrame(this.updateLedStates.bind(this));\r\n        //throtell to 50ms\r\n        const now = new Date().getTime();\r\n        if (now - this.lastCall < 30) {\r\n            return;\r\n        }\r\n        this.lastCall = now;\r\n\r\n        //drawing ...\r\n        let peakMeter = this.props.interface.getPeakMeter();\r\n        let ledOn = 25 + peakMeter.peakdB / 2;\r\n\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n\r\n            this.leftRefs[i].current.classList.toggle(\"led--on\", (i <= ledOn))\r\n            this.rightRefs[i].current.classList.toggle(\"led--on\", (i <= ledOn))\r\n        }\r\n    }\r\n\r\n    checkActive(){\r\n\r\n        if(this.props.active && this.props.interface){\r\n            this.breakFlag = false;\r\n            setTimeout(this.updateLedStates.bind(this), 100);\r\n        } else {\r\n            this.breakFlag = true;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.checkActive();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.checkActive();\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.breakFlag = true;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={\"peak-level-meter \" + this.props.className}>\r\n                <div className=\"meter-channel\">\r\n                    {this.leftChannel}\r\n                </div>\r\n                <div className=\"meter-channel\">\r\n                    {this.rightChannel}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default PeakLevelMater;"]},"metadata":{},"sourceType":"module"}