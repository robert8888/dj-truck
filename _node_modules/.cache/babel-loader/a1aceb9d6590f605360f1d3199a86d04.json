{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Carousel-slider\\\\Slider.js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport UUID from \"uuidjs\";\nimport style from \"./slider.scss\";\n\nconst rmLast = (arr, direction) => {\n  let last = arr.length - 1;\n  let _arr = [...arr];\n\n  while (last >= 0) {\n    if (direction === \"next\" && arr[last] < 0) break;\n    if (direction === \"prev\" && arr[last] > 0) break;\n\n    _arr.pop();\n\n    last--;\n  }\n\n  return _arr;\n};\n\nconst sumLastSameDirection = arr => {\n  let _arr = [...arr];\n\n  if (arr[arr.length - 1] * arr[arr.length - 2] > 0) {\n    let last = _arr.pop();\n\n    let prev = _arr.pop();\n\n    _arr.push(last + prev);\n  }\n\n  return _arr;\n};\n\nconst Slider = ({\n  slides: initSlides,\n  next: nextHandle,\n  prev: prevHandle,\n  minSlideWidth = style.minSlideWidth,\n  onStepDragging = false\n}) => {\n  const slider = useRef();\n  const [active, setActive] = useState(false); // const [overLapRatio] = useState(5);\n\n  const [animationDuration] = useState(parseInt(style.animatioDuration) * 1000);\n  const [_containerRect, setContainerRect] = useState(null);\n  const [slideWidth, setSlideWidth] = useState(null);\n  const [visibleSlides, setVisibleSlides] = useState(null);\n  const [slides, setSlides] =\n  /* useState(initSlides);*/\n  useState([...initSlides, ...initSlides, ...initSlides]);\n  const [actionQueue, setActionQueue] = useState([]);\n  const [isTransitionRunning, setTransitionRunning] = useState(false);\n  const transitionActive = useRef();\n  const shift = useRef();\n  const balancedShift = useRef();\n  const translate = useRef();\n  const containerRect = useCallback(() => {\n    if (!slider.current) return 0;\n    let rect = _containerRect;\n\n    if (!rect) {\n      rect = slider.current.parentElement.getBoundingClientRect();\n      setContainerRect(rect);\n    }\n\n    return rect;\n  }, [_containerRect, setContainerRect]);\n  const setTransition = useCallback(value => {\n    if (!slider.current) return;\n\n    if (value) {\n      slider.current.classList.add('slider-transition--active');\n      transitionActive.current = true;\n    } else {\n      slider.current.classList.remove('slider-transition--active');\n      transitionActive.current = false;\n      setTransitionRunning(false);\n    }\n  }, [slider, transitionActive, setTransitionRunning]);\n  const setTranslate = useCallback(target => {\n    if (!slider.current) return;\n    slider.current.style.transform = `translateX(${target}px)`;\n    translate.current = target;\n  }, [slider, translate]);\n  const setPosition = useCallback(position => {\n    if (!slider.current || isNaN(position)) return;\n    setTranslate(position * slideWidth);\n    transitionActive.current && setTransitionRunning(true);\n  }, [slider, shift, slideWidth, setTransitionRunning, setTranslate, transitionActive]); // useEffect(()=>{\n  //     console.log(\"in visible\", visibleSlides, initSlides.length)\n  //     if(!visibleSlides || visibleSlides > initSlides.length) return;\n  //     setActive(true);\n  //     let slides = [].concat(Array(overLapRatio).fill(1).map( () => initSlides)).flat();\n  //     setSlides(slides);\n  // }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio])\n\n  useEffect(() => {\n    if (!containerRect || !minSlideWidth || !slider.current) return;\n    const containerWidth = containerRect().width;\n    const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\n    setVisibleSlides(visibleSlides);\n  }, [containerRect, minSlideWidth, slider, setVisibleSlides]);\n  useEffect(() => {\n    if (!slides) return;\n    shift.current = -initSlides.length;\n    balancedShift.current = shift.current;\n    setPosition(shift.current);\n  }, [slideWidth, setPosition, shift, balancedShift, initSlides, slides]);\n  useEffect(() => {\n    const resetSize = () => setContainerRect(null);\n\n    window.addEventListener(\"resize\", resetSize);\n    return () => window.removeEventListener(\"resize\", resetSize);\n  }, [setContainerRect]);\n  useEffect(() => {\n    if (!visibleSlides || !containerRect) return;\n    const slideWidth = containerRect().width / visibleSlides;\n    setSlideWidth(slideWidth);\n    slider.current.style.width = slideWidth * slides.length + \"px\";\n  }, [containerRect, visibleSlides, slides]);\n  const appendSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.shift();\n\n        _slides.push(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const prependSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.pop();\n\n        _slides.unshift(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const balance = useCallback(() => {\n    const diff = balancedShift.current - shift.current;\n\n    if (!diff) {\n      return;\n    }\n\n    diff < 0 ? prependSlides(Math.abs(diff)) : appendSlides(diff);\n    setTransition(false);\n    shift.current = balancedShift.current;\n    setPosition(shift.current);\n  }, [shift, balancedShift, prependSlides, appendSlides, setTransition, setTransitionRunning]);\n  const action = useCallback(() => {\n    if (!actionQueue.length) {\n      balance();\n      return;\n    }\n\n    const queue = [...actionQueue];\n    const direction = queue.shift();\n    setTransition(false);\n    direction > 0 ? appendSlides(direction) : prependSlides(Math.abs(direction));\n    setPosition(shift.current + direction);\n    setTimeout(() => {\n      setTransition(true);\n      setPosition(shift.current);\n      setTimeout(() => {\n        setTransitionRunning(false);\n      }, animationDuration);\n    }, 0);\n    setActionQueue(queue);\n  }, [setTransition, setTransitionRunning, setPosition, actionQueue, setActionQueue, balance]);\n  useEffect(() => {\n    console.log(\"call action\", isTransitionRunning);\n\n    if (!isTransitionRunning) {\n      action();\n    }\n  }, [isTransitionRunning, action]);\n  const next = useCallback(() => {\n    setActionQueue(queue => {\n      const _queue = rmLast(queue, \"prev\");\n\n      return [..._queue, 1];\n      return sumLastSameDirection([..._queue, 1]);\n    });\n  }, [setActionQueue]);\n  useEffect(() => nextHandle && nextHandle(next), [next, nextHandle]);\n  const prev = useCallback(() => {\n    setActionQueue(queue => {\n      const _queue = rmLast(queue, \"next\");\n\n      return sumLastSameDirection([..._queue, -1]);\n    });\n  }, [setActionQueue]);\n  useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle]);\n  const endDraging = useCallback(() => {\n    let next = Math.round(translate.current / slideWidth);\n\n    if (onStepDragging) {\n      next = next > shift.current ? shift.current + 1 : shift.current - 1;\n    }\n\n    shift.current = next;\n    setPosition(shift.current);\n    setTimeout(() => setTransitionRunning(false), animationDuration);\n  }, [translate, setTranslate, shift, slideWidth, setTransitionRunning]);\n  const mouseMove = useCallback((shiftX, event) => {\n    const clientX = event.type === \"touchmove\" ? event.touches[0].clientX : event.clientX;\n    setTranslate(clientX - shiftX);\n  }, [setTranslate]);\n  const mouseDown = useCallback(event => {\n    const sliderContainer = event.target.closest(\".carousel-slider-container\");\n    if (!sliderContainer) return;\n    const rect = sliderContainer.getBoundingClientRect();\n    const clientX = event.type === \"touchstart\" ? event.touches[0].clientX : event.clientX;\n    const shiftX = clientX - rect.left - shift.current * slideWidth;\n    const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\n\n    const mouseUp = () => {\n      window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\n      window.removeEventListener(\"mouseup\", mouseUp);\n      window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\n      window.removeEventListener(\"touchend\", mouseUp);\n      setTransition(true);\n      endDraging();\n    };\n\n    window.addEventListener(\"mousemove\", mouseMoveWithArgs);\n    window.addEventListener(\"touchmove\", mouseMoveWithArgs);\n    window.addEventListener(\"mouseup\", mouseUp);\n    window.addEventListener(\"touchend\", mouseUp);\n    setTransition(false);\n  }, [setTransition, shift, slideWidth, endDraging]);\n  console.log(\"action quueue\", actionQueue);\n  return React.createElement(\"div\", {\n    className: \"carousel-slider-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"carousel-slider\",\n    ref: slider,\n    onMouseDown: mouseDown,\n    onTouchStart: mouseDown,\n    onDrag: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, slides && slides instanceof Array && slides.map(slide => React.createElement(\"li\", {\n    key: UUID.genV1(),\n    className: \"slide\",\n    style: {\n      width: minSlideWidth || \"initial\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, slide))));\n};\n\nexport default Slider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Carousel-slider/Slider.js"],"names":["React","useCallback","useEffect","useRef","useState","UUID","style","rmLast","arr","direction","last","length","_arr","pop","sumLastSameDirection","prev","push","Slider","slides","initSlides","next","nextHandle","prevHandle","minSlideWidth","onStepDragging","slider","active","setActive","animationDuration","parseInt","animatioDuration","_containerRect","setContainerRect","slideWidth","setSlideWidth","visibleSlides","setVisibleSlides","setSlides","actionQueue","setActionQueue","isTransitionRunning","setTransitionRunning","transitionActive","shift","balancedShift","translate","containerRect","current","rect","parentElement","getBoundingClientRect","setTransition","value","classList","add","remove","setTranslate","target","transform","setPosition","position","isNaN","containerWidth","width","resetSize","window","addEventListener","removeEventListener","appendSlides","amount","_slides","i","slide","prependSlides","unshift","balance","diff","Math","abs","action","queue","setTimeout","console","log","_queue","endDraging","round","mouseMove","shiftX","event","clientX","type","touches","mouseDown","sliderContainer","closest","left","mouseMoveWithArgs","bind","mouseUp","e","preventDefault","Array","map","genV1"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport UUID from \"uuidjs\";\r\nimport style from \"./slider.scss\"\r\n\r\nconst rmLast = (arr, direction) => {\r\n    let last = arr.length - 1;\r\n    let _arr = [...arr];\r\n    while (last >= 0) {\r\n        if (direction === \"next\" && arr[last] < 0) break;\r\n        if (direction === \"prev\" && arr[last] > 0) break;\r\n        _arr.pop();\r\n        last--;\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst sumLastSameDirection = arr => {\r\n    let _arr = [...arr];\r\n    if (arr[arr.length - 1] * arr[arr.length - 2] > 0) {\r\n        let last = _arr.pop();\r\n        let prev = _arr.pop();\r\n        _arr.push(last + prev);\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst Slider = ({\r\n    slides: initSlides,\r\n    next: nextHandle,\r\n    prev: prevHandle,\r\n    minSlideWidth = style.minSlideWidth,\r\n    onStepDragging = false\r\n}) => {\r\n    const slider = useRef();\r\n    const [active, setActive] = useState(false);\r\n   // const [overLapRatio] = useState(5);\r\n    const [animationDuration] = useState(parseInt(style.animatioDuration) * 1000);\r\n    const [_containerRect, setContainerRect] = useState(null);\r\n    const [slideWidth, setSlideWidth] = useState(null);\r\n    const [visibleSlides, setVisibleSlides] = useState(null);\r\n    const [slides, setSlides] = /* useState(initSlides);*/ useState([...initSlides, ...initSlides, ...initSlides]);\r\n    const [actionQueue, setActionQueue] = useState([]);\r\n    const [isTransitionRunning, setTransitionRunning] = useState(false);\r\n    const transitionActive = useRef();\r\n    const shift = useRef();\r\n    const balancedShift = useRef();\r\n    const translate = useRef();\r\n\r\n    const containerRect = useCallback(() => {\r\n        if (!slider.current) return 0;\r\n        let rect = _containerRect\r\n        if (!rect) {\r\n            rect = slider.current.parentElement.getBoundingClientRect()\r\n            setContainerRect(rect);\r\n        }\r\n        return rect;\r\n    }, [_containerRect, setContainerRect])\r\n\r\n    const setTransition = useCallback(value => {\r\n        if (!slider.current) return;\r\n        if(value){\r\n            slider.current.classList.add('slider-transition--active')\r\n            transitionActive.current = true;\r\n        } else {\r\n            slider.current.classList.remove('slider-transition--active')\r\n            transitionActive.current = false;\r\n            setTransitionRunning(false);\r\n        }\r\n    }, [slider, transitionActive, setTransitionRunning])\r\n\r\n    const setTranslate = useCallback(target => {\r\n        if (!slider.current) return;\r\n        slider.current.style.transform = `translateX(${target}px)`\r\n        translate.current = target;\r\n    }, [slider, translate])\r\n\r\n    const setPosition = useCallback(position => {\r\n        if (!slider.current || isNaN(position)) return;\r\n        setTranslate(position * slideWidth);\r\n        transitionActive.current && setTransitionRunning(true);\r\n    }, [slider, shift, slideWidth, setTransitionRunning, setTranslate, transitionActive])\r\n\r\n    // useEffect(()=>{\r\n    //     console.log(\"in visible\", visibleSlides, initSlides.length)\r\n    //     if(!visibleSlides || visibleSlides > initSlides.length) return;\r\n    //     setActive(true);\r\n    //     let slides = [].concat(Array(overLapRatio).fill(1).map( () => initSlides)).flat();\r\n    //     setSlides(slides);\r\n    // }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio])\r\n\r\n\r\n    useEffect(()=>{\r\n        if (!containerRect || !minSlideWidth || !slider.current) return;\r\n        const containerWidth = containerRect().width;\r\n        const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\r\n        setVisibleSlides(visibleSlides);\r\n    }, [containerRect, minSlideWidth, slider, setVisibleSlides])\r\n\r\n    useEffect(() => {\r\n        if(!slides) return;\r\n        shift.current = -initSlides.length;\r\n        balancedShift.current = shift.current;\r\n        setPosition(shift.current);\r\n    }, [slideWidth, setPosition, shift, balancedShift, initSlides, slides])\r\n\r\n    useEffect(() => {\r\n        const resetSize = () => setContainerRect(null);\r\n        window.addEventListener(\"resize\", resetSize);\r\n        return () => window.removeEventListener(\"resize\", resetSize);\r\n    }, [setContainerRect])\r\n\r\n    useEffect(() => {\r\n        if(!visibleSlides || !containerRect) return;\r\n        const slideWidth = containerRect().width / visibleSlides\r\n        setSlideWidth(slideWidth);\r\n        slider.current.style.width = slideWidth * slides.length + \"px\";\r\n    }, [containerRect,  visibleSlides, slides]);\r\n\r\n    const appendSlides = useCallback(amount => {\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.shift();\r\n                _slides.push(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const prependSlides = useCallback(amount => {\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.pop();\r\n                _slides.unshift(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const balance = useCallback(() => {\r\n        const diff = balancedShift.current - shift.current;\r\n        if(!diff) {\r\n            return;\r\n        }\r\n        (diff < 0) ? prependSlides(Math.abs(diff)) : appendSlides(diff);\r\n        setTransition(false);\r\n        shift.current = balancedShift.current;\r\n        setPosition(shift.current);\r\n    }, [shift, balancedShift, prependSlides, appendSlides, setTransition, setTransitionRunning])\r\n\r\n    const action = useCallback(() => {\r\n        if (!actionQueue.length) {\r\n            balance();\r\n            return;\r\n        }\r\n        const queue = [...actionQueue];\r\n        const direction = queue.shift();\r\n        setTransition(false);\r\n        (direction > 0) ? appendSlides(direction) : prependSlides(Math.abs(direction));\r\n        setPosition(shift.current + direction);\r\n        setTimeout(() => {\r\n            setTransition(true);\r\n            setPosition(shift.current);\r\n            setTimeout(()=> {\r\n                setTransitionRunning(false);\r\n            }, animationDuration);\r\n        }, 0);\r\n\r\n        setActionQueue(queue);\r\n    }, [setTransition, setTransitionRunning, setPosition, actionQueue, setActionQueue, balance])\r\n\r\n    useEffect(() => {\r\n        console.log(\"call action\", isTransitionRunning)\r\n        if (!isTransitionRunning) {\r\n            action();\r\n        }\r\n    }, [isTransitionRunning, action])\r\n\r\n    const next = useCallback(() => {\r\n        setActionQueue(queue => {\r\n            const _queue = rmLast(queue, \"prev\");\r\n            return [..._queue,1];\r\n            return sumLastSameDirection([..._queue, 1])\r\n        })\r\n    }, [setActionQueue])\r\n\r\n    useEffect(() => nextHandle && nextHandle(next), [next, nextHandle])\r\n\r\n    const prev = useCallback(() => {\r\n        setActionQueue(queue => {\r\n            const _queue = rmLast(queue, \"next\");\r\n            return sumLastSameDirection([..._queue, -1])\r\n        })\r\n    }, [setActionQueue])\r\n\r\n    useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle])\r\n\r\n    const endDraging = useCallback(() => {\r\n        let next = Math.round(translate.current / slideWidth);\r\n        if(onStepDragging){\r\n            next = next >  shift.current  ? shift.current + 1 : shift.current - 1;\r\n        }\r\n        shift.current = next;\r\n        setPosition(shift.current);\r\n        setTimeout(()=> setTransitionRunning(false), animationDuration);\r\n    }, [translate, setTranslate, shift, slideWidth, setTransitionRunning])\r\n\r\n    const mouseMove = useCallback((shiftX, event) => {\r\n        const clientX = (event.type === \"touchmove\") ? event.touches[0].clientX : event.clientX;\r\n        setTranslate(clientX - shiftX);\r\n    }, [setTranslate])\r\n\r\n\r\n    const mouseDown = useCallback(event => {\r\n        const sliderContainer = event.target.closest(\".carousel-slider-container\");\r\n        if(!sliderContainer) return;\r\n        const rect = sliderContainer.getBoundingClientRect();\r\n        const clientX = (event.type === \"touchstart\") ? event.touches[0].clientX : event.clientX;\r\n        const shiftX = clientX - rect.left - shift.current * slideWidth;\r\n        const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\r\n\r\n        const mouseUp = () => {\r\n            window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\r\n            window.removeEventListener(\"mouseup\", mouseUp);\r\n            window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\r\n            window.removeEventListener(\"touchend\", mouseUp)\r\n            setTransition(true);\r\n            endDraging();\r\n        }\r\n\r\n        window.addEventListener(\"mousemove\", mouseMoveWithArgs);\r\n        window.addEventListener(\"touchmove\", mouseMoveWithArgs);\r\n        window.addEventListener(\"mouseup\", mouseUp);\r\n        window.addEventListener(\"touchend\", mouseUp);\r\n        setTransition(false);\r\n    }, [setTransition, shift, slideWidth, endDraging])\r\n\r\n    console.log(\"action quueue\", actionQueue);\r\n\r\n    return (\r\n        <div className=\"carousel-slider-container\">\r\n           <ul className=\"carousel-slider\" ref={slider} onMouseDown={mouseDown} onTouchStart={mouseDown} onDrag={ e => e.preventDefault()}>\r\n                {slides && slides instanceof Array && slides.map(slide => (\r\n                    <li key={UUID.genV1()} className={\"slide\"} style={{width: minSlideWidth || \"initial\"}}>{slide}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}