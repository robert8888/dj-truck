{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Mixer\\\\componets\\\\RecordTime\\\\RecordTime.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { formater as timeFormater } from \"./../../../../../../../utils/time/timeFromater\";\nimport \"./record-time.scss\";\n\nconst RecordTime = props => {\n  const [time, setTime] = useState(0);\n  const [timerInterval, setIntervalHandler] = useState(null);\n  useEffect(() => {\n    console.log(\"runing\", props.runing);\n\n    if (props.runing && !timerInterval) {\n      console.log(\"if\");\n      setIntervalHandler(setInterval(() => {\n        console.log(tick);\n        setTime(time => time++);\n      }, 1000));\n    } else if (!props.runing && timerInterval) {\n      console.log(\"else\");\n      clearInterval(timerInterval);\n      setIntervalHandler(null);\n    }\n  }, [props.runing, setTime, setIntervalHandler, timerInterval]);\n  const clearHandler = useCallback(() => {\n    setTime(0);\n  }, [setTime]);\n  useEffect(() => {\n    if (props.clearHandler instanceof Function) {\n      props.clearHandler(clearHandler);\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"record-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, timeFormater.secondsToStr(time)));\n};\n\nexport default RecordTime;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Console/Mixer/componets/RecordTime/RecordTime.js"],"names":["React","useState","useEffect","useCallback","formater","timeFormater","RecordTime","props","time","setTime","timerInterval","setIntervalHandler","console","log","runing","setInterval","tick","clearInterval","clearHandler","Function","secondsToStr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAAQC,QAAQ,IAAIC,YAApB,QAAuC,gDAAvC;AACA,OAAO,oBAAP;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,aAAD,EAAgBC,kBAAhB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAuBN,KAAK,CAACO,MAA7B;;AACA,QAAGP,KAAK,CAACO,MAAN,IAAgB,CAACJ,aAApB,EAAkC;AAC9BE,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,MAAAA,kBAAkB,CAACI,WAAW,CAAC,MAAI;AAC/BH,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAP,QAAAA,OAAO,CAACD,IAAI,IAAIA,IAAI,EAAb,CAAP;AACH,OAH6B,EAG3B,IAH2B,CAAZ,CAAlB;AAIH,KAND,MAMO,IAAG,CAACD,KAAK,CAACO,MAAP,IAAiBJ,aAApB,EAAmC;AACtCE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAI,MAAAA,aAAa,CAACP,aAAD,CAAb;AACAC,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;AAEJ,GAdQ,EAcP,CAAEJ,KAAK,CAACO,MAAR,EACEL,OADF,EAEEE,kBAFF,EAGED,aAHF,CAdO,CAAT;AAoBA,QAAMQ,YAAY,GAAGf,WAAW,CAAC,MAAI;AACjCM,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAF+B,EAE7B,CAACA,OAAD,CAF6B,CAAhC;AAIAP,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGK,KAAK,CAACW,YAAN,YAA8BC,QAAjC,EAA0C;AACtCZ,MAAAA,KAAK,CAACW,YAAN,CAAmBA,YAAnB;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQb,YAAY,CAACe,YAAb,CAA0BZ,IAA1B,CAAR,CADJ,CADJ;AAKH,CAvCD;;AAyCA,eAAeF,UAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {formater as timeFormater }from \"./../../../../../../../utils/time/timeFromater\";\r\nimport \"./record-time.scss\"\r\n\r\nconst RecordTime = props => {\r\n    const [time, setTime] = useState(0);\r\n    const [timerInterval, setIntervalHandler] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"runing\" , props.runing)\r\n        if(props.runing && !timerInterval){\r\n            console.log(\"if\")\r\n            setIntervalHandler(setInterval(()=>{\r\n                console.log(tick);\r\n                setTime(time => time++);\r\n            }, 1000))\r\n        } else if(!props.runing && timerInterval) {\r\n            console.log(\"else\")\r\n            clearInterval(timerInterval);\r\n            setIntervalHandler(null);\r\n        }\r\n\r\n    },[ props.runing, \r\n        setTime, \r\n        setIntervalHandler,\r\n        timerInterval\r\n    ])\r\n\r\n    const clearHandler = useCallback(()=>{\r\n        setTime(0)\r\n    }, [setTime])\r\n\r\n    useEffect(()=>{\r\n        if(props.clearHandler instanceof Function){\r\n            props.clearHandler(clearHandler)\r\n        }\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"record-time\">\r\n            <span>{ timeFormater.secondsToStr(time) }</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecordTime;"]},"metadata":{},"sourceType":"module"}