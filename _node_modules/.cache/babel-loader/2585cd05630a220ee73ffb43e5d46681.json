{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\Router\\\\RedirectRoute.js\";\nimport pathToRegexp from \"path-to-regexp\";\nimport { Route, Redirect } from \"react-router\"; // generatePath is planned for next RR release, so we implement here temporarily\n\nconst cache = {};\n\nconst generatePath = (path, params) => {\n  if (!cache[path]) {\n    cache[path] = pathToRegexp.compile(path);\n  }\n\n  return cache[path](params);\n};\n\nconst RedirectRoute = ({\n  to,\n  from\n}) => {\n  const render = props => React.createElement(Redirect, {\n    to: generatePath(to, props.match.params),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n\n  return React.createElement(Route, {\n    exact: true,\n    path: from,\n    render: render,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n};\n\nexport default RedirectRoute;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/Router/RedirectRoute.js"],"names":["pathToRegexp","Route","Redirect","cache","generatePath","path","params","compile","RedirectRoute","to","from","render","props","match"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC,C,CAEA;;AACA,MAAMC,KAAK,GAAG,EAAd;;AACA,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACrC,MAAG,CAACH,KAAK,CAACE,IAAD,CAAT,EAAiB;AACfF,IAAAA,KAAK,CAACE,IAAD,CAAL,GAAcL,YAAY,CAACO,OAAb,CAAqBF,IAArB,CAAd;AACD;;AACD,SAAOF,KAAK,CAACE,IAAD,CAAL,CAAYC,MAAZ,CAAP;AACD,CALD;;AAOA,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAAkB;AACtC,QAAMC,MAAM,GAAGC,KAAK,IAClB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAER,YAAY,CAACK,EAAD,EAAKG,KAAK,CAACC,KAAN,CAAYP,MAAjB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAIA,SAAO,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAEI,IAAnB;AAAyB,IAAA,MAAM,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAND;;AAQA,eAAeH,aAAf","sourcesContent":["import pathToRegexp from \"path-to-regexp\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\n// generatePath is planned for next RR release, so we implement here temporarily\r\nconst cache = {};\r\nconst generatePath = (path, params) => {\r\n  if(!cache[path]) {\r\n    cache[path] = pathToRegexp.compile(path);\r\n  }\r\n  return cache[path](params);\r\n}\r\n\r\nconst RedirectRoute = ({ to, from }) => {\r\n  const render = props => (\r\n    <Redirect to={generatePath(to, props.match.params)} />\r\n  );\r\n\r\n  return <Route exact path={from} render={render} />;\r\n};\r\n\r\nexport default RedirectRoute;"]},"metadata":{},"sourceType":"module"}