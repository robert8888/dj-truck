{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecord\\\\UserRecord.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { reqRecOfUser } from \"./../../actions\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport Record from \"../common/components/Record/Record\";\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\n\nconst UserRecord = ({\n  requestList,\n  recordsList,\n  userId,\n  countAll\n}) => {\n  const [controls, player] = useRecordPlayer();\n  const {\n    title,\n    id\n  } = useParams();\n  const history = useHistory();\n  const [record, setRecord] = useState();\n  useEffect(() => {\n    if (!title) {\n      return;\n    } //   console.log(title, recordsList)\n\n\n    let rec = recordsList === null || recordsList === void 0 ? void 0 : recordsList.filter(r => r.title === title);\n\n    if (id) {\n      rec = rec.filter(r => r.id === id);\n    } //  console.log(\"rec\", rec)\n\n\n    if (rec && rec.length === 0 || !rec) {\n      requestList(userId, 100, 0, {\n        title\n      });\n    }\n\n    if (rec && rec.length === 1) {\n      setRecord(rec[0]);\n      return;\n    }\n\n    history.replace('/my/records?preloaded=true');\n  }, [recordsList, setRecord, title, id, userId]);\n  useEffect(() => {\n    console.log(record);\n  }, [record]);\n  return React.createElement(\"div\", {\n    className: \"user-record\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Record, {\n    record: record,\n    controls: controls,\n    player: player,\n    simpleHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(RecordDetails, {\n    record: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (userId, pageSize, page, details) => dispatch(reqRecOfUser(userId, pageSize, page, details))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecord/UserRecord.js"],"names":["React","useState","useEffect","reqRecOfUser","connect","useParams","useHistory","useRecordPlayer","Record","RecordDetails","UserRecord","requestList","recordsList","userId","countAll","controls","player","title","id","history","record","setRecord","rec","filter","r","length","replace","console","log","mapStateToProps","state","records","list","user","dbId","mapDispatchToProps","dispatch","pageSize","page","details"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {reqRecOfUser} from \"./../../actions\"\r\nimport {connect} from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {useRecordPlayer} from \"./../common/Hooks/useRecordPlayer\";\r\nimport Record from \"../common/components/Record/Record\";\r\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\r\n\r\nconst UserRecord = ({requestList, recordsList, userId, countAll}) => {\r\n    const [controls, player] = useRecordPlayer();\r\n    const { title, id } = useParams();\r\n    const history = useHistory()\r\n    const [record, setRecord] = useState();\r\n\r\n    useEffect(()=>{\r\n        if(!title) { return }\r\n     //   console.log(title, recordsList)\r\n        let rec = recordsList?.filter( r => r.title === title)\r\n        if(id){\r\n            rec = rec.filter( r => r.id === id);\r\n        }\r\n      //  console.log(\"rec\", rec)\r\n        if(rec && rec.length === 0 || !rec){\r\n           requestList(userId, 100, 0 , {title})\r\n        }\r\n\r\n        if(rec && rec.length === 1){\r\n            setRecord(rec[0]);\r\n            return;\r\n        } \r\n\r\n        history.replace('/my/records?preloaded=true')\r\n\r\n    }, [recordsList, setRecord, title, id, userId])\r\n\r\n    useEffect(()=>{\r\n        console.log(record)\r\n    },[record])\r\n\r\n    return (\r\n        <div className=\"user-record\">\r\n            <Record  record={record} controls={controls} player={player} simpleHeader/>\r\n            <div>\r\n                <RecordDetails record={record}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (userId, pageSize, page, details) => dispatch(reqRecOfUser(userId, pageSize, page, details))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}