{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\WaveSurfer\\\\WaveSurfer.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport WaveSurferElement from \"wavesurfer\";\nimport colors from \"./../../../css/colors.scss\";\n\nconst getCssColor = (variable, name) => colors[\"deck\" + name.toUpperCase() + variable];\n\nconst masterConfig = (container, height, name) => ({\n  // name deck A or B \n  container: container,\n  waveColor: getCssColor('Primary', name) || 'white',\n  progressColor: getCssColor('PrimaryDark', name) || 'gray',\n  autoCenter: true,\n  scrollParent: true,\n  hideScrollbar: true,\n  fillParent: false,\n  height: height,\n  minPxPerSec: 150\n});\n\nconst slaveConfig = (container, height, name) => ({\n  container: container,\n  waveColor: getCssColor('Primary', name) || 'white',\n  progressColor: getCssColor('PrimaryDark', name) || 'gray',\n  fillParent: true,\n  scrollParent: false,\n  hideScrollbar: true,\n  scrollParent: false,\n  height: height\n});\n\nconst config = (type, container, height, name) => {\n  switch (type) {\n    case \"master\":\n      return masterConfig(container, height, name);\n\n    case \"slave\":\n      return slaveConfig(container, height, name);\n\n    default:\n      return {};\n  }\n};\n\nconst WaveSurfer = props => {\n  const {\n    waveSurfer\n  } = useState(null);\n  const container = useRef(null);\n  useEffect(() => {\n    waveSurfer = WaveSurferElement.create(config(props.type, container.current, props.height, props.name));\n  }, []);\n  useEffect(() => {\n    if (waveSurfer && props.type === \"master\" & props.url !== \"\") {\n      waveSurfer.load(this.props.url);\n    }\n  }, [props.url]);\n  useEffect(() => {//waveSurfer.load(null, this.props.peaks);\n  }, [props.peaks]);\n  return React.createElement(\"div\", {\n    ref: container,\n    style: {\n      height: props.height + \"px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"  \");\n};\n\nexport default WaveSurfer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/WaveSurfer/WaveSurfer.js"],"names":["React","useState","useRef","useEffect","WaveSurferElement","colors","getCssColor","variable","name","toUpperCase","masterConfig","container","height","waveColor","progressColor","autoCenter","scrollParent","hideScrollbar","fillParent","minPxPerSec","slaveConfig","config","type","WaveSurfer","props","waveSurfer","create","current","url","load","peaks"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport WaveSurferElement from \"wavesurfer\";\r\nimport colors from \"./../../../css/colors.scss\";\r\n\r\nconst getCssColor= (variable, name) => colors[ \"deck\" + name.toUpperCase() + variable ]; \r\n\r\nconst masterConfig = (container, height, name) => ({ // name deck A or B \r\n    container: container,\r\n    waveColor: getCssColor('Primary', name) || 'white',\r\n    progressColor: getCssColor('PrimaryDark', name) || 'gray',\r\n    autoCenter : true,\r\n    scrollParent: true,\r\n    hideScrollbar:true,\r\n    fillParent: false,\r\n    height: height,\r\n    minPxPerSec : 150\r\n})\r\n\r\nconst slaveConfig = (container, height, name) => ({\r\n    container: container,\r\n    waveColor: getCssColor('Primary', name) || 'white',\r\n    progressColor: getCssColor('PrimaryDark', name) || 'gray',\r\n    fillParent: true,\r\n    scrollParent : false,\r\n    hideScrollbar: true,\r\n    scrollParent : false,\r\n    height: height,\r\n})\r\n\r\nconst config = (type, container, height, name) => {\r\n    switch(type){\r\n        case \"master\" : return masterConfig(container, height, name);\r\n        case \"slave\" : return slaveConfig(container, height, name );\r\n        default : return {};\r\n    }\r\n}\r\n\r\n\r\n\r\nconst  WaveSurfer = (props) => {\r\n\r\n    const {waveSurfer} = useState(null);\r\n    const container = useRef(null);\r\n    \r\n    useEffect( ()=> {\r\n        waveSurfer = WaveSurferElement.create(config(\r\n            props.type, \r\n            container.current,\r\n            props.height, \r\n            props.name,\r\n            ));\r\n    }, []);\r\n\r\n    useEffect( () => {\r\n        if(waveSurfer && props.type === \"master\" & props.url !== \"\" ){\r\n            waveSurfer.load(this.props.url);\r\n        }\r\n    }, [props.url])\r\n\r\n    useEffect( () => {\r\n        //waveSurfer.load(null, this.props.peaks);\r\n    }, [props.peaks])\r\n\r\n\r\n    return (\r\n        <div ref={ container } style={{ height: props.height + \"px\" }} >  </div>\r\n    )\r\n    \r\n};\r\n\r\nexport default WaveSurfer;"]},"metadata":{},"sourceType":"module"}