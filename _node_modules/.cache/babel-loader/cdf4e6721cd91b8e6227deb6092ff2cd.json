{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayListExplorer\\\\Explorer\\\\ExplorerTree\\\\DirElement\\\\DirElement.js\";\nimport { faAngleDown, faAngleRight, faFolder } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ClassName from \"classnames\";\nimport React, { useCallback, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { connect } from \"react-redux\";\nimport UUID from \"uuidjs\";\nimport { moveToRequest } from \"./../../../../../../../actions\";\nimport ItemTypes from \"./../../../../../DndItemTypes\";\n\nconst DirElement = props => {\n  const {\n    name,\n    path,\n    open,\n    empty,\n    renameMode,\n    renameInput: RenameInput,\n    moveTo: moveToHandler\n  } = props;\n  const fullPath = [...path, name];\n  const ref = useRef(null);\n  const handleDrop = useCallback(item => {\n    const pathTo = fullPath; //local\n\n    const pathFrom = item.fullPath;\n    moveToHandler(pathFrom, pathTo);\n  }, [moveToHandler, fullPath]);\n  const [, drag] = useDrag({\n    item: {\n      type: ItemTypes.DIR,\n      fullPath: fullPath\n    }\n  });\n  const [, drop] = useDrop({\n    accept: [ItemTypes.FILE, ItemTypes.DIR],\n    drop: handleDrop\n  });\n  let currentSelected = false;\n\n  if ([...path, name].join(\"\") === props.currentSelection.join(\"\")) {\n    currentSelected = true;\n  }\n\n  const liClassList = ClassName(\"list-item item-dir\", {\n    \"item-dir--empty\": empty\n  }, {\n    \"item--selected\": currentSelected\n  });\n  let content = React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, name);\n\n  if (currentSelected && renameMode) {\n    //content = renameInput(name)\n    content = React.createElement(RenameInput, {\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n  drag(drop(ref));\n  return React.createElement(\"li\", {\n    ref: ref,\n    onClick: props.onClick,\n    onContextMenu: props.onContextMenu.bind(null, path),\n    className: liClassList,\n    \"data-path\": path.join(\"/\"),\n    key: UUID.genV1(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, !empty && React.createElement(\"button\", {\n    className: \"btn-dir \" + (open ? \"btn-dir--expand\" : \"btn-dir--colapse\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"icon\",\n    icon: open ? faAngleDown : faAngleRight,\n    onClick: props.buttonClick.bind(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(FontAwesomeIcon, {\n    className: \"icon icon-dir\",\n    icon: faFolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), content);\n};\n\nconst mapStateToProps = state => ({\n  currentSelection: state.playList.currentSelection\n});\n\nconst mapDispatchToProps = dispatch => ({\n  moveTo: (pathFrom, pathTo) => dispatch(moveToRequest(pathFrom, pathTo))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DirElement);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayListExplorer/Explorer/ExplorerTree/DirElement/DirElement.js"],"names":["faAngleDown","faAngleRight","faFolder","FontAwesomeIcon","ClassName","React","useCallback","useRef","useDrag","useDrop","connect","UUID","moveToRequest","ItemTypes","DirElement","props","name","path","open","empty","renameMode","renameInput","RenameInput","moveTo","moveToHandler","fullPath","ref","handleDrop","item","pathTo","pathFrom","drag","type","DIR","drop","accept","FILE","currentSelected","join","currentSelection","liClassList","content","onClick","onContextMenu","bind","genV1","buttonClick","mapStateToProps","state","playList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { faAngleDown, faAngleRight, faFolder } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ClassName from \"classnames\";\r\nimport React, { useCallback, useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { connect } from \"react-redux\";\r\nimport UUID from \"uuidjs\";\r\nimport { moveToRequest } from \"./../../../../../../../actions\";\r\nimport ItemTypes from \"./../../../../../DndItemTypes\";\r\n\r\nconst DirElement = props => {\r\n    const { name, path, open, empty, renameMode, renameInput: RenameInput, moveTo:moveToHandler } = props;\r\n    const fullPath = [...path, name]\r\n    const ref = useRef(null)\r\n\r\n    const handleDrop = useCallback((item) => {\r\n        const pathTo = fullPath;//local\r\n        const pathFrom = item.fullPath;\r\n        moveToHandler(pathFrom, pathTo);\r\n    }, [moveToHandler, fullPath])\r\n\r\n    const [, drag] = useDrag({\r\n        item: {\r\n            type: ItemTypes.DIR,\r\n            fullPath: fullPath\r\n        },\r\n    })\r\n\r\n    const [, drop] = useDrop({\r\n        accept: [ItemTypes.FILE, ItemTypes.DIR],\r\n        drop: handleDrop\r\n    })\r\n\r\n\r\n    let currentSelected = false;\r\n    if ([...path, name].join(\"\") === props.currentSelection.join(\"\")) {\r\n        currentSelected = true;\r\n    }\r\n    const liClassList = ClassName(\r\n        \"list-item item-dir\",\r\n        { \"item-dir--empty\": empty },\r\n        { \"item--selected\": currentSelected }\r\n    )\r\n    let content = (<span>{name}</span>);\r\n    if (currentSelected && renameMode) {\r\n        //content = renameInput(name)\r\n        content = <RenameInput name={name}/>\r\n    }\r\n\r\n    drag(drop(ref))\r\n    return (\r\n        <li\r\n            ref={ref}\r\n            onClick={props.onClick}\r\n            onContextMenu={props.onContextMenu.bind(null, path)}\r\n            className={liClassList}\r\n            data-path={path.join(\"/\")}\r\n            key={UUID.genV1()}>\r\n            {!empty &&\r\n                <button\r\n                    className={\"btn-dir \" + ((open) ? \"btn-dir--expand\" : \"btn-dir--colapse\")}>\r\n                    <FontAwesomeIcon\r\n                        className=\"icon\"\r\n                        icon={(open) ? faAngleDown : faAngleRight}\r\n                        onClick={props.buttonClick.bind(null)} />\r\n                </button>}\r\n            <FontAwesomeIcon className=\"icon icon-dir\" icon={faFolder} />\r\n            {content}\r\n        </li>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    currentSelection: state.playList.currentSelection\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    moveTo : (pathFrom, pathTo) => dispatch(moveToRequest(pathFrom, pathTo))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DirElement);\r\n\r\n"]},"metadata":{},"sourceType":"module"}