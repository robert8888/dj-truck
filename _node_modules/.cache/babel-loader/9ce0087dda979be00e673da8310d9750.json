{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Search\\\\Search.js\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { FormControl } from \"react-bootstrap\";\nimport SearchList from './SerachList/SearchList.js';\nimport { searchInput, clearSearch } from \"../../actions/actions.js\";\nimport \"./search.scss\";\n\nconst Search = props => {\n  const [listOpen, setListOpen] = useState(false);\n\n  const openList = () => setListOpen(true);\n\n  const selectedHandel = () => {\n    props.clearSearchHandler();\n    setListOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: \"search-control\",\n    type: \"text\",\n    placeholder: \"Tap in to serach on youtube\",\n    onChange: event => props.searchInputHandler(event.target.value),\n    onFocus: openList,\n    value: props.searchString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(SearchList, {\n    open: listOpen,\n    selectedHandle: selectedHandel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  searchString: state.searchReducer.searchString\n});\n\nconst mapDispachToProps = dispach => ({\n  searchInputHandler: text => dispach(searchInput(text)),\n  clearSearchHandler: () => dispach(clearSearch())\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Search);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Search/Search.js"],"names":["React","useState","connect","FormControl","SearchList","searchInput","clearSearch","Search","props","listOpen","setListOpen","openList","selectedHandel","clearSearchHandler","event","searchInputHandler","target","value","searchString","mapStateToProps","state","searchReducer","mapDispachToProps","dispach","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,0BAAzC;AAEA,OAAO,eAAP;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMU,QAAQ,GAAG,MAAMD,WAAW,CAAE,IAAF,CAAlC;;AAEA,QAAME,cAAc,GAAG,MAAM;AACzBJ,IAAAA,KAAK,CAACK,kBAAN;AACAH,IAAAA,WAAW,CAAE,KAAF,CAAX;AACH,GAHD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,gBAAvB;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,WAAW,EAAC,6BAFZ;AAGA,IAAA,QAAQ,EAAGI,KAAK,IAAIN,KAAK,CAACO,kBAAN,CAAyBD,KAAK,CAACE,MAAN,CAAaC,KAAtC,CAHpB;AAIA,IAAA,OAAO,EAAGN,QAJV;AAKA,IAAA,KAAK,EAAGH,KAAK,CAACU,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAQG,oBAAC,UAAD;AACA,IAAA,IAAI,EAAGT,QADP;AAEA,IAAA,cAAc,EAAGG,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,CADJ;AAcH,CAzBD;;AA2BA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,YAAY,EAAGE,KAAK,CAACC,aAAN,CAAoBH;AADL,CAAL,CAA7B;;AAIA,MAAMI,iBAAiB,GAAGC,OAAO,KAAK;AAClCR,EAAAA,kBAAkB,EAAIS,IAAD,IAAUD,OAAO,CAAClB,WAAW,CAACmB,IAAD,CAAZ,CADJ;AAElCX,EAAAA,kBAAkB,EAAG,MAAMU,OAAO,CAACjB,WAAW,EAAZ;AAFA,CAAL,CAAjC;;AAKA,eAAeJ,OAAO,CAACiB,eAAD,EAAkBG,iBAAlB,CAAP,CAA4Cf,MAA5C,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { FormControl } from \"react-bootstrap\"\r\nimport SearchList from './SerachList/SearchList.js';\r\n\r\n\r\nimport { searchInput, clearSearch } from \"../../actions/actions.js\";\r\n\r\nimport \"./search.scss\";\r\n\r\n\r\nconst Search = props => {\r\n    const [listOpen, setListOpen] = useState(false)\r\n\r\n    const openList = () => setListOpen( true );\r\n\r\n    const selectedHandel = () => {\r\n        props.clearSearchHandler();\r\n        setListOpen( false );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"search\">\r\n           <FormControl className=\"search-control\"\r\n           type=\"text\" \r\n           placeholder=\"Tap in to serach on youtube\"\r\n           onChange={ event => props.searchInputHandler(event.target.value) }\r\n           onFocus={ openList }\r\n           value={ props.searchString }\r\n           />\r\n           <SearchList \r\n           open={ listOpen }\r\n           selectedHandle={ selectedHandel }/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    searchString : state.searchReducer.searchString\r\n})\r\n\r\nconst mapDispachToProps = dispach => ({\r\n    searchInputHandler : (text) => dispach(searchInput(text)),\r\n    clearSearchHandler : () => dispach(clearSearch()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Search);"]},"metadata":{},"sourceType":"module"}