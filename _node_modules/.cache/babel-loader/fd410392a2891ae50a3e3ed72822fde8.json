{"ast":null,"code":"const recorder_api_url = process.env.REACT_APP_RECORDER_API;\n\nconst getSocketUrl = () => {\n  return recorder_api_url.replace('http', 'ws').replace('https', 'wss');\n};\n\nconst getRecordUrl = (id, from = 0) => {\n  return recorder_api_url + \"/records/\" + id; // + \"/\" + from ;\n};\n\nconst deleteRecord = async id => {\n  console.log('delteing', id);\n  const res = await fetch(getRecordUrl(id), {\n    method: 'DELETE'\n  });\n  console.log('resopone', res);\n  const result = await res.json();\n  return result.status || \"error\";\n};\n\nconst getDownloadLink = (id, title) => {\n  return recorder_api_url + '/records/download/' + id + \"/\" + title;\n};\n\nexport default {\n  getSocketUrl,\n  getRecordUrl,\n  deleteRecord,\n  getDownloadLink\n};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/apis/recordsStore/recStoreApi.js"],"names":["recorder_api_url","process","env","REACT_APP_RECORDER_API","getSocketUrl","replace","getRecordUrl","id","from","deleteRecord","console","log","res","fetch","method","result","json","status","getDownloadLink","title"],"mappings":"AACA,MAAMA,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAArC;;AACA,MAAMC,YAAY,GAAG,MAAI;AACrB,SAAOJ,gBAAgB,CAACK,OAAjB,CAAyB,MAAzB,EAAiC,IAAjC,EAAuCA,OAAvC,CAA+C,OAA/C,EAAwD,KAAxD,CAAP;AACH,CAFD;;AAIA,MAAMC,YAAY,GAAG,CAACC,EAAD,EAAKC,IAAI,GAAG,CAAZ,KAAkB;AACnC,SAAOR,gBAAgB,GAAG,WAAnB,GAAiCO,EAAxC,CADmC,CACQ;AAC9C,CAFD;;AAGA,MAAME,YAAY,GAAG,MAAOF,EAAP,IAAc;AAC/BG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,EAAxB;AACA,QAAMK,GAAG,GAAG,MAAMC,KAAK,CAACP,YAAY,CAACC,EAAD,CAAb,EAAmB;AACtCO,IAAAA,MAAM,EAAE;AAD8B,GAAnB,CAAvB;AAGAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,GAAxB;AACA,QAAMG,MAAM,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAArB;AACA,SAAOD,MAAM,CAACE,MAAP,IAAiB,OAAxB;AACH,CARD;;AASA,MAAMC,eAAe,GAAG,CAACX,EAAD,EAAKY,KAAL,KAAe;AACnC,SAAOnB,gBAAgB,GAAG,oBAAnB,GAA0CO,EAA1C,GAA8C,GAA9C,GAAoDY,KAA3D;AACH,CAFD;;AAIA,eAAe;AACXf,EAAAA,YADW;AAEXE,EAAAA,YAFW;AAGXG,EAAAA,YAHW;AAIXS,EAAAA;AAJW,CAAf","sourcesContent":["\r\nconst recorder_api_url = process.env.REACT_APP_RECORDER_API\r\nconst getSocketUrl = ()=>{\r\n    return recorder_api_url.replace('http', 'ws').replace('https', 'wss')\r\n}\r\n\r\nconst getRecordUrl = (id, from = 0 ) =>{\r\n    return recorder_api_url + \"/records/\" + id // + \"/\" + from ;\r\n}\r\nconst deleteRecord = async (id) => {\r\n    console.log('delteing', id)\r\n    const res = await fetch(getRecordUrl(id), {\r\n        method: 'DELETE',\r\n    })\r\n    console.log('resopone', res);\r\n    const result = await res.json();\r\n    return result.status || \"error\"\r\n}\r\nconst getDownloadLink = (id, title) => {\r\n    return recorder_api_url + '/records/download/' + id +\"/\" + title;\r\n}\r\n\r\nexport default {\r\n    getSocketUrl,\r\n    getRecordUrl,\r\n    deleteRecord,\r\n    getDownloadLink,\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}