{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayListExplorer\\\\Explorer\\\\ExplorerTree\\\\FileElement\\\\FileElement.js\";\nimport { faFile } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ClassName from \"classnames\";\nimport React, { useCallback, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { connect } from \"react-redux\";\nimport UUID from \"uuidjs\";\nimport ItemTypes from \"../../../../../DndItemTypes\";\nimport { copyTrackToList } from \"./../../../../../../../actions\";\n\nconst FileElement = props => {\n  const {\n    name,\n    path,\n    renameMode,\n    renameInput,\n    addTrackToList\n  } = props;\n  const fullPath = [...path, name];\n  const ref = useRef(null);\n  const handleDrop = useCallback(item => {\n    addTrackToList(item.track, fullPath);\n  }, [addTrackToList, fullPath]);\n  const [, drag] = useDrag({\n    item: {\n      type: ItemTypes.FILE,\n      fullPath: fullPath\n    }\n  });\n  const [, drop] = useDrop({\n    accept: ItemTypes.TRACK,\n    drop: handleDrop\n  });\n  let currentSelected = fullPath.join(\"\") === props.currentSelection.join(\"\");\n  let currentlyOpen = fullPath.join(\"\") === props.currentPlaylist.join(\"\");\n  const liClassList = ClassName(\"list-item item-file\", {\n    \"item--selected\": currentSelected\n  }, {\n    \"item--curently-open\": currentlyOpen\n  });\n  let content = name;\n\n  if (currentSelected && renameMode) {\n    content = renameInput; //(name)\n  }\n\n  drop(drag(ref));\n  return React.createElement(\"li\", {\n    ref: ref,\n    className: liClassList,\n    onClick: props.onClick,\n    onContextMenu: props.onContextMenu,\n    \"data-path\": path.join(\"/\"),\n    key: UUID.genV1(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    className: \"icon icon-file\",\n    icon: faFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), content);\n};\n\nconst mapStateToProps = state => ({\n  currentSelection: state.playList.currentSelection,\n  currentPlaylist: state.playList.currentPlaylist\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addTrackToList: (track, path) => dispatch(copyTrackToList(track, path))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileElement);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayListExplorer/Explorer/ExplorerTree/FileElement/FileElement.js"],"names":["faFile","FontAwesomeIcon","ClassName","React","useCallback","useRef","useDrag","useDrop","connect","UUID","ItemTypes","copyTrackToList","FileElement","props","name","path","renameMode","renameInput","addTrackToList","fullPath","ref","handleDrop","item","track","drag","type","FILE","drop","accept","TRACK","currentSelected","join","currentSelection","currentlyOpen","currentPlaylist","liClassList","content","onClick","onContextMenu","genV1","mapStateToProps","state","playList","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,MAAT,QAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,WAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAM;AACFC,IAAAA,IADE;AAEFC,IAAAA,IAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA,WAJE;AAKFC,IAAAA;AALE,MAMFL,KANJ;AAQA,QAAMM,QAAQ,GAAG,CAAC,GAAGJ,IAAJ,EAAUD,IAAV,CAAjB;AACA,QAAMM,GAAG,GAAGf,MAAM,CAAC,IAAD,CAAlB;AAEA,QAAMgB,UAAU,GAAGjB,WAAW,CAAEkB,IAAD,IAAU;AACrCJ,IAAAA,cAAc,CAACI,IAAI,CAACC,KAAN,EAAaJ,QAAb,CAAd;AACH,GAF6B,EAE3B,CAACD,cAAD,EAAiBC,QAAjB,CAF2B,CAA9B;AAIA,QAAM,GAAGK,IAAH,IAAWlB,OAAO,CAAC;AACrBgB,IAAAA,IAAI,EAAE;AACFG,MAAAA,IAAI,EAAEf,SAAS,CAACgB,IADd;AAEFP,MAAAA,QAAQ,EAAEA;AAFR;AADe,GAAD,CAAxB;AAOA,QAAM,GAAGQ,IAAH,IAAWpB,OAAO,CAAC;AACrBqB,IAAAA,MAAM,EAAElB,SAAS,CAACmB,KADG;AAErBF,IAAAA,IAAI,EAAEN;AAFe,GAAD,CAAxB;AAKA,MAAIS,eAAe,GAAIX,QAAQ,CAACY,IAAT,CAAc,EAAd,MAAsBlB,KAAK,CAACmB,gBAAN,CAAuBD,IAAvB,CAA4B,EAA5B,CAA7C;AACA,MAAIE,aAAa,GAAId,QAAQ,CAACY,IAAT,CAAc,EAAd,MAAsBlB,KAAK,CAACqB,eAAN,CAAsBH,IAAtB,CAA2B,EAA3B,CAA3C;AAGA,QAAMI,WAAW,GAAGjC,SAAS,CACzB,qBADyB,EAEzB;AAAE,sBAAkB4B;AAApB,GAFyB,EAGzB;AAAE,2BAAwBG;AAA1B,GAHyB,CAA7B;AAMA,MAAIG,OAAO,GAAGtB,IAAd;;AACA,MAAIgB,eAAe,IAAId,UAAvB,EAAmC;AAC/BoB,IAAAA,OAAO,GAAGnB,WAAV,CAD+B,CACT;AACzB;;AAEDU,EAAAA,IAAI,CAACH,IAAI,CAACJ,GAAD,CAAL,CAAJ;AACA,SACI;AACI,IAAA,GAAG,EAAEA,GADT;AAEI,IAAA,SAAS,EAAEe,WAFf;AAGI,IAAA,OAAO,EAAEtB,KAAK,CAACwB,OAHnB;AAII,IAAA,aAAa,EAAExB,KAAK,CAACyB,aAJzB;AAKI,iBAAWvB,IAAI,CAACgB,IAAL,CAAU,GAAV,CALf;AAMI,IAAA,GAAG,EAAEtB,IAAI,CAAC8B,KAAL,EANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOQ,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,gBAA3B;AAA4C,IAAA,IAAI,EAAEvC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,EAQKoC,OARL,CADJ;AAYH,CAxDD;;AA0DA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,gBAAgB,EAAES,KAAK,CAACC,QAAN,CAAeV,gBADH;AAE9BE,EAAAA,eAAe,EAAEO,KAAK,CAACC,QAAN,CAAeR;AAFF,CAAL,CAA7B;;AAKA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACpC1B,EAAAA,cAAc,EAAE,CAACK,KAAD,EAAQR,IAAR,KAAiB6B,QAAQ,CAACjC,eAAe,CAACY,KAAD,EAAQR,IAAR,CAAhB;AADL,CAAL,CAAnC;;AAIA,eAAeP,OAAO,CAACgC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C/B,WAA7C,CAAf","sourcesContent":["import { faFile } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ClassName from \"classnames\";\r\nimport React, { useCallback, useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { connect } from \"react-redux\";\r\nimport UUID from \"uuidjs\";\r\nimport ItemTypes from \"../../../../../DndItemTypes\";\r\nimport { copyTrackToList } from \"./../../../../../../../actions\";\r\n\r\nconst FileElement = props => {\r\n    const {\r\n        name,\r\n        path,\r\n        renameMode,\r\n        renameInput,\r\n        addTrackToList,\r\n    } = props;\r\n\r\n    const fullPath = [...path, name]\r\n    const ref = useRef(null)\r\n\r\n    const handleDrop = useCallback((item) => {\r\n        addTrackToList(item.track, fullPath)\r\n    }, [addTrackToList, fullPath])\r\n\r\n    const [, drag] = useDrag({\r\n        item: {\r\n            type: ItemTypes.FILE,\r\n            fullPath: fullPath\r\n        },\r\n    })\r\n\r\n    const [, drop] = useDrop({\r\n        accept: ItemTypes.TRACK,\r\n        drop: handleDrop\r\n    })\r\n\r\n    let currentSelected = (fullPath.join(\"\") === props.currentSelection.join(\"\"));\r\n    let currentlyOpen = (fullPath.join(\"\") === props.currentPlaylist.join(\"\"));\r\n\r\n\r\n    const liClassList = ClassName(\r\n        \"list-item item-file\",\r\n        { \"item--selected\": currentSelected },\r\n        { \"item--curently-open\" : currentlyOpen }\r\n    )\r\n    \r\n    let content = name\r\n    if (currentSelected && renameMode) {\r\n        content = renameInput;//(name)\r\n    }\r\n\r\n    drop(drag(ref))\r\n    return (\r\n        <li\r\n            ref={ref}\r\n            className={liClassList}\r\n            onClick={props.onClick}\r\n            onContextMenu={props.onContextMenu}\r\n            data-path={path.join(\"/\")}\r\n            key={UUID.genV1()}>\r\n                <FontAwesomeIcon className=\"icon icon-file\" icon={faFile} />\r\n            {content}\r\n        </li>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentSelection: state.playList.currentSelection,\r\n    currentPlaylist: state.playList.currentPlaylist\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTrackToList: (track, path) => dispatch(copyTrackToList(track, path))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileElement);\r\n\r\n"]},"metadata":{},"sourceType":"module"}