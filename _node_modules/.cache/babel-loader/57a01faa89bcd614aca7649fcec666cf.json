{"ast":null,"code":"import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import*as comperators from\"./comperators\";var prevState;var Observer=/*#__PURE__*/function(){function Observer(store){_classCallCheck(this,Observer);this.store=store;prevState=store.getState();}_createClass(Observer,[{key:\"check\",value:function check(){var state=this.store.getState();var diffs=[];for(var _i=0,_Object$values=Object.values(comperators);_i<_Object$values.length;_i++){var test=_Object$values[_i];var response=test(prevState,state);if(response){diffs.push(response);}}prevState=state;return diffs;}}]);return Observer;}();export{Observer as default};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/core/console/observer/observer.js"],"names":["comperators","prevState","Observer","store","getState","state","diffs","Object","values","test","response","push"],"mappings":"kPAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,GAAIC,CAAAA,SAAJ,C,GACqBC,CAAAA,Q,yBACjB,kBAAYC,KAAZ,CAAkB,gCACd,KAAKA,KAAL,CAAaA,KAAb,CACAF,SAAS,CAAGE,KAAK,CAACC,QAAN,EAAZ,CACH,C,0DAEM,CACH,GAAIC,CAAAA,KAAK,CAAG,KAAKF,KAAL,CAAWC,QAAX,EAAZ,CACA,GAAIE,CAAAA,KAAK,CAAG,EAAZ,CACA,4BAAkBC,MAAM,CAACC,MAAP,CAAcR,WAAd,CAAlB,+BAA6C,CAAxC,GAAIS,CAAAA,IAAI,mBAAR,CACD,GAAIC,CAAAA,QAAQ,CAAID,IAAI,CAACR,SAAD,CAAYI,KAAZ,CAApB,CACA,GAAGK,QAAH,CAAY,CACTJ,KAAK,CAACK,IAAN,CAAWD,QAAX,EACF,CACJ,CACDT,SAAS,CAAGI,KAAZ,CACA,MAAOC,CAAAA,KAAP,CACH,C,+BAjBgBJ,Q","sourcesContent":["import * as comperators from \"./comperators\";\r\n\r\nlet prevState; \r\nexport default class Observer{\r\n    constructor(store){\r\n        this.store = store;\r\n        prevState = store.getState();\r\n    }\r\n\r\n    check(){\r\n        let state = this.store.getState();\r\n        let diffs = [];\r\n        for( let test of  Object.values(comperators)){\r\n            let response  = test(prevState, state)\r\n            if(response){\r\n               diffs.push(response);\r\n            }\r\n        }\r\n        prevState = state;\r\n        return diffs;\r\n    } \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}