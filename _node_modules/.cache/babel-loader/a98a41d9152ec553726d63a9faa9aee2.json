{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Carousel-slider\\\\Slider.js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport UUID from \"uuidjs\";\nimport style from \"./slider.scss\";\n\nconst Slider = ({\n  slides: initSlides,\n  next: nextHandle,\n  prev: prevHandle,\n  minSlideWidth = style.minSlideWidth\n}) => {\n  const slider = useRef();\n  const [_containerWidth, setContainerWidth] = useState(null);\n  const [slideWidth, setSlideWidth] = useState(null);\n  const [slides, setSlides] = useState([...initSlides, ...initSlides, ...initSlides]);\n  const [isTransitionActive, setTransitionActive] = useState(false);\n  const [actionQueue, setActionQueue] = useState([]);\n  const shift = useRef();\n  const containerWidth = useCallback(() => {\n    if (!slider.current) return 0;\n    let width = _containerWidth;\n\n    if (!width) {\n      var _slider$current$paren;\n\n      width = (_slider$current$paren = slider.current.parentElement.getBoundingClientRect()) === null || _slider$current$paren === void 0 ? void 0 : _slider$current$paren.width;\n      setContainerWidth(width);\n    }\n\n    return width;\n  }, [_containerWidth, setContainerWidth]);\n  const setTransitionClass = useCallback(value => {\n    if (!slider.current) return;\n\n    if (value) {\n      slider.current.classList.add(\"slider-transition--active\");\n      return;\n    }\n\n    slider.current.classList.remove(\"slider-transition--active\");\n  }, [slider]);\n  useEffect(() => {\n    const transitionEnd = () => setTransitionActive(false);\n\n    window.addEventListener(\"transitionend\", transitionEnd);\n    window.addEventListener(\"mozTransitionEnd\", transitionEnd);\n    window.addEventListener(\"webkitTransitionEnd\", transitionEnd);\n    window.addEventListener(\"oTransitionEnd\", transitionEnd);\n    return () => {\n      window.removeEventListener(\"transitionend\", transitionEnd);\n      window.removeEventListener(\"mozTransitionEnd\", transitionEnd);\n      window.removeEventListener(\"webkitTransitionEnd\", transitionEnd);\n      window.removeEventListener(\"oTransitionEnd\", transitionEnd);\n    };\n  }, [setTransitionActive]);\n  const setPosition = useCallback(position => {\n    if (!slider.current) return;\n    slider.current.style.transform = `translateX(${position * slideWidth}px)`;\n    setTransitionActive(true);\n  }, [slider, slideWidth, setTransitionActive]);\n  useEffect(() => {\n    shift.current = -initSlides.length;\n    setPosition(shift.current);\n  }, [slideWidth, setPosition, shift, initSlides]);\n  useEffect(() => {\n    const resetSize = () => setContainerWidth(null);\n\n    window.addEventListener(\"resize\", resetSize);\n    return () => window.removeEventListener(\"resize\", resetSize);\n  }, [setContainerWidth]);\n  useEffect(() => {\n    if (!containerWidth() || !minSlideWidth || !slider.current) return;\n    const visibleSlides = ~~(containerWidth() / parseInt(minSlideWidth));\n    const slideWidth = containerWidth() / visibleSlides;\n    setSlideWidth(slideWidth);\n    slider.current.style.width = slideWidth * slider.current.children.length + \"px\";\n  }, [containerWidth, minSlideWidth, setSlideWidth]);\n  const appendSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.shift();\n\n        _slides.push(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const prependSlides = useCallback(amount => {\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.pop();\n\n        _slides.unshift(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const action = useCallback(() => {\n    if (!actionQueue.length) return;\n    const queue = actionQueue;\n    const direction = queue.shift();\n    setTransitionClass(false);\n    direction > 0 ? appendSlides(direction) : prependSlides(Math.abs(direction));\n    setPosition(shift.current + direction);\n    setTimeout(() => {\n      setTransitionClass(true);\n      setPosition(shift.current);\n      setActionQueue(queue);\n    }, 0);\n  }, [setTransitionClass, setPosition, actionQueue, setActionQueue]);\n  useEffect(() => {\n    if (!isTransitionActive) {\n      action();\n    }\n  }, [isTransitionActive, actionQueue]);\n  const next = useCallback(() => {\n    setActionQueue(queue => {\n      return [...queue, 1];\n    });\n  }, [setActionQueue]);\n  useEffect(() => nextHandle && nextHandle(next), [next, nextHandle]);\n  const prev = useCallback(() => {\n    setActionQueue(queue => {\n      return [...queue, -1];\n    });\n  }, [setActionQueue]);\n  useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle]);\n  return React.createElement(\"ul\", {\n    className: \"carousel-slider\",\n    ref: slider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, slides && slides instanceof Array && slides.map(slide => React.createElement(\"li\", {\n    key: UUID.genV1(),\n    className: \"slide\",\n    style: {\n      width: minSlideWidth || \"initial\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, slide)));\n};\n\nexport default Slider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Carousel-slider/Slider.js"],"names":["React","useCallback","useEffect","useRef","useState","UUID","style","Slider","slides","initSlides","next","nextHandle","prev","prevHandle","minSlideWidth","slider","_containerWidth","setContainerWidth","slideWidth","setSlideWidth","setSlides","isTransitionActive","setTransitionActive","actionQueue","setActionQueue","shift","containerWidth","current","width","parentElement","getBoundingClientRect","setTransitionClass","value","classList","add","remove","transitionEnd","window","addEventListener","removeEventListener","setPosition","position","transform","length","resetSize","visibleSlides","parseInt","children","appendSlides","amount","_slides","i","slide","push","prependSlides","pop","unshift","action","queue","direction","Math","abs","setTimeout","Array","map","genV1"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport UUID from \"uuidjs\";\r\nimport style from \"./slider.scss\"\r\n\r\nconst Slider = ({slides: initSlides, next:nextHandle, prev: prevHandle, minSlideWidth = style.minSlideWidth}) => {\r\n    const slider = useRef();\r\n    const [_containerWidth, setContainerWidth] = useState(null);\r\n    const [slideWidth, setSlideWidth] = useState(null);\r\n    const [slides, setSlides] = useState([...initSlides, ...initSlides, ...initSlides]);\r\n    const [isTransitionActive, setTransitionActive] = useState(false);\r\n    const [actionQueue, setActionQueue] = useState([]);\r\n    const shift = useRef();\r\n\r\n    const containerWidth = useCallback(() => {\r\n        if (!slider.current) return 0;\r\n        let width = _containerWidth\r\n        if (!width) {\r\n            width = slider.current.parentElement.getBoundingClientRect()?.width\r\n            setContainerWidth(width);\r\n        }\r\n        return width;\r\n    }, [_containerWidth, setContainerWidth])\r\n\r\n    const setTransitionClass = useCallback( value =>{\r\n         if(!slider.current) return;\r\n         if(value){\r\n            slider.current.classList.add(\"slider-transition--active\")\r\n            return\r\n         }\r\n         slider.current.classList.remove(\"slider-transition--active\")\r\n    }, [slider])\r\n\r\n\r\n    useEffect(()=>{\r\n        const transitionEnd = () => setTransitionActive(false);\r\n        window.addEventListener(\"transitionend\", transitionEnd);\r\n        window.addEventListener(\"mozTransitionEnd\", transitionEnd);\r\n        window.addEventListener(\"webkitTransitionEnd\", transitionEnd);\r\n        window.addEventListener(\"oTransitionEnd\", transitionEnd);\r\n        return () => {\r\n            window.removeEventListener(\"transitionend\", transitionEnd);\r\n            window.removeEventListener(\"mozTransitionEnd\", transitionEnd);\r\n            window.removeEventListener(\"webkitTransitionEnd\", transitionEnd);\r\n            window.removeEventListener(\"oTransitionEnd\", transitionEnd);\r\n        }\r\n    }, [setTransitionActive])\r\n\r\n    const setPosition = useCallback( position =>{\r\n        if(!slider.current) return;\r\n        slider.current.style.transform = `translateX(${position * slideWidth }px)`\r\n        setTransitionActive(true);\r\n    }, [ slider, slideWidth, setTransitionActive])\r\n\r\n    useEffect(()=>{\r\n        shift.current = -initSlides.length;\r\n        setPosition(shift.current);\r\n    }, [slideWidth, setPosition, shift, initSlides])\r\n\r\n    useEffect(() => {\r\n        const resetSize = () => setContainerWidth(null);\r\n        window.addEventListener(\"resize\", resetSize);\r\n        return () => window.removeEventListener(\"resize\", resetSize);\r\n    }, [setContainerWidth])\r\n\r\n    useEffect(() => {\r\n        if (!containerWidth() || !minSlideWidth || !slider.current) return;\r\n        const visibleSlides = ~~(containerWidth() / parseInt(minSlideWidth));\r\n        const slideWidth = containerWidth() / visibleSlides\r\n        setSlideWidth(slideWidth);\r\n        slider.current.style.width = slideWidth * slider.current.children.length + \"px\";\r\n    }, [containerWidth, minSlideWidth,  setSlideWidth]);\r\n\r\n\r\n    const appendSlides = useCallback(amount => {\r\n        setSlides( slides => {\r\n            const _slides = [...slides];\r\n            for(let i = 0; i < amount; i++){\r\n                const slide = _slides.shift();\r\n                _slides.push(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const prependSlides = useCallback(amount => {\r\n        setSlides( slides => {\r\n            const _slides = [...slides];\r\n            for(let i = 0; i < amount; i++){\r\n                const slide = _slides.pop();\r\n                _slides.unshift(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const action = useCallback(() => {\r\n        if(!actionQueue.length) return;\r\n        const queue = actionQueue;\r\n        const direction = queue.shift();\r\n        setTransitionClass(false);\r\n        (direction > 0) ? appendSlides(direction) : prependSlides(Math.abs(direction));\r\n        setPosition( shift.current + direction);\r\n        setTimeout(()=>{\r\n            setTransitionClass(true);\r\n            setPosition(shift.current);\r\n            setActionQueue(queue)\r\n        }, 0)\r\n    }, [setTransitionClass, setPosition, actionQueue, setActionQueue])\r\n\r\n    useEffect(() =>{\r\n        if(!isTransitionActive){\r\n            action();\r\n        }\r\n    }, [isTransitionActive, actionQueue])\r\n\r\n    const next = useCallback(()=>{\r\n        setActionQueue( queue => {\r\n            return ([...queue, 1]);\r\n        })\r\n    }, [setActionQueue])\r\n\r\n\r\n    useEffect(()=> nextHandle && nextHandle(next), [next, nextHandle])\r\n\r\n    const prev = useCallback(()=>{\r\n        setActionQueue( queue => {\r\n            return [...queue, -1];\r\n        })\r\n    }, [setActionQueue])\r\n\r\n    useEffect(()=> prevHandle && prevHandle(prev), [prev, prevHandle])\r\n\r\n    return (\r\n        <ul className=\"carousel-slider\" ref={slider}>\r\n            {slides && slides instanceof Array && slides.map(slide => (\r\n                <li key={UUID.genV1()} className={\"slide\"} style={{width: minSlideWidth || \"initial\"}}>{slide}</li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}