{"ast":null,"code":"import STATUS from \"./../STATUS\";\nexport default function checkLoopState(prev, current) {\n  prev = prev.console;\n  current = current.console;\n  let response = null;\n\n  for (let channelName of Object.keys(prev.channel)) {\n    const prevLoopLength = prev.channel[channelName].playBackState.loopLength;\n    const currentLoopLength = current.channel[channelName].playBackState.loopLength;\n    const currentLopp = current.channel[channelName].playBackState.loop;\n    if (!currentLopp) return;\n\n    if (prevLoopLength !== currentLoopLength) {\n      return {\n        status: STATUS.LOOP_LENGTH_CHANGE,\n        channel: channelName,\n        currentValue: {\n          state: currentLopp,\n          loopLength: currentLoopLength\n        }\n      };\n    }\n  }\n\n  return response;\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/core/console/observer/comperators/loopLength.js"],"names":["STATUS","checkLoopState","prev","current","console","response","channelName","Object","keys","channel","prevLoopLength","playBackState","loopLength","currentLoopLength","currentLopp","loop","status","LOOP_LENGTH_CHANGE","currentValue","state"],"mappings":"AAAA,OAAOA,MAAP,MAAoB,aAApB;AAEA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,OAA9B,EAAsC;AACjDD,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAZ;AACAD,EAAAA,OAAO,GAAGA,OAAO,CAACC,OAAlB;AACA,MAAIC,QAAQ,GAAG,IAAf;;AACA,OAAI,IAAIC,WAAR,IAAuBC,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACO,OAAjB,CAAvB,EAAiD;AAC7C,UAAMC,cAAc,GAAGR,IAAI,CAACO,OAAL,CAAaH,WAAb,EAA0BK,aAA1B,CAAwCC,UAA/D;AACA,UAAMC,iBAAiB,GAAGV,OAAO,CAACM,OAAR,CAAgBH,WAAhB,EAA6BK,aAA7B,CAA2CC,UAArE;AACA,UAAME,WAAW,GAAGX,OAAO,CAACM,OAAR,CAAgBH,WAAhB,EAA6BK,aAA7B,CAA2CI,IAA/D;AAEA,QAAG,CAACD,WAAJ,EAAiB;;AAEjB,QAAGJ,cAAc,KAAKG,iBAAtB,EAAwC;AACpC,aAAO;AACHG,QAAAA,MAAM,EAAGhB,MAAM,CAACiB,kBADb;AAEHR,QAAAA,OAAO,EAAGH,WAFP;AAGHY,QAAAA,YAAY,EAAG;AACXC,UAAAA,KAAK,EAAGL,WADG;AAEXF,UAAAA,UAAU,EAAGC;AAFF;AAHZ,OAAP;AAQH;AACJ;;AACD,SAAOR,QAAP;AACH","sourcesContent":["import STATUS from  \"./../STATUS\";\r\n\r\nexport default function checkLoopState(prev, current){\r\n    prev = prev.console;\r\n    current = current.console;\r\n    let response = null;\r\n    for(let channelName of Object.keys(prev.channel)){\r\n        const prevLoopLength = prev.channel[channelName].playBackState.loopLength;\r\n        const currentLoopLength = current.channel[channelName].playBackState.loopLength;\r\n        const currentLopp = current.channel[channelName].playBackState.loop;\r\n\r\n        if(!currentLopp) return;\r\n\r\n        if(prevLoopLength !== currentLoopLength){\r\n            return {\r\n                status : STATUS.LOOP_LENGTH_CHANGE,\r\n                channel : channelName,\r\n                currentValue : {\r\n                    state : currentLopp,\r\n                    loopLength : currentLoopLength\r\n                }\r\n            }                \r\n        }\r\n    }\r\n    return response;\r\n}"]},"metadata":{},"sourceType":"module"}