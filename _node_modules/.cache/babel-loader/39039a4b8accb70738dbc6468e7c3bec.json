{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Header\\\\Header.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport LoadingBar from 'react-redux-loading-bar';\nimport NavBar from \"./NavBar/NabBar\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport \"./header.scss\";\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.barElement = React.createRef(null);\n    this.barElementHeight = 0;\n    this.prevScrollDirection = 0; // 1 down -1 up;\n\n    this.prevScrollPosition = 0;\n    this.snapPosition = null;\n  }\n\n  startWatching() {\n    window.addEventListener('scroll', this.scrollWatching.bind(this));\n  }\n\n  stopWatching() {\n    window.removeEventListener('scroll', this.scrollWatching.bind(this));\n  }\n\n  scrollWatching(event) {\n    //console.log(window.scrollY)\n    const scrollDirection = window.scrollY - this.prevScrollPosition < 0 ? \"up\" : \"down\";\n\n    if (scrollDirection !== this.prevScrollDirection) {\n      this.snapPosition = window.scrollY;\n      this.barElement.current.style.transform = `translateY(-${this.barElementHeight}px)`;\n    }\n\n    if (scrollDirection === \"up\") {}\n\n    console.log(scrollDirection);\n\n    if (scrollDirection === \"up\") {\n      this.barElement.current.classList.add(\"bar--sticki\");\n      let y = -this.barElementHeight - (window.scrollY - this.snapPosition);\n      console.log(this.barElementHeight, y);\n      y = Math.min(y, 0);\n      this.barElement.current.style.transform = `translateY(${y}px)`;\n    } else {\n      this.barElement.current.classList.remove(\"bar--sticki\");\n    }\n\n    this.prevScrollPosition = window.scrollY;\n    this.prevScrollDirection = scrollDirection;\n  }\n\n  updateState(prevProps) {\n    if (this.props.sticki) {\n      this.startWatching();\n    } else {\n      this.stopWatching();\n    }\n  }\n\n  componentDidMount() {\n    this.updateState();\n    this.barElementHeight = this.barElement.current.getBoundingClientRect().height;\n  }\n\n  componentDidUpdate(prevProps) {\n    this.updateState(prevProps);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(LoadingBar, {\n      className: \"loading-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: classNames(\"top-bar\", {\n        \"bar--hidden\": this.props.hidden,\n        \"bar--dissabled\": this.props.dissabled\n      }),\n      ref: this.barElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"app layout container-xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      className: \"navigation-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  sticki: state.header.sticki,\n  hidden: state.header.hidden,\n  disabled: state.header.disabled\n});\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Header/Header.js"],"names":["React","Fragment","connect","LoadingBar","NavBar","Col","Row","Container","classNames","Header","Component","constructor","barElement","createRef","barElementHeight","prevScrollDirection","prevScrollPosition","snapPosition","startWatching","window","addEventListener","scrollWatching","bind","stopWatching","removeEventListener","event","scrollDirection","scrollY","current","style","transform","console","log","classList","add","y","Math","min","remove","updateState","prevProps","props","sticki","componentDidMount","getBoundingClientRect","height","componentDidUpdate","render","hidden","dissabled","mapStateToProps","state","header","disabled"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingBar from 'react-redux-loading-bar';\r\nimport NavBar from \"./NavBar/NabBar\"\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\nimport \"./header.scss\";\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.barElement = React.createRef(null);\r\n    this.barElementHeight = 0;\r\n    this.prevScrollDirection = 0; // 1 down -1 up;\r\n    this.prevScrollPosition = 0;\r\n    this.snapPosition = null;\r\n\r\n  }\r\n\r\n  startWatching(){\r\n    window.addEventListener('scroll', this.scrollWatching.bind(this))\r\n  }\r\n\r\n  stopWatching(){\r\n    window.removeEventListener('scroll', this.scrollWatching.bind(this))\r\n  }\r\n\r\n  scrollWatching(event){\r\n    //console.log(window.scrollY)\r\n    const scrollDirection = ( window.scrollY - this.prevScrollPosition  < 0 ) ? \"up\" : \"down\";\r\n    if(scrollDirection !== this.prevScrollDirection){\r\n      this.snapPosition = window.scrollY;\r\n\r\n      this.barElement.current.style.transform = `translateY(-${this.barElementHeight}px)`\r\n    }\r\n\r\n    if(scrollDirection === \"up\"){\r\n\r\n    }\r\n    \r\n    \r\n    console.log(scrollDirection)\r\n    if(scrollDirection === \"up\"){\r\n      this.barElement.current.classList.add(\"bar--sticki\")\r\n      let y = -this.barElementHeight - (window.scrollY - this.snapPosition) ;\r\n      console.log(this.barElementHeight, y)\r\n      y = Math.min(y, 0);\r\n      this.barElement.current.style.transform = `translateY(${y}px)`\r\n    } else {\r\n      this.barElement.current.classList.remove(\"bar--sticki\")\r\n    }\r\n\r\n\r\n    this.prevScrollPosition = window.scrollY;\r\n    this.prevScrollDirection = scrollDirection;\r\n  }\r\n\r\n  updateState(prevProps){\r\n    if(this.props.sticki){\r\n      this.startWatching();\r\n    } else {\r\n      this.stopWatching();\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateState();\r\n    this.barElementHeight = this.barElement.current.getBoundingClientRect().height;\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    this.updateState(prevProps);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <LoadingBar className=\"loading-bar\"/>\r\n        <header \r\n             className={classNames(\"top-bar\", {\r\n               \"bar--hidden\": this.props.hidden,\r\n               \"bar--dissabled\": this.props.dissabled\r\n             })}\r\n             ref={this.barElement}>\r\n          <Container className=\"app layout container-xl\" >\r\n            <Row>\r\n              <Col>\r\n                <NavBar className=\"navigation-bar\" />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </header>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  sticki : state.header.sticki,\r\n  hidden : state.header.hidden,\r\n  disabled: state.header.disabled,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Header);"]},"metadata":{},"sourceType":"module"}