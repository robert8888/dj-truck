{"ast":null,"code":"export function toDbValue(value){var gain=1+value/100;var dB=Math.floor(20*Math.log10(gain));return dB;}export function toDbValueText(value){var dB=toDbValue(value);dB=dB===-Infinity?\"-\\u221E\":dB+\"dB\";return dB;}export function equalPowerFader(value){value=(value+50)/100;return equalPower(value);}export function equalPower(percent){var volA=Math.cos(percent*0.5*Math.PI);var volB=Math.cos((1-percent)*0.5*Math.PI);if(percent===1){volA=0;volB=1;}else if(percent===0){volA=1;volB=0;}return{a:volA,b:volB};}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/utils/sound/converter.js"],"names":["toDbValue","value","gain","dB","Math","floor","log10","toDbValueText","Infinity","equalPowerFader","equalPower","percent","volA","cos","PI","volB","a","b"],"mappings":"AACA,MAAO,SAASA,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CAC7B,GAAIC,CAAAA,IAAI,CAAG,EAAID,KAAK,CAAG,GAAvB,CACA,GAAIE,CAAAA,EAAE,CAAGC,IAAI,CAACC,KAAL,CAAW,GAAKD,IAAI,CAACE,KAAL,CAAWJ,IAAX,CAAhB,CAAT,CACA,MAAOC,CAAAA,EAAP,CACH,CAED,MAAO,SAASI,CAAAA,aAAT,CAAwBN,KAAxB,CAA+B,CAClC,GAAIE,CAAAA,EAAE,CAAGH,SAAS,CAACC,KAAD,CAAlB,CACAE,EAAE,CAAIA,EAAE,GAAK,CAACK,QAAT,CAAqB,SAArB,CAAkCL,EAAE,CAAG,IAA5C,CACA,MAAQA,CAAAA,EAAR,CACH,CAED,MAAO,SAASM,CAAAA,eAAT,CAAyBR,KAAzB,CAA+B,CAClCA,KAAK,CAAG,CAACA,KAAK,CAAG,EAAT,EAAe,GAAvB,CACA,MAAOS,CAAAA,UAAU,CAACT,KAAD,CAAjB,CACH,CAED,MAAO,SAASS,CAAAA,UAAT,CAAoBC,OAApB,CAA4B,CAC/B,GAAIC,CAAAA,IAAI,CAAGR,IAAI,CAACS,GAAL,CAASF,OAAO,CAAG,GAAV,CAAgBP,IAAI,CAACU,EAA9B,CAAX,CACA,GAAIC,CAAAA,IAAI,CAAGX,IAAI,CAACS,GAAL,CAAS,CAAC,EAAIF,OAAL,EAAgB,GAAhB,CAAsBP,IAAI,CAACU,EAApC,CAAX,CAEA,GAAGH,OAAO,GAAK,CAAf,CAAiB,CACbC,IAAI,CAAG,CAAP,CACAG,IAAI,CAAG,CAAP,CACH,CAHD,IAGO,IAAGJ,OAAO,GAAK,CAAf,CAAiB,CACpBC,IAAI,CAAG,CAAP,CACAG,IAAI,CAAG,CAAP,CACH,CAED,MAAM,CACFC,CAAC,CAAEJ,IADD,CAEFK,CAAC,CAAEF,IAFD,CAAN,CAIH","sourcesContent":["\r\nexport function toDbValue(value) {\r\n    let gain = 1 + value / 100;\r\n    let dB = Math.floor(20 * Math.log10(gain));\r\n    return dB;  \r\n}\r\n\r\nexport function toDbValueText (value) {\r\n    let dB = toDbValue(value)\r\n    dB = (dB === -Infinity) ? \"-\\u221E\"  : dB + \"dB\";\r\n    return  dB ;\r\n}\r\n\r\nexport function equalPowerFader(value){\r\n    value = (value + 50) / 100;\r\n    return equalPower(value)\r\n}\r\n\r\nexport function equalPower(percent){\r\n    let volA = Math.cos(percent * 0.5 * Math.PI);\r\n    let volB = Math.cos((1 - percent) * 0.5 * Math.PI);\r\n\r\n    if(percent === 1){\r\n        volA = 0;\r\n        volB = 1;\r\n    } else if(percent === 0){\r\n        volA = 1;\r\n        volB = 0;\r\n    }\r\n\r\n    return{\r\n        a: volA,\r\n        b: volB\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}