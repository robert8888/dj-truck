{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Deck\\\\TrackInfo\\\\TimeLeft\\\\TimeLeft.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { formater } from \"./../../../../../../../utils/time/timeFromater\";\nimport { connect } from \"react-redux\";\n\nconst TimeLeft = props => {\n  const container = useRef(null);\n  useEffect(() => {\n    let timeLeft;\n\n    if (props.timeLeft) {\n      timeLeft = formater.secondsToStr(props.timeLeft);\n    } else {\n      timeLeft = formater.ytToStr(props.trackDuration);\n    }\n\n    container.current.textContent = timeLeft;\n  }, [props.timeLeft, container, props.trackDuration]);\n  return React.createElement(\"span\", {\n    className: \"time-left\",\n    ref: container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n};\n\nconst mapsStateToProps = (state, ownProps) => ({\n  trackDuration: state.console.channel[ownProps.name].track.duration,\n  timeLeft: state.console.channel[ownProps.name].playBackState.timeLeft\n});\n\nexport default connect(mapsStateToProps)(TimeLeft);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/app/components/Console/Deck/TrackInfo/TimeLeft/TimeLeft.js"],"names":["React","useRef","useEffect","formater","connect","TimeLeft","props","container","timeLeft","secondsToStr","ytToStr","trackDuration","current","textContent","mapsStateToProps","state","ownProps","console","channel","name","track","duration","playBackState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,gDAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAMC,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIM,QAAJ;;AACA,QAAGF,KAAK,CAACE,QAAT,EAAkB;AACdA,MAAAA,QAAQ,GAAGL,QAAQ,CAACM,YAAT,CAAsBH,KAAK,CAACE,QAA5B,CAAX;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,GAAGL,QAAQ,CAACO,OAAT,CAAiBJ,KAAK,CAACK,aAAvB,CAAX;AACH;;AACDJ,IAAAA,SAAS,CAACK,OAAV,CAAkBC,WAAlB,GAAgCL,QAAhC;AACH,GARQ,EAQN,CAACF,KAAK,CAACE,QAAP,EAAiBD,SAAjB,EAA4BD,KAAK,CAACK,aAAlC,CARM,CAAT;AAUA,SACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,GAAG,EAAEJ,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAhBD;;AAkBA,MAAMO,gBAAgB,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC3CL,EAAAA,aAAa,EAAGI,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACG,IAA/B,EAAqCC,KAArC,CAA2CC,QADhB;AAE3Cb,EAAAA,QAAQ,EAAIO,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACG,IAA/B,EAAqCG,aAArC,CAAmDd;AAFpB,CAAtB,CAAzB;;AAKA,eAAeJ,OAAO,CAACU,gBAAD,CAAP,CAA0BT,QAA1B,CAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\"\r\nimport { formater } from \"./../../../../../../../utils/time/timeFromater\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst TimeLeft = props => {\r\n    const container = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        let timeLeft;\r\n        if(props.timeLeft){\r\n            timeLeft = formater.secondsToStr(props.timeLeft);\r\n        } else {\r\n            timeLeft = formater.ytToStr(props.trackDuration);\r\n        }\r\n        container.current.textContent = timeLeft;\r\n    }, [props.timeLeft, container, props.trackDuration])\r\n\r\n    return (\r\n        <span className=\"time-left\" ref={container}/>\r\n    )\r\n}\r\n\r\nconst mapsStateToProps = (state, ownProps) => ({\r\n    trackDuration : state.console.channel[ownProps.name].track.duration,\r\n    timeLeft :  state.console.channel[ownProps.name].playBackState.timeLeft,\r\n})\r\n\r\nexport default connect(mapsStateToProps)(TimeLeft);"]},"metadata":{},"sourceType":"module"}