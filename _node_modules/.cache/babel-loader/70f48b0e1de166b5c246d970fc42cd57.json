{"ast":null,"code":"import { ACTIONS } from \"./../../../actions\";\nimport STATES from \"./stateDef\";\nconst initState = {\n  recName: \"\",\n  recId: null,\n  recordingState: STATES.IDLE,\n  trackList: []\n};\nexport default function headerState(state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.R_START_RECORDING:\n      {\n        return { ...state,\n          recordingState: STATES.INIT,\n          recName: action.recName,\n          recId: action.id\n        };\n      }\n\n    case ACTIONS.R_END_RECORDING:\n      {\n        return { ...state,\n          recordingState: STATES.IDLE,\n          recName: \"\",\n          trackList: []\n        };\n      }\n\n    case ACTIONS.R_RECORDING:\n      {\n        return { ...state,\n          recordingState: STATES.RECORDING\n        };\n      }\n\n    case ACTIONS.R_RECORDING_FAIL:\n      {\n        return { ...state,\n          recordingState: STATES.FAIL,\n          recName: \"\",\n          trackList: []\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/reducers/console/recorder/recorderReducer.js"],"names":["ACTIONS","STATES","initState","recName","recId","recordingState","IDLE","trackList","headerState","state","action","type","R_START_RECORDING","INIT","id","R_END_RECORDING","R_RECORDING","RECORDING","R_RECORDING_FAIL","FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,EADK;AAEdC,EAAAA,KAAK,EAAE,IAFO;AAGdC,EAAAA,cAAc,EAAEJ,MAAM,CAACK,IAHT;AAIdC,EAAAA,SAAS,EAAE;AAJG,CAAlB;AAOA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGP,SAA7B,EAAwCQ,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,OAAO,CAACY,iBAAb;AAAiC;AAC7B,eAAO,EACH,GAAGH,KADA;AAEHJ,UAAAA,cAAc,EAAEJ,MAAM,CAACY,IAFpB;AAGHV,UAAAA,OAAO,EAAEO,MAAM,CAACP,OAHb;AAIHC,UAAAA,KAAK,EAAEM,MAAM,CAACI;AAJX,SAAP;AAMH;;AAED,SAAKd,OAAO,CAACe,eAAb;AAA8B;AAC1B,eAAO,EACH,GAAGN,KADA;AAEHJ,UAAAA,cAAc,EAAEJ,MAAM,CAACK,IAFpB;AAGHH,UAAAA,OAAO,EAAE,EAHN;AAIHI,UAAAA,SAAS,EAAE;AAJR,SAAP;AAMH;;AAED,SAAKP,OAAO,CAACgB,WAAb;AAA0B;AACtB,eAAO,EACH,GAAGP,KADA;AAEHJ,UAAAA,cAAc,EAAEJ,MAAM,CAACgB;AAFpB,SAAP;AAIH;;AAED,SAAKjB,OAAO,CAACkB,gBAAb;AAAgC;AAC5B,eAAO,EACH,GAAGT,KADA;AAEHJ,UAAAA,cAAc,EAAEJ,MAAM,CAACkB,IAFpB;AAGHhB,UAAAA,OAAO,EAAE,EAHN;AAIHI,UAAAA,SAAS,EAAE;AAJR,SAAP;AAMH;;AAED;AAAS,aAAOE,KAAP;AAnCb;AAqCH","sourcesContent":["import { ACTIONS } from \"./../../../actions\";\r\nimport STATES from \"./stateDef\";\r\n\r\nconst initState = {\r\n    recName: \"\",\r\n    recId: null,\r\n    recordingState: STATES.IDLE,\r\n    trackList: [],\r\n}\r\n\r\nexport default function headerState(state = initState, action) {\r\n    switch (action.type) {\r\n        case ACTIONS.R_START_RECORDING : {\r\n            return {\r\n                ...state,\r\n                recordingState: STATES.INIT,\r\n                recName: action.recName,\r\n                recId: action.id\r\n            }\r\n        }\r\n\r\n        case ACTIONS.R_END_RECORDING: {\r\n            return {\r\n                ...state,\r\n                recordingState: STATES.IDLE,\r\n                recName: \"\",\r\n                trackList: []\r\n            }\r\n        }\r\n\r\n        case ACTIONS.R_RECORDING: {\r\n            return {\r\n                ...state,\r\n                recordingState: STATES.RECORDING,\r\n            }\r\n        }\r\n\r\n        case ACTIONS.R_RECORDING_FAIL : {\r\n            return {\r\n                ...state,\r\n                recordingState: STATES.FAIL,\r\n                recName: \"\",\r\n                trackList: []\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}