{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(watchUpdateDescription),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handle);import{hideLoading,showLoading}from'react-redux-loading-bar';import{put,select,takeEvery}from'redux-saga/effects';import{ACTIONS,pushLog,setProfileDescription}from\"../../actions\";import{getApi}from\"./../../apis/apiProvider\";import{Log}from\"./../../utils/logger/logger\";import errorParser from\"./../../utils/serverErrorParser/errorParser\";export default function watchUpdateDescription(){return _regeneratorRuntime.wrap(function watchUpdateDescription$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(ACTIONS.U_REQ_UPDATE_DESCRIPTION,handle);case 2:case\"end\":return _context.stop();}}},_marked);}var getToken=function getToken(state){return state.user.token;};var userId=function userId(state){return state.user.id;};function handle(action){var path,token,_response$data,_getApi,callQuery,queries,query,response,status,id;return _regeneratorRuntime.wrap(function handle$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:path=[\"Saga\",\"Request updated description\"];_context2.next=3;return select(getToken);case 3:token=_context2.sent;_context2.prev=4;_context2.next=7;return put(showLoading());case 7:_getApi=getApi(\"UserAssets\"),callQuery=_getApi.callQuery,queries=_getApi.queries;query=queries.updateUserDescriptionQl;_context2.next=11;return callQuery(query,token,{description:action.description});case 11:response=_context2.sent;status=response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.udpateMyDescription;//console.log(response, status)\nif(status){_context2.next=15;break;}throw new Error(\"Can't update description database\");case 15:if(!response.errors){_context2.next=17;break;}throw new Error(\"Can't update descritpion in database\"+errorParser(response.errors));case 17:if(!status.error){_context2.next=19;break;}throw new Error(\"Can't update description. \"+status.message);case 19:_context2.next=21;return select(userId);case 21:id=_context2.sent;_context2.next=24;return put(setProfileDescription(id,action.description));case 24:_context2.next=26;return put(pushLog(new Log(\"User descirption updated to : \"+action.description,path)));case 26:_context2.next=32;break;case 28:_context2.prev=28;_context2.t0=_context2[\"catch\"](4);_context2.next=32;return put(pushLog(Log.Error(path,_context2.t0.message,\"Sorry. During process of updating description occurred a problem\")));case 32:_context2.prev=32;_context2.next=35;return put(hideLoading());case 35:return _context2.finish(32);case 36:case\"end\":return _context2.stop();}}},_marked2,null,[[4,28,32,36]]);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/user/reqUpdateDescription.js"],"names":["watchUpdateDescription","handle","hideLoading","showLoading","put","select","takeEvery","ACTIONS","pushLog","setProfileDescription","getApi","Log","errorParser","U_REQ_UPDATE_DESCRIPTION","getToken","state","user","token","userId","id","action","path","callQuery","queries","query","updateUserDescriptionQl","description","response","status","data","udpateMyDescription","Error","errors","error","message"],"mappings":"2JAOyBA,sB,iDAOfC,M,EAdV,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,yBAAzC,CACA,OAASC,GAAT,CAAcC,MAAd,CAAsBC,SAAtB,KAAuC,oBAAvC,CACA,OAASC,OAAT,CAAkBC,OAAlB,CAA2BC,qBAA3B,KAAwD,eAAxD,CACA,OAASC,MAAT,KAAuB,0BAAvB,CACA,OAASC,GAAT,KAAoB,6BAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6CAAxB,CAEA,cAAe,SAAUZ,CAAAA,sBAAV,kJACX,MAAMM,CAAAA,SAAS,CAACC,OAAO,CAACM,wBAAT,CAAmCZ,MAAnC,CAAf,CADW,sDAIf,GAAMa,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWC,KAAf,EAAtB,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAH,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWG,EAAf,EAApB,CAEA,QAAUlB,CAAAA,MAAV,CAAiBmB,MAAjB,qMACUC,IADV,CACiB,CAAC,MAAD,CAAS,6BAAT,CADjB,kBAEkB,MAAMhB,CAAAA,MAAM,CAACS,QAAD,CAAZ,CAFlB,OAEUG,KAFV,kDAKQ,MAAMb,CAAAA,GAAG,CAACD,WAAW,EAAZ,CAAT,CALR,eAMuCO,MAAM,CAAC,YAAD,CAN7C,CAMgBY,SANhB,SAMgBA,SANhB,CAM2BC,OAN3B,SAM2BA,OAN3B,CAQcC,KARd,CAQsBD,OAAO,CAACE,uBAR9B,mBAUyB,MAAMH,CAAAA,SAAS,CAACE,KAAD,CAAQP,KAAR,CAAgB,CAACS,WAAW,CAAEN,MAAM,CAACM,WAArB,CAAhB,CAAf,CAVzB,QAUcC,QAVd,gBAWcC,MAXd,CAWuBD,QAXvB,SAWuBA,QAXvB,iCAWuBA,QAAQ,CAAEE,IAXjC,yCAWuB,eAAgBC,mBAXvC,CAYQ;AAZR,GAaYF,MAbZ,gCAckB,IAAIG,CAAAA,KAAJ,CAAU,mCAAV,CAdlB,aAiBWJ,QAAQ,CAACK,MAjBpB,gCAkBkB,IAAID,CAAAA,KAAJ,CAAU,uCAAyCnB,WAAW,CAACe,QAAQ,CAACK,MAAV,CAA9D,CAlBlB,aAqBWJ,MAAM,CAACK,KArBlB,gCAsBkB,IAAIF,CAAAA,KAAJ,CAAU,6BAA+BH,MAAM,CAACM,OAAhD,CAtBlB,2BAyBmB,MAAM7B,CAAAA,MAAM,CAACa,MAAD,CAAZ,CAzBnB,QAyBcC,EAzBd,kCA0BQ,MAAMf,CAAAA,GAAG,CAACK,qBAAqB,CAACU,EAAD,CAAKC,MAAM,CAACM,WAAZ,CAAtB,CAAT,CA1BR,0BA4BQ,MAAMtB,CAAAA,GAAG,CAACI,OAAO,CAAC,GAAIG,CAAAA,GAAJ,CAAQ,iCAAmCS,MAAM,CAACM,WAAlD,CAA+DL,IAA/D,CAAD,CAAR,CAAT,CA5BR,+GA8BQ,MAAMjB,CAAAA,GAAG,CAACI,OAAO,CAACG,GAAG,CAACoB,KAAJ,CACdV,IADc,CAEd,aAAEa,OAFY,CAGd,kEAHc,CAAD,CAAR,CAAT,CA9BR,4CAoCQ,MAAM9B,CAAAA,GAAG,CAACF,WAAW,EAAZ,CAAT,CApCR","sourcesContent":["import { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport { put, select, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, pushLog, setProfileDescription } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { Log } from \"./../../utils/logger/logger\";\r\nimport errorParser from \"./../../utils/serverErrorParser/errorParser\";\r\n\r\nexport default function* watchUpdateDescription() {\r\n    yield takeEvery(ACTIONS.U_REQ_UPDATE_DESCRIPTION, handle);\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\nconst userId = state => state.user.id;\r\n\r\nfunction* handle(action) {\r\n    const path = [\"Saga\", \"Request updated description\"]\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        yield put(showLoading());\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n\r\n        const query = queries.updateUserDescriptionQl;\r\n\r\n        const response = yield callQuery(query, token , {description: action.description});\r\n        const status = response?.data?.udpateMyDescription;\r\n        //console.log(response, status)\r\n        if(!status){\r\n            throw new Error(\"Can't update description database\")\r\n        }\r\n\r\n        if(response.errors){\r\n            throw new Error(\"Can't update descritpion in database\" + errorParser(response.errors))\r\n        }\r\n\r\n        if(status.error){\r\n            throw new Error(\"Can't update description. \" + status.message)\r\n        }\r\n\r\n        const id = yield select(userId)\r\n        yield put(setProfileDescription(id, action.description))\r\n        \r\n        yield put(pushLog(new Log(\"User descirption updated to : \" + action.description, path)))\r\n    } catch (e) {\r\n        yield put(pushLog(Log.Error(\r\n            path,\r\n            e.message,\r\n            \"Sorry. During process of updating description occurred a problem\"\r\n        )))\r\n    } finally {\r\n        yield put(hideLoading())\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}