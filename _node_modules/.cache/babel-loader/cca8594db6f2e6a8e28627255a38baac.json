{"ast":null,"code":"import React, { useMemo, useState, useEffect, useCallback } from \"react\";\nimport { getApi } from \"./../../../../apis/apiProvider\";\nimport { PLAYBACK_STATE } from \"./ListItem/PlaybackButton/PlaybackButton\"; //getRecordUrl\n\nexport function useRecordPlayer() {\n  const [btnStore, setBtnControl] = useState(null);\n  const [mediaElement, setMediaElement] = useState(null);\n  const api = useMemo(() => {\n    return getApi('RecordsStore');\n  }, [getApi]);\n  useEffect(() => {\n    const medEl = document.createElement('audio');\n    medEl.autoplay = true;\n    medEl.preload = 'metadata';\n    setMediaElement(medEl);\n  }, [setMediaElement]);\n  const playback = useCallback((id, pbState) => {\n    if (pbState === PLAYBACK_STATE.PLAY) {\n      mediaElement.src = api.getRecordUrl(id);\n      mediaElement.play();\n    } else if (pbState === PLAYBACK_STATE.PAUSE) {\n      mediaElement.puase();\n    }\n\n    console.log(id, pbState);\n  }, [mediaElement, api]);\n\n  function seek(id, position) {\n    mediaElement.src = api.getRecordUrl(id, position);\n    console.log(\"seek \", id, position);\n  }\n\n  function setCtrBtnHandler(id, ref) {\n    console.log(id, ref);\n    setBtnControl({ ...btnStore //  [id]: () => ref()\n\n    });\n  }\n\n  return [playback, seek];\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordList/useRecordPlayer.js"],"names":["React","useMemo","useState","useEffect","useCallback","getApi","PLAYBACK_STATE","useRecordPlayer","btnStore","setBtnControl","mediaElement","setMediaElement","api","medEl","document","createElement","autoplay","preload","playback","id","pbState","PLAY","src","getRecordUrl","play","PAUSE","puase","console","log","seek","position","setCtrBtnHandler","ref"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,EAA8CC,WAA9C,QAAiE,OAAjE;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAAQC,cAAR,QAA6B,0CAA7B,C,CAEA;;AACA,OAAO,SAASC,eAAT,GAA0B;AAC7B,QAAM,CAACC,QAAD,EAAWC,aAAX,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMU,GAAG,GAAGX,OAAO,CAAC,MAAI;AACpB,WAAOI,MAAM,CAAC,cAAD,CAAb;AACH,GAFkB,EAEhB,CAACA,MAAD,CAFgB,CAAnB;AAIAF,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,IAAAA,KAAK,CAACG,QAAN,GAAiB,IAAjB;AACAH,IAAAA,KAAK,CAACI,OAAN,GAAgB,UAAhB;AACAN,IAAAA,eAAe,CAACE,KAAD,CAAf;AACH,GALQ,EAKN,CAACF,eAAD,CALM,CAAT;AAOA,QAAMO,QAAQ,GAAGd,WAAW,CAAC,CAACe,EAAD,EAAKC,OAAL,KAAe;AACxC,QAAGA,OAAO,KAAKd,cAAc,CAACe,IAA9B,EAAmC;AAC/BX,MAAAA,YAAY,CAACY,GAAb,GAAmBV,GAAG,CAACW,YAAJ,CAAiBJ,EAAjB,CAAnB;AACAT,MAAAA,YAAY,CAACc,IAAb;AACH,KAHD,MAGO,IAAGJ,OAAO,KAAKd,cAAc,CAACmB,KAA9B,EAAoC;AACvCf,MAAAA,YAAY,CAACgB,KAAb;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ,EAAgBC,OAAhB;AACH,GAR2B,EAQzB,CAACV,YAAD,EAAeE,GAAf,CARyB,CAA5B;;AAUA,WAASiB,IAAT,CAAcV,EAAd,EAAkBW,QAAlB,EAA2B;AAEvBpB,IAAAA,YAAY,CAACY,GAAb,GAAmBV,GAAG,CAACW,YAAJ,CAAiBJ,EAAjB,EAAqBW,QAArB,CAAnB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,EAArB,EAA0BW,QAA1B;AACH;;AAED,WAASC,gBAAT,CAA0BZ,EAA1B,EAA8Ba,GAA9B,EAAkC;AAC9BL,IAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ,EAAgBa,GAAhB;AACAvB,IAAAA,aAAa,CAAC,EACV,GAAGD,QADO,CAEZ;;AAFY,KAAD,CAAb;AAIH;;AAED,SAAO,CAACU,QAAD,EAAWW,IAAX,CAAP;AACH","sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from \"react\"\r\nimport { getApi } from \"./../../../../apis/apiProvider\";\r\nimport {PLAYBACK_STATE} from \"./ListItem/PlaybackButton/PlaybackButton\";\r\n\r\n//getRecordUrl\r\nexport function useRecordPlayer(){\r\n    const [btnStore, setBtnControl] = useState(null);\r\n    const [mediaElement, setMediaElement] = useState(null);\r\n\r\n    const api = useMemo(()=>{\r\n        return getApi('RecordsStore');\r\n    }, [getApi])\r\n\r\n    useEffect(()=>{\r\n        const medEl = document.createElement('audio');\r\n        medEl.autoplay = true;\r\n        medEl.preload = 'metadata'\r\n        setMediaElement(medEl)\r\n    }, [setMediaElement])\r\n\r\n    const playback = useCallback((id, pbState)=>{\r\n        if(pbState === PLAYBACK_STATE.PLAY){\r\n            mediaElement.src = api.getRecordUrl(id);\r\n            mediaElement.play(); \r\n        } else if(pbState === PLAYBACK_STATE.PAUSE){\r\n            mediaElement.puase(); \r\n        }\r\n        console.log(id, pbState);\r\n    }, [mediaElement, api])\r\n\r\n    function seek(id, position){\r\n\r\n        mediaElement.src = api.getRecordUrl(id, position)\r\n        console.log(\"seek \", id , position)\r\n    }\r\n\r\n    function setCtrBtnHandler(id, ref){\r\n        console.log(id, ref)\r\n        setBtnControl({\r\n            ...btnStore,\r\n          //  [id]: () => ref()\r\n        })\r\n    }\r\n\r\n    return [playback, seek]\r\n}"]},"metadata":{},"sourceType":"module"}