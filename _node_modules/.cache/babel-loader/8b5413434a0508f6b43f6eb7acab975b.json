{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordComments\\\\RecordComments.js\";\nimport React, { useState, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./record-comments.scss\";\nimport { Form } from \"react-bootstrap\";\n\nconst RecordComments = ({\n  commentList,\n  postComment,\n  deleteComment\n}) => {\n  const [comment, setComment] = useState(\"\");\n  const updateComment = useCallback(e => {\n    setComment(e.target.value);\n  }, [setComment]);\n  return React.createElement(\"div\", {\n    className: \"record-comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Post your comment\"), React.createElement(Form.Control, {\n    className: \"record-comments-control\",\n    type: \"textarea\",\n    as: \"textarea\",\n    value: comment,\n    onChange: updateComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordComments);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordComments/RecordComments.js"],"names":["React","useState","useCallback","connect","Form","RecordComments","commentList","postComment","deleteComment","comment","setComment","updateComment","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,wBAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA;AAA3B,CAAD,KAA8C;AACjE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMU,aAAa,GAAGT,WAAW,CAAEU,CAAD,IAAK;AACnCF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFgC,EAE/B,CAACJ,UAAD,CAF+B,CAAjC;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAII,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,SAAS,EAAC,yBADd;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,KAAK,EAAED,OAJX;AAKI,IAAA,QAAQ,EAAEE,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAaH,CApBD;;AAqBA,MAAMI,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK,EAAL,CAAnC;;AAIA,eAAef,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,cAA7C,CAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./record-comments.scss\";\r\nimport {Form} from \"react-bootstrap\"\r\n\r\nconst RecordComments = ({commentList, postComment, deleteComment}) =>{\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    const updateComment = useCallback((e)=>{\r\n        setComment(e.target.value)\r\n    },[setComment])\r\n\r\n    return (\r\n        <div className=\"record-comments\">\r\n            <Form.Label>\r\n                Post your comment\r\n            </Form.Label>\r\n            <Form.Control \r\n                className=\"record-comments-control\"\r\n                type=\"textarea\" \r\n                as=\"textarea\"\r\n                value={comment}\r\n                onChange={updateComment}/>   \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordComments)"]},"metadata":{},"sourceType":"module"}