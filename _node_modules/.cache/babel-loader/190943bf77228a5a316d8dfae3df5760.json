{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Logger\\\\Logger.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./logger.scss\";\n\nconst Logger = ({\n  message\n}) => {\n  const [text, setText] = useState();\n  useEffect(() => {\n    if (!message) {\n      return;\n    }\n\n    setText(message);\n  }, [message]);\n  return React.createElement(\"div\", {\n    className: \"logger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"logger-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, text));\n};\n\nconst mapStateToProps = state => ({\n  message: state.logger.lastPublic\n});\n\nexport default connect(mapStateToProps)(Logger);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Logger/Logger.js"],"names":["React","useEffect","useState","connect","Logger","message","text","setText","mapStateToProps","state","logger","lastPublic"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACI,OAAL,EAAc;AACV;AACH;;AAEDE,IAAAA,OAAO,CAACF,OAAD,CAAP;AACH,GANQ,EAMN,CAACA,OAAD,CANM,CAAT;AAQA,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IADL,CADJ,CADJ;AAOH,CAlBD;;AAoBA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BJ,EAAAA,OAAO,EAAEI,KAAK,CAACC,MAAN,CAAaC;AADQ,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACK,eAAD,CAAP,CAAyBJ,MAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./logger.scss\";\r\n\r\nconst Logger = ({ message }) => {\r\n    const [text, setText] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!message) {\r\n            return;\r\n        }\r\n\r\n        setText(message);\r\n    }, [message])\r\n\r\n    return (\r\n        <div className=\"logger\">\r\n            <p className=\"logger-message\">\r\n                {text}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    message: state.logger.lastPublic,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Logger);"]},"metadata":{},"sourceType":"module"}