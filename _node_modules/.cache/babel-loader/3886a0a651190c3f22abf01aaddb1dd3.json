{"ast":null,"code":"import store from \"./../../../../store\";\nimport colors from \"./../../../../css/colors.scss\";\nimport { getBeatLength } from \"./../../../../utils/bpm/converter\";\nexport default class Looper {\n  constructor() {}\n\n  makeLoop(channel, loopLength) {\n    const state = store.getState();\n    const channelName = channel.channelName;\n    console.log(channelName, channel);\n    const beatLength = getBeatLength(state.console.channel[channelName].track.bpm);\n    const beatOffset = state.console.channel[channelName].playBackState.offset;\n    const currentPosition = channel.master.getCurrentTime();\n    const audioBufferSource = channel.master.backend.source;\n    const start = currentPosition + (beatLength - (currentPosition - beatOffset) % beatLength);\n    const end = start + beatLength * loopLength;\n    audioBufferSource.loopStart = start;\n    audioBufferSource.loopEnd = end;\n    audioBufferSource.loop = true;\n    this.drawLoop(channel, start, end);\n    console.log(\"start loop\", channel, loopLength);\n  }\n\n  endLoop(channel) {\n    console.log(\"stop loop\", channel);\n  }\n\n  drawLoop() {}\n\n  clearDraw() {}\n\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/core/console/channels/looper/looper.js"],"names":["store","colors","getBeatLength","Looper","constructor","makeLoop","channel","loopLength","state","getState","channelName","console","log","beatLength","track","bpm","beatOffset","playBackState","offset","currentPosition","master","getCurrentTime","audioBufferSource","backend","source","start","end","loopStart","loopEnd","loop","drawLoop","endLoop","clearDraw"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA,SAAQC,aAAR,QAA4B,mCAA5B;AAEA,eAAe,MAAMC,MAAN,CAAY;AACvBC,EAAAA,WAAW,GAAE,CAEZ;;AAGDC,EAAAA,QAAQ,CAACC,OAAD,EAAUC,UAAV,EAAqB;AACzB,UAAMC,KAAK,GAAGR,KAAK,CAACS,QAAN,EAAd;AACA,UAAMC,WAAW,GAAGJ,OAAO,CAACI,WAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ,EAAyBJ,OAAzB;AACA,UAAMO,UAAU,GAAGX,aAAa,CAACM,KAAK,CAACG,OAAN,CAAcL,OAAd,CAAsBI,WAAtB,EAAmCI,KAAnC,CAAyCC,GAA1C,CAAhC;AACA,UAAMC,UAAU,GAAGR,KAAK,CAACG,OAAN,CAAcL,OAAd,CAAsBI,WAAtB,EAAmCO,aAAnC,CAAiDC,MAApE;AACA,UAAMC,eAAe,GAAGb,OAAO,CAACc,MAAR,CAAeC,cAAf,EAAxB;AACA,UAAMC,iBAAiB,GAAGhB,OAAO,CAACc,MAAR,CAAeG,OAAf,CAAuBC,MAAjD;AAEA,UAAMC,KAAK,GAAGN,eAAe,IAAIN,UAAU,GAAG,CAACM,eAAe,GAAGH,UAAnB,IAAiCH,UAAlD,CAA7B;AACA,UAAMa,GAAG,GAAGD,KAAK,GAAGZ,UAAU,GAAGN,UAAjC;AAEAe,IAAAA,iBAAiB,CAACK,SAAlB,GAA8BF,KAA9B;AACAH,IAAAA,iBAAiB,CAACM,OAAlB,GAA4BF,GAA5B;AACAJ,IAAAA,iBAAiB,CAACO,IAAlB,GAAyB,IAAzB;AACA,SAAKC,QAAL,CAAcxB,OAAd,EAAuBmB,KAAvB,EAA8BC,GAA9B;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,OAA1B,EAAmCC,UAAnC;AACH;;AAEDwB,EAAAA,OAAO,CAACzB,OAAD,EAAS;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,OAAzB;AACH;;AAEDwB,EAAAA,QAAQ,GAAE,CAET;;AAEDE,EAAAA,SAAS,GAAE,CAEV;;AAnCsB","sourcesContent":["import store from \"./../../../../store\";\r\nimport colors from \"./../../../../css/colors.scss\";\r\n\r\nimport {getBeatLength} from \"./../../../../utils/bpm/converter\";\r\n\r\nexport default class Looper{\r\n    constructor(){\r\n\r\n    }\r\n\r\n\r\n    makeLoop(channel, loopLength){\r\n        const state = store.getState();\r\n        const channelName = channel.channelName;\r\n        console.log(channelName, channel)\r\n        const beatLength = getBeatLength(state.console.channel[channelName].track.bpm);\r\n        const beatOffset = state.console.channel[channelName].playBackState.offset;\r\n        const currentPosition = channel.master.getCurrentTime();\r\n        const audioBufferSource = channel.master.backend.source;\r\n\r\n        const start = currentPosition + (beatLength - (currentPosition - beatOffset) % beatLength);\r\n        const end = start + beatLength * loopLength;\r\n\r\n        audioBufferSource.loopStart = start;\r\n        audioBufferSource.loopEnd = end;\r\n        audioBufferSource.loop = true;\r\n        this.drawLoop(channel, start, end);\r\n        console.log(\"start loop\", channel, loopLength)\r\n    }\r\n\r\n    endLoop(channel){\r\n        console.log(\"stop loop\", channel);\r\n    }\r\n\r\n    drawLoop(){\r\n\r\n    }\r\n\r\n    clearDraw(){\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}