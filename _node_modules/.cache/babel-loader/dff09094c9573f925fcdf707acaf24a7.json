{"ast":null,"code":"import { ACTIONS, postComment } from \"../../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../../apis/apiProvider\";\nexport default function* requestCreateComment() {\n  yield takeEvery(ACTIONS.RECS_REQ_POST_COMMENT, handel);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* handel(action) {\n  const token = yield select(getToken);\n  if (!token) return;\n\n  try {\n    var _result$data;\n\n    const {\n      callQuery,\n      queries\n    } = getApi(\"UserAssets\");\n    const query = queries.createCommentQl;\n    const result = yield callQuery(query, token, action.commentData);\n    console.log(result);\n    const comment = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.createComment;\n\n    if (!result.errors && comment) {\n      yield put(postComment(comment));\n    } else {\n      throw new Error(\"Can't craete comment in database\");\n    }\n  } catch (e) {\n    console.log(e.message);\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/records/comments/reqCreateComment.js"],"names":["ACTIONS","postComment","takeEvery","select","put","getApi","requestCreateComment","RECS_REQ_POST_COMMENT","handel","getToken","state","user","token","action","callQuery","queries","query","createCommentQl","result","commentData","console","log","comment","data","createComment","errors","Error","e","message"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAwC,oBAAxC;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAEA,eAAe,UAAUC,oBAAV,GAAiC;AAC5C,QAAMJ,SAAS,CAACF,OAAO,CAACO,qBAAT,EAAgCC,MAAhC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUJ,MAAV,CAAiBK,MAAjB,EAAyB;AACrB,QAAMD,KAAK,GAAG,MAAMT,MAAM,CAACM,QAAD,CAA1B;AACA,MAAG,CAACG,KAAJ,EAAW;;AAEX,MAAI;AAAA;;AACA,UAAM;AAAEE,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBV,MAAM,CAAC,YAAD,CAArC;AAEA,UAAMW,KAAK,GAAGD,OAAO,CAACE,eAAtB;AACA,UAAMC,MAAM,GAAG,MAAMJ,SAAS,CAACE,KAAD,EAAQJ,KAAR,EAAeC,MAAM,CAACM,WAAtB,CAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,UAAMI,OAAO,GAAGJ,MAAH,aAAGA,MAAH,uCAAGA,MAAM,CAAEK,IAAX,iDAAG,aAAcC,aAA9B;;AAEA,QAAI,CAACN,MAAM,CAACO,MAAR,IAAkBH,OAAtB,EAA+B;AAC3B,YAAMlB,GAAG,CAACH,WAAW,CAACqB,OAAD,CAAZ,CAAT;AACH,KAFD,MAEO;AACH,YAAM,IAAII,KAAJ,CAAU,kCAAV,CAAN;AACH;AACJ,GAbD,CAaE,OAAOC,CAAP,EAAU;AACRP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACC,OAAd;AACH;AACJ","sourcesContent":["import { ACTIONS, postComment } from \"../../../actions\";\r\nimport { takeEvery, select, put, } from \"redux-saga/effects\";\r\nimport { getApi } from \"./../../../apis/apiProvider\";\r\n\r\nexport default function* requestCreateComment() {\r\n    yield takeEvery(ACTIONS.RECS_REQ_POST_COMMENT, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n    if(!token) return;\r\n\r\n    try {\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n\r\n        const query = queries.createCommentQl;\r\n        const result = yield callQuery(query, token, action.commentData);\r\n        console.log(result)\r\n        const comment = result?.data?.createComment;\r\n        \r\n        if (!result.errors && comment) {\r\n            yield put(postComment(comment))\r\n        } else {\r\n            throw new Error(\"Can't craete comment in database\")\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}