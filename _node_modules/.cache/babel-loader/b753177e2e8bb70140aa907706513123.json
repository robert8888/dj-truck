{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\Router\\\\Routes.js\";\nimport React, { Fragment, Suspense } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\"; //import Console from \"./../pages/console/Console\";\n//import Profile from \"./../pages/profile/Profile\";\n//import UserRecords from \"./../pages/userRecords/UserRecords\";\n\nimport Loading from \"./../pages/common/components/Loading/Loding\";\nconst Console = React.lazy(() => import(\"./../pages/console/Console\"));\nconst Profile = React.lazy(() => import(\"./../pages/profile/Profile\"));\nconst UserRecords = React.lazy(() => import(\"./../pages/userRecords/UserRecords\"));\nconst UserRecord = React.lazy(() => import(\"./../pages/userRecord/UserRecord\"));\n\nconst Routes = props => {\n  return React.createElement(Suspense, {\n    fallback: React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/console\",\n    exact: true,\n    component: Console,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/my/profile\",\n    exact: true,\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/my/records\",\n    render: props => React.createElement(UserRecords, Object.assign({}, props, {\n      isCurrentUser: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/records/:user?\",\n    exact: true,\n    component: UserRecords,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/records/generes/:generes\",\n    exact: true,\n    component: UserRecords,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/records/search/:query\",\n    exact: true,\n    render: props => React.createElement(UserRecords, Object.assign({\n      searchQuery: props.match.params.query\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/record/:user\",\n    render: props => React.createElement(Redirect, {\n      to: \"/records/\" + props.match.params.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/record/:user/:title/:id?\",\n    exact: true,\n    component: UserRecord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/test\",\n    exact: true,\n    render: () => React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Test\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nexport default Routes;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/Router/Routes.js"],"names":["React","Fragment","Suspense","Route","Redirect","PrivateRoute","Loading","Console","lazy","Profile","UserRecords","UserRecord","Routes","props","match","params","query","user"],"mappings":"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","sourcesContent":["import React, { Fragment, Suspense } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\n//import Console from \"./../pages/console/Console\";\r\n//import Profile from \"./../pages/profile/Profile\";\r\n//import UserRecords from \"./../pages/userRecords/UserRecords\";\r\nimport Loading from \"./../pages/common/components/Loading/Loding\";\r\n\r\nconst Console = React.lazy(() => import(\"./../pages/console/Console\"));\r\nconst Profile = React.lazy(()=> import(\"./../pages/profile/Profile\"));\r\nconst UserRecords = React.lazy(()=> import(\"./../pages/userRecords/UserRecords\"));\r\nconst UserRecord = React.lazy(() => import(\"./../pages/userRecord/UserRecord\"));\r\n\r\n\r\nconst Routes = props => {\r\n    return (\r\n        <Suspense fallback={<Loading/>}>\r\n            <Fragment>\r\n                <Route path=\"/console\" exact component={Console} />\r\n                <PrivateRoute path=\"/my/profile\" exact component={Profile} />\r\n                <PrivateRoute path=\"/my/records\" render={ props => <UserRecords {...props} isCurrentUser/>}/>\r\n\r\n                <Route path=\"/records/:user?\" exact component={UserRecords} />\r\n                <Route path=\"/records/generes/:generes\" exact component={UserRecords}/>\r\n                <Route path=\"/records/search/:query\" exact \r\n                    render={ props => (\r\n                            <UserRecords searchQuery={props.match.params.query} {...props}/>\r\n                        )}/>\r\n                <Route exact path=\"/record/:user\" render={ props => \r\n                        <Redirect to={\"/records/\"+ props.match.params.user}/>\r\n                    }/>\r\n                <Route path=\"/record/:user/:title/:id?\" exact component={UserRecord} />\r\n                <Route path=\"/test\" exact render={() => <h1>Test</h1>} />\r\n            </Fragment>\r\n        </Suspense>\r\n\r\n    )\r\n}\r\n\r\nexport default Routes;"]},"metadata":{},"sourceType":"module"}