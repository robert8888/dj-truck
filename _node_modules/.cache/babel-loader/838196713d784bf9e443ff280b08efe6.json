{"ast":null,"code":"import { ACTIONS } from \"./../actions\";\nimport { produce } from \"imer\";\nconst channel = {\n  volume: 100,\n  low: 100,\n  mid: 100,\n  high: 100,\n  gain: 100,\n  filter: 0,\n  filterResonans: 0,\n  sends: [0, 0]\n};\nconst initState = {\n  channels: {\n    A: { ...channel\n    },\n    B: { ...channel\n    }\n  },\n  fader: {\n    position: 50 //A: 0 <-> B:100\n\n  }\n};\n\nconst nextChannelState = (state, channel, variables) => {\n  return produce(state, draftSate => {\n    draftSate.channels[channel] = { ...state.channels[channel],\n      ...variables\n    };\n  });\n};\n\nexport default function mixerReducer(state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.SET_GAIN:\n      {\n        return nextChannelState(state, action.destination, {\n          gain: action.value\n        });\n      }\n\n    case ACTIONS.SET_LOW:\n      {\n        return nextChannelState(state, action.destination, {\n          low: action.value\n        });\n      }\n\n    case ACTIONS.SET_MID:\n      {\n        return nextChannelState(state, action.destination, {\n          mid: action.value\n        });\n      }\n\n    case ACTIONS.SET_HI:\n      {\n        return nextChannelState(state, action.destination, {\n          high: action.value\n        });\n      }\n\n    case ACTIONS.SET_FADER:\n      {\n        return produce(state, draftState => draftState.fader.position = action.value);\n      }\n\n    case ACTIONS.SET_SEND:\n      {\n        return produce(state, draftSate => draftSate.channels[action.destination].sends[action.number - 1] = action.value);\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/reducers/mixerReducer.js"],"names":["ACTIONS","produce","channel","volume","low","mid","high","gain","filter","filterResonans","sends","initState","channels","A","B","fader","position","nextChannelState","state","variables","draftSate","mixerReducer","action","type","SET_GAIN","destination","value","SET_LOW","SET_MID","SET_HI","SET_FADER","draftState","SET_SEND","number"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,cAAtB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,GADI;AAGZC,EAAAA,GAAG,EAAE,GAHO;AAIZC,EAAAA,GAAG,EAAG,GAJM;AAKZC,EAAAA,IAAI,EAAG,GALK;AAMZC,EAAAA,IAAI,EAAE,GANM;AAOZC,EAAAA,MAAM,EAAE,CAPI;AAQZC,EAAAA,cAAc,EAAG,CARL;AAUZC,EAAAA,KAAK,EAAG,CAAC,CAAD,EAAI,CAAJ;AAVI,CAAhB;AAaA,MAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAG;AACPC,IAAAA,CAAC,EAAG,EACA,GAAGX;AADH,KADG;AAIPY,IAAAA,CAAC,EAAG,EACA,GAAGZ;AADH;AAJG,GADG;AASda,EAAAA,KAAK,EAAG;AACJC,IAAAA,QAAQ,EAAG,EADP,CACU;;AADV;AATM,CAAlB;;AAcA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQhB,OAAR,EAAiBiB,SAAjB,KAA+B;AACpD,SAAOlB,OAAO,CAACiB,KAAD,EAAQE,SAAS,IAAI;AAC3BA,IAAAA,SAAS,CAACR,QAAV,CAAmBV,OAAnB,IAA8B,EAC1B,GAAGgB,KAAK,CAACN,QAAN,CAAeV,OAAf,CADuB;AAE1B,SAAGiB;AAFuB,KAA9B;AAIP,GALa,CAAd;AAMH,CAPD;;AASA,eAAe,SAASE,YAAT,CAAsBH,KAAK,GAAGP,SAA9B,EAAyCW,MAAzC,EAAgD;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKvB,OAAO,CAACwB,QAAb;AAAwB;AACpB,eAAOP,gBAAgB,CAACC,KAAD,EAAQI,MAAM,CAACG,WAAf,EAA4B;AAAClB,UAAAA,IAAI,EAAEe,MAAM,CAACI;AAAd,SAA5B,CAAvB;AACH;;AACD,SAAK1B,OAAO,CAAC2B,OAAb;AAAuB;AACnB,eAAOV,gBAAgB,CAACC,KAAD,EAAQI,MAAM,CAACG,WAAf,EAA4B;AAACrB,UAAAA,GAAG,EAAEkB,MAAM,CAACI;AAAb,SAA5B,CAAvB;AACH;;AACD,SAAK1B,OAAO,CAAC4B,OAAb;AAAuB;AACnB,eAAOX,gBAAgB,CAACC,KAAD,EAAQI,MAAM,CAACG,WAAf,EAA4B;AAACpB,UAAAA,GAAG,EAAEiB,MAAM,CAACI;AAAb,SAA5B,CAAvB;AACH;;AACD,SAAK1B,OAAO,CAAC6B,MAAb;AAAsB;AAClB,eAAOZ,gBAAgB,CAACC,KAAD,EAAQI,MAAM,CAACG,WAAf,EAA4B;AAACnB,UAAAA,IAAI,EAAEgB,MAAM,CAACI;AAAd,SAA5B,CAAvB;AACH;;AACD,SAAK1B,OAAO,CAAC8B,SAAb;AAAyB;AACrB,eAAO7B,OAAO,CAACiB,KAAD,EAAQa,UAAU,IAAIA,UAAU,CAAChB,KAAX,CAAiBC,QAAjB,GAA4BM,MAAM,CAACI,KAAzD,CAAd;AACH;;AAED,SAAK1B,OAAO,CAACgC,QAAb;AAAwB;AACpB,eAAO/B,OAAO,CAACiB,KAAD,EAAQE,SAAS,IACnBA,SAAS,CAACR,QAAV,CAAmBU,MAAM,CAACG,WAA1B,EAAuCf,KAAvC,CAA6CY,MAAM,CAACW,MAAP,GAAgB,CAA7D,IAAkEX,MAAM,CAACI,KADvE,CAAd;AAGH;;AACD;AAAS,aAAOR,KAAP;AAtBb;AAwBH","sourcesContent":["import {ACTIONS} from \"./../actions\";\r\nimport {produce} from \"imer\";\r\n\r\nconst channel = {\r\n    volume: 100,\r\n\r\n    low: 100,\r\n    mid : 100,\r\n    high : 100,\r\n    gain: 100,\r\n    filter: 0,\r\n    filterResonans : 0, \r\n\r\n    sends : [0, 0]\r\n}\r\n\r\nconst initState = {\r\n    channels : {\r\n        A : {\r\n            ...channel,\r\n        },\r\n        B : {\r\n            ...channel,\r\n        },\r\n    },\r\n    fader : {\r\n        position : 50 //A: 0 <-> B:100\r\n    }\r\n};\r\n\r\nconst nextChannelState = (state, channel, variables) => {\r\n    return produce(state, draftSate => {\r\n            draftSate.channels[channel] = {\r\n                ...state.channels[channel],\r\n                ...variables,\r\n            }\r\n    })\r\n}\r\n\r\nexport default function mixerReducer(state = initState, action){\r\n    switch(action.type){\r\n        case ACTIONS.SET_GAIN : {\r\n            return nextChannelState(state, action.destination, {gain: action.value})\r\n        }\r\n        case ACTIONS.SET_LOW : {\r\n            return nextChannelState(state, action.destination, {low: action.value})\r\n        }\r\n        case ACTIONS.SET_MID : {\r\n            return nextChannelState(state, action.destination, {mid: action.value})\r\n        }\r\n        case ACTIONS.SET_HI : {\r\n            return nextChannelState(state, action.destination, {high: action.value})\r\n        }\r\n        case ACTIONS.SET_FADER : {\r\n            return produce(state, draftState => draftState.fader.position = action.value);\r\n        }\r\n\r\n        case ACTIONS.SET_SEND : {\r\n            return produce(state, draftSate => \r\n                        draftSate.channels[action.destination].sends[action.number - 1] = action.value\r\n                    )\r\n        }\r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}