{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(watcher),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handle);import{hideLoading,showLoading}from'react-redux-loading-bar';import{put,select,takeEvery}from'redux-saga/effects';import{ACTIONS,pushLog,setProfileNickname}from\"../../actions\";import{getApi}from\"./../../apis/apiProvider\";import{Log}from\"./../../utils/logger/logger\";import errorParser from\"./../../utils/serverErrorParser/errorParser\";export default function watcher(){return _regeneratorRuntime.wrap(function watcher$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(ACTIONS.U_REQ_UPDATE_NICKNAME,handle);case 2:case\"end\":return _context.stop();}}},_marked);}var getToken=function getToken(state){return state.user.token;};var userId=function userId(state){return state.user.id;};function handle(action){var path,token,_response$data,_getApi,callQuery,queries,query,response,status,id;return _regeneratorRuntime.wrap(function handle$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:path=[\"Saga\",\"Request updated nickname\"];_context2.next=3;return select(getToken);case 3:token=_context2.sent;_context2.prev=4;_context2.next=7;return put(showLoading());case 7:_getApi=getApi(\"UserAssets\"),callQuery=_getApi.callQuery,queries=_getApi.queries;query=queries.updateNicknameQl;_context2.next=11;return callQuery(query,token,{nickname:action.nickname});case 11:response=_context2.sent;status=response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.updateMyNick;//console.log(response, status);\nif(!response.errors){_context2.next=15;break;}throw new Error(\"Can't update nickname in database\"+errorParser(response.errors));case 15:if(status){_context2.next=17;break;}throw new Error('Can\\'t read status object from server response');case 17:if(!status.error){_context2.next=19;break;}throw new RangeError(\"Can't update nickname. \"+status.message);case 19:_context2.next=21;return select(userId);case 21:id=_context2.sent;_context2.next=24;return put(setProfileNickname(id,action.nickname));case 24:_context2.next=26;return put(pushLog(new Log(\"User nickname updated to : \"+action.nickname,path)));case 26:_context2.next=36;break;case 28:_context2.prev=28;_context2.t0=_context2[\"catch\"](4);if(!(_context2.t0 instanceof RangeError)){_context2.next=34;break;}_context2.next=33;return put(pushLog(Log.Warning(_context2.t0.message)));case 33:return _context2.abrupt(\"return\");case 34:_context2.next=36;return put(pushLog(Log.Error(path,_context2.t0.message,\"Sorry. During process of updating nickname occurred a problem\")));case 36:_context2.prev=36;_context2.next=39;return put(hideLoading());case 39:return _context2.finish(36);case 40:case\"end\":return _context2.stop();}}},_marked2,null,[[4,28,36,40]]);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/user/reqUpdateNickname.js"],"names":["watcher","handle","hideLoading","showLoading","put","select","takeEvery","ACTIONS","pushLog","setProfileNickname","getApi","Log","errorParser","U_REQ_UPDATE_NICKNAME","getToken","state","user","token","userId","id","action","path","callQuery","queries","query","updateNicknameQl","nickname","response","status","data","updateMyNick","errors","Error","error","RangeError","message","Warning"],"mappings":"2JAOyBA,O,iDAOfC,M,EAdV,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,yBAAzC,CACA,OAASC,GAAT,CAAcC,MAAd,CAAsBC,SAAtB,KAAuC,oBAAvC,CACA,OAASC,OAAT,CAAkBC,OAAlB,CAA2BC,kBAA3B,KAAqD,eAArD,CACA,OAASC,MAAT,KAAuB,0BAAvB,CACA,OAASC,GAAT,KAAoB,6BAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6CAAxB,CAEA,cAAe,SAAUZ,CAAAA,OAAV,mIACX,MAAMM,CAAAA,SAAS,CAACC,OAAO,CAACM,qBAAT,CAAgCZ,MAAhC,CAAf,CADW,sDAIf,GAAMa,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWC,KAAf,EAAtB,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAH,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWG,EAAf,EAApB,CAEA,QAAUlB,CAAAA,MAAV,CAAiBmB,MAAjB,qMACUC,IADV,CACiB,CAAC,MAAD,CAAS,0BAAT,CADjB,kBAEkB,MAAMhB,CAAAA,MAAM,CAACS,QAAD,CAAZ,CAFlB,OAEUG,KAFV,kDAKQ,MAAMb,CAAAA,GAAG,CAACD,WAAW,EAAZ,CAAT,CALR,eAMuCO,MAAM,CAAC,YAAD,CAN7C,CAMgBY,SANhB,SAMgBA,SANhB,CAM2BC,OAN3B,SAM2BA,OAN3B,CAQcC,KARd,CAQsBD,OAAO,CAACE,gBAR9B,mBAUyB,MAAMH,CAAAA,SAAS,CAACE,KAAD,CAAQP,KAAR,CAAe,CAACS,QAAQ,CAAEN,MAAM,CAACM,QAAlB,CAAf,CAAf,CAVzB,QAUcC,QAVd,gBAYcC,MAZd,CAYuBD,QAZvB,SAYuBA,QAZvB,iCAYuBA,QAAQ,CAAEE,IAZjC,yCAYuB,eAAgBC,YAZvC,CAaQ;AAbR,IAcWH,QAAQ,CAACI,MAdpB,gCAekB,IAAIC,CAAAA,KAAJ,CAAU,oCAAsCpB,WAAW,CAACe,QAAQ,CAACI,MAAV,CAA3D,CAflB,YAkBYH,MAlBZ,gCAmBkB,IAAII,CAAAA,KAAJ,CAAU,gDAAV,CAnBlB,aAsBWJ,MAAM,CAACK,KAtBlB,gCAuBkB,IAAIC,CAAAA,UAAJ,CAAe,0BAA4BN,MAAM,CAACO,OAAlD,CAvBlB,2BA0BmB,MAAM9B,CAAAA,MAAM,CAACa,MAAD,CAAZ,CA1BnB,QA0BcC,EA1Bd,kCA2BQ,MAAMf,CAAAA,GAAG,CAACK,kBAAkB,CAACU,EAAD,CAAKC,MAAM,CAACM,QAAZ,CAAnB,CAAT,CA3BR,0BA6BQ,MAAMtB,CAAAA,GAAG,CAACI,OAAO,CAAC,GAAIG,CAAAA,GAAJ,CAAQ,8BAAgCS,MAAM,CAACM,QAA/C,CAAyDL,IAAzD,CAAD,CAAR,CAAT,CA7BR,kGA+BW,uBAAaa,CAAAA,UA/BxB,8CAgCY,MAAM9B,CAAAA,GAAG,CAACI,OAAO,CAACG,GAAG,CAACyB,OAAJ,CACd,aAAED,OADY,CAAD,CAAR,CAAT,CAhCZ,oEAsCQ,MAAM/B,CAAAA,GAAG,CAACI,OAAO,CAACG,GAAG,CAACqB,KAAJ,CACdX,IADc,CAEd,aAAEc,OAFY,CAGd,+DAHc,CAAD,CAAR,CAAT,CAtCR,4CA4CQ,MAAM/B,CAAAA,GAAG,CAACF,WAAW,EAAZ,CAAT,CA5CR","sourcesContent":["import { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport { put, select, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, pushLog, setProfileNickname } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { Log } from \"./../../utils/logger/logger\";\r\nimport errorParser from \"./../../utils/serverErrorParser/errorParser\";\r\n\r\nexport default function* watcher() {\r\n    yield takeEvery(ACTIONS.U_REQ_UPDATE_NICKNAME, handle);\r\n}\r\n\r\nconst getToken = state => state.user.token\r\nconst userId = state => state.user.id;\r\n\r\nfunction* handle(action) {\r\n    const path = [\"Saga\", \"Request updated nickname\"]\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        yield put(showLoading());\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n\r\n        const query = queries.updateNicknameQl;\r\n\r\n        const response = yield callQuery(query, token, {nickname: action.nickname});\r\n\r\n        const status = response?.data?.updateMyNick;\r\n        //console.log(response, status);\r\n        if(response.errors){\r\n            throw new Error(\"Can't update nickname in database\" + errorParser(response.errors))\r\n        }\r\n\r\n        if(!status){\r\n            throw new Error('Can\\'t read status object from server response');\r\n        }\r\n\r\n        if(status.error){\r\n            throw new RangeError(\"Can't update nickname. \" + status.message)\r\n        }\r\n\r\n        const id = yield select(userId)\r\n        yield put(setProfileNickname(id, action.nickname));\r\n        \r\n        yield put(pushLog(new Log(\"User nickname updated to : \" + action.nickname, path)));\r\n    } catch (e) {\r\n        if(e instanceof RangeError){\r\n            yield put(pushLog(Log.Warning(\r\n                e.message,\r\n            )))\r\n            return; \r\n        }\r\n        \r\n        yield put(pushLog(Log.Error(\r\n            path,\r\n            e.message,\r\n            \"Sorry. During process of updating nickname occurred a problem\"\r\n        )))\r\n    } finally {\r\n        yield put(hideLoading())\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}