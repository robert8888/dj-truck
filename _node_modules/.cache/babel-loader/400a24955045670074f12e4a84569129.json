{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Header\\\\Header.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport LoadingBar from 'react-redux-loading-bar';\nimport NavBar from \"./NavBar/NabBar\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport { toRange } from \"./../../../utils/math/argRanges\";\nimport classNames from \"classnames\";\nimport \"./header.scss\";\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      sticki: false,\n      translateY: 0\n    };\n    this.barState = {\n      barElement: React.createRef(null),\n      barElementHeight: 0\n    };\n    this.scrollState = {\n      prevScrollDirection: null,\n      // \"up\" or \"down\",\n      prevScrollPosition: 0,\n      snapPosition: null\n    };\n  }\n\n  startWatching() {\n    window.addEventListener('scroll', this.scrollWatching.bind(this));\n  }\n\n  stopWatching() {\n    window.removeEventListener('scroll', this.scrollWatching.bind(this));\n  }\n\n  scrollWatching(event) {\n    console.log(window.scrollY);\n\n    if (window.scrollY === 0) {\n      this.setState({ ...this.state,\n        sticki: false\n      });\n    } else {\n      const jump = window.scrollY - this.scrollState.prevScrollPosition;\n      let y = this.state.translateY + jump;\n      y = toRange();\n    }\n\n    const jump = window.scrollY - this.scrollState.prevScrollPosition;\n    const scrollDirection = jump < 0 ? \"up\" : \"down\";\n\n    if (scrollDirection !== this.scrollState.prevScrollDirection) {\n      this.scrollState.snapPosition = window.scrollY; // this.barElement.current.style.transform = `translateY(-${this.barElementHeight}px)`\n    } // if (scrollDirection === \"up\") {\n    // }\n    // //    console.log(window.scrollY)\n    // if (window.scrollY === 0) {\n    //   this.barElement.current.classList.remove(\"bar--sticki\");\n    //   this.barElement.current.style.transform = \"none\"\n    // } else {\n    //   if (scrollDirection === \"up\") {\n    //     this.barElement.current.classList.add(\"bar--sticki\");\n    //     let y = - this.barElementHeight - (window.scrollY - this.snapPosition);\n    //     y = Math.min(y, 0);\n    //     this.barElement.current.style.transform = `translateY(${y}px)`\n    //   } else {\n    //     let y = (window.scrollY - this.snapPosition);\n    //     console.log(y)\n    //     this.barElement.current.style.transform = `translateY(-${y}px)`\n    //     if (y > this.barElementHeight) {\n    //       this.barElement.current.classList.remove(\"bar--sticki\")\n    //     }\n    //   }\n    // }\n\n\n    this.scrollState.prevScrollPosition = window.scrollY;\n    this.scrollState.prevScrollDirection = scrollDirection;\n  }\n\n  updateState(prevProps) {\n    if (this.props.sticki) {\n      this.startWatching();\n    } else {\n      this.stopWatching();\n    }\n  }\n\n  componentDidMount() {\n    this.updateState();\n    this.barState.barElementHeight = this.barState.barElement.current.getBoundingClientRect().height;\n  }\n\n  componentDidUpdate(prevProps) {\n    this.updateState(prevProps);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(LoadingBar, {\n      className: \"loading-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: classNames(\"top-bar\", {\n        \"bar--sticki\": this.state.sticki,\n        \"bar--hidden\": this.props.hidden,\n        \"bar--dissabled\": this.props.dissabled\n      }),\n      style: {\n        transform: `translateY(${this.state.tra}px)`\n      },\n      ref: this.barState.barElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"app layout container-xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      className: \"navigation-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  sticki: state.header.sticki,\n  hidden: state.header.hidden,\n  disabled: state.header.disabled\n});\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Header/Header.js"],"names":["React","Fragment","connect","LoadingBar","NavBar","Col","Row","Container","toRange","classNames","Header","Component","constructor","state","sticki","translateY","barState","barElement","createRef","barElementHeight","scrollState","prevScrollDirection","prevScrollPosition","snapPosition","startWatching","window","addEventListener","scrollWatching","bind","stopWatching","removeEventListener","event","console","log","scrollY","setState","jump","y","scrollDirection","updateState","prevProps","props","componentDidMount","current","getBoundingClientRect","height","componentDidUpdate","render","hidden","dissabled","transform","tra","mapStateToProps","header","disabled"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingBar from 'react-redux-loading-bar';\r\nimport NavBar from \"./NavBar/NabBar\"\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { toRange } from \"./../../../utils/math/argRanges\"\r\nimport classNames from \"classnames\";\r\nimport \"./header.scss\";\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      sticki: false,\r\n      translateY: 0,\r\n    }\r\n    this.barState = {\r\n      barElement: React.createRef(null),\r\n      barElementHeight: 0,\r\n    }\r\n    this.scrollState = {\r\n      prevScrollDirection: null, // \"up\" or \"down\",\r\n      prevScrollPosition: 0,\r\n      snapPosition: null,\r\n    }\r\n  }\r\n\r\n  startWatching() {\r\n    window.addEventListener('scroll', this.scrollWatching.bind(this))\r\n  }\r\n\r\n  stopWatching() {\r\n    window.removeEventListener('scroll', this.scrollWatching.bind(this))\r\n  }\r\n\r\n  scrollWatching(event) {\r\n    console.log(window.scrollY);\r\n\r\n    if(window.scrollY === 0){\r\n      this.setState({...this.state, sticki: false});\r\n    } else {\r\n      const jump = window.scrollY - this.scrollState.prevScrollPosition;\r\n      let y = this.state.translateY + jump;\r\n      y = toRange()\r\n\r\n    }\r\n    const jump = window.scrollY - this.scrollState.prevScrollPosition;\r\n    const scrollDirection = (jump < 0) ? \"up\" : \"down\";\r\n    if (scrollDirection !== this.scrollState.prevScrollDirection) {\r\n      this.scrollState.snapPosition = window.scrollY;\r\n\r\n      // this.barElement.current.style.transform = `translateY(-${this.barElementHeight}px)`\r\n    }\r\n\r\n    // if (scrollDirection === \"up\") {\r\n\r\n    // }\r\n\r\n    // //    console.log(window.scrollY)\r\n    // if (window.scrollY === 0) {\r\n    //   this.barElement.current.classList.remove(\"bar--sticki\");\r\n    //   this.barElement.current.style.transform = \"none\"\r\n    // } else {\r\n\r\n\r\n    //   if (scrollDirection === \"up\") {\r\n    //     this.barElement.current.classList.add(\"bar--sticki\");\r\n    //     let y = - this.barElementHeight - (window.scrollY - this.snapPosition);\r\n    //     y = Math.min(y, 0);\r\n    //     this.barElement.current.style.transform = `translateY(${y}px)`\r\n    //   } else {\r\n    //     let y = (window.scrollY - this.snapPosition);\r\n    //     console.log(y)\r\n    //     this.barElement.current.style.transform = `translateY(-${y}px)`\r\n    //     if (y > this.barElementHeight) {\r\n    //       this.barElement.current.classList.remove(\"bar--sticki\")\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.scrollState.prevScrollPosition = window.scrollY;\r\n    this.scrollState.prevScrollDirection = scrollDirection;\r\n  }\r\n\r\n  updateState(prevProps) {\r\n    if (this.props.sticki) {\r\n      this.startWatching();\r\n    } else {\r\n      this.stopWatching();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateState();\r\n    this.barState.barElementHeight =\r\n      this.barState.barElement.current.getBoundingClientRect().height;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    this.updateState(prevProps);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <LoadingBar className=\"loading-bar\" />\r\n        <header\r\n          className={classNames(\"top-bar\", {\r\n            \"bar--sticki\": this.state.sticki,\r\n            \"bar--hidden\": this.props.hidden,\r\n            \"bar--dissabled\": this.props.dissabled\r\n          })}\r\n          style={{ transform: `translateY(${this.state.tra}px)` }}\r\n          ref={this.barState.barElement}>\r\n          <Container className=\"app layout container-xl\" >\r\n            <Row>\r\n              <Col>\r\n                <NavBar className=\"navigation-bar\" />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </header>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  sticki: state.header.sticki,\r\n  hidden: state.header.hidden,\r\n  disabled: state.header.disabled,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Header);"]},"metadata":{},"sourceType":"module"}