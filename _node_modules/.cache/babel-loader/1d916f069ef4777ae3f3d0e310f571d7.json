{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(requestAddToFavorite),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handel);import{put,select,takeEvery}from\"redux-saga/effects\";import{ACTIONS,addRecordToFavorite,pushLog,removeRecordFromFavorite}from\"../../../actions\";import{getApi}from\"./../../../apis/apiProvider\";import{Log}from\"./../../../utils/logger/logger\";import errorParser from\"./../../../utils/serverErrorParser/errorParser\";export default function requestAddToFavorite(){var _getApi,queries,handelAdd,handelRemove;return _regeneratorRuntime.wrap(function requestAddToFavorite$(_context){while(1){switch(_context.prev=_context.next){case 0:_getApi=getApi(\"UserAssets\"),queries=_getApi.queries;handelAdd=handel.bind(null,{query:queries.addToFavoriteQl,resultRoot:'addToFavorite',successAction:addRecordToFavorite,failMessage:\"Can't add to favorite in database\",successMessage:\"Record added to favorite collection\"});handelRemove=handel.bind(null,{query:queries.removeFromFavoriteQl,resultRoot:'removeFavorite',successAction:removeRecordFromFavorite,failMessage:\"Can't remove record from favorite in database\",successMessage:\"Record removed from favorite collection\"});_context.next=5;return takeEvery(ACTIONS.RECS_REQ_ADD_FAVORITE,handelAdd);case 5:_context.next=7;return takeEvery(ACTIONS.RECS_REQ_RM_FAVORITE,handelRemove);case 7:case\"end\":return _context.stop();}}},_marked);}var getToken=function getToken(state){return state.user.token;};function handel(_ref,action){var query,resultRoot,successAction,failMessage,successMessage,token,_getApi2,callQuery,recordId,response,result;return _regeneratorRuntime.wrap(function handel$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:query=_ref.query,resultRoot=_ref.resultRoot,successAction=_ref.successAction,failMessage=_ref.failMessage,successMessage=_ref.successMessage;_context2.next=3;return select(getToken);case 3:token=_context2.sent;_context2.prev=4;_getApi2=getApi(\"UserAssets\"),callQuery=_getApi2.callQuery;recordId=action.recordId;_context2.next=9;return callQuery(query,token,{recordId:recordId});case 9:response=_context2.sent;result=response===null||response===void 0?void 0:response.data;if(!response.errors){_context2.next=13;break;}throw new Error(\"Server response contains errors: \"+errorParser(response.errors));case 13:if(!(!result||!result[resultRoot])){_context2.next=15;break;}throw new Error(failMessage);case 15:_context2.next=17;return put(successAction(recordId));case 17:_context2.next=19;return put(pushLog(new Log(\"Record favorite action : \".concat(successMessage))));case 19:_context2.next=25;break;case 21:_context2.prev=21;_context2.t0=_context2[\"catch\"](4);_context2.next=25;return put(pushLog(Log.Error(['saga','record','request favorite'],_context2.t0.message,\"Can't remove record from favorite collection\",_context2.t0)));case 25:case\"end\":return _context2.stop();}}},_marked2,null,[[4,21]]);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/records/favorite/reqFavorite.js"],"names":["requestAddToFavorite","handel","put","select","takeEvery","ACTIONS","addRecordToFavorite","pushLog","removeRecordFromFavorite","getApi","Log","errorParser","queries","handelAdd","bind","query","addToFavoriteQl","resultRoot","successAction","failMessage","successMessage","handelRemove","removeFromFavoriteQl","RECS_REQ_ADD_FAVORITE","RECS_REQ_RM_FAVORITE","getToken","state","user","token","action","callQuery","recordId","response","result","data","errors","Error","message"],"mappings":"2JAOyBA,oB,iDA2BfC,M,EAlCV,OAASC,GAAT,CAAcC,MAAd,CAAsBC,SAAtB,KAAuC,oBAAvC,CACA,OAASC,OAAT,CAAkBC,mBAAlB,CAAuCC,OAAvC,CAAgDC,wBAAhD,KAAgF,kBAAhF,CACA,OAASC,MAAT,KAAuB,6BAAvB,CACA,OAASC,GAAT,KAAoB,gCAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gDAAxB,CAGA,cAAe,SAAUX,CAAAA,oBAAV,mLAESS,MAAM,CAAC,YAAD,CAFf,CAEHG,OAFG,SAEHA,OAFG,CAGLC,SAHK,CAGOZ,MAAM,CAACa,IAAP,CAAY,IAAZ,CAAkB,CAChCC,KAAK,CAAEH,OAAO,CAACI,eADiB,CAEhCC,UAAU,CAAE,eAFoB,CAGhCC,aAAa,CAAEZ,mBAHiB,CAIhCa,WAAW,CAAE,mCAJmB,CAKhCC,cAAc,CAAE,qCALgB,CAAlB,CAHP,CAWLC,YAXK,CAWUpB,MAAM,CAACa,IAAP,CAAY,IAAZ,CAAkB,CACnCC,KAAK,CAAEH,OAAO,CAACU,oBADoB,CAEnCL,UAAU,CAAE,gBAFuB,CAGnCC,aAAa,CAAEV,wBAHoB,CAInCW,WAAW,CAAE,+CAJsB,CAKnCC,cAAc,CAAE,yCALmB,CAAlB,CAXV,iBAmBX,MAAMhB,CAAAA,SAAS,CAACC,OAAO,CAACkB,qBAAT,CAAgCV,SAAhC,CAAf,CAnBW,uBAoBX,MAAMT,CAAAA,SAAS,CAACC,OAAO,CAACmB,oBAAT,CAA+BH,YAA/B,CAAf,CApBW,sDAyBf,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWC,KAAf,EAAtB,CAEA,QAAU3B,CAAAA,MAAV,MAEG4B,MAFH,oOACId,KADJ,MACIA,KADJ,CACWE,UADX,MACWA,UADX,CACuBC,aADvB,MACuBA,aADvB,CACsCC,WADtC,MACsCA,WADtC,CACmDC,cADnD,MACmDA,cADnD,kBAGkB,MAAMjB,CAAAA,MAAM,CAACsB,QAAD,CAAZ,CAHlB,OAGUG,KAHV,0CAM8BnB,MAAM,CAAC,YAAD,CANpC,CAMgBqB,SANhB,UAMgBA,SANhB,CAOgBC,QAPhB,CAO6BF,MAP7B,CAOgBE,QAPhB,kBAQyB,MAAMD,CAAAA,SAAS,CAACf,KAAD,CAAQa,KAAR,CAAe,CAAEG,QAAQ,CAARA,QAAF,CAAf,CAAf,CARzB,OAQcC,QARd,gBASYC,MATZ,CASqBD,QATrB,SASqBA,QATrB,iBASqBA,QAAQ,CAAEE,IAT/B,KAWYF,QAAQ,CAACG,MAXrB,gCAYkB,IAAIC,CAAAA,KAAJ,CAAU,oCAAsCzB,WAAW,CAACqB,QAAQ,CAACG,MAAV,CAA3D,CAZlB,cAeW,CAACF,MAAD,EAAW,CAACA,MAAM,CAAChB,UAAD,CAf7B,iCAgBkB,IAAImB,CAAAA,KAAJ,CAAUjB,WAAV,CAhBlB,2BAmBQ,MAAMjB,CAAAA,GAAG,CAACgB,aAAa,CAACa,QAAD,CAAd,CAAT,CAnBR,0BAqBQ,MAAM7B,CAAAA,GAAG,CAACK,OAAO,CAAC,GAAIG,CAAAA,GAAJ,oCAAoCU,cAApC,EAAD,CAAR,CAAT,CArBR,+GAuBQ,MAAMlB,CAAAA,GAAG,CAACK,OAAO,CAACG,GAAG,CAAC0B,KAAJ,CACd,CAAC,MAAD,CAAS,QAAT,CAAmB,kBAAnB,CADc,CAEd,aAAMC,OAFQ,CAGd,8CAHc,cAAD,CAAR,CAAT,CAvBR","sourcesContent":["import { put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTIONS, addRecordToFavorite, pushLog, removeRecordFromFavorite } from \"../../../actions\";\r\nimport { getApi } from \"./../../../apis/apiProvider\";\r\nimport { Log } from \"./../../../utils/logger/logger\";\r\nimport errorParser from \"./../../../utils/serverErrorParser/errorParser\";\r\n\r\n\r\nexport default function* requestAddToFavorite() {\r\n\r\n    const { queries } = getApi(\"UserAssets\");\r\n    const handelAdd = handel.bind(null, {\r\n        query: queries.addToFavoriteQl,\r\n        resultRoot: 'addToFavorite',\r\n        successAction: addRecordToFavorite,\r\n        failMessage: \"Can't add to favorite in database\",\r\n        successMessage: \"Record added to favorite collection\",\r\n    })\r\n\r\n    const handelRemove = handel.bind(null, {\r\n        query: queries.removeFromFavoriteQl,\r\n        resultRoot: 'removeFavorite',\r\n        successAction: removeRecordFromFavorite,\r\n        failMessage: \"Can't remove record from favorite in database\",\r\n        successMessage: \"Record removed from favorite collection\",\r\n    })\r\n\r\n    yield takeEvery(ACTIONS.RECS_REQ_ADD_FAVORITE, handelAdd)\r\n    yield takeEvery(ACTIONS.RECS_REQ_RM_FAVORITE, handelRemove);\r\n\r\n\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nfunction* handel({\r\n    query, resultRoot, successAction, failMessage, successMessage\r\n}, action) {\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        const { callQuery } = getApi(\"UserAssets\");\r\n        const { recordId } = action;\r\n        const response = yield callQuery(query, token, { recordId });\r\n        let result = response?.data;\r\n\r\n        if (response.errors) {\r\n            throw new Error(\"Server response contains errors: \" + errorParser(response.errors))\r\n        }\r\n\r\n        if(!result || !result[resultRoot]){\r\n            throw new Error(failMessage)\r\n        }\r\n\r\n        yield put(successAction(recordId));\r\n\r\n        yield put(pushLog(new Log(`Record favorite action : ${successMessage}`)))\r\n    } catch (error) {\r\n        yield put(pushLog(Log.Error(\r\n            ['saga', 'record', 'request favorite'],\r\n            error.message,\r\n            \"Can't remove record from favorite collection\",\r\n            error\r\n        )))\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}