{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(watcher),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(searchAsync);import{hideLoading,showLoading}from'react-redux-loading-bar';import{call,put,takeEvery}from'redux-saga/effects';import{ACTIONS,pushLog,setSearchResults}from\"./../../actions\";import{getApi}from'./../../apis/apiProvider';import{Log}from\"./../../utils/logger/logger\";export default function watcher(){return _regeneratorRuntime.wrap(function watcher$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(ACTIONS.SEARCH_START,searchAsync);case 2:case\"end\":return _context.stop();}}},_marked);}function searchAsync(action){var path,query,source,limit,api,results;return _regeneratorRuntime.wrap(function searchAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:path=['saga','externalSearch','call to exteranl miusic source search api'];query=action.text,source=action.source,limit=action.limit;_context2.prev=2;_context2.next=5;return put(showLoading());case 5:api=getApi(source);_context2.next=8;return call(api.search,query,limit);case 8:results=_context2.sent;if(!results.error){_context2.next=11;break;}throw new Error(JSON.stringify(results.error));case 11:_context2.next=13;return put(setSearchResults(results));case 13:_context2.next=15;return put(pushLog(new Log(\"Successful recive search result for query\".concat(query,\" on source: \").concat(source),path)));case 15:_context2.next=21;break;case 17:_context2.prev=17;_context2.t0=_context2[\"catch\"](2);_context2.next=21;return put(pushLog(Log.Error(path,\"Durring searching occured error: \"+_context2.t0.message,\"Sorry. During process of searching track occurred a problem\",_context2.t0)));case 21:_context2.prev=21;_context2.next=24;return put(hideLoading());case 24:return _context2.finish(21);case 25:case\"end\":return _context2.stop();}}},_marked2,null,[[2,17,21,25]]);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/externalSearch/reqSearchResultSaga.js"],"names":["watcher","searchAsync","hideLoading","showLoading","call","put","takeEvery","ACTIONS","pushLog","setSearchResults","getApi","Log","SEARCH_START","action","path","query","text","source","limit","api","search","results","error","Error","JSON","stringify","message"],"mappings":"2JAOyBA,O,iDAKfC,W,EAXV,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,yBAAzC,CACA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,SAApB,KAAqC,oBAArC,CACA,OAASC,OAAT,CAAkBC,OAAlB,CAA2BC,gBAA3B,KAAmD,iBAAnD,CACA,OAASC,MAAT,KAAuB,0BAAvB,CACA,OAASC,GAAT,KAAoB,6BAApB,CAEA,cAAe,SAAUX,CAAAA,OAAV,mIACX,MAAMM,CAAAA,SAAS,CAACC,OAAO,CAACK,YAAT,CAAuBX,WAAvB,CAAf,CADW,sDAKf,QAAUA,CAAAA,WAAV,CAAsBY,MAAtB,iKACUC,IADV,CACiB,CAAC,MAAD,CAAS,gBAAT,CAA2B,2CAA3B,CADjB,CAEiBC,KAFjB,CAEyCF,MAFzC,CAEWG,IAFX,CAEwBC,MAFxB,CAEyCJ,MAFzC,CAEwBI,MAFxB,CAEgCC,KAFhC,CAEyCL,MAFzC,CAEgCK,KAFhC,mCAIQ,MAAMb,CAAAA,GAAG,CAACF,WAAW,EAAZ,CAAT,CAJR,OAKcgB,GALd,CAKoBT,MAAM,CAACO,MAAD,CAL1B,kBAMwB,MAAMb,CAAAA,IAAI,CAACe,GAAG,CAACC,MAAL,CAAaL,KAAb,CAAoBG,KAApB,CAAV,CANxB,OAMcG,OANd,oBAQWA,OAAO,CAACC,KARnB,gCASkB,IAAIC,CAAAA,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeJ,OAAO,CAACC,KAAvB,CAAV,CATlB,2BAYQ,MAAMjB,CAAAA,GAAG,CAACI,gBAAgB,CAACY,OAAD,CAAjB,CAAT,CAZR,0BAcQ,MAAMhB,CAAAA,GAAG,CAACG,OAAO,CACb,GAAIG,CAAAA,GAAJ,oDAAoDI,KAApD,wBAAwEE,MAAxE,EAAkFH,IAAlF,CADa,CAAR,CAAT,CAdR,+GAkBQ,MAAMT,CAAAA,GAAG,CAACG,OAAO,CAACG,GAAG,CAACY,KAAJ,CACdT,IADc,CAEd,oCAAsC,aAAMY,OAF9B,CAGd,6DAHc,cAAD,CAAR,CAAT,CAlBR,4CAyBQ,MAAMrB,CAAAA,GAAG,CAACH,WAAW,EAAZ,CAAT,CAzBR","sourcesContent":["\r\nimport { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, pushLog, setSearchResults } from \"./../../actions\";\r\nimport { getApi } from './../../apis/apiProvider';\r\nimport { Log } from \"./../../utils/logger/logger\";\r\n\r\nexport default function* watcher() {\r\n    yield takeEvery(ACTIONS.SEARCH_START, searchAsync);\r\n}\r\n\r\n\r\nfunction* searchAsync(action) {\r\n    const path = ['saga', 'externalSearch', 'call to exteranl miusic source search api']\r\n    const {text: query, source, limit} = action;\r\n    try {\r\n        yield put(showLoading());\r\n        const api = getApi(source);\r\n        const results = yield call(api.search, query, limit);\r\n        \r\n        if(results.error){\r\n            throw new Error(JSON.stringify(results.error));\r\n        }\r\n\r\n        yield put(setSearchResults(results));\r\n\r\n        yield put(pushLog(\r\n            new Log(`Successful recive search result for query${query} on source: ${source}`, path)\r\n        ))\r\n    } catch(error){\r\n        yield put(pushLog(Log.Error(\r\n            path,\r\n            \"Durring searching occured error: \" + error.message,\r\n            \"Sorry. During process of searching track occurred a problem\",\r\n            error\r\n        )))\r\n    } finally {\r\n        yield put(hideLoading())\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}