{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\common\\\\Knob\\\\Knob.js\";\n// Spec \n// witout any option Knob is standard with value from 0 to 100 and on inti value is 0\n// -initValue:number allow to set init value\n// -showValue props allows to display numeric value on knob\n// -diplayFormula : a callbac function with will be used to show value on knob\n// -scale:number allow to scale value eg. 10 give range from 0 to 10 \n// -symetric:boolean if this props is present knob havse valeu from -100 to 100 * scale \n// -unsymetric:{negative:number, positive:number} allows to set unsymetric range value : \n//  {positive : 5 } means that values bigger than 0 are divided by 5 range is from -100 to 20 * scale\n// -quantize:number switch knob to quantize mode in witch returned values are quantize to parametr \n//       eg: 2 returns value 100, 98 , 96 ... quantize:0.05 returns values 100, 99.95.... \n// -qunatize:{negative:number, positive:number} allows to set diffrent qunatizes for negative and positives values.\n// -responseFactor if is present adjust knob response on a mouse move // default= 1 eg responseFactor 2 will increase response two times\n// -alt if is present when mouse is over and knob is not draggin it will display alt value \nimport React from \"react\";\nimport style from \"./knob.scss\";\n\nclass Knob extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: 0,\n      position: 0,\n      // form 0 to 100\n      snapShotPostion: 0,\n      //\n      rightArm: 90,\n      // form -60 to 90 - this is midle\n      leftArm: 90,\n      // from 90 to 240 \n      dotAngle: 0,\n      reversArm: false,\n      //for not symetri linera gradient swap\n      idDragged: false,\n      isMouseOver: false,\n      isActive: false\n    };\n  }\n\n  snap() {\n    this.setState({ ...this.state,\n      snapShotPostion: this.state.position\n    });\n  }\n\n  normalizePostion(position) {\n    if (this.props.symetric || this.props.unsymetric) {\n      return Math.min(Math.max(position, -100), 100);\n    }\n\n    return Math.min(Math.max(position, 0), 100);\n  }\n\n  quantizePosition(position) {\n    if (!this.props.quantize) return position; // value is quantaized \n\n    return this.valueToPosition(this.evalValue(position));\n  }\n\n  valueToPosition(value) {\n    let position = value;\n\n    if (this.props.scale) {\n      position = value * 100 / this.props.scale;\n    }\n\n    if (this.props.unsymetric) {\n      if (this.props.unsymetric.positive && value > 0) {\n        let scale = this.props.unsymetric.positive;\n        position = position * scale;\n      }\n\n      if (this.props.unsymetric.negative && value < 0) {\n        let scale = this.props.unsymetric.negative;\n        position = position * scale;\n      }\n    }\n\n    return position;\n  }\n\n  evalValue(position) {\n    let value = position;\n\n    if (this.props.scale) {\n      value = this.props.scale * position / 100;\n    }\n\n    if (this.props.unsymetric) {\n      if (this.props.unsymetric.positive && position > 0) {\n        let scale = this.props.unsymetric.positive;\n        value = value / scale;\n      }\n\n      if (this.props.unsymetric.negative && position < 0) {\n        let scale = this.props.unsymetric.negative;\n        value = value / scale;\n      }\n    }\n\n    if (this.props.quantize) {\n      let factor;\n\n      if (typeof this.props.quantize === \"object\") {\n        if (this.props.quantize.positive && value >= 0) {\n          factor = this.props.quantize.positive;\n        }\n\n        if (this.props.quantize.negative && value < 0) {\n          factor = this.props.quantize.negative;\n        }\n      } else if (typeof this.props.quantize === \"number\") {\n        factor = this.props.quantize;\n      }\n\n      const rest = value % factor;\n      value = value - rest;\n    } //rounding \n\n\n    return Math.floor(value * 1000000) / 1000000;\n  }\n\n  setPostion(position) {\n    position = this.normalizePostion(position);\n    const value = this.evalValue(position);\n    this.setState({ ...this.state,\n      position,\n      value\n    }, () => {\n      this.mapPostionToArms(this.state.position);\n    });\n    this.props.onChange && this.props.onChange(this.state.value);\n  }\n\n  mapPostionToArms(position) {\n    let rightArm, leftArm, dotAngle;\n    let reversArm = false;\n    position = this.quantizePosition(position);\n\n    if (this.props.symetric || this.props.unsymetric) {\n      rightArm = 88;\n      leftArm = 92;\n      dotAngle = position * 1.4;\n\n      if (position < -2) {\n        rightArm = 90 - Math.abs(position) * 1.5;\n        leftArm = 90;\n      } else if (position > 2) {\n        rightArm = 90;\n        leftArm = 90 + position * 1.5;\n      }\n    } else {\n      rightArm = -60;\n      leftArm = -60;\n      dotAngle = -150 + position * 2.95;\n      leftArm += position * 3;\n\n      if (position > 60) {\n        reversArm = true;\n        leftArm = -240 + (position - 60) * 3;\n        rightArm = -240;\n      }\n    }\n\n    this.setState({ ...this.state,\n      rightArm,\n      leftArm,\n      dotAngle,\n      reversArm\n    });\n  } // -------------- events below\n\n\n  mouseDown(event) {\n    const startY = event.clientY;\n    let mouseMove = this.mouseMove.bind(this, startY);\n    this.snap();\n\n    const removeListener = () => {\n      document.body.removeEventListener('mousemove', mouseMove);\n      document.body.removeEventListener('mouseup', removeListener);\n      document.body.removeEventListener('mouseleave', removeListener);\n      this.setState({ ...this.setState,\n        isDragged: false\n      }, () => {\n        if (!this.state.isDragged && !this.state.isMouseOver) {\n          this.setState({ ...this.state,\n            isActive: false\n          });\n        }\n      });\n    };\n\n    document.body.addEventListener('mousemove', mouseMove);\n    document.body.addEventListener('mouseup', removeListener);\n    document.body.addEventListener('mouseleave', removeListener);\n    this.setState({ ...this.setState,\n      isDragged: true,\n      isActive: true\n    });\n  }\n\n  mouseMove(startY, event) {\n    event.stopPropagation();\n    let responsFactor = this.props.responsFactor || 1;\n    let position = this.state.snapShotPostion - (event.clientY - startY) * responsFactor;\n    this.setPostion(position);\n  }\n\n  mouseEnter() {\n    this.setState({ ...this.setState,\n      isMouseOver: true\n    }, () => {\n      if (this.state.isDragged || this.state.isMouseOver) {\n        this.setState({ ...this.state,\n          isActive: true\n        });\n      }\n    });\n  }\n\n  mouseLeve() {\n    this.setState({ ...this.setState,\n      isMouseOver: false\n    }, () => {\n      if (!this.state.isDragged && !this.state.isMouseOver) {\n        this.setState({ ...this.state,\n          isActive: false\n        });\n      }\n    });\n  }\n\n  mouseDoubelClick() {\n    if (this.props.dobuleClickInit) {\n      const value = this.props.initValue || 0;\n      const position = this.valueToPosition(value);\n      this.setPostion(position);\n    }\n  } //----------------compontent metod\n\n\n  componentDidMount() {\n    let position = this.state.position;\n\n    if (this.props.initValue) {\n      position = this.valueToPosition(this.props.initValue);\n    }\n\n    this.setState({ ...this.state,\n      position: position\n    }, () => {\n      this.mapPostionToArms(position);\n    });\n  }\n\n  render() {\n    let value = \"\";\n\n    if (this.state.isMouseOver && !this.state.isDragged && this.props.alt || this.props.showValue === \"always\" && this.props.alt) {\n      value = this.props.alt.substr(0, 4).toUpperCase();\n    } else {\n      if (this.props.showValue) {\n        value = this.evalValue(this.state.position);\n      }\n\n      if (this.props.displayFormula) {\n        value = this.props.displayFormula(value);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"knob \" + this.props.className,\n      onMouseDown: this.mouseDown.bind(this),\n      onDragStart: e => e.preventDefault(),\n      onDoubleClick: this.mouseDoubelClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"knob-big-circle\",\n      style: {\n        backgroundImage: `linear-gradient(` + (180 + this.state.leftArm) + `deg, ` + style.primaryDark + ` 50%, transparent 50%),\n                                       linear-gradient(` + (180 + this.state.rightArm) + `deg, transparent 50%, ` + style.primaryDark + ` 50%)`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"half-circle half-right\",\n      style: {\n        transform: `rotate(` + this.state.leftArm + `deg)`\n      },\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"half-circle half-left \" + (this.state.reversArm ? \"half--reverse\" : \"\"),\n      style: {\n        transform: `rotate(` + this.state.rightArm + `deg)`\n      },\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), this.props.showValue && React.createElement(\"div\", {\n      className: \"knob-value \" + (this.state.isActive ? \"knob--focus\" : \"\"),\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, value)), React.createElement(\"div\", {\n      className: \"knob-small-circle \" + (this.state.isActive ? \"small-circle--focus\" : \"\"),\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"knob-dot\",\n      style: {\n        transform: 'rotate(' + this.state.dotAngle + 'deg)'\n      },\n      onMouseEnter: this.mouseEnter.bind(this),\n      onMouseLeave: this.mouseLeve.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Knob;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/common/Knob/Knob.js"],"names":["React","style","Knob","Component","state","value","position","snapShotPostion","rightArm","leftArm","dotAngle","reversArm","idDragged","isMouseOver","isActive","snap","setState","normalizePostion","props","symetric","unsymetric","Math","min","max","quantizePosition","quantize","valueToPosition","evalValue","scale","positive","negative","factor","rest","floor","setPostion","mapPostionToArms","onChange","abs","mouseDown","event","startY","clientY","mouseMove","bind","removeListener","document","body","removeEventListener","isDragged","addEventListener","stopPropagation","responsFactor","mouseEnter","mouseLeve","mouseDoubelClick","dobuleClickInit","initValue","componentDidMount","render","alt","showValue","substr","toUpperCase","displayFormula","className","e","preventDefault","backgroundImage","primaryDark","transform"],"mappings":"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","sourcesContent":["\r\n\r\n// Spec \r\n// witout any option Knob is standard with value from 0 to 100 and on inti value is 0\r\n// -initValue:number allow to set init value\r\n// -showValue props allows to display numeric value on knob\r\n// -diplayFormula : a callbac function with will be used to show value on knob\r\n// -scale:number allow to scale value eg. 10 give range from 0 to 10 \r\n// -symetric:boolean if this props is present knob havse valeu from -100 to 100 * scale \r\n// -unsymetric:{negative:number, positive:number} allows to set unsymetric range value : \r\n//  {positive : 5 } means that values bigger than 0 are divided by 5 range is from -100 to 20 * scale\r\n// -quantize:number switch knob to quantize mode in witch returned values are quantize to parametr \r\n//       eg: 2 returns value 100, 98 , 96 ... quantize:0.05 returns values 100, 99.95.... \r\n// -qunatize:{negative:number, positive:number} allows to set diffrent qunatizes for negative and positives values.\r\n// -responseFactor if is present adjust knob response on a mouse move // default= 1 eg responseFactor 2 will increase response two times\r\n// -alt if is present when mouse is over and knob is not draggin it will display alt value \r\n\r\nimport React from \"react\";\r\nimport style from \"./knob.scss\";\r\n\r\n\r\nclass Knob extends React.Component {\r\n\r\n    state = {\r\n        value: 0,\r\n        position: 0, // form 0 to 100\r\n        snapShotPostion: 0,//\r\n\r\n        rightArm: 90, // form -60 to 90 - this is midle\r\n        leftArm: 90, // from 90 to 240 \r\n        dotAngle: 0,\r\n        reversArm: false,//for not symetri linera gradient swap\r\n\r\n        idDragged: false,\r\n        isMouseOver: false,\r\n        isActive: false,\r\n    }\r\n\r\n    snap() {\r\n        this.setState({ ...this.state, snapShotPostion: this.state.position })\r\n    }\r\n\r\n    normalizePostion(position) {\r\n        if (this.props.symetric || this.props.unsymetric) {\r\n            return Math.min(Math.max(position, -100), 100)\r\n        }\r\n        return Math.min(Math.max(position, 0), 100)\r\n    }\r\n\r\n    quantizePosition(position) {\r\n        if (!this.props.quantize)\r\n            return position;\r\n\r\n        // value is quantaized \r\n        return this.valueToPosition(this.evalValue(position));\r\n\r\n    }\r\n\r\n    valueToPosition(value) {\r\n        let position = value;\r\n        if (this.props.scale) {\r\n            position = value * 100 / this.props.scale;\r\n        }\r\n\r\n\r\n        if (this.props.unsymetric) {\r\n            if (this.props.unsymetric.positive && value > 0) {\r\n                let scale = this.props.unsymetric.positive;\r\n                position = position * scale;\r\n            }\r\n            if (this.props.unsymetric.negative && value < 0) {\r\n                let scale = this.props.unsymetric.negative;\r\n                position = position * scale;\r\n            }\r\n        }\r\n        return position;\r\n    }\r\n\r\n    evalValue(position) {\r\n        let value = position;\r\n\r\n        if (this.props.scale) {\r\n            value = this.props.scale * position / 100;\r\n        }\r\n\r\n        if (this.props.unsymetric) {\r\n            if (this.props.unsymetric.positive && position > 0) {\r\n                let scale = this.props.unsymetric.positive;\r\n                value = value / scale;\r\n            }\r\n            if (this.props.unsymetric.negative && position < 0) {\r\n                let scale = this.props.unsymetric.negative;\r\n                value = value / scale;\r\n            }\r\n        }\r\n\r\n        if (this.props.quantize) {\r\n            let factor;\r\n            if (typeof this.props.quantize === \"object\") {\r\n                if (this.props.quantize.positive && value >= 0) {\r\n                    factor = this.props.quantize.positive;\r\n                } if (this.props.quantize.negative && value < 0) {\r\n                    factor = this.props.quantize.negative;\r\n                }\r\n            } else if (typeof this.props.quantize === \"number\") {\r\n                factor = this.props.quantize;\r\n            }\r\n\r\n            const rest = value % factor;\r\n            value = value - rest;\r\n        }\r\n\r\n        //rounding \r\n        return Math.floor(value * 1000000) / 1000000;\r\n    }\r\n\r\n    setPostion(position) {\r\n        position = this.normalizePostion(position);\r\n        const value = this.evalValue(position);\r\n\r\n        this.setState({ ...this.state, position, value }, () => {\r\n            this.mapPostionToArms(this.state.position)\r\n        });\r\n\r\n        (this.props.onChange && this.props.onChange(this.state.value))\r\n    }\r\n\r\n\r\n    mapPostionToArms(position) {\r\n        let rightArm, leftArm, dotAngle;\r\n        let reversArm = false;\r\n        position = this.quantizePosition(position);\r\n\r\n        if (this.props.symetric || this.props.unsymetric) {\r\n            rightArm = 88;\r\n            leftArm = 92;\r\n            dotAngle = position * 1.4;\r\n\r\n            if (position < -2) {\r\n                rightArm = 90 - Math.abs(position) * 1.5;\r\n                leftArm = 90;\r\n            } else if (position > 2) {\r\n                rightArm = 90;\r\n                leftArm = 90 + position * 1.5;\r\n            }\r\n        } else {\r\n            rightArm = -60;\r\n            leftArm = -60;\r\n            dotAngle = -150 + position * 2.95;\r\n            leftArm += position * 3;\r\n            if (position > 60) {\r\n                reversArm = true;\r\n                leftArm = -240 + (position - 60) * 3;\r\n                rightArm = -240;\r\n            }\r\n\r\n        }\r\n\r\n        this.setState({ ...this.state, rightArm, leftArm, dotAngle, reversArm });\r\n    }\r\n\r\n    // -------------- events below\r\n\r\n    mouseDown(event) {\r\n        const startY = event.clientY;\r\n        let mouseMove = this.mouseMove.bind(this, startY);\r\n        this.snap();\r\n\r\n        const removeListener = () => {\r\n            document.body.removeEventListener('mousemove', mouseMove);\r\n            document.body.removeEventListener('mouseup', removeListener);\r\n            document.body.removeEventListener('mouseleave', removeListener);\r\n            this.setState({ ...this.setState, isDragged: false }, () => {\r\n                if (!this.state.isDragged && !this.state.isMouseOver) {\r\n                    this.setState({ ...this.state, isActive: false })\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        document.body.addEventListener('mousemove', mouseMove)\r\n        document.body.addEventListener('mouseup', removeListener);\r\n        document.body.addEventListener('mouseleave', removeListener);\r\n        this.setState({ ...this.setState, isDragged: true, isActive: true })\r\n    }\r\n\r\n    mouseMove(startY, event) {\r\n        event.stopPropagation();\r\n        let responsFactor = this.props.responsFactor || 1;\r\n        let position = this.state.snapShotPostion - (event.clientY - startY) * responsFactor;\r\n        this.setPostion(position);\r\n    }\r\n\r\n    mouseEnter() {\r\n        this.setState({ ...this.setState, isMouseOver: true }, () => {\r\n            if (this.state.isDragged || this.state.isMouseOver) {\r\n                this.setState({ ...this.state, isActive: true })\r\n            }\r\n        });\r\n    }\r\n\r\n    mouseLeve() {\r\n        this.setState({ ...this.setState, isMouseOver: false }, () => {\r\n            if (!this.state.isDragged && !this.state.isMouseOver) {\r\n                this.setState({ ...this.state, isActive: false })\r\n            }\r\n        });\r\n    }\r\n\r\n    mouseDoubelClick() {\r\n        if (this.props.dobuleClickInit) {\r\n            const value = this.props.initValue || 0;\r\n            const position = this.valueToPosition(value);\r\n            this.setPostion(position)\r\n        }\r\n    }\r\n\r\n    //----------------compontent metod\r\n    componentDidMount() {\r\n        let position = this.state.position;\r\n        if (this.props.initValue) {\r\n            position = this.valueToPosition(this.props.initValue)\r\n        }\r\n\r\n        this.setState({ ...this.state, position: position }, () => {\r\n            this.mapPostionToArms(position);\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        let value = \"\"\r\n        if ((this.state.isMouseOver && !this.state.isDragged && this.props.alt)\r\n            || (this.props.showValue === \"always\") && this.props.alt ) {\r\n            value = this.props.alt.substr(0, 4).toUpperCase();\r\n        } else {\r\n            if (this.props.showValue) {\r\n                value = this.evalValue(this.state.position)\r\n            }\r\n            if (this.props.displayFormula) {\r\n                value = this.props.displayFormula(value);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className={\"knob \" + this.props.className}\r\n                onMouseDown={this.mouseDown.bind(this)}\r\n                onDragStart={e => e.preventDefault()}\r\n                onDoubleClick={this.mouseDoubelClick.bind(this)}>\r\n                <div className=\"knob-big-circle\" style={{\r\n                    backgroundImage: `linear-gradient(` + (180 + this.state.leftArm) + `deg, ` + style.primaryDark + ` 50%, transparent 50%),\r\n                                       linear-gradient(`+ (180 + this.state.rightArm) + `deg, transparent 50%, ` + style.primaryDark + ` 50%)`\r\n                }}>\r\n                    <div className=\"half-circle half-right\"\r\n                        style={{ transform: `rotate(` + this.state.leftArm + `deg)` }}\r\n                        onMouseEnter={this.mouseEnter.bind(this)}\r\n                        onMouseLeave={this.mouseLeve.bind(this)} />\r\n                    <div className={\"half-circle half-left \" + ((this.state.reversArm) ? \"half--reverse\" : \"\")}\r\n                        style={{ transform: `rotate(` + this.state.rightArm + `deg)` }}\r\n                        onMouseEnter={this.mouseEnter.bind(this)}\r\n                        onMouseLeave={this.mouseLeve.bind(this)} />\r\n\r\n                    {(this.props.showValue && <div className={\"knob-value \" + ((this.state.isActive) ? \"knob--focus\" : \"\")}\r\n                        onMouseEnter={this.mouseEnter.bind(this)}\r\n                        onMouseLeave={this.mouseLeve.bind(this)}>\r\n                        {value}\r\n                    </div>)}\r\n                </div>\r\n                <div\r\n                    className={\"knob-small-circle \" + ((this.state.isActive) ? \"small-circle--focus\" : \"\")}\r\n                    onMouseEnter={this.mouseEnter.bind(this)}\r\n                    onMouseLeave={this.mouseLeve.bind(this)}\r\n                />\r\n                <div className=\"knob-dot\"\r\n                    style={{ transform: 'rotate(' + this.state.dotAngle + 'deg)' }}\r\n                    onMouseEnter={this.mouseEnter.bind(this)}\r\n                    onMouseLeave={this.mouseLeve.bind(this)} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Knob;"]},"metadata":{},"sourceType":"module"}