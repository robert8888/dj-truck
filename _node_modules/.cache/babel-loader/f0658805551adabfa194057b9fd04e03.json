{"ast":null,"code":"const {\n  tokenizeCssClass\n} = require(\"./tokenizeCssClass\");\n\nconst {\n  tokenizeCssClassBlock\n} = require(\"./tokenizeCssClassBlock\");\n\nmodule.exports = parseCssClass;\n\nfunction parseCssClass() {\n  let Parser = this.Parser;\n  let inlineTokenizers = Parser.prototype.inlineTokenizers; //  let blockTokenizers = Parser.prototype.blockTokenizers;\n\n  let inlineMethods = Parser.prototype.inlineMethods; //  let blockMethods = Parser.prototype.blockMethods;\n  // console.log('inline methods', inlineMethods);\n  // console.log('block methods', blockMethods)\n  // Add an inline tokenizer (defined in the following example).\n\n  inlineTokenizers.cssClass = tokenizeCssClass;\n  blockTokenizers.cssClassBlock = tokenizeHtmlClassBlock; // Run it just before `text`.\n\n  inlineMethods.splice(inlineMethods.indexOf('thematicBreak'), 0, 'cssClass');\n  blockMethods.splice(blockMethods.indexOf('paragraph'), 0, 'cssClassBlock');\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/introduction/MarkDonwExtesnion/parseCssClass.js"],"names":["tokenizeCssClass","require","tokenizeCssClassBlock","module","exports","parseCssClass","Parser","inlineTokenizers","prototype","inlineMethods","cssClass","blockTokenizers","cssClassBlock","tokenizeHtmlClassBlock","splice","indexOf","blockMethods"],"mappings":"AACA,MAAM;AAACA,EAAAA;AAAD,IAAqBC,OAAO,CAAC,oBAAD,CAAlC;;AACA,MAAM;AAACC,EAAAA;AAAD,IAA0BD,OAAO,CAAC,yBAAD,CAAvC;;AACAE,MAAM,CAACC,OAAP,GAAiBC,aAAjB;;AAEA,SAASA,aAAT,GAAyB;AACrB,MAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,MAAIC,gBAAgB,GAAGD,MAAM,CAACE,SAAP,CAAiBD,gBAAxC,CAFqB,CAGvB;;AACE,MAAIE,aAAa,GAAGH,MAAM,CAACE,SAAP,CAAiBC,aAArC,CAJqB,CAKvB;AAEC;AACA;AACC;;AAGAF,EAAAA,gBAAgB,CAACG,QAAjB,GAA4BV,gBAA5B;AACAW,EAAAA,eAAe,CAACC,aAAhB,GAAgCC,sBAAhC,CAbqB,CAerB;;AACAJ,EAAAA,aAAa,CAACK,MAAd,CAAqBL,aAAa,CAACM,OAAd,CAAsB,eAAtB,CAArB,EAA6D,CAA7D,EAAgE,UAAhE;AACAC,EAAAA,YAAY,CAACF,MAAb,CAAoBE,YAAY,CAACD,OAAb,CAAqB,WAArB,CAApB,EAAuD,CAAvD,EAA0D,eAA1D;AACH","sourcesContent":["\r\nconst {tokenizeCssClass} = require(\"./tokenizeCssClass\");\r\nconst {tokenizeCssClassBlock} = require(\"./tokenizeCssClassBlock\")\r\nmodule.exports = parseCssClass;\r\n\r\nfunction parseCssClass() {\r\n    let Parser = this.Parser\r\n    let inlineTokenizers = Parser.prototype.inlineTokenizers\r\n  //  let blockTokenizers = Parser.prototype.blockTokenizers;\r\n    let inlineMethods = Parser.prototype.inlineMethods\r\n  //  let blockMethods = Parser.prototype.blockMethods;\r\n\r\n   // console.log('inline methods', inlineMethods);\r\n   // console.log('block methods', blockMethods)\r\n    // Add an inline tokenizer (defined in the following example).\r\n\r\n\r\n    inlineTokenizers.cssClass = tokenizeCssClass;\r\n    blockTokenizers.cssClassBlock = tokenizeHtmlClassBlock;\r\n\r\n    // Run it just before `text`.\r\n    inlineMethods.splice(inlineMethods.indexOf('thematicBreak'), 0, 'cssClass')\r\n    blockMethods.splice(blockMethods.indexOf('paragraph'), 0, 'cssClassBlock')\r\n}"]},"metadata":{},"sourceType":"module"}