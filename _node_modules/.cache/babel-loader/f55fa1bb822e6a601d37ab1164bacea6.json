{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\PitchControl\\\\PitchControl.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./pitch-control.scss\";\n\nconst PitchControl = props => {\n  const [sliderRange, setSliderRange] = useState(null);\n  const [sliderPosition, setSliderPosition] = useState(null);\n  const sliderRangeElement = useRef();\n  const sliderThumbElement = useRef();\n  const sliderAreaElement = useRef();\n\n  const clickHandle = event => {\n    if (event.target === sliderAreaElement.current || event.target === sliderRangeElement.current) {\n      // area clicked\n      let clickY = event.clientY - sliderAreaElement.current.getBoundingClientRect().top;\n      setSliderPosition(clickY);\n    } else if (event.target === sliderThumbElement.current) {\n      // thumb clicked\n      console.log('clicked thumb');\n    }\n  };\n\n  useEffect(() => {\n    setSliderPosition(window.getComputedStyle(sliderThumbElement.current).top);\n    setSliderRange(window.getComputedStyle(sliderRangeElement.current).height);\n    sliderAreaElement.current.addEventListener('mousedown', clickHandle);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"pitch-control \" + \"pitch-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: sliderAreaElement,\n    className: \"pitch-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: sliderRangeElement,\n    className: \"slider-range\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    ref: sliderThumbElement,\n    style: sliderPosition && {\n      top: sliderPosition\n    },\n    className: \"slider-thumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nexport default PitchControl;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/PitchControl/PitchControl.js"],"names":["React","useState","useEffect","useRef","PitchControl","props","sliderRange","setSliderRange","sliderPosition","setSliderPosition","sliderRangeElement","sliderThumbElement","sliderAreaElement","clickHandle","event","target","current","clickY","clientY","getBoundingClientRect","top","console","log","window","getComputedStyle","height","addEventListener","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAmD,OAAnD;AACA,OAAO,sBAAP;;AAEA,MAAMC,YAAY,GAAEC,KAAK,IAAG;AAExB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAuCR,QAAQ,CAAC,IAAD,CAArD;AACA,QAAMS,kBAAkB,GAAGP,MAAM,EAAjC;AACA,QAAMQ,kBAAkB,GAAGR,MAAM,EAAjC;AACA,QAAMS,iBAAiB,GAAGT,MAAM,EAAhC;;AAGA,QAAMU,WAAW,GAAGC,KAAK,IAAG;AACxB,QAAGA,KAAK,CAACC,MAAN,KAAiBH,iBAAiB,CAACI,OAAnC,IAA8CF,KAAK,CAACC,MAAN,KAAiBL,kBAAkB,CAACM,OAArF,EAA6F;AAAE;AAE3F,UAAIC,MAAM,GAAGH,KAAK,CAACI,OAAN,GAAgBN,iBAAiB,CAACI,OAAlB,CAA0BG,qBAA1B,GAAkDC,GAA/E;AACAX,MAAAA,iBAAiB,CAACQ,MAAD,CAAjB;AACH,KAJD,MAIO,IAAGH,KAAK,CAACC,MAAN,KAAiBJ,kBAAkB,CAACK,OAAvC,EAA+C;AAAE;AACpDK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;AACJ,GARD;;AAUApB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,iBAAiB,CAACc,MAAM,CAACC,gBAAP,CAAwBb,kBAAkB,CAACK,OAA3C,EAAoDI,GAArD,CAAjB;AACAb,IAAAA,cAAc,CAACgB,MAAM,CAACC,gBAAP,CAAwBd,kBAAkB,CAACM,OAA3C,EAAoDS,MAArD,CAAd;AAEAb,IAAAA,iBAAiB,CAACI,OAAlB,CAA0BU,gBAA1B,CAA2C,WAA3C,EAAwDb,WAAxD;AACH,GALQ,EAKN,EALM,CAAT;AAOA,SACI;AAAK,IAAA,SAAS,EAAE,mBAAmB,QAAnB,GAA8BR,KAAK,CAACsB,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEf,iBAAV;AAA6B,IAAA,SAAS,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEF,kBAAV;AAA8B,IAAA,SAAS,EAAC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,GAAG,EAAEC,kBAAV;AAA8B,IAAA,KAAK,EAAEH,cAAc,IAAI;AAACY,MAAAA,GAAG,EAAEZ;AAAN,KAAvD;AAA+E,IAAA,SAAS,EAAC,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAQH,CAlCD;;AAoCA,eAAeJ,YAAf","sourcesContent":["import React, { useState , useEffect, useRef} from \"react\";\r\nimport \"./pitch-control.scss\";\r\n\r\nconst PitchControl= props =>{\r\n\r\n    const [sliderRange, setSliderRange] = useState(null);\r\n    const [sliderPosition, setSliderPosition ] = useState(null);\r\n    const sliderRangeElement = useRef();\r\n    const sliderThumbElement = useRef();\r\n    const sliderAreaElement = useRef();\r\n\r\n\r\n    const clickHandle = event =>{\r\n        if(event.target === sliderAreaElement.current || event.target === sliderRangeElement.current){ // area clicked\r\n        \r\n            let clickY = event.clientY - sliderAreaElement.current.getBoundingClientRect().top;\r\n            setSliderPosition(clickY)\r\n        } else if(event.target === sliderThumbElement.current){ // thumb clicked\r\n            console.log('clicked thumb');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSliderPosition(window.getComputedStyle(sliderThumbElement.current).top);\r\n        setSliderRange(window.getComputedStyle(sliderRangeElement.current).height);\r\n\r\n        sliderAreaElement.current.addEventListener('mousedown', clickHandle);\r\n    }, [])\r\n\r\n    return (\r\n        <div className={\"pitch-control \" + \"pitch-\" + props.name}>\r\n            <div ref={sliderAreaElement} className=\"pitch-area\">\r\n                <div ref={sliderRangeElement} className=\"slider-range\"/>\r\n                <div ref={sliderThumbElement} style={sliderPosition && {top: sliderPosition}}  className=\"slider-thumb\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PitchControl;"]},"metadata":{},"sourceType":"module"}