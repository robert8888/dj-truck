{"ast":null,"code":"// ---------- PlayList---------------------\nconst ACTIONS = {\n  PL_ROOT_REQUEST: \"Call to api for root dir content\",\n  PL_PUSH_ROOT: \"Push root director from api\",\n  PUSH_TRACK: \"Push tack on end of list\",\n  //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\n  CALC_BPM: \"Start calculating bpm for track\",\n  SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\",\n  // bpm is rounded\n  //---play list explorer\n  PL_CREATE_DIR_REQEST: \"Call to api and create dir\",\n  PL_CREATE_DIR: \"Create dir in current\",\n  PL_CREATE_PLAYLIST: \"Creawte play list in current selected dir of name\",\n  PL_SET_SELECTION: \"Set current selected dir and play list if is selected play list\",\n  PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\n  PL_TOGGLE_DIR_REQUEST: \"If is not loade load and then open\",\n  PL_LOAD_DIR: \"Load dir content\",\n  PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\n  PL_RENAME_SELECTED_REQUEST: \"Call to api to rename current selected\",\n  PL_RENAME_SELECTED: \"Rename current selected element\",\n  PL_DELETE_SELECTED: \"Remove current selected element\",\n  PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\n  PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\n  PL_ADD_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\n  PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\"\n};\nexport { ACTIONS as PLAY_LIST_ACTIONS }; //***------------------- */\n\nexport function rootDirRequest() {\n  return {\n    type: ACTIONS.PL_ROOT_REQUEST\n  };\n}\nexport function pushRootDir(dirContent) {\n  return {\n    type: ACTIONS.PL_PUSH_ROOT,\n    dirContent\n  };\n}\nexport function pushTrackToList(track, playlist) {\n  return {\n    type: ACTIONS.PUSH_TRACK,\n    track,\n    playlist\n  };\n}\n;\nexport function startCalcBpm(track, playlist) {\n  return {\n    type: ACTIONS.CALC_BPM,\n    track,\n    playlist\n  };\n}\nexport function setBpmAndOffset(id, playlist, bpm, offset) {\n  return {\n    type: ACTIONS.SET_BPM_AND_OFFSET,\n    id,\n    playlist,\n    bpm,\n    offset\n  };\n}\n/**---------------------- */\n\nexport function createDirRequest(name) {\n  return {\n    type: ACTIONS.PL_CREATE_DIR_REQEST,\n    name\n  };\n}\nexport function createDir(name, id) {\n  return {\n    type: ACTIONS.PL_CREATE_DIR,\n    name,\n    id\n  };\n}\nexport function createPlaylist(name) {\n  return {\n    type: ACTIONS.PL_CREATE_PLAYLIST,\n    name\n  };\n}\nexport function setSelection(path) {\n  return {\n    type: ACTIONS.PL_SET_SELECTION,\n    path\n  };\n}\nexport function openCurrentPlayList() {\n  return {\n    type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST\n  };\n}\nexport function toggleDirRequest(path) {\n  return {\n    type: ACTIONS.PL_TOGGLE_DIR_REQUEST,\n    path\n  };\n}\nexport function toggleDir(path) {\n  return {\n    type: ACTIONS.PL_TOGGLE_DIR,\n    path\n  };\n}\nexport function loadDir(path) {\n  return {\n    type: ACTIONS.PL_LOAD_DIR,\n    path\n  };\n}\nexport function deleteSelected() {\n  return {\n    type: ACTIONS.PL_DELETE_SELECTED\n  };\n}\nexport function deleteTrack(index) {\n  return {\n    type: ACTIONS.PL_DELETE_TRACK,\n    index\n  };\n}\nexport function renameSelectedRequest(name) {\n  return {\n    type: ACTIONS.PL_RENAME_SELECTED_REQUEST,\n    name\n  };\n}\nexport function renameSelected(name) {\n  return {\n    type: ACTIONS.PL_RENAME_SELECTED,\n    name\n  };\n}\nexport function swapTrackOnList(from, to) {\n  return {\n    type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT,\n    from,\n    to\n  };\n}\nexport function addTrackToList(track, path) {\n  return {\n    type: ACTIONS.PL_ADD_TRACK_TO_LIST,\n    track,\n    path\n  };\n}\nexport function moveTo(pathFrom, pathTo) {\n  return {\n    type: ACTIONS.PL_MOVE_TO,\n    pathFrom,\n    pathTo\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/actions/console/playList.js"],"names":["ACTIONS","PL_ROOT_REQUEST","PL_PUSH_ROOT","PUSH_TRACK","CALC_BPM","SET_BPM_AND_OFFSET","PL_CREATE_DIR_REQEST","PL_CREATE_DIR","PL_CREATE_PLAYLIST","PL_SET_SELECTION","PL_OPEN_CURRENT_PLAY_LIST","PL_TOGGLE_DIR_REQUEST","PL_LOAD_DIR","PL_TOGGLE_DIR","PL_RENAME_SELECTED_REQUEST","PL_RENAME_SELECTED","PL_DELETE_SELECTED","PL_DELETE_TRACK","PL_SWAP_TRACK_ON_CURRENT","PL_ADD_TRACK_TO_LIST","PL_MOVE_TO","PLAY_LIST_ACTIONS","rootDirRequest","type","pushRootDir","dirContent","pushTrackToList","track","playlist","startCalcBpm","setBpmAndOffset","id","bpm","offset","createDirRequest","name","createDir","createPlaylist","setSelection","path","openCurrentPlayList","toggleDirRequest","toggleDir","loadDir","deleteSelected","deleteTrack","index","renameSelectedRequest","renameSelected","swapTrackOnList","from","to","addTrackToList","moveTo","pathFrom","pathTo"],"mappings":"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","sourcesContent":["// ---------- PlayList---------------------\r\n\r\nconst ACTIONS = {\r\n    PL_ROOT_REQUEST: \"Call to api for root dir content\",\r\n    PL_PUSH_ROOT: \"Push root director from api\",\r\n    \r\n    PUSH_TRACK: \"Push tack on end of list\",\r\n    //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\r\n    CALC_BPM: \"Start calculating bpm for track\",\r\n    SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\", // bpm is rounded\r\n\r\n    //---play list explorer\r\n    PL_CREATE_DIR_REQEST: \"Call to api and create dir\",\r\n    PL_CREATE_DIR: \"Create dir in current\",\r\n    PL_CREATE_PLAYLIST: \"Creawte play list in current selected dir of name\",\r\n\r\n    PL_SET_SELECTION: \"Set current selected dir and play list if is selected play list\",\r\n    PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\r\n\r\n    PL_TOGGLE_DIR_REQUEST: \"If is not loade load and then open\",\r\n    PL_LOAD_DIR: \"Load dir content\",\r\n    PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\r\n\r\n    PL_RENAME_SELECTED_REQUEST : \"Call to api to rename current selected\",\r\n    PL_RENAME_SELECTED: \"Rename current selected element\",\r\n    \r\n    PL_DELETE_SELECTED: \"Remove current selected element\",\r\n    PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\r\n    PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\r\n    PL_ADD_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\r\n    PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\",\r\n}\r\nexport { ACTIONS as PLAY_LIST_ACTIONS }\r\n//***------------------- */\r\nexport function rootDirRequest() {\r\n    return { type: ACTIONS.PL_ROOT_REQUEST }\r\n}\r\n\r\nexport function pushRootDir(dirContent) {\r\n    return { type: ACTIONS.PL_PUSH_ROOT, dirContent }\r\n}\r\n\r\nexport function pushTrackToList(track, playlist) {\r\n    return {\r\n        type: ACTIONS.PUSH_TRACK,\r\n        track,\r\n        playlist\r\n    }\r\n};\r\n\r\nexport function startCalcBpm(track, playlist) {\r\n    return {\r\n        type: ACTIONS.CALC_BPM,\r\n        track,\r\n        playlist\r\n    }\r\n}\r\n\r\n\r\nexport function setBpmAndOffset(id, playlist, bpm, offset) {\r\n    return {\r\n        type: ACTIONS.SET_BPM_AND_OFFSET,\r\n        id,\r\n        playlist,\r\n        bpm,\r\n        offset,\r\n    }\r\n}\r\n\r\n/**---------------------- */\r\n\r\nexport function createDirRequest(name) {\r\n    return { type: ACTIONS.PL_CREATE_DIR_REQEST, name }\r\n}\r\n\r\nexport function createDir(name, id) {\r\n    return { type: ACTIONS.PL_CREATE_DIR, name, id }\r\n}\r\n\r\nexport function createPlaylist(name) {\r\n    return {\r\n        type: ACTIONS.PL_CREATE_PLAYLIST,\r\n        name,\r\n    }\r\n}\r\n\r\nexport function setSelection(path) {\r\n    return {\r\n        type: ACTIONS.PL_SET_SELECTION,\r\n        path,\r\n    }\r\n}\r\n\r\nexport function openCurrentPlayList() {\r\n    return {\r\n        type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST,\r\n    }\r\n}\r\n\r\nexport function toggleDirRequest(path) {\r\n    return { type: ACTIONS.PL_TOGGLE_DIR_REQUEST, path }\r\n}\r\n\r\n\r\nexport function toggleDir(path) {\r\n    return { type: ACTIONS.PL_TOGGLE_DIR, path }\r\n}\r\n\r\nexport function loadDir(path) {\r\n    return { type: ACTIONS.PL_LOAD_DIR, path }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function deleteSelected() {\r\n    return {\r\n        type: ACTIONS.PL_DELETE_SELECTED\r\n    }\r\n}\r\n\r\nexport function deleteTrack(index) {\r\n    return {\r\n        type: ACTIONS.PL_DELETE_TRACK,\r\n        index\r\n    }\r\n}\r\n\r\nexport function renameSelectedRequest(name) {\r\n    return { type: ACTIONS.PL_RENAME_SELECTED_REQUEST, name }\r\n}\r\n\r\nexport function renameSelected(name) {\r\n    return { type: ACTIONS.PL_RENAME_SELECTED, name }\r\n}\r\n\r\n\r\nexport function swapTrackOnList(from, to) {\r\n    return {\r\n        type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT,\r\n        from,\r\n        to\r\n    }\r\n}\r\n\r\nexport function addTrackToList(track, path) {\r\n    return {\r\n        type: ACTIONS.PL_ADD_TRACK_TO_LIST,\r\n        track,\r\n        path\r\n    }\r\n}\r\n\r\nexport function moveTo(pathFrom, pathTo) {\r\n    return {\r\n        type: ACTIONS.PL_MOVE_TO,\r\n        pathFrom,\r\n        pathTo\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}