{"ast":null,"code":"import { hideLoading, showLoading } from 'react-redux-loading-bar';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { ACTIONS, setSearchResults } from \"../../actions\";\nimport { getApi } from './../../apis/apiProvider';\nexport default function* watcher() {\n  console.log(\"acitons yt serch\");\n  yield takeEvery(ACTIONS.SEARCH_START, searchAsync);\n}\n\nfunction* searchAsync(action) {\n  const {\n    text: query,\n    source,\n    limit\n  } = action;\n  console.log(\"soruce\", source);\n\n  try {\n    yield put(showLoading());\n    const api = getApi(source);\n    const results = yield call(api.search, query, limit); // let serachResult = yield call(ytSearch, query);\n\n    yield put(setSearchResults(results));\n  } finally {\n    yield put(hideLoading());\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/externalSearch/SearchSaga.js"],"names":["hideLoading","showLoading","call","put","takeEvery","ACTIONS","setSearchResults","getApi","watcher","console","log","SEARCH_START","searchAsync","action","text","query","source","limit","api","results","search"],"mappings":"AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,eAA1C;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,eAAe,UAAUC,OAAV,GAAoB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAMN,SAAS,CAACC,OAAO,CAACM,YAAT,EAAuBC,WAAvB,CAAf;AACH;;AAGD,UAAUA,WAAV,CAAsBC,MAAtB,EAA8B;AAC1B,QAAM;AAACC,IAAAA,IAAI,EAAEC,KAAP;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,MAA+BJ,MAArC;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,MAAtB;;AAGA,MAAI;AACA,UAAMb,GAAG,CAACF,WAAW,EAAZ,CAAT;AACA,UAAMiB,GAAG,GAAGX,MAAM,CAACS,MAAD,CAAlB;AACA,UAAMG,OAAO,GAAG,MAAMjB,IAAI,CAACgB,GAAG,CAACE,MAAL,EAAaL,KAAb,EAAoBE,KAApB,CAA1B,CAHA,CAID;;AACC,UAAMd,GAAG,CAACG,gBAAgB,CAACa,OAAD,CAAjB,CAAT;AACH,GAND,SAMU;AACN,UAAMhB,GAAG,CAACH,WAAW,EAAZ,CAAT;AACH;AACJ","sourcesContent":["\r\nimport { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, setSearchResults } from \"../../actions\";\r\nimport { getApi } from './../../apis/apiProvider';\r\n\r\nexport default function* watcher() {\r\n    console.log(\"acitons yt serch\")\r\n    yield takeEvery(ACTIONS.SEARCH_START, searchAsync);\r\n}\r\n\r\n\r\nfunction* searchAsync(action) {\r\n    const {text: query, source, limit} = action;\r\n    console.log(\"soruce\", source)\r\n\r\n\r\n    try {\r\n        yield put(showLoading());\r\n        const api = getApi(source);\r\n        const results = yield call(api.search, query, limit);\r\n       // let serachResult = yield call(ytSearch, query);\r\n        yield put(setSearchResults(results));\r\n    } finally {\r\n        yield put(hideLoading())\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}