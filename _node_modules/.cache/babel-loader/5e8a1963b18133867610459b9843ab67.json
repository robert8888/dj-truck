{"ast":null,"code":"import { ACTIONS } from \"./../actions\";\nimport { produce } from \"imer\";\nconst initState = {\n  effects: {},\n  channels: {\n    /* \"1\":{\r\n         dryWet : 100,\r\n         effects:{\r\n             reverb : {\r\n                 decay : 5\r\n             },\r\n             echo : {\r\n                 time: 4\r\n             }\r\n         }\r\n     }*/\n  }\n};\n\nconst nextParameterState = (state, channel, effect, param) => {\n  return produce(state, nextState => {\n    const effectParam = state.channels[channel].effects[effect] || {};\n    nextState.channels[channel].effects[effect] = { ...effectParam,\n      ...param\n    };\n  });\n};\n\nexport default function effectorReducer(state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.SET_AVAILABLE_EFFECTS:\n      {\n        return produce(state, nextState => nextState.effects = action.effects);\n      }\n\n    case ACTIONS.SET_EFFECT_PARAMETER:\n      {\n        return nextParameterState(state, action.channel, action.effect, {\n          [action.name]: action.value\n        });\n      }\n\n    default:\n      return state;\n  }\n}\nexport function setEffectParametr(channel, name, value) {\n  return {\n    type: ACTIONS.SET_EFFECT_PARAMETER,\n    name,\n    value\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/reducers/effectorReducer.js"],"names":["ACTIONS","produce","initState","effects","channels","nextParameterState","state","channel","effect","param","nextState","effectParam","effectorReducer","action","type","SET_AVAILABLE_EFFECTS","SET_EFFECT_PARAMETER","name","value","setEffectParametr"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,cAAtB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,EADK;AAEdC,EAAAA,QAAQ,EAAG;AACR;;;;;;;;;;;AADQ;AAFG,CAAlB;;AAiBA,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,KAAzB,KAAiC;AACxD,SAAOR,OAAO,CAACK,KAAD,EAAQI,SAAS,IAAI;AAC3B,UAAMC,WAAW,GAAGL,KAAK,CAACF,QAAN,CAAeG,OAAf,EAAwBJ,OAAxB,CAAgCK,MAAhC,KAA2C,EAA/D;AACAE,IAAAA,SAAS,CAACN,QAAV,CAAmBG,OAAnB,EAA4BJ,OAA5B,CAAoCK,MAApC,IAA8C,EAAC,GAAGG,WAAJ;AAAiB,SAAGF;AAApB,KAA9C;AACP,GAHa,CAAd;AAIH,CALD;;AAOA,eAAe,SAASG,eAAT,CAAyBN,KAAK,GAAGJ,SAAjC,EAA4CW,MAA5C,EAAmD;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,OAAO,CAACe,qBAAb;AAAqC;AACjC,eAAOd,OAAO,CAACK,KAAD,EAAQI,SAAS,IAAIA,SAAS,CAACP,OAAV,GAAoBU,MAAM,CAACV,OAAhD,CAAd;AACH;;AAED,SAAKH,OAAO,CAACgB,oBAAb;AAAoC;AAChC,eAAOX,kBAAkB,CAACC,KAAD,EAAQO,MAAM,CAACN,OAAf,EAAwBM,MAAM,CAACL,MAA/B,EAAuC;AAAE,WAACK,MAAM,CAACI,IAAR,GAAgBJ,MAAM,CAACK;AAAzB,SAAvC,CAAzB;AACH;;AAED;AAAS,aAAOZ,KAAP;AATb;AAWH;AAGD,OAAO,SAASa,iBAAT,CAA2BZ,OAA3B,EAAoCU,IAApC,EAA0CC,KAA1C,EACP;AACI,SAAM;AACFJ,IAAAA,IAAI,EAAEd,OAAO,CAACgB,oBADZ;AAEFC,IAAAA,IAFE;AAGFC,IAAAA;AAHE,GAAN;AAKH","sourcesContent":["import {ACTIONS} from \"./../actions\";\r\nimport {produce} from \"imer\";\r\n\r\n\r\nconst initState = {\r\n    effects: {},\r\n    channels : {\r\n       /* \"1\":{\r\n            dryWet : 100,\r\n            effects:{\r\n                reverb : {\r\n                    decay : 5\r\n                },\r\n                echo : {\r\n                    time: 4\r\n                }\r\n            }\r\n        }*/\r\n    },\r\n};\r\n\r\nconst nextParameterState = (state, channel, effect, param)=>{\r\n    return produce(state, nextState => {\r\n            const effectParam = state.channels[channel].effects[effect] || {};\r\n            nextState.channels[channel].effects[effect] = {...effectParam, ...param};\r\n    })\r\n}\r\n\r\nexport default function effectorReducer(state = initState, action){\r\n    switch(action.type){\r\n        case ACTIONS.SET_AVAILABLE_EFFECTS : {\r\n            return produce(state, nextState => nextState.effects = action.effects)\r\n        }\r\n\r\n        case ACTIONS.SET_EFFECT_PARAMETER : {\r\n            return nextParameterState(state, action.channel, action.effect, { [action.name] : action.value})\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nexport function setEffectParametr(channel, name, value)\r\n{\r\n    return{\r\n        type: ACTIONS.SET_EFFECT_PARAMETER,\r\n        name,\r\n        value\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}