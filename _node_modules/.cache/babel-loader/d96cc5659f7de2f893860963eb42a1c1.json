{"ast":null,"code":"import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import store from\"./../../../../store\";import Observer from\"./observer/observer\";import STATUS from\"./observer/STATUS\";import Channels from\"./channels/channels\";import Mixer from\"./mixer/mixer\";import Effector from\"./effector/effector\";var Console=/*#__PURE__*/function(){function Console(){_classCallCheck(this,Console);store.subscribe(this.handleChange.bind(this));this.dispatch=store.dispatch;this.observer=new Observer(store);this.channels=new Channels();this.mixer=new Mixer(this.channels);this.effector=new Effector(this.mixer.mainAudioContext);this.mixer.connect(this.effector);}_createClass(Console,[{key:\"getMixerChannelInterface\",value:function getMixerChannelInterface(channelName){return this.mixer.getChannelInterface(channelName);}},{key:\"getMixerMasterInterface\",value:function getMixerMasterInterface(){return this.mixer.getMasteringInterface();}},{key:\"getChannelInterface\",value:function getChannelInterface(channelName){return this.channels.getChannelInterface(channelName);}},{key:\"createChannel\",value:function createChannel(channelName){var _this=this;for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}var buildChannel=function buildChannel(){var _this$channels;args.push(_this.mixer.mainAudioContext);(_this$channels=_this.channels).createChannel.apply(_this$channels,[channelName].concat(args));_this.mixer.setUpChannelsAudioNodes(channelName);};setTimeout(buildChannel.bind(this),0);}},{key:\"handleChange\",value:function handleChange(){var storeChanges=this.observer.check();var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=storeChanges[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var diff=_step.value;this.callAction(diff);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}}},{key:\"callAction\",value:function callAction(diff){switch(diff.status){//-- PLAY BACK\ncase STATUS.TRACK_LOADED:{this.channels.loadTrack(diff.channel,diff.currentValue);break;}case STATUS.TOGGLE_PLAY:{this.channels.togglePlay(diff.channel,diff.currentValue);break;}case STATUS.TOGGLE_CUE:{this.channels.toggleCue(diff.channel,diff.currentValue);break;}//----BPM AND SYNC\ncase STATUS.BPM_AND_OFFSET_READY:{this.channels.createBars(diff.channel,diff.currentValue);break;}case STATUS.PITCH_CHANGE:{this.channels.adjustPitch(diff.channel,diff.currentValue);break;}case STATUS.SYNC_ACTIVATE:{this.channels.sync(diff.channel);break;}//---- MIXER \ncase STATUS.GAIN_CHANGE:{this.mixer.setGain(diff.channel,diff.currentValue);break;}case STATUS.EQ_LOW_CHANGE:{this.mixer.setEqLow(diff.channel,diff.currentValue);break;}case STATUS.EQ_MID_CHANGE:{this.mixer.setEqMid(diff.channel,diff.currentValue);break;}case STATUS.EQ_HI_CHANGE:{this.mixer.setEqHigh(diff.channel,diff.currentValue);break;}case STATUS.FILTER_CHANGE:{this.mixer.setFilterFreq(diff.channel,diff.currentValue);break;}case STATUS.FILTER_RES_CHANGE:{this.mixer.setFiterResonas(diff.channel,diff.currentValue);break;}case STATUS.SEND_CHANGE:{this.mixer.setSend(diff.channel,diff.send,diff.currentValue);break;}case STATUS.FADER_CHANGE:{this.mixer.setFader(diff.currentValue);break;}// -- LOOPER\ncase STATUS.LOOP_CHANGE:{if(diff.currentValue.state){this.channels.makeLoop(diff.channel,diff.currentValue);}else{this.channels.endLoop(diff.channel);}break;}case STATUS.LOOP_LENGTH_CHANGE:{this.channels.updateLoop(diff.channel,diff.currentValue);break;}// -- EFFECTOR \ncase STATUS.DRY_WET_CHANGED:{this.effector.setDryWet(diff.channel,diff.currentValue);break;}case STATUS.CURRENT_EFFECT_CHANGED:{this.effector.connectEffect(diff.channel,diff.currentValue);break;}case STATUS.EFFECT_PARAM_CHANGED:{this.effector.setParam(diff.channel,diff.effect,diff.param);break;}//------ MASTERING\ncase STATUS.MASTERING:{this.mixer.mastering.setMasterParam(diff.subStatus,diff.value);break;}//----- Recorder \ncase STATUS.RECORDER:{this.mixer.recorder.action(diff.subStatus,diff.recParam);break;}default:return;}}}],[{key:\"Get\",value:function Get(){if(!Console.instance){var consol=new Console();Console.instance=consol;return Console.instance;}else{return Console.instance;}}}]);return Console;}();export{Console as default};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/console.js"],"names":["store","Observer","STATUS","Channels","Mixer","Effector","Console","subscribe","handleChange","bind","dispatch","observer","channels","mixer","effector","mainAudioContext","connect","channelName","getChannelInterface","getMasteringInterface","args","buildChannel","push","createChannel","setUpChannelsAudioNodes","setTimeout","storeChanges","check","diff","callAction","status","TRACK_LOADED","loadTrack","channel","currentValue","TOGGLE_PLAY","togglePlay","TOGGLE_CUE","toggleCue","BPM_AND_OFFSET_READY","createBars","PITCH_CHANGE","adjustPitch","SYNC_ACTIVATE","sync","GAIN_CHANGE","setGain","EQ_LOW_CHANGE","setEqLow","EQ_MID_CHANGE","setEqMid","EQ_HI_CHANGE","setEqHigh","FILTER_CHANGE","setFilterFreq","FILTER_RES_CHANGE","setFiterResonas","SEND_CHANGE","setSend","send","FADER_CHANGE","setFader","LOOP_CHANGE","state","makeLoop","endLoop","LOOP_LENGTH_CHANGE","updateLoop","DRY_WET_CHANGED","setDryWet","CURRENT_EFFECT_CHANGED","connectEffect","EFFECT_PARAM_CHANGED","setParam","effect","param","MASTERING","mastering","setMasterParam","subStatus","value","RECORDER","recorder","action","recParam","instance","consol"],"mappings":"kOAAA,MAAOA,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,C,GAGqBC,CAAAA,O,yBAEjB,kBAAa,+BACTN,KAAK,CAACO,SAAN,CAAgB,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAhB,EACA,KAAKC,QAAL,CAAgBV,KAAK,CAACU,QAAtB,CACA,KAAKC,QAAL,CAAgB,GAAIV,CAAAA,QAAJ,CAAaD,KAAb,CAAhB,CAEA,KAAKY,QAAL,CAAgB,GAAIT,CAAAA,QAAJ,EAAhB,CACA,KAAKU,KAAL,CAAa,GAAIT,CAAAA,KAAJ,CAAU,KAAKQ,QAAf,CAAb,CACA,KAAKE,QAAL,CAAgB,GAAIT,CAAAA,QAAJ,CAAa,KAAKQ,KAAL,CAAWE,gBAAxB,CAAhB,CACA,KAAKF,KAAL,CAAWG,OAAX,CAAmB,KAAKF,QAAxB,EAEH,C,8FAawBG,W,CAAY,CACjC,MAAO,MAAKJ,KAAL,CAAWK,mBAAX,CAA+BD,WAA/B,CAAP,CACH,C,yEAEwB,CACrB,MAAO,MAAKJ,KAAL,CAAWM,qBAAX,EAAP,CACH,C,gEAEmBF,W,CAAY,CAC5B,MAAO,MAAKL,QAAL,CAAcM,mBAAd,CAAkCD,WAAlC,CAAP,CACH,C,oDAIaA,W,CAAqB,8CAALG,IAAK,qDAALA,IAAK,0BAC/B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,oBACvBD,IAAI,CAACE,IAAL,CAAU,KAAI,CAACT,KAAL,CAAWE,gBAArB,EACA,gBAAA,KAAI,CAACH,QAAL,EAAcW,aAAd,uBAA4BN,WAA5B,SAA4CG,IAA5C,GACA,KAAI,CAACP,KAAL,CAAWW,uBAAX,CAAmCP,WAAnC,EACH,CAJD,CAMAQ,UAAU,CAACJ,YAAY,CAACZ,IAAb,CAAkB,IAAlB,CAAD,CAA0B,CAA1B,CAAV,CAEH,C,mDAEa,CACV,GAAMiB,CAAAA,YAAY,CAAG,KAAKf,QAAL,CAAcgB,KAAd,EAArB,CADU,gGAEV,kBAAgBD,YAAhB,oHAA6B,IAArBE,CAAAA,IAAqB,aACzB,KAAKC,UAAL,CAAgBD,IAAhB,EACH,CAJS,qMAKb,C,8CAEUA,I,CAAK,CAEZ,OAAOA,IAAI,CAACE,MAAZ,EACI;AAEA,IAAK5B,CAAAA,MAAM,CAAC6B,YAAZ,CAA2B,CACvB,KAAKnB,QAAL,CAAcoB,SAAd,CAAwBJ,IAAI,CAACK,OAA7B,CAAsCL,IAAI,CAACM,YAA3C,EACA,MACH,CAED,IAAKhC,CAAAA,MAAM,CAACiC,WAAZ,CAA0B,CACtB,KAAKvB,QAAL,CAAcwB,UAAd,CAAyBR,IAAI,CAACK,OAA9B,CAAuCL,IAAI,CAACM,YAA5C,EACA,MACH,CACD,IAAKhC,CAAAA,MAAM,CAACmC,UAAZ,CAAyB,CACrB,KAAKzB,QAAL,CAAc0B,SAAd,CAAwBV,IAAI,CAACK,OAA7B,CAAsCL,IAAI,CAACM,YAA3C,EACA,MACH,CAED;AACA,IAAKhC,CAAAA,MAAM,CAACqC,oBAAZ,CAAmC,CAC/B,KAAK3B,QAAL,CAAc4B,UAAd,CAAyBZ,IAAI,CAACK,OAA9B,CAAuCL,IAAI,CAACM,YAA5C,EACA,MACH,CAED,IAAKhC,CAAAA,MAAM,CAACuC,YAAZ,CAA2B,CACvB,KAAK7B,QAAL,CAAc8B,WAAd,CAA0Bd,IAAI,CAACK,OAA/B,CAAwCL,IAAI,CAACM,YAA7C,EACA,MACH,CAED,IAAKhC,CAAAA,MAAM,CAACyC,aAAZ,CAA4B,CACxB,KAAK/B,QAAL,CAAcgC,IAAd,CAAmBhB,IAAI,CAACK,OAAxB,EACA,MACH,CAED;AACA,IAAK/B,CAAAA,MAAM,CAAC2C,WAAZ,CAA0B,CACtB,KAAKhC,KAAL,CAAWiC,OAAX,CAAmBlB,IAAI,CAACK,OAAxB,CAAiCL,IAAI,CAACM,YAAtC,EACA,MACH,CACD,IAAKhC,CAAAA,MAAM,CAAC6C,aAAZ,CAA4B,CACxB,KAAKlC,KAAL,CAAWmC,QAAX,CAAoBpB,IAAI,CAACK,OAAzB,CAAkCL,IAAI,CAACM,YAAvC,EACA,MACH,CACD,IAAKhC,CAAAA,MAAM,CAAC+C,aAAZ,CAA4B,CACxB,KAAKpC,KAAL,CAAWqC,QAAX,CAAoBtB,IAAI,CAACK,OAAzB,CAAkCL,IAAI,CAACM,YAAvC,EACA,MACH,CACD,IAAKhC,CAAAA,MAAM,CAACiD,YAAZ,CAA2B,CACvB,KAAKtC,KAAL,CAAWuC,SAAX,CAAqBxB,IAAI,CAACK,OAA1B,CAAmCL,IAAI,CAACM,YAAxC,EACA,MACH,CAED,IAAKhC,CAAAA,MAAM,CAACmD,aAAZ,CAA4B,CACxB,KAAKxC,KAAL,CAAWyC,aAAX,CAAyB1B,IAAI,CAACK,OAA9B,CAAuCL,IAAI,CAACM,YAA5C,EACA,MACH,CAED,IAAKhC,CAAAA,MAAM,CAACqD,iBAAZ,CAAgC,CAC5B,KAAK1C,KAAL,CAAW2C,eAAX,CAA2B5B,IAAI,CAACK,OAAhC,CAAyCL,IAAI,CAACM,YAA9C,EACA,MACH,CAED,IAAKhC,CAAAA,MAAM,CAACuD,WAAZ,CAA0B,CACtB,KAAK5C,KAAL,CAAW6C,OAAX,CAAmB9B,IAAI,CAACK,OAAxB,CAAiCL,IAAI,CAAC+B,IAAtC,CAA4C/B,IAAI,CAACM,YAAjD,EACA,MACH,CAED,IAAKhC,CAAAA,MAAM,CAAC0D,YAAZ,CAA2B,CACvB,KAAK/C,KAAL,CAAWgD,QAAX,CAAoBjC,IAAI,CAACM,YAAzB,EACA,MACH,CAGD;AACA,IAAKhC,CAAAA,MAAM,CAAC4D,WAAZ,CAA0B,CACtB,GAAGlC,IAAI,CAACM,YAAL,CAAkB6B,KAArB,CAA2B,CACvB,KAAKnD,QAAL,CAAcoD,QAAd,CAAuBpC,IAAI,CAACK,OAA5B,CAAqCL,IAAI,CAACM,YAA1C,EACH,CAFD,IAEO,CACH,KAAKtB,QAAL,CAAcqD,OAAd,CAAsBrC,IAAI,CAACK,OAA3B,EACH,CACD,MACH,CAED,IAAK/B,CAAAA,MAAM,CAACgE,kBAAZ,CAAiC,CAC7B,KAAKtD,QAAL,CAAcuD,UAAd,CAAyBvC,IAAI,CAACK,OAA9B,CAAuCL,IAAI,CAACM,YAA5C,EACA,MACH,CAGD;AACA,IAAKhC,CAAAA,MAAM,CAACkE,eAAZ,CAA8B,CAC1B,KAAKtD,QAAL,CAAcuD,SAAd,CAAwBzC,IAAI,CAACK,OAA7B,CAAsCL,IAAI,CAACM,YAA3C,EACA,MACH,CAED,IAAKhC,CAAAA,MAAM,CAACoE,sBAAZ,CAAoC,CAChC,KAAKxD,QAAL,CAAcyD,aAAd,CAA4B3C,IAAI,CAACK,OAAjC,CAA0CL,IAAI,CAACM,YAA/C,EACA,MACH,CAED,IAAKhC,CAAAA,MAAM,CAACsE,oBAAZ,CAAmC,CAC/B,KAAK1D,QAAL,CAAc2D,QAAd,CAAuB7C,IAAI,CAACK,OAA5B,CAAqCL,IAAI,CAAC8C,MAA1C,CAAkD9C,IAAI,CAAC+C,KAAvD,EACA,MACH,CAED;AAEA,IAAKzE,CAAAA,MAAM,CAAC0E,SAAZ,CAAwB,CACpB,KAAK/D,KAAL,CAAWgE,SAAX,CAAqBC,cAArB,CAAoClD,IAAI,CAACmD,SAAzC,CAAoDnD,IAAI,CAACoD,KAAzD,EACA,MACH,CAED;AACA,IAAK9E,CAAAA,MAAM,CAAC+E,QAAZ,CAAuB,CACnB,KAAKpE,KAAL,CAAWqE,QAAX,CAAoBC,MAApB,CAA2BvD,IAAI,CAACmD,SAAhC,CAA2CnD,IAAI,CAACwD,QAAhD,EACA,MACH,CAED,QAAU,OArHd,CAuHH,C,mCAnKW,CACR,GAAG,CAAC9E,OAAO,CAAC+E,QAAZ,CAAqB,CACjB,GAAIC,CAAAA,MAAM,CAAG,GAAIhF,CAAAA,OAAJ,EAAb,CACAA,OAAO,CAAC+E,QAAR,CAAmBC,MAAnB,CACA,MAAOhF,CAAAA,OAAO,CAAC+E,QAAf,CACH,CAJD,IAIO,CACH,MAAO/E,CAAAA,OAAO,CAAC+E,QAAf,CACH,CACJ,C,8BAvBgB/E,O","sourcesContent":["import store from \"./../../../../store\";\r\nimport Observer from \"./observer/observer\";\r\nimport STATUS from \"./observer/STATUS\";\r\n\r\nimport Channels from \"./channels/channels\";\r\nimport Mixer from \"./mixer/mixer\";\r\nimport Effector from \"./effector/effector\";\r\n\r\n\r\nexport default class Console{\r\n\r\n    constructor(){\r\n        store.subscribe(this.handleChange.bind(this));\r\n        this.dispatch = store.dispatch;\r\n        this.observer = new Observer(store);\r\n\r\n        this.channels = new Channels();\r\n        this.mixer = new Mixer(this.channels);\r\n        this.effector = new Effector(this.mixer.mainAudioContext);\r\n        this.mixer.connect(this.effector);\r\n\r\n    }\r\n\r\n\r\n    static Get(){\r\n        if(!Console.instance){\r\n            let consol = new Console();\r\n            Console.instance = consol;\r\n            return Console.instance;\r\n        } else {\r\n            return Console.instance;\r\n        }\r\n    }\r\n\r\n    getMixerChannelInterface(channelName){\r\n        return this.mixer.getChannelInterface(channelName);\r\n    }\r\n\r\n    getMixerMasterInterface(){\r\n        return this.mixer.getMasteringInterface()\r\n    }\r\n\r\n    getChannelInterface(channelName){\r\n        return this.channels.getChannelInterface(channelName);\r\n    }\r\n\r\n \r\n\r\n    createChannel(channelName, ...args){\r\n        const buildChannel = () => {\r\n            args.push(this.mixer.mainAudioContext);\r\n            this.channels.createChannel(channelName, ...args);\r\n            this.mixer.setUpChannelsAudioNodes(channelName);\r\n        }\r\n    \r\n        setTimeout(buildChannel.bind(this), 0);\r\n\r\n    }\r\n\r\n    handleChange(){\r\n        const storeChanges = this.observer.check();\r\n        for(let diff of storeChanges){\r\n            this.callAction(diff);\r\n        }\r\n    }\r\n\r\n    callAction(diff){\r\n\r\n        switch(diff.status){\r\n            //-- PLAY BACK\r\n\r\n            case STATUS.TRACK_LOADED : {\r\n                this.channels.loadTrack(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n\r\n            case STATUS.TOGGLE_PLAY : {\r\n                this.channels.togglePlay(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n            case STATUS.TOGGLE_CUE : {\r\n                this.channels.toggleCue(diff.channel, diff.currentValue)\r\n                break;\r\n            }\r\n\r\n            //----BPM AND SYNC\r\n            case STATUS.BPM_AND_OFFSET_READY : {\r\n                this.channels.createBars(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n            \r\n            case STATUS.PITCH_CHANGE : {\r\n                this.channels.adjustPitch(diff.channel, diff.currentValue)\r\n                break;\r\n            }\r\n\r\n            case STATUS.SYNC_ACTIVATE : {\r\n                this.channels.sync(diff.channel);\r\n                break;\r\n            }\r\n\r\n            //---- MIXER \r\n            case STATUS.GAIN_CHANGE : {\r\n                this.mixer.setGain(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n            case STATUS.EQ_LOW_CHANGE : {\r\n                this.mixer.setEqLow(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n            case STATUS.EQ_MID_CHANGE : {\r\n                this.mixer.setEqMid(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n            case STATUS.EQ_HI_CHANGE : {\r\n                this.mixer.setEqHigh(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n\r\n            case STATUS.FILTER_CHANGE : {\r\n                this.mixer.setFilterFreq(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n\r\n            case STATUS.FILTER_RES_CHANGE : {\r\n                this.mixer.setFiterResonas(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n\r\n            case STATUS.SEND_CHANGE : {\r\n                this.mixer.setSend(diff.channel, diff.send, diff.currentValue)\r\n                break;\r\n            }\r\n\r\n            case STATUS.FADER_CHANGE : {\r\n                this.mixer.setFader(diff.currentValue);\r\n                break;\r\n            }\r\n\r\n\r\n            // -- LOOPER\r\n            case STATUS.LOOP_CHANGE : {\r\n                if(diff.currentValue.state){\r\n                    this.channels.makeLoop(diff.channel, diff.currentValue);\r\n                } else {\r\n                    this.channels.endLoop(diff.channel);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case STATUS.LOOP_LENGTH_CHANGE : {\r\n                this.channels.updateLoop(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n\r\n\r\n            // -- EFFECTOR \r\n            case STATUS.DRY_WET_CHANGED : {\r\n                this.effector.setDryWet(diff.channel, diff.currentValue);\r\n                break;\r\n            }\r\n\r\n            case STATUS.CURRENT_EFFECT_CHANGED: {\r\n                this.effector.connectEffect(diff.channel, diff.currentValue)\r\n                break;\r\n            }\r\n\r\n            case STATUS.EFFECT_PARAM_CHANGED : {\r\n                this.effector.setParam(diff.channel, diff.effect, diff.param)\r\n                break;\r\n            }\r\n\r\n            //------ MASTERING\r\n\r\n            case STATUS.MASTERING : {\r\n                this.mixer.mastering.setMasterParam(diff.subStatus, diff.value);\r\n                break;\r\n            }\r\n\r\n            //----- Recorder \r\n            case STATUS.RECORDER : {\r\n                this.mixer.recorder.action(diff.subStatus, diff.recParam);\r\n                break;\r\n            }\r\n\r\n            default : return; \r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}