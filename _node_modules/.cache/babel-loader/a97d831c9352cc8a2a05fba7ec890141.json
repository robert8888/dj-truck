{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Hooks\\\\Emoticons\\\\useEmoticons.js\";\nimport React, { useMemo, useCallback, useRef, useState } from 'react';\nimport { Button } from \"react-bootstrap\";\nimport Emoticons from \"./Emoticons/Emoticons\";\nexport default function () {\n  const toggleRef = useRef();\n  const textarea = useRef();\n  const onSelectIcon = useCallback((icon, event) => {\n    event.preventDefault();\n    toggleRef.current();\n    let textarea = textarea.current;\n    if (!textarea) return;\n    const before = textarea.value.substring(0, textarea.selectionStart);\n    const after = textarea.value.substring(textarea.selectionEnd, textarea.value.length);\n    textarea.value = before + icon + after;\n    console.log(icon);\n  }, []);\n  const component = useMemo(() => () => React.createElement(\"div\", {\n    className: \"emoticon\",\n    style: {\n      position: 'relative',\n      display: 'inline-block',\n      zIndex: '5000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => toggleRef.current(),\n    className: \"emoticon-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\uD83D\\uDE00\"), React.createElement(Emoticons, {\n    toggle: toggleRef,\n    onSelect: onSelectIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), [toggleRef]);\n  return [textarea, component];\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/Emoticons/useEmoticons.js"],"names":["React","useMemo","useCallback","useRef","useState","Button","Emoticons","toggleRef","textarea","onSelectIcon","icon","event","preventDefault","current","before","value","substring","selectionStart","after","selectionEnd","length","console","log","component","position","display","zIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA8D,OAA9D;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,eAAe,YAAU;AACrB,QAAMC,SAAS,GAAGJ,MAAM,EAAxB;AACA,QAAMK,QAAQ,GAAGL,MAAM,EAAvB;AAEA,QAAMM,YAAY,GAAGP,WAAW,CAAC,CAACQ,IAAD,EAAOC,KAAP,KAAiB;AAC9CA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,SAAS,CAACM,OAAV;AACA,QAAIL,QAAQ,GAAGA,QAAQ,CAACK,OAAxB;AACA,QAAG,CAACL,QAAJ,EAAc;AAEd,UAAMM,MAAM,GAAGN,QAAQ,CAACO,KAAT,CAAeC,SAAf,CAAyB,CAAzB,EAA4BR,QAAQ,CAACS,cAArC,CAAf;AACA,UAAMC,KAAK,GAAGV,QAAQ,CAACO,KAAT,CAAeC,SAAf,CAAyBR,QAAQ,CAACW,YAAlC,EAAgDX,QAAQ,CAACO,KAAT,CAAeK,MAA/D,CAAd;AAEAZ,IAAAA,QAAQ,CAACO,KAAT,GAAiBD,MAAM,GAAGJ,IAAT,GAAgBQ,KAAjC;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAaZ,IAAb;AACH,GAZ+B,EAY7B,EAZ6B,CAAhC;AAeA,QAAMa,SAAS,GAAGtB,OAAO,CAAC,MAAM,MACpB;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAACuB,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,OAAO,EAAC,cAA/B;AAAgDC,MAAAA,MAAM,EAAC;AAAvD,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAS,IAAA,OAAO,EAAG,MAAMnB,SAAS,CAACM,OAAV,EAAzB;AAA+C,IAAA,SAAS,EAAC,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEN,SAAnB;AAA8B,IAAA,QAAQ,EAAEE,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADa,EAKvB,CAACF,SAAD,CALuB,CAAzB;AAUA,SAAO,CAACC,QAAD,EAAWe,SAAX,CAAP;AACH","sourcesContent":["import React, { useMemo , useCallback, useRef, useState} from 'react';\r\nimport {Button} from \"react-bootstrap\";\r\nimport Emoticons from \"./Emoticons/Emoticons\";\r\n\r\nexport default function(){\r\n    const toggleRef = useRef();\r\n    const textarea = useRef();\r\n\r\n    const onSelectIcon = useCallback((icon, event) => {\r\n        event.preventDefault();\r\n        toggleRef.current();\r\n        let textarea = textarea.current;\r\n        if(!textarea) return;\r\n\r\n        const before = textarea.value.substring(0, textarea.selectionStart);\r\n        const after = textarea.value.substring(textarea.selectionEnd, textarea.value.length);\r\n\r\n        textarea.value = before + icon + after;\r\n\r\n        console.log( icon)\r\n    }, [])\r\n\r\n\r\n    const component = useMemo(() => () => (\r\n                <div className=\"emoticon\" style={{position: 'relative', display:'inline-block',  zIndex:'5000'}}>\r\n                    <Button  onClick={ () => toggleRef.current() } className='emoticon-btn'>ðŸ˜€</Button>\r\n                    <Emoticons toggle={toggleRef} onSelect={onSelectIcon}/>\r\n                </div>)\r\n    , [toggleRef])\r\n\r\n\r\n\r\n\r\n    return [textarea, component]\r\n}"]},"metadata":{},"sourceType":"module"}