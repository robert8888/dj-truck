{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\ErrorBoundry\\\\ErrorBoundry.js\";\nimport React from \"react\";\nimport { Logger, Log } from \"./../../../../utils/logger/logger\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\n\nclass ErrorBoundry extends React.ErrorBoundry {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error, info) {\n    return {\n      hasError: true,\n      error,\n      info\n    };\n  }\n\n  componentDidCatch(error, info) {\n    Logger.push(Log.Error({\n      path: info.componentStack,\n      private: \"Component throw Error: \" + error.message,\n      public: \"Sorry. Something went wrong :(. One of application component doesn't work correctly.\",\n      error\n    }));\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(\"div\", {\n        className: \"componet-error-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Sorry. Someting went wrong. Componet dosn't work correctly.\"), React.createElement(Button, {\n        onClick: this.setState({\n          hasError: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faSyncAlt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundry;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/ErrorBoundry/ErrorBoundry.js"],"names":["React","Logger","Log","FontAwesomeIcon","faSyncAlt","Button","ErrorBoundry","constructor","props","state","hasError","error","getDerivedStateFromError","info","componentDidCatch","push","Error","path","componentStack","private","message","public","render","setState","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,GAAhB,QAA0B,mCAA1B;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,SAAR,QAAwB,mCAAxB;AACA,SAAQC,MAAR,QAAqB,iBAArB;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACM,YAAjC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF;AAETC,MAAAA,KAAK,EAAG;AAFC,KAAb;AAIH;;AAED,SAAOC,wBAAP,CAAgCD,KAAhC,EAAuCE,IAAvC,EAA4C;AACxC,WAAO;AACHH,MAAAA,QAAQ,EAAG,IADR;AAEHC,MAAAA,KAFG;AAGHE,MAAAA;AAHG,KAAP;AAKH;;AAEDC,EAAAA,iBAAiB,CAACH,KAAD,EAAQE,IAAR,EAAa;AAC1BZ,IAAAA,MAAM,CAACc,IAAP,CAAYb,GAAG,CAACc,KAAJ,CAAU;AAClBC,MAAAA,IAAI,EAAEJ,IAAI,CAACK,cADO;AAElBC,MAAAA,OAAO,EAAE,4BAA4BR,KAAK,CAACS,OAFzB;AAGlBC,MAAAA,MAAM,EAAE,sFAHU;AAIlBV,MAAAA;AAJkB,KAAV,CAAZ;AAMH;;AAEDW,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKb,KAAL,CAAWC,QAAd,EAAuB;AACnB,aACI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKa,QAAL,CAAc;AAACb,UAAAA,QAAQ,EAAE;AAAX,SAAd,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmD,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEN,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnD,CAFJ,CADJ;AAMH;;AAED,WAAO,KAAKI,KAAL,CAAWgB,QAAlB;AACH;;AArCwC;;AAwC7C,eAAelB,YAAf","sourcesContent":["import React from \"react\";\r\nimport {Logger, Log} from \"./../../../../utils/logger/logger\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faSyncAlt} from \"@fortawesome/free-solid-svg-icons\"\r\nimport {Button} from \"react-bootstrap\"\r\n\r\nclass ErrorBoundry extends React.ErrorBoundry{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false,\r\n            error : null,\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error, info){\r\n        return {\r\n            hasError : true,\r\n            error,\r\n            info\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        Logger.push(Log.Error({\r\n            path: info.componentStack,\r\n            private: \"Component throw Error: \" + error.message,\r\n            public: \"Sorry. Something went wrong :(. One of application component doesn't work correctly.\",\r\n            error,\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return (\r\n                <div className=\"componet-error-container\">\r\n                    <h6>Sorry. Someting went wrong. Componet dosn't work correctly.</h6>\r\n                    <Button onClick={this.setState({hasError: false})}><FontAwesomeIcon icon={faSyncAlt}/></Button>\r\n                </div>\r\n            )\r\n        } \r\n        \r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;"]},"metadata":{},"sourceType":"module"}