{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Mixer\\\\componets\\\\RecordTime\\\\RecordTime.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\n\nconst RecordTime = props => {\n  const [time, setTime] = useState(0);\n  const [timerInterval, setIntervalHandler] = useState(null);\n  useEffect(() => {\n    if (props.runing) {\n      setIntervalHandler(setInterval(() => {\n        setTime(time++);\n      }, 1000));\n    } else {\n      clearInterval(timerInterval);\n      setIntervalHandler(null);\n    }\n  }, [props.runing, setTime, setIntervalHandler, timerInterval]);\n  const clearHandler = useCallback(() => {\n    return () => {\n      setTime(0);\n    };\n  }, []);\n  useEffect(() => {\n    props.clearHandler(clearHandler);\n  }, []);\n  return React.createElement(\"div\", {\n    class: \"record-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, time));\n};\n\nexport default RecordTime;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Console/Mixer/componets/RecordTime/RecordTime.js"],"names":["React","useState","useEffect","useCallback","RecordTime","props","time","setTime","timerInterval","setIntervalHandler","runing","setInterval","clearInterval","clearHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;AAGA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,aAAD,EAAgBC,kBAAhB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGG,KAAK,CAACK,MAAT,EAAgB;AACZD,MAAAA,kBAAkB,CAACE,WAAW,CAAC,MAAI;AAC/BJ,QAAAA,OAAO,CAACD,IAAI,EAAL,CAAP;AACH,OAF6B,EAE3B,IAF2B,CAAZ,CAAlB;AAGH,KAJD,MAIO;AACHM,MAAAA,aAAa,CAACJ,aAAD,CAAb;AACAC,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;AAEJ,GAVQ,EAUP,CAAEJ,KAAK,CAACK,MAAR,EACEH,OADF,EAEEE,kBAFF,EAGED,aAHF,CAVO,CAAT;AAgBA,QAAMK,YAAY,GAAGV,WAAW,CAAC,MAAI;AACjC,WAAO,MAAI;AACPI,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH,KAFD;AAGH,GAJ+B,EAI7B,EAJ6B,CAAhC;AAMAL,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,KAAK,CAACQ,YAAN,CAAmBA,YAAnB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,IAAP,CADJ,CADJ;AAKH,CAnCD;;AAqCA,eAAeF,UAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\n\r\nconst RecordTime = props => {\r\n    const [time, setTime] = useState(0);\r\n    const [timerInterval, setIntervalHandler] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(props.runing){\r\n            setIntervalHandler(setInterval(()=>{\r\n                setTime(time++);\r\n            }, 1000))\r\n        } else {\r\n            clearInterval(timerInterval);\r\n            setIntervalHandler(null);\r\n        }\r\n\r\n    },[ props.runing, \r\n        setTime, \r\n        setIntervalHandler,\r\n        timerInterval\r\n    ])\r\n\r\n    const clearHandler = useCallback(()=>{\r\n        return ()=>{\r\n            setTime(0)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        props.clearHandler(clearHandler)\r\n    }, [])\r\n\r\n    return(\r\n        <div class=\"record-time\">\r\n            <span>{time}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecordTime;"]},"metadata":{},"sourceType":"module"}