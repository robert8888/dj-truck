{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\PlayListExplorer\\\\PlayList\\\\PlayList.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport UUID from \"uuidjs\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport PlaylistTable from \"./PlaylistTable/PlaylistTable\";\nimport PlaylistItem from \"./Playlist_Item/PlaylistItem\";\nimport \"./play-list.scss\";\nimport CtxMenu from \"../../common/ContextMenu/ContextMenu\";\nimport PlaylistCtx from \"./PlaylistContext\";\n\nclass PlayList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.headers = ['Source', 'Title', 'Quality', 'Time', 'Bpm', 'Destination'];\n  }\n\n  setCurrentHover(index) {\n    if (!this.menuVisible) {\n      this.currentHoverElement = index;\n    }\n\n    console.log(index);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"playlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(ContextMenuTrigger, {\n      id: \"playlist_ctx_menu\",\n      className: \"playlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(PlaylistCtx.Provider, {\n      value: {\n        setHover: this.setCurrentHover.bind(this)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(PlaylistTable, {\n      headers: this.headers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.playList && this.props.playList.map((item, index) => React.createElement(PlaylistItem, {\n      item: item,\n      listIndex: index,\n      key: UUID.genV1(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })))))), React.createElement(CtxMenu, {\n      id: \"playlist_ctx_menu\",\n      items: {\n        \"Send to A\": null,\n        \"Send to B\": null,\n        \"Calc BPM\": null,\n        \"Delete\": null\n      },\n      handlers: {\n        onShow: () => this.menuVisible = true,\n        onHide: () => this.menuVisible = false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  playList: state.playList.list\n});\n\nconst mapDispatchToProps = (state, ownProps) => ({});\n\nexport default connect(mapStateToProps)(PlayList);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/PlayListExplorer/PlayList/PlayList.js"],"names":["React","Fragment","connect","UUID","ContextMenuTrigger","PlaylistTable","PlaylistItem","CtxMenu","PlaylistCtx","PlayList","Component","headers","setCurrentHover","index","menuVisible","currentHoverElement","console","log","render","setHover","bind","props","playList","map","item","genV1","onShow","onHide","mapStateToProps","state","list","mapDispatchToProps","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,OAFmC,GAEzB,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,aAA9C,CAFyB;AAAA;;AAInCC,EAAAA,eAAe,CAACC,KAAD,EAAO;AAClB,QAAG,CAAC,KAAKC,WAAT,EAAqB;AACjB,WAAKC,mBAAL,GAA2BF,KAA3B;AACH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;;AAIDK,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AAAoB,MAAA,EAAE,EAAC,mBAAvB;AAA2C,MAAA,SAAS,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAG,KAAKP,eAAL,CAAqBQ,IAArB,CAA0B,IAA1B;AAAZ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKT,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKU,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOX,KAAP,KAC5C,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEW,IAApB;AAA0B,MAAA,SAAS,EAAEX,KAArC;AAA4C,MAAA,GAAG,EAAEV,IAAI,CAACsB,KAAL,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB,CAD5B,CADJ,CADJ,CADJ,CADJ,EAYI,oBAAC,OAAD;AACI,MAAA,EAAE,EAAC,mBADP;AAEI,MAAA,KAAK,EAAE;AACH,qBAAa,IADV;AAEH,qBAAa,IAFV;AAGH,oBAAY,IAHT;AAIH,kBAAU;AAJP,OAFX;AAQI,MAAA,QAAQ,EAAE;AACNC,QAAAA,MAAM,EAAE,MAAM,KAAKZ,WAAL,GAAmB,IAD3B;AAENa,QAAAA,MAAM,EAAE,MAAM,KAAKb,WAAL,GAAmB;AAF3B,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ;AA4BH;;AA1CkC;;AA6CvC,MAAMc,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,QAAQ,EAAEO,KAAK,CAACP,QAAN,CAAeQ;AADO,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG,CAACF,KAAD,EAAQG,QAAR,MAAsB,EAAtB,CAA3B;;AAIA,eAAe9B,OAAO,CAAC0B,eAAD,CAAP,CAAyBnB,QAAzB,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UUID from \"uuidjs\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\"\r\nimport PlaylistTable from \"./PlaylistTable/PlaylistTable\";\r\nimport PlaylistItem from \"./Playlist_Item/PlaylistItem\";\r\n\r\nimport \"./play-list.scss\";\r\nimport CtxMenu from \"../../common/ContextMenu/ContextMenu\";\r\nimport PlaylistCtx from \"./PlaylistContext\";\r\n\r\nclass PlayList extends React.Component {\r\n\r\n    headers = ['Source', 'Title', 'Quality', 'Time', 'Bpm', 'Destination'];\r\n\r\n    setCurrentHover(index){\r\n        if(!this.menuVisible){\r\n            this.currentHoverElement = index;\r\n        }\r\n        console.log(index)\r\n    }\r\n    \r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"playlist\">\r\n                    <ContextMenuTrigger id=\"playlist_ctx_menu\" className=\"playlist\">\r\n                        <PlaylistCtx.Provider value={{setHover : this.setCurrentHover.bind(this) }}>\r\n                            <PlaylistTable headers={this.headers}>\r\n                                {this.props.playList && this.props.playList.map((item, index) =>\r\n                                    <PlaylistItem item={item} listIndex={index} key={UUID.genV1()} />\r\n                                )}\r\n                            </PlaylistTable>\r\n                        </PlaylistCtx.Provider>\r\n                    </ContextMenuTrigger>\r\n                </div>\r\n                <CtxMenu \r\n                    id=\"playlist_ctx_menu\"\r\n                    items={{\r\n                        \"Send to A\": null,\r\n                        \"Send to B\": null,\r\n                        \"Calc BPM\": null,\r\n                        \"Delete\": null\r\n                    }}\r\n                    handlers={{\r\n                        onShow: () => this.menuVisible = true,\r\n                        onHide: () => this.menuVisible = false,\r\n                    }}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    playList: state.playList.list\r\n})\r\n\r\nconst mapDispatchToProps = (state, ownProps) => ({\r\n    \r\n})\r\n\r\nexport default connect(mapStateToProps)(PlayList);"]},"metadata":{},"sourceType":"module"}