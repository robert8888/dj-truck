{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecords\\\\UserRecords.js\";\nimport React, { useEffect, useContext, useState, useRef, useCallback, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reqRecOfUser } from \"./../../actions\";\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\nimport RecordSearch from \"./../common/components/RecordSearch/RecordSearch\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\nimport Pagin from \"./../common/components/Pagin/Pagin\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport \"./user-records.scss\";\n\nconst UserRecords = ({\n  requestList,\n  userId,\n  currentUser,\n  recordsList,\n  countAll\n}) => {\n  const [controls, player] = useRecordPlayer(); //-------------------------\n\n  const [pageTitle, setPageTitle] = useState(\"Records\");\n  const [displaySearch, setSearchDisplaing] = useState(true);\n  const history = useHistory();\n  const {\n    user,\n    generes\n  } = useParams();\n  const queryStr = useLocation().search;\n  let {\n    pageSize,\n    page,\n    preloaded\n  } = useMemo(() => {\n    const values = queryString.parse(queryStr);\n    return {\n      pageSize: +values.pageSize,\n      page: +values.page,\n      preloaded: values.preloaded,\n      current: values.current\n    };\n  }, [queryStr]);\n  const [_pageSize, setPageSize] = useState(20);\n  const [_page, setPage] = useState(0);\n  useEffect(() => {\n    if (preloaded && recordsList.length > 0) {\n      return;\n    }\n\n    let pg = page || 0;\n    let pgSize = pageSize || _pageSize;\n    const where = {};\n\n    if (generes) {\n      where.genereNames = generes.split(\",\");\n    } else {\n      if (user) {\n        where.nickname = user;\n        setPageTitle(user + \" user records\");\n        setSearchDisplaing(false);\n      } else if (userId && currentUser) {\n        where.userId = userId;\n        setPageTitle(\"Your records\");\n        setSearchDisplaing(false);\n      } else {\n        setPageTitle(\"Last records\");\n      }\n    }\n\n    requestList(pgSize, pg, where);\n    setPageSize(pgSize);\n    setPage(pg);\n  }, [userId, requestList, _pageSize, page, pageSize, preloaded, setPageTitle, generes]);\n  const layoutContext = useContext(LayoutContext);\n  useEffect(() => {\n    layoutContext.setFooter(false);\n  }, [layoutContext]);\n  const getNextPageUrl = useCallback((page, pageSize) => {\n    let url = window.location.pathname;\n    url += '?pageSize=' + pageSize;\n    url += '&page=' + _page;\n    let search = window.location.search;\n    search = search.replace(/pageSize=\\d+/, '');\n    search = search.replace(/page=\\d+/, '');\n    search = search.replace('?', '&');\n    url += search;\n    return url;\n  }, []);\n  const changePageSize = useCallback(pageSize => {\n    history.push(getNextPageUrl(_page, pageSize));\n  }, [history, _page, getNextPageUrl]);\n  const goToPage = useCallback(page => {\n    history.push(getNextPageUrl(page, _pageSize));\n  }, [history, _pageSize, getNextPageUrl]);\n  const onSearch = useCallback((queryStr, searchOpt) => {\n    let search = '?';\n\n    for (let optName in searchOpt) {\n      if (!searchOpt[optName]) {\n        search += 'no-' + optName + '&';\n      }\n    }\n\n    if (search.length === 1) {\n      search = \"\";\n    }\n\n    ;\n\n    if (serach.length > 1 && search.endsWith(\"&\")) {\n      search = search.substr(0, search.length - 1);\n    }\n\n    history.push('/records/search/' + queryStr + search);\n  }, [history]);\n  return React.createElement(\"div\", {\n    className: \"user-records\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, displaySearch && React.createElement(RecordSearch, {\n    onSearch: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"user-records-top-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, pageTitle), React.createElement(DropdownButton, {\n    alignRight: true,\n    className: \"btn-pagger\",\n    title: _pageSize + \" on page \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \" 10 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 20),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \" 20 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 30),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \" 30 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 50),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \" 50 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 75),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \" 75 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 100),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \" 100 \"))), React.createElement(RecordsList, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Pagin, {\n    current: _page,\n    call: goToPage,\n    all: Math.floor(countAll / _pageSize),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(PlayerControls, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId,\n  userNickname: state.user.nickname\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecords/UserRecords.js"],"names":["React","useEffect","useContext","useState","useRef","useCallback","useMemo","connect","reqRecOfUser","RecordsList","RecordSearch","useRecordPlayer","PlayerControls","LayoutContext","Pagin","DropdownButton","Dropdown","useParams","useHistory","useLocation","queryString","UserRecords","requestList","userId","currentUser","recordsList","countAll","controls","player","pageTitle","setPageTitle","displaySearch","setSearchDisplaing","history","user","generes","queryStr","search","pageSize","page","preloaded","values","parse","current","_pageSize","setPageSize","_page","setPage","length","pg","pgSize","where","genereNames","split","nickname","layoutContext","setFooter","getNextPageUrl","url","window","location","pathname","replace","changePageSize","push","goToPage","onSearch","searchOpt","optName","serach","endsWith","substr","bind","Math","floor","mapStateToProps","state","records","list","dbId","userNickname","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState, useRef, useCallback, useMemo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reqRecOfUser } from \"./../../actions\"\r\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\r\nimport RecordSearch from \"./../common/components/RecordSearch/RecordSearch\";\r\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\r\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\r\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\r\nimport Pagin from \"./../common/components/Pagin/Pagin\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport \"./user-records.scss\"\r\n\r\nconst UserRecords = ({ requestList, userId, currentUser, recordsList, countAll }) => {\r\n    const [controls, player] = useRecordPlayer();\r\n    //-------------------------\r\n    const [pageTitle, setPageTitle] = useState(\"Records\");\r\n    const [displaySearch, setSearchDisplaing] = useState(true);\r\n    const history = useHistory();\r\n    const { user, generes } = useParams();\r\n    \r\n\r\n    const queryStr = useLocation().search;\r\n    let { pageSize, page, preloaded } = useMemo(() => {\r\n        const values = queryString.parse(queryStr)\r\n        return {\r\n            pageSize: +values.pageSize,\r\n            page: +values.page,\r\n            preloaded: values.preloaded,\r\n            current: values.current,\r\n        }\r\n    }, [queryStr])\r\n    const [_pageSize, setPageSize] = useState(20);\r\n    const [_page, setPage] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (preloaded && recordsList.length > 0) { return }\r\n\r\n        let pg = page || 0;\r\n        let pgSize = pageSize || _pageSize;\r\n\r\n        const where = {};\r\n        \r\n        if(generes){\r\n            where.genereNames = generes.split(\",\");\r\n        } else {\r\n            if (user) {\r\n                where.nickname = user;\r\n                setPageTitle(user + \" user records\")\r\n                setSearchDisplaing(false);\r\n            } else if (userId && currentUser) {\r\n                where.userId = userId;\r\n                setPageTitle(\"Your records\")\r\n                setSearchDisplaing(false);\r\n            } else {\r\n                setPageTitle(\"Last records\")\r\n            }\r\n        }\r\n\r\n        requestList(pgSize, pg, where);\r\n        setPageSize(pgSize);\r\n        setPage(pg)\r\n\r\n    }, [userId, requestList, _pageSize, page, pageSize, preloaded, setPageTitle, generes])\r\n\r\n    const layoutContext = useContext(LayoutContext);\r\n\r\n    useEffect(() => {\r\n        layoutContext.setFooter(false);\r\n    }, [layoutContext])\r\n\r\n    const getNextPageUrl = useCallback((page,pageSize) => {\r\n        let url = window.location.pathname;\r\n        url +='?pageSize=' + pageSize;\r\n        url +='&page=' + _page;\r\n        let search = window.location.search;\r\n        search = search.replace(/pageSize=\\d+/, '');\r\n        search = search.replace(/page=\\d+/, '');\r\n        search = search.replace('?', '&');\r\n        url += search;\r\n        return url;\r\n    }, [])\r\n\r\n    const changePageSize = useCallback((pageSize) => {\r\n        history.push(getNextPageUrl(_page, pageSize));\r\n    }, [history, _page, getNextPageUrl])\r\n\r\n    const goToPage = useCallback((page) => {\r\n        history.push(getNextPageUrl(page, _pageSize))\r\n    }, [history,  _pageSize, getNextPageUrl])\r\n\r\n    const onSearch = useCallback((queryStr, searchOpt) => {\r\n        let search = '?';\r\n        for(let optName in searchOpt){\r\n            if(!searchOpt[optName]){\r\n                search += 'no-' + optName + '&';\r\n            }\r\n        }\r\n        if(search.length === 1) { search = \"\"};\r\n        if(serach.length > 1 && search.endsWith(\"&\")) { \r\n            search = search.substr(0 , search.length-1)\r\n        } \r\n        history.push('/records/search/' + queryStr + search)\r\n    }, [history])\r\n\r\n    return (\r\n        <div className=\"user-records\">\r\n            {displaySearch  && <RecordSearch onSearch={null}/>}\r\n            <div className=\"user-records-top-bar\">\r\n                <h2 className=\"title\">{pageTitle}</h2>\r\n                <DropdownButton\r\n                    alignRight\r\n                    className=\"btn-pagger\"\r\n                    title={_pageSize + \" on page \"}>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 10)}> 10 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 20)}> 20 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 30)}> 30 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 50)}> 50 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 75)}> 75 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 100)}> 100 </Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n\r\n            <RecordsList\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n            <Pagin\r\n                current={_page}\r\n                call={goToPage}\r\n                all={Math.floor(countAll / _pageSize)} />\r\n            <PlayerControls\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n    userNickname: state.user.nickname,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords)\r\n"]},"metadata":{},"sourceType":"module"}