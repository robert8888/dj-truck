{"ast":null,"code":"import React,{useCallback,useMemo,useRef}from'react';import{Button}from\"react-bootstrap\";import Emoticons from\"./../../common/components/Emoticons/Emoticons\";export default function(){var toggleRef=useRef();var textarea=useRef();var onSelectIcon=useCallback(function(icon,event){event.preventDefault();toggleRef.current();var control=textarea.current;if(!control)return;var before=control.value.substring(0,control.selectionStart);var after=control.value.substring(control.selectionEnd,control.value.length);control.value=before+icon+after;var cursorPosition=before.length+icon.length;control.focus();control.setSelectionRange(cursorPosition,cursorPosition);},[]);var component=useMemo(function(){return function(){return React.createElement(\"div\",{className:\"emoticon\",style:{position:'relative',display:'inline-block',zIndex:'5000'}},React.createElement(Button,{onClick:function onClick(){return toggleRef.current();},className:\"emoticon-btn\"},React.createElement(\"span\",{role:\"img\",\"aria-label\":\"emotiicon\"},\"\\uD83D\\uDE00\")),React.createElement(Emoticons,{toggle:toggleRef,onSelect:onSelectIcon}));};},[toggleRef,onSelectIcon]);return[textarea,component];}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/useEmoticons.js"],"names":["React","useCallback","useMemo","useRef","Button","Emoticons","toggleRef","textarea","onSelectIcon","icon","event","preventDefault","current","control","before","value","substring","selectionStart","after","selectionEnd","length","cursorPosition","focus","setSelectionRange","component","position","display","zIndex"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,OAA7B,CAAsCC,MAAtC,KAAoD,OAApD,CACA,OAASC,MAAT,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,+CAAtB,CAEA,cAAe,WAAU,CACrB,GAAMC,CAAAA,SAAS,CAAGH,MAAM,EAAxB,CACA,GAAMI,CAAAA,QAAQ,CAAGJ,MAAM,EAAvB,CAEA,GAAMK,CAAAA,YAAY,CAAGP,WAAW,CAAC,SAACQ,IAAD,CAAOC,KAAP,CAAiB,CAC9CA,KAAK,CAACC,cAAN,GACAL,SAAS,CAACM,OAAV,GACA,GAAIC,CAAAA,OAAO,CAAGN,QAAQ,CAACK,OAAvB,CACA,GAAG,CAACC,OAAJ,CAAa,OAEb,GAAMC,CAAAA,MAAM,CAAGD,OAAO,CAACE,KAAR,CAAcC,SAAd,CAAwB,CAAxB,CAA2BH,OAAO,CAACI,cAAnC,CAAf,CACA,GAAMC,CAAAA,KAAK,CAAGL,OAAO,CAACE,KAAR,CAAcC,SAAd,CAAwBH,OAAO,CAACM,YAAhC,CAA8CN,OAAO,CAACE,KAAR,CAAcK,MAA5D,CAAd,CAEAP,OAAO,CAACE,KAAR,CAAgBD,MAAM,CAAGL,IAAT,CAAgBS,KAAhC,CAEA,GAAMG,CAAAA,cAAc,CAAGP,MAAM,CAACM,MAAP,CAAgBX,IAAI,CAACW,MAA5C,CACAP,OAAO,CAACS,KAAR,GACAT,OAAO,CAACU,iBAAR,CAA0BF,cAA1B,CAA0CA,cAA1C,EACH,CAd+B,CAc7B,EAd6B,CAAhC,CAiBA,GAAMG,CAAAA,SAAS,CAAGtB,OAAO,CAAC,iBAAM,kBACpB,4BAAK,SAAS,CAAC,UAAf,CAA0B,KAAK,CAAE,CAACuB,QAAQ,CAAE,UAAX,CAAuBC,OAAO,CAAC,cAA/B,CAAgDC,MAAM,CAAC,MAAvD,CAAjC,EACI,oBAAC,MAAD,EAAS,OAAO,CAAG,yBAAMrB,CAAAA,SAAS,CAACM,OAAV,EAAN,EAAnB,CAA+C,SAAS,CAAC,cAAzD,EACI,4BAAM,IAAI,CAAC,KAAX,CAAiB,aAAW,WAA5B,iBADJ,CADJ,CAII,oBAAC,SAAD,EAAW,MAAM,CAAEN,SAAnB,CAA8B,QAAQ,CAAEE,YAAxC,EAJJ,CADoB,EAAN,EAAD,CAOvB,CAACF,SAAD,CAAYE,YAAZ,CAPuB,CAAzB,CASA,MAAO,CAACD,QAAD,CAAWiB,SAAX,CAAP,CACH","sourcesContent":["import React, { useCallback, useMemo, useRef } from 'react';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Emoticons from \"./../../common/components/Emoticons/Emoticons\";\r\n\r\nexport default function(){\r\n    const toggleRef = useRef();\r\n    const textarea = useRef();\r\n\r\n    const onSelectIcon = useCallback((icon, event) => {\r\n        event.preventDefault();\r\n        toggleRef.current();\r\n        let control = textarea.current;\r\n        if(!control) return;\r\n\r\n        const before = control.value.substring(0, control.selectionStart);\r\n        const after = control.value.substring(control.selectionEnd, control.value.length);\r\n\r\n        control.value = before + icon + after;\r\n  \r\n        const cursorPosition = before.length + icon.length;\r\n        control.focus();\r\n        control.setSelectionRange(cursorPosition, cursorPosition)\r\n    }, [])\r\n\r\n\r\n    const component = useMemo(() => () => (\r\n                <div className=\"emoticon\" style={{position: 'relative', display:'inline-block',  zIndex:'5000'}}>\r\n                    <Button  onClick={ () => toggleRef.current() } className='emoticon-btn'>\r\n                        <span role=\"img\" aria-label=\"emotiicon\">ðŸ˜€</span>\r\n                    </Button>\r\n                    <Emoticons toggle={toggleRef} onSelect={onSelectIcon}/>\r\n                </div>)\r\n    , [toggleRef, onSelectIcon])\r\n\r\n    return [textarea, component]\r\n}"]},"metadata":{},"sourceType":"module"}