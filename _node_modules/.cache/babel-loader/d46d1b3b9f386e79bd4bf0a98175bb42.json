{"ast":null,"code":"import STATUS from \"./../observer/STATUS\";\nexport default class Recorder {\n  constructor(mixer) {\n    this.mixer = mixer;\n  }\n\n  action(status, param) {\n    switch (status) {\n      case STATUS.RECORD_START:\n        {\n          this.startRecording(param);\n          break;\n        }\n\n      case STATUS.RECORD_END:\n        {\n          this.endRecording();\n          break;\n        }\n    }\n  }\n\n  startRecording(param) {\n    console.log(\"im start recording\", param);\n  }\n\n  endRecording() {\n    console.log(\"im finish recoriding\");\n  }\n\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/mixer/recorder.js"],"names":["STATUS","Recorder","constructor","mixer","action","status","param","RECORD_START","startRecording","RECORD_END","endRecording","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,eAAe,MAAMC,QAAN,CAAc;AACzBC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,SAAKA,KAAL,GAAaA,KAAb;AAGH;;AAIDC,EAAAA,MAAM,CAACC,MAAD,EAASC,KAAT,EAAe;AACjB,YAAOD,MAAP;AACI,WAAKL,MAAM,CAACO,YAAZ;AAA2B;AACvB,eAAKC,cAAL,CAAoBF,KAApB;AACA;AACH;;AACD,WAAKN,MAAM,CAACS,UAAZ;AAAyB;AACrB,eAAKC,YAAL;AACA;AACH;AARL;AAUH;;AAEDF,EAAAA,cAAc,CAACF,KAAD,EAAO;AACjBK,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCN,KAAlC;AACH;;AAEDI,EAAAA,YAAY,GAAE;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AA5BwB","sourcesContent":["import STATUS from \"./../observer/STATUS\";\r\n\r\nexport default class Recorder{\r\n    constructor(mixer){\r\n        this.mixer = mixer;\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    action(status, param){\r\n        switch(status){\r\n            case STATUS.RECORD_START : {\r\n                this.startRecording(param);\r\n                break;\r\n            } \r\n            case STATUS.RECORD_END : {\r\n                this.endRecording()\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    startRecording(param){\r\n        console.log(\"im start recording\", param)\r\n    }\r\n\r\n    endRecording(){\r\n        console.log(\"im finish recoriding\")\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}