{"ast":null,"code":"import { deleteSelected, ACTIONS } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\"; // import { deleteDir, deletePlaylist } from \"./../../qlQueries/delete\";\n\nimport { get } from \"lodash/object\";\nexport default function* deleteSelectedRequestSaga() {\n  yield takeEvery(ACTIONS.PL_DELETE_SELECTED_REQUEST, handel);\n}\n\nconst getToken = state => state.user.token;\n\nconst getCurrentSelection = state => state.playList.currentSelection;\n\nconst getCurrent = (state, path) => get(state.playList, path);\n\nfunction* handel(action) {\n  const {\n    callQuery,\n    queries\n  } = getApi(\"UserAssets\");\n  const token = yield select(getToken);\n\n  if (!token) {\n    return yield put(deleteSelected());\n  }\n\n  try {\n    yield put(showLoading());\n    const currentSelection = yield select(getCurrentSelection);\n    const current = yield select(getCurrent, currentSelection);\n    const id = current._id;\n    let query;\n\n    if (current._type = \"playlist\") {\n      query = queries.deleteQl.deletePlaylist([id], action.name);\n    } else {\n      // dir\n      query = queries.deleteQl.deleteDir([id], action.name);\n    }\n\n    let res = yield callQuery(query, token);\n    console.log(res);\n\n    if (!res.errors) {\n      let deletedRows = 0;\n\n      if (current._type = \"playlist\") {\n        deletedRows = res.data.deletePlaylist;\n      } else {\n        deletedRows = res.data.deleteDir;\n      }\n\n      if (deletedRows) {\n        yield put(deleteSelected());\n      }\n    }\n\n    yield put(hideLoading());\n  } catch (err) {\n    console.log(\"can't remove element in database, problem with api call\");\n    console.log(err.message);\n  } finally {\n    yield put(hideLoading());\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/deleteSelectedSaga.js"],"names":["deleteSelected","ACTIONS","takeEvery","select","put","getApi","get","deleteSelectedRequestSaga","PL_DELETE_SELECTED_REQUEST","handel","getToken","state","user","token","getCurrentSelection","playList","currentSelection","getCurrent","path","action","callQuery","queries","showLoading","current","id","_id","query","_type","deleteQl","deletePlaylist","name","deleteDir","res","console","log","errors","deletedRows","data","hideLoading","err","message"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,OAAzB,QAAwC,eAAxC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB,C,CACA;;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,eAAe,UAAUC,yBAAV,GAAsC;AACjD,QAAML,SAAS,CAACD,OAAO,CAACO,0BAAT,EAAqCC,MAArC,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,MAAMC,mBAAmB,GAAGH,KAAK,IAAIA,KAAK,CAACI,QAAN,CAAeC,gBAApD;;AAEA,MAAMC,UAAU,GAAG,CAACN,KAAD,EAAQO,IAAR,KAAiBZ,GAAG,CAACK,KAAK,CAACI,QAAP,EAAiBG,IAAjB,CAAvC;;AAEA,UAAUT,MAAV,CAAiBU,MAAjB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBhB,MAAM,CAAC,YAAD,CAArC;AACA,QAAMQ,KAAK,GAAG,MAAMV,MAAM,CAACO,QAAD,CAA1B;;AACA,MAAI,CAACG,KAAL,EAAY;AACR,WAAO,MAAMT,GAAG,CAACJ,cAAc,EAAf,CAAhB;AACH;;AACD,MAAI;AACA,UAAMI,GAAG,CAACkB,WAAW,EAAZ,CAAT;AACA,UAAMN,gBAAgB,GAAG,MAAMb,MAAM,CAACW,mBAAD,CAArC;AACA,UAAMS,OAAO,GAAG,MAAMpB,MAAM,CAACc,UAAD,EAAaD,gBAAb,CAA5B;AAEA,UAAMQ,EAAE,GAAGD,OAAO,CAACE,GAAnB;AAEA,QAAIC,KAAJ;;AACA,QAAIH,OAAO,CAACI,KAAR,GAAgB,UAApB,EAAgC;AAC5BD,MAAAA,KAAK,GAAGL,OAAO,CAACO,QAAR,CAAiBC,cAAjB,CAAgC,CAACL,EAAD,CAAhC,EAAsCL,MAAM,CAACW,IAA7C,CAAR;AACH,KAFD,MAEO;AAAE;AACLJ,MAAAA,KAAK,GAAGL,OAAO,CAACO,QAAR,CAAiBG,SAAjB,CAA2B,CAACP,EAAD,CAA3B,EAAiCL,MAAM,CAACW,IAAxC,CAAR;AACH;;AAED,QAAIE,GAAG,GAAG,MAAMZ,SAAS,CAACM,KAAD,EAAQb,KAAR,CAAzB;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAI,CAACA,GAAG,CAACG,MAAT,EAAiB;AACb,UAAIC,WAAW,GAAG,CAAlB;;AACA,UAAIb,OAAO,CAACI,KAAR,GAAgB,UAApB,EAAgC;AAC5BS,QAAAA,WAAW,GAAGJ,GAAG,CAACK,IAAJ,CAASR,cAAvB;AACH,OAFD,MAEO;AACHO,QAAAA,WAAW,GAAGJ,GAAG,CAACK,IAAJ,CAASN,SAAvB;AACH;;AACD,UAAIK,WAAJ,EAAiB;AACb,cAAMhC,GAAG,CAACJ,cAAc,EAAf,CAAT;AACH;AAEJ;;AACD,UAAMI,GAAG,CAACkC,WAAW,EAAZ,CAAT;AACH,GA7BD,CA6BE,OAAOC,GAAP,EAAY;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB;AACH,GAhCD,SAgCU;AACN,UAAMpC,GAAG,CAACkC,WAAW,EAAZ,CAAT;AACH;AACJ","sourcesContent":["import { deleteSelected, ACTIONS } from \"../../actions\";\r\nimport { takeEvery, select, put } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n// import { deleteDir, deletePlaylist } from \"./../../qlQueries/delete\";\r\nimport { get } from \"lodash/object\";\r\n\r\nexport default function* deleteSelectedRequestSaga() {\r\n    yield takeEvery(ACTIONS.PL_DELETE_SELECTED_REQUEST, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nconst getCurrentSelection = state => state.playList.currentSelection;\r\n\r\nconst getCurrent = (state, path) => get(state.playList, path);\r\n\r\nfunction* handel(action) {\r\n    const { callQuery, queries } = getApi(\"UserAssets\");\r\n    const token = yield select(getToken);\r\n    if (!token) {\r\n        return yield put(deleteSelected());\r\n    }\r\n    try {\r\n        yield put(showLoading());\r\n        const currentSelection = yield select(getCurrentSelection);\r\n        const current = yield select(getCurrent, currentSelection);\r\n\r\n        const id = current._id;\r\n\r\n        let query;\r\n        if (current._type = \"playlist\") {\r\n            query = queries.deleteQl.deletePlaylist([id], action.name)\r\n        } else { // dir\r\n            query = queries.deleteQl.deleteDir([id], action.name)\r\n        }\r\n\r\n        let res = yield callQuery(query, token);\r\n        console.log(res)\r\n        if (!res.errors) {\r\n            let deletedRows = 0;\r\n            if (current._type = \"playlist\") {\r\n                deletedRows = res.data.deletePlaylist;\r\n            } else {\r\n                deletedRows = res.data.deleteDir;\r\n            }\r\n            if (deletedRows) {\r\n                yield put(deleteSelected());\r\n            }\r\n\r\n        }\r\n        yield put(hideLoading())\r\n    } catch (err) {\r\n        console.log(\"can't remove element in database, problem with api call\");\r\n        console.log(err.message);\r\n    } finally {\r\n        yield put(hideLoading())\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}