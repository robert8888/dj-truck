{"ast":null,"code":"import { ACTIONS } from \"../actions\";\nimport { setUserProfileWithToken } from \"./../actions\";\nimport { put, call, select, takeEvery } from 'redux-saga/effects';\nimport { getToken } from \"./../utils/auth/token\";\nimport { getApi } from \"./../apis/apiProvider\";\n\nconst getLogged = state => state.user.logged;\n\nexport default function* watcher() {\n  //action dispatched in auth0/react-auth0-spa.js\n  yield takeEvery(ACTIONS.SET_USER_PROFILE, setUserProfile);\n}\n\nfunction* setUserProfile(action) {\n  const logged = yield select(getLogged);\n\n  if (logged) {\n    return;\n  }\n\n  console.log(\"call for user data\");\n  const {\n    callQuery,\n    queries\n  } = getApi(\"UserAssets\");\n  const query = queries.myIdQl;\n  const token = yield call(getToken);\n  const result = yield callQuery(query, token);\n\n  if (!result.errors) {\n    var _result$data, _result$data$me;\n\n    action.user.dbId = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$me = _result$data.me) === null || _result$data$me === void 0 ? void 0 : _result$data$me.id;\n  }\n\n  yield put(setUserProfileWithToken(action.user, token));\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/setUserSaga.js"],"names":["ACTIONS","setUserProfileWithToken","put","call","select","takeEvery","getToken","getApi","getLogged","state","user","logged","watcher","SET_USER_PROFILE","setUserProfile","action","console","log","callQuery","queries","query","myIdQl","token","result","errors","dbId","data","me","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,uBAAT,QAAwC,cAAxC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,oBAA7C;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,MAAtC;;AAEA,eAAe,UAAUC,OAAV,GAAoB;AAC/B;AACA,QAAMP,SAAS,CAACL,OAAO,CAACa,gBAAT,EAA2BC,cAA3B,CAAf;AACH;;AAED,UAAUA,cAAV,CAAyBC,MAAzB,EAAiC;AAC7B,QAAMJ,MAAM,GAAG,MAAMP,MAAM,CAACI,SAAD,CAA3B;;AACA,MAAIG,MAAJ,EAAY;AACR;AACH;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBZ,MAAM,CAAC,YAAD,CAArC;AACA,QAAMa,KAAK,GAAGD,OAAO,CAACE,MAAtB;AACA,QAAMC,KAAK,GAAG,MAAMnB,IAAI,CAACG,QAAD,CAAxB;AACA,QAAMiB,MAAM,GAAG,MAAML,SAAS,CAACE,KAAD,EAAQE,KAAR,CAA9B;;AAEA,MAAG,CAACC,MAAM,CAACC,MAAX,EAAkB;AAAA;;AACdT,IAAAA,MAAM,CAACL,IAAP,CAAYe,IAAZ,GAAmBF,MAAnB,aAAmBA,MAAnB,uCAAmBA,MAAM,CAAEG,IAA3B,oEAAmB,aAAcC,EAAjC,oDAAmB,gBAAkBC,EAArC;AACH;;AAED,QAAM1B,GAAG,CAACD,uBAAuB,CAACc,MAAM,CAACL,IAAR,EAAcY,KAAd,CAAxB,CAAT;AACH","sourcesContent":["import { ACTIONS } from \"../actions\";\r\nimport { setUserProfileWithToken } from \"./../actions\";\r\nimport { put, call, select, takeEvery } from 'redux-saga/effects';\r\nimport { getToken } from \"./../utils/auth/token\";\r\nimport { getApi } from \"./../apis/apiProvider\";\r\n\r\nconst getLogged = state => state.user.logged;\r\n\r\nexport default function* watcher() {\r\n    //action dispatched in auth0/react-auth0-spa.js\r\n    yield takeEvery(ACTIONS.SET_USER_PROFILE, setUserProfile);\r\n}\r\n\r\nfunction* setUserProfile(action) {\r\n    const logged = yield select(getLogged);\r\n    if (logged) {\r\n        return\r\n    }\r\n    console.log(\"call for user data\")\r\n    const { callQuery, queries } = getApi(\"UserAssets\");\r\n    const query = queries.myIdQl;\r\n    const token = yield call(getToken);\r\n    const result = yield callQuery(query, token);\r\n\r\n    if(!result.errors){\r\n        action.user.dbId = result?.data?.me?.id;\r\n    }\r\n\r\n    yield put(setUserProfileWithToken(action.user, token))\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}