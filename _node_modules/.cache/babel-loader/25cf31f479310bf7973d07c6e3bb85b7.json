{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\PlayListExplorer\\\\Explorer\\\\ExplorerTree\\\\ExplorerTree.js\";\nimport React, { useCallback, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./explorer-tree.scss\";\nimport { toggleDir, setSelection } from \"./../../../../../../actions\";\nimport { isEmpty, sortObj } from \"./../../../../../../utils/objects/helpers\";\nimport UUID from \"uuidjs\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ClassName from \"classnames\";\nimport { faFolder, faFile, faAngleRight, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ExplorerTree = props => {\n  const toogleDir = useCallback(path => {\n    console.log(\"doubel clicked\");\n    props.toogleDir(path);\n  }, [props.toogleDir]);\n  const setSelection = useCallback(path => {\n    props.setSelection(path);\n  }, [props.setSelection]);\n  const [lastClick, setLastClick] = useState(null);\n  const [timerHandler, setTimerHandler] = useState(null);\n  const liClickHandler = useCallback(path => {\n    if (timerHandler === null) {\n      setTimerHandler(setTimeout(() => {\n        setSelection.bind(null, path);\n      }), 500);\n    }\n  }, [setLastClick, setTimerHandler, lastClick, timerHandler]);\n  const getDirElement = useCallback((name, path, open, empty) => {\n    const liClassList = ClassName(\"list-item item-dir\", {\n      \"item-dir--empty\": empty\n    }, {\n      \"item--selected\": [...path, name].join(\"\") === props.currentSelection.join(\"\")\n    });\n    return React.createElement(\"li\", {\n      // onDoubleClick={e=>console.log(\"a\")}\n      onClick: liClickHandler([...path, name]),\n      className: liClassList,\n      \"data-path\": path.join(\"/\"),\n      key: UUID.genV1(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, !empty && React.createElement(\"button\", {\n      className: \"btn-dir \" + (open ? \"btn-dir--expand\" : \"btn-dir--colapse\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"icon\",\n      icon: open ? faAngleDown : faAngleRight,\n      onClick: toogleDir.bind(null, [...path, name]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(FontAwesomeIcon, {\n      className: \"icon icon-dir\",\n      icon: faFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), name);\n  });\n  const getFileElement = useCallback((name, path) => {\n    const liClassList = ClassName(\"list-item item-file\", {\n      \"item--selected\": [...path, name].join(\"\") === props.currentSelection.join(\"\")\n    });\n    return React.createElement(\"li\", {\n      className: liClassList,\n      onClick: setSelection.bind(null, [...path, name]),\n      \"data-path\": path.join(\"/\"),\n      key: UUID.genV1(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"icon icon-file\",\n      icon: faFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), name);\n  });\n  const renderDirElements = useCallback((name, content, path) => {\n    content = sortObj(content);\n\n    if (content instanceof Array) {\n      return getFileElement(name, path);\n    } else {\n      if (content._open === true) {\n        return React.createElement(Fragment, {\n          key: UUID.genV1(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, getDirElement(name, path, true), renderDir(content, [...path, name]));\n      } else {\n        if (isEmpty(content)) {\n          return getDirElement(name, path, false, true);\n        }\n\n        return getDirElement(name, path, false);\n      }\n    }\n  });\n  const renderDir = useCallback((dir, path) => {\n    return React.createElement(\"ul\", {\n      className: \"list-dir dir-content\",\n      key: UUID.generate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, Object.entries(dir).map(([name, content]) => {\n      if (name === \"_open\") {\n        return null;\n      }\n\n      return renderDirElements(name, content, path);\n    }));\n  });\n  return React.createElement(\"div\", {\n    className: \"explorer-tree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, renderDir(props.root, ['root']));\n};\n\nconst mapStateToProps = state => ({\n  root: state.playList.root,\n  currentSelection: state.playList.currentSelection\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toogleDir: path => dispatch(toggleDir(path)),\n  setSelection: path => dispatch(setSelection(path))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorerTree);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/PlayListExplorer/Explorer/ExplorerTree/ExplorerTree.js"],"names":["React","useCallback","Fragment","connect","toggleDir","setSelection","isEmpty","sortObj","UUID","FontAwesomeIcon","ClassName","faFolder","faFile","faAngleRight","faAngleDown","ExplorerTree","props","toogleDir","path","console","log","lastClick","setLastClick","useState","timerHandler","setTimerHandler","liClickHandler","setTimeout","bind","getDirElement","name","open","empty","liClassList","join","currentSelection","genV1","getFileElement","renderDirElements","content","Array","_open","renderDir","dir","generate","Object","entries","map","root","mapStateToProps","state","playList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useCallback, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./explorer-tree.scss\";\r\nimport { toggleDir, setSelection} from \"./../../../../../../actions\"\r\nimport { isEmpty, sortObj } from \"./../../../../../../utils/objects/helpers\";\r\nimport UUID from \"uuidjs\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ClassName from \"classnames\";\r\nimport { faFolder,  faFile, faAngleRight, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ExplorerTree = props => {\r\n\r\n    const toogleDir = useCallback((path) => {\r\n        console.log(\"doubel clicked\")\r\n        props.toogleDir(path);\r\n    }, [props.toogleDir])\r\n\r\n    const setSelection = useCallback((path)=>{\r\n        props.setSelection(path);\r\n    }, [props.setSelection])\r\n\r\n    const [lastClick, setLastClick] = useState(null);\r\n    const [timerHandler, setTimerHandler] = useState(null);\r\n    const liClickHandler = useCallback((path)=>{\r\n        if(timerHandler === null){\r\n            setTimerHandler(setTimeout(()=>{\r\n                setSelection.bind(null, path)\r\n            }), 500)\r\n        }\r\n    }, [setLastClick, setTimerHandler, lastClick, timerHandler])\r\n\r\n    const getDirElement = useCallback((name, path, open, empty) => {\r\n        const liClassList = ClassName(\r\n            \"list-item item-dir\",\r\n            {\"item-dir--empty\" : empty},\r\n            {\"item--selected\": [...path, name].join(\"\") === props.currentSelection.join(\"\")}\r\n        )\r\n        return (\r\n            <li\r\n               // onDoubleClick={e=>console.log(\"a\")}\r\n                onClick={liClickHandler([...path, name])}\r\n                className={liClassList}\r\n                data-path={path.join(\"/\")}\r\n                key={UUID.genV1()}>\r\n                {!empty &&\r\n                    <button\r\n                        className={\"btn-dir \" + ((open) ? \"btn-dir--expand\" : \"btn-dir--colapse\")}>\r\n                        <FontAwesomeIcon \r\n                            className=\"icon\" \r\n                            icon={(open) ? faAngleDown : faAngleRight } \r\n                            onClick={toogleDir.bind(null, [...path, name])}/>\r\n                    </button>}\r\n                    <FontAwesomeIcon className=\"icon icon-dir\" icon={faFolder} />\r\n                    {name}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const getFileElement = useCallback((name, path) => {\r\n        const liClassList = ClassName(\r\n            \"list-item item-file\",\r\n            {\"item--selected\": [...path, name].join(\"\") === props.currentSelection.join(\"\")}\r\n        )\r\n        return (\r\n            <li\r\n                className={liClassList}\r\n                onClick={setSelection.bind(null, [...path, name])}\r\n                data-path={path.join(\"/\")}\r\n                key={UUID.genV1()}>\r\n                <FontAwesomeIcon className=\"icon icon-file\" icon={faFile} />\r\n                {name}\r\n            </li>\r\n        );\r\n    })\r\n\r\n    const renderDirElements = useCallback((name, content, path) => {\r\n        content = sortObj(content);\r\n        if (content instanceof Array) {\r\n            return getFileElement(name, path)\r\n        } else {\r\n            if (content._open === true) {\r\n                return (\r\n                    <Fragment key={UUID.genV1()}>\r\n                        {getDirElement(name, path, true)}\r\n                        {renderDir(content, [...path, name])}\r\n                    </Fragment>\r\n                )\r\n            } else {\r\n                if (isEmpty(content)) {\r\n                    return getDirElement(name, path, false, true)\r\n                }\r\n                return getDirElement(name, path, false)\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    const renderDir = useCallback((dir, path) => {\r\n        return (\r\n            <ul className=\"list-dir dir-content\" key={UUID.generate()}>\r\n                {\r\n                    Object.entries(dir).map(([name, content]) => {\r\n                        if (name === \"_open\") {\r\n                            return null;\r\n                        }\r\n                        return renderDirElements(name, content, path);\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"explorer-tree\">\r\n            {renderDir(props.root, ['root'])}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    root: state.playList.root,\r\n    currentSelection : state.playList.currentSelection\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toogleDir: path => dispatch(toggleDir(path)),\r\n    setSelection : path => dispatch(setSelection(path))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorerTree);"]},"metadata":{},"sourceType":"module"}