{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\UserProfile\\\\Edit\\\\Edit.js\";\nimport React, { useMemo, useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./edit.scss\";\n\nconst Edit = ({\n  active,\n  type,\n  children\n}) => {\n  const [editMode, setEditMode] = useState(false);\n  const buttonClasses = useMemo(() => classNames('edit-btn', {\n    \"edit-btn--active\": active,\n    \"edit-btn-before\": type.startsWith(\"text\"),\n    \"edit-btn-over\": type === \"image\"\n  }), [active]);\n  const catchBtnRef = useCallback(ref => {\n    ref.parentElement.classList.add(\"relative\");\n  }, []);\n  console.log(\"chioldren\", children);\n  const content = useMemo(() => {\n    if (!editMode) {\n      return children;\n    } else {\n      switch (type) {\n        case \"image\":\n          {\n            return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n              type: \"file\",\n              style: {\n                display: none\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32\n              },\n              __self: this\n            }), children);\n          }\n\n        case \"text\":\n          return children;\n\n        case \"textarea\":\n          return children;\n      }\n    }\n  }, [children, editMode]);\n  return React.createElement(React.Fragment, null, active && React.createElement(\"button\", {\n    className: buttonClasses,\n    ref: catchBtnRef,\n    onClick: setEditMode.bind(null, edit => !edit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faPen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), content);\n};\n\nexport default Edit;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/UserProfile/Edit/Edit.js"],"names":["React","useMemo","useCallback","useState","classNames","FontAwesomeIcon","faPen","Edit","active","type","children","editMode","setEditMode","buttonClasses","startsWith","catchBtnRef","ref","parentElement","classList","add","console","log","content","display","none","bind","edit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,mCAAtB;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAAD,KAAgC;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMU,aAAa,GAAGZ,OAAO,CAAC,MAAMG,UAAU,CAC1C,UAD0C,EAE1C;AACI,wBAAoBI,MADxB;AAEI,uBAAoBC,IAAI,CAACK,UAAL,CAAgB,MAAhB,CAFxB;AAGI,qBAAkBL,IAAI,KAAK;AAH/B,GAF0C,CAAjB,EAO1B,CAACD,MAAD,CAP0B,CAA7B;AASA,QAAMO,WAAW,GAAGb,WAAW,CAAEc,GAAD,IAAS;AACrCA,IAAAA,GAAG,CAACC,aAAJ,CAAkBC,SAAlB,CAA4BC,GAA5B,CAAgC,UAAhC;AACH,GAF8B,EAE5B,EAF4B,CAA/B;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,QAAzB;AAEA,QAAMY,OAAO,GAAGrB,OAAO,CAAC,MAAI;AACxB,QAAG,CAACU,QAAJ,EAAc;AACV,aAAOD,QAAP;AACH,KAFD,MAEO;AACH,cAAQD,IAAR;AACI,aAAK,OAAL;AAAc;AACV,mBACI,0CACA;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAE;AAACc,gBAAAA,OAAO,EAACC;AAAT,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECd,QAFD,CADJ;AAMH;;AACD,aAAK,MAAL;AAAa,iBAAOA,QAAP;;AACb,aAAK,UAAL;AAAiB,iBAAOA,QAAP;AAVrB;AAaH;AACJ,GAlBsB,EAkBpB,CAACA,QAAD,EAAWC,QAAX,CAlBoB,CAAvB;AAoBA,SACI,0CACKH,MAAM,IACH;AACI,IAAA,SAAS,EAAEK,aADf;AAEI,IAAA,GAAG,EAAEE,WAFT;AAGI,IAAA,OAAO,EAAEH,WAAW,CAACa,IAAZ,CAAiB,IAAjB,EAAuBC,IAAI,IAAI,CAACA,IAAhC,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIQ,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEpB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAFR,EASKgB,OATL,CADJ;AAaH,CAlDD;;AAoDA,eAAef,IAAf","sourcesContent":["import React, { useMemo, useCallback, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./edit.scss\";\r\n\r\nconst Edit = ({ active, type, children }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const buttonClasses = useMemo(() => classNames(\r\n        'edit-btn',\r\n        {\r\n            \"edit-btn--active\": active,\r\n            \"edit-btn-before\": (type.startsWith(\"text\")),\r\n            \"edit-btn-over\": (type === \"image\"),\r\n        }\r\n    ), [active])\r\n\r\n    const catchBtnRef = useCallback((ref) => {\r\n        ref.parentElement.classList.add(\"relative\");\r\n    }, [])\r\n    console.log(\"chioldren\", children)\r\n\r\n    const content = useMemo(()=>{\r\n        if(!editMode) {\r\n            return children;\r\n        } else {\r\n            switch (type)  {\r\n                case \"image\": {\r\n                    return (\r\n                        <>\r\n                        <input type=\"file\" style={{display:none}}/>\r\n                        {children}\r\n                        </>\r\n                    )\r\n                }\r\n                case \"text\": return children;\r\n                case \"textarea\": return children;\r\n            }\r\n\r\n        }\r\n    }, [children, editMode])\r\n\r\n    return (\r\n        <>\r\n            {active && \r\n                <button \r\n                    className={buttonClasses} \r\n                    ref={catchBtnRef}\r\n                    onClick={setEditMode.bind(null, edit => !edit)}>\r\n                        <FontAwesomeIcon icon={faPen} />\r\n                </button>\r\n            }\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Edit;"]},"metadata":{},"sourceType":"module"}