{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\ProgressSlider\\\\ProgressSlider.js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { toRange } from \"./../../../../../utils/math/argRanges\";\nimport { formater } from \"./../../../../../utils/time/timeFromater\";\nimport useWindowSize from \"./../../../Hooks/useWindowSize\";\nimport \"./progress-slider.scss\"; //horizontal\n\nconst ProgressSlider = ({\n  player,\n  seek\n}) => {\n  const [progress, setProgress] = useState(0);\n  const [buffered, setBuffred] = useState(0);\n  const [currentRecord, setCurrentRecord] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentDuration, setCurrentDuration] = useState(0);\n  const isDragged = useRef();\n  const seekTarget = useRef();\n  const progressRef = useRef();\n  const durationRef = useRef();\n  const sliderArea = useRef(null);\n  const sliderThumb = useRef(null);\n  const sliderProgress = useRef(null);\n  const sliderBufferd = useRef(null);\n  const sliderTimePreview = useRef(null);\n  const sliderAreaRectCached = useRef();\n  const thumbAreaRectCached = useRef();\n  const [windowWidth] = useWindowSize();\n  const getSliderAreaRect = useCallback(() => {\n    if (!sliderAreaRectCached.current) {\n      sliderAreaRectCached.current = sliderArea.current.getBoundingClientRect();\n    }\n\n    return sliderAreaRectCached.current;\n  }, [sliderArea, sliderAreaRectCached]);\n  const getThumbAreaRect = useCallback(() => {\n    if (!thumbAreaRectCached.current) {\n      thumbAreaRectCached.current = sliderThumb.current.getBoundingClientRect();\n    }\n\n    return thumbAreaRectCached.current;\n  }, [sliderThumb, thumbAreaRectCached]); // const refrehsRects = useCallback(()=>{\n  //     sliderAreaRectCached.current = null;\n  //     thumbAreaRectCached.current = null;\n  // },[ sliderAreaRectCached, thumbAreaRectCached])\n\n  const setThumbPosition = useCallback(progress => {\n    let position = 0;\n    const sliderAreaRect = getSliderAreaRect();\n    const thumbRect = getThumbAreaRect();\n    position = sliderAreaRect.width * progress;\n    sliderProgress.current.style.transform = `scaleX(${position}) translateX(50%)`;\n    position -= thumbRect.width / 2;\n    sliderThumb.current.style.transform = `translateX(${position}px)`;\n  }, [sliderThumb, getSliderAreaRect, getThumbAreaRect]);\n  const setBuffredPosition = useCallback(buffered => {\n    const sliderAreaRect = getSliderAreaRect();\n\n    if (!sliderAreaRect) {\n      return;\n    }\n\n    const position = sliderAreaRect.width * buffered;\n    sliderBufferd.current.style.transform = `scaleX(${position}) translateX(50%)`;\n  }, [sliderBufferd, getSliderAreaRect]);\n  useEffect(() => {\n    setBuffredPosition(buffered);\n  }, [buffered, setBuffredPosition]);\n  useEffect(() => {\n    setCurrentTime(currentDuration * progress);\n    setThumbPosition(progress);\n  }, [progress, currentDuration, setCurrentTime, setThumbPosition]);\n  const refreshBuffered = useCallback(() => setBuffredPosition(buffered), [buffered, setBuffredPosition]);\n  const refreshProgress = useCallback(() => setThumbPosition(progress), [progress, setThumbPosition]);\n  useEffect(() => {\n    refreshBuffered();\n    refreshProgress();\n  }, [windowWidth, refreshBuffered, refreshProgress]);\n  const setProgressHandler = useCallback(progress => {\n    if (!isDragged.current) {\n      setProgress(progress);\n      progressRef.current = progress;\n    }\n  }, [isDragged, progressRef]);\n  const getProgress = useCallback(() => {\n    return {\n      progress: progressRef.current,\n      duration: durationRef.current\n    };\n  }, [progressRef, durationRef]);\n  useEffect(() => {\n    if (currentRecord) {\n      setCurrentDuration(currentRecord.duration);\n      durationRef.current = currentRecord.duration;\n    }\n  }, [currentRecord, setCurrentDuration, durationRef]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.subscribeProgress('#', setProgressHandler);\n    player.subscribeCurrent(setCurrentRecord);\n    player.subscribeBuffred(setBuffred);\n    player.addProgressProvider(\"#\", getProgress);\n    setCurrentRecord(player.getCurrent());\n    return () => {\n      player.unSubscribeProgress('#', setProgressHandler);\n      player.unSubscribeCurrent(setCurrentRecord);\n      player.unSubscribeBuffered(setBuffred);\n      player.removeProgressProvider(\"#\", getProgress);\n    };\n  }, [player, setProgressHandler, getProgress]);\n  const thumbDraging = useCallback((areaRect, e) => {\n    const x = e.clientX - areaRect.left;\n    let progress = x / areaRect.width;\n    progress = toRange(progress, 0, 1);\n    seekTarget.current = progress;\n    setProgress(progress);\n  }, []);\n  const thumbMouseDown = useCallback(e => {\n    if (currentDuration === 0) {\n      return;\n    }\n\n    const sliderAreaRect = getSliderAreaRect();\n    const thumbDragingWithArgs = thumbDraging.bind(null, sliderAreaRect);\n    isDragged.current = true;\n\n    const mouseup = () => {\n      window.removeEventListener('mouseup', mouseup);\n      window.removeEventListener('mousemove', thumbDragingWithArgs);\n      isDragged.current = false;\n      seek({\n        progress: seekTarget.current\n      });\n      seekTarget.current = null;\n    };\n\n    window.addEventListener('mousemove', thumbDragingWithArgs);\n    window.addEventListener('mouseup', mouseup);\n  }, [thumbDraging, isDragged, seek, seekTarget, currentDuration, getSliderAreaRect]);\n  const areaMouseDown = useCallback(e => {\n    const sliderAreaRect = getSliderAreaRect();\n    const thumbRect = getThumbAreaRect();\n\n    if (e.target === sliderThumb.current) {\n      return;\n    }\n\n    const x = e.clientX - sliderAreaRect.left + thumbRect.width / 2;\n    let progress = x / sliderAreaRect.width;\n    progress = toRange(progress, 0, 1);\n    seek({\n      progress\n    });\n  }, [seek, getSliderAreaRect, getThumbAreaRect]);\n  const areaMouseMove = useCallback(e => {\n    const sliderAreaRect = getSliderAreaRect();\n    const thumbRect = getThumbAreaRect();\n    const x = e.clientX - sliderAreaRect.left + thumbRect.width / 2;\n    let progress = x / sliderAreaRect.width;\n    progress = toRange(progress, 0, 1);\n    const time = currentDuration * progress;\n    const str = formater.secondsToStr(time / 1000);\n    sliderTimePreview.current.dataset.value = time ? str : \"\";\n    sliderTimePreview.current.style.transform = `translateX(${x}px)`;\n  }, [currentDuration, sliderTimePreview, getSliderAreaRect, getThumbAreaRect]);\n  const areaMouseEnter = useCallback(e => {\n    sliderTimePreview.current.classList.add(\"preview--visible\");\n  }, [sliderTimePreview]);\n  const areaMouseLeave = useCallback(e => {\n    sliderTimePreview.current.classList.remove(\"preview--visible\");\n  }, [sliderTimePreview]);\n  return React.createElement(\"div\", {\n    className: \"seek-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-time time-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, formater.secondsToStr(currentTime / 1000))), React.createElement(\"div\", {\n    className: \"slider-active-area\",\n    ref: sliderArea,\n    onMouseDown: areaMouseDown,\n    onMouseEnter: areaMouseEnter,\n    onMouseLeave: areaMouseLeave,\n    onMouseMove: areaMouseMove,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-buffered\",\n    ref: sliderBufferd,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-progress\",\n    ref: sliderProgress,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-thumb\",\n    ref: sliderThumb,\n    onMouseDown: thumbMouseDown,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-time-preview\",\n    ref: sliderTimePreview,\n    \"data-value\": \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"slider-time time-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, formater.secondsToStr(currentDuration / 1000))));\n};\n\nexport default ProgressSlider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/ProgressSlider/ProgressSlider.js"],"names":["React","useCallback","useEffect","useRef","useState","toRange","formater","useWindowSize","ProgressSlider","player","seek","progress","setProgress","buffered","setBuffred","currentRecord","setCurrentRecord","currentTime","setCurrentTime","currentDuration","setCurrentDuration","isDragged","seekTarget","progressRef","durationRef","sliderArea","sliderThumb","sliderProgress","sliderBufferd","sliderTimePreview","sliderAreaRectCached","thumbAreaRectCached","windowWidth","getSliderAreaRect","current","getBoundingClientRect","getThumbAreaRect","setThumbPosition","position","sliderAreaRect","thumbRect","width","style","transform","setBuffredPosition","refreshBuffered","refreshProgress","setProgressHandler","getProgress","duration","subscribeProgress","subscribeCurrent","subscribeBuffred","addProgressProvider","getCurrent","unSubscribeProgress","unSubscribeCurrent","unSubscribeBuffered","removeProgressProvider","thumbDraging","areaRect","e","x","clientX","left","thumbMouseDown","thumbDragingWithArgs","bind","mouseup","window","removeEventListener","addEventListener","areaMouseDown","target","areaMouseMove","time","str","secondsToStr","dataset","value","areaMouseEnter","classList","add","areaMouseLeave","remove"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { toRange } from \"./../../../../../utils/math/argRanges\";\r\nimport { formater } from \"./../../../../../utils/time/timeFromater\";\r\nimport useWindowSize from \"./../../../Hooks/useWindowSize\";\r\nimport \"./progress-slider.scss\";\r\n\r\n//horizontal\r\nconst ProgressSlider = ({ player, seek}) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [buffered, setBuffred] = useState(0);\r\n    const [currentRecord, setCurrentRecord] = useState(null);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [currentDuration, setCurrentDuration] = useState(0);\r\n    const isDragged = useRef();\r\n    const seekTarget = useRef();\r\n    const progressRef = useRef();\r\n    const durationRef = useRef();\r\n\r\n    const sliderArea = useRef(null);\r\n    const sliderThumb = useRef(null);\r\n    const sliderProgress = useRef(null);\r\n    const sliderBufferd = useRef(null);\r\n    const sliderTimePreview = useRef(null);\r\n\r\n    const sliderAreaRectCached = useRef();\r\n    const thumbAreaRectCached = useRef();\r\n\r\n    const [ windowWidth, ] = useWindowSize();\r\n\r\n    const getSliderAreaRect = useCallback(()=>{\r\n        if(!sliderAreaRectCached.current){\r\n            sliderAreaRectCached.current = sliderArea.current.getBoundingClientRect();\r\n        }\r\n        return sliderAreaRectCached.current;\r\n    }, [sliderArea, sliderAreaRectCached])\r\n\r\n    const getThumbAreaRect = useCallback(()=>{\r\n        if(!thumbAreaRectCached.current){\r\n            thumbAreaRectCached.current = sliderThumb.current.getBoundingClientRect();\r\n        }\r\n        return thumbAreaRectCached.current;\r\n    }, [sliderThumb, thumbAreaRectCached])\r\n\r\n    // const refrehsRects = useCallback(()=>{\r\n    //     sliderAreaRectCached.current = null;\r\n    //     thumbAreaRectCached.current = null;\r\n    // },[ sliderAreaRectCached, thumbAreaRectCached])\r\n\r\n    const setThumbPosition = useCallback((progress)=>{\r\n        let position = 0;\r\n        const sliderAreaRect = getSliderAreaRect();\r\n        const thumbRect = getThumbAreaRect();\r\n        position = sliderAreaRect.width * progress ;\r\n        sliderProgress.current.style.transform = `scaleX(${position}) translateX(50%)`;\r\n        position -= (thumbRect.width / 2) ;  \r\n        sliderThumb.current.style.transform = `translateX(${position}px)`;\r\n    }, [sliderThumb, getSliderAreaRect, getThumbAreaRect])\r\n\r\n    const setBuffredPosition = useCallback((buffered) => {\r\n        const sliderAreaRect = getSliderAreaRect();\r\n        if(!sliderAreaRect){\r\n            return;\r\n        }\r\n        const position = sliderAreaRect.width * buffered;\r\n        sliderBufferd.current.style.transform = `scaleX(${position}) translateX(50%)`;\r\n    }, [sliderBufferd, getSliderAreaRect])\r\n\r\n    useEffect(()=>{\r\n        setBuffredPosition(buffered)\r\n    }, [buffered, setBuffredPosition])\r\n\r\n    useEffect(()=>{\r\n        setCurrentTime(currentDuration * progress);\r\n        setThumbPosition(progress);\r\n     }, [progress, currentDuration, setCurrentTime, setThumbPosition])\r\n\r\n    const refreshBuffered = useCallback(\r\n            () => setBuffredPosition(buffered), \r\n            [buffered, setBuffredPosition]\r\n        );\r\n        \r\n    const refreshProgress = useCallback(\r\n            () => setThumbPosition(progress), \r\n            [progress, setThumbPosition]\r\n        )\r\n\r\n    useEffect(()=>{\r\n        refreshBuffered();\r\n        refreshProgress();\r\n    },[windowWidth, refreshBuffered, refreshProgress])\r\n\r\n\r\n    const setProgressHandler = useCallback((progress)=>{\r\n        if(!isDragged.current){\r\n            setProgress(progress);\r\n            progressRef.current = progress\r\n        }\r\n    }, [isDragged, progressRef])\r\n\r\n    const getProgress = useCallback(()=>{\r\n        return {\r\n            progress: progressRef.current,\r\n            duration: durationRef.current,\r\n        };\r\n    }, [progressRef, durationRef])\r\n\r\n    useEffect(()=>{\r\n        if(currentRecord){\r\n           setCurrentDuration(currentRecord.duration);\r\n           durationRef.current = currentRecord.duration;\r\n        }\r\n    }, [currentRecord, setCurrentDuration, durationRef])\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n\r\n        player.subscribeProgress('#', setProgressHandler);\r\n        player.subscribeCurrent(setCurrentRecord);\r\n        player.subscribeBuffred(setBuffred);\r\n        player.addProgressProvider(\"#\", getProgress)\r\n        setCurrentRecord(player.getCurrent());\r\n        return () => {\r\n            player.unSubscribeProgress('#', setProgressHandler);\r\n            player.unSubscribeCurrent(setCurrentRecord);\r\n            player.unSubscribeBuffered(setBuffred);\r\n            player.removeProgressProvider(\"#\", getProgress)\r\n        }\r\n    }, [player, setProgressHandler, getProgress])\r\n\r\n    const thumbDraging = useCallback( (areaRect, e) => {\r\n       const x = e.clientX - areaRect.left;\r\n       let progress = x / areaRect.width;\r\n       progress = toRange(progress, 0 ,1);\r\n       seekTarget.current = progress;\r\n       setProgress(progress)\r\n    }, [])\r\n\r\n    const thumbMouseDown = useCallback((e)=>{\r\n        if(currentDuration === 0){\r\n            return;\r\n        }\r\n        const sliderAreaRect = getSliderAreaRect();\r\n        const thumbDragingWithArgs = thumbDraging.bind(null, sliderAreaRect)\r\n        isDragged.current = true;\r\n        const mouseup = () => {\r\n            window.removeEventListener('mouseup', mouseup);\r\n            window.removeEventListener('mousemove', thumbDragingWithArgs);\r\n            isDragged.current = false;\r\n            seek({progress : seekTarget.current});\r\n            seekTarget.current = null;\r\n        }\r\n        window.addEventListener('mousemove', thumbDragingWithArgs)\r\n        window.addEventListener('mouseup', mouseup)\r\n    }, [thumbDraging, \r\n        isDragged,\r\n        seek, \r\n        seekTarget, \r\n        currentDuration,\r\n        getSliderAreaRect\r\n    ])\r\n\r\n    const areaMouseDown = useCallback((e)=>{\r\n        const sliderAreaRect = getSliderAreaRect();\r\n        const thumbRect = getThumbAreaRect();\r\n        if(e.target === sliderThumb.current){\r\n            return;\r\n        }\r\n        const x = e.clientX - sliderAreaRect.left  + (thumbRect.width / 2);\r\n        let progress = x / sliderAreaRect.width  ;\r\n        progress = toRange(progress, 0 , 1)\r\n        seek({progress})\r\n    }, [seek, getSliderAreaRect, getThumbAreaRect])\r\n\r\n    const areaMouseMove = useCallback( e =>{\r\n        const sliderAreaRect = getSliderAreaRect();\r\n        const thumbRect = getThumbAreaRect();\r\n        const x = e.clientX - sliderAreaRect.left  + (thumbRect.width / 2);\r\n        let progress = x / sliderAreaRect.width;\r\n        progress = toRange(progress, 0 , 1)\r\n        const time = currentDuration * progress;\r\n        const str = formater.secondsToStr(time / 1000);\r\n        sliderTimePreview.current.dataset.value = time ? str : \"\";\r\n        sliderTimePreview.current.style.transform = `translateX(${x}px)`\r\n    }, [currentDuration , sliderTimePreview, getSliderAreaRect, getThumbAreaRect])\r\n\r\n    const areaMouseEnter = useCallback( e => {\r\n        sliderTimePreview.current.classList.add(\"preview--visible\")\r\n    }, [sliderTimePreview])\r\n\r\n    const areaMouseLeave = useCallback( e => {\r\n        sliderTimePreview.current.classList.remove(\"preview--visible\")\r\n    }, [sliderTimePreview])\r\n\r\n\r\n    return (\r\n        <div className=\"seek-slider\">\r\n            <div className=\"slider-time time-current\">\r\n                 <span>{formater.secondsToStr(currentTime / 1000)}</span>\r\n            </div>\r\n            <div className=\"slider-active-area\" \r\n                 ref={sliderArea}\r\n                 onMouseDown={areaMouseDown}\r\n                 onMouseEnter={areaMouseEnter}\r\n                 onMouseLeave={areaMouseLeave} \r\n                 onMouseMove={areaMouseMove}\r\n                 draggable=\"false\">\r\n                    <div className=\"slider-buffered\" \r\n                         ref={sliderBufferd} \r\n                         draggable=\"false\"/>\r\n                    <div className=\"slider-progress\" \r\n                         ref={sliderProgress} \r\n                         draggable=\"false\"/>\r\n                    \r\n                    <div className=\"slider-thumb\" \r\n                         ref={sliderThumb} \r\n                         onMouseDown={thumbMouseDown} \r\n                         draggable=\"false\"/>\r\n                    <div className=\"slider-time-preview\"  \r\n                         ref={sliderTimePreview} \r\n                         data-value=\"\"/>\r\n            </div>\r\n            <div className=\"slider-time time-duration\">\r\n                <span>{formater.secondsToStr(currentDuration/1000)}</span>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProgressSlider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}