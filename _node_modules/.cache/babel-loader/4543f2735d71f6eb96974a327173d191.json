{"ast":null,"code":"import { ACTIONS } from \"./../../actions\";\nimport { produce } from \"imer\";\nconst initState = {\n  lastChange: null,\n  preGain: 0,\n  postGain: 0,\n  threshold: 0,\n  ration: 1,\n  attack: .003,\n  ralease: .25\n};\n\nconst nextState = (state, variable, value) => {\n  return produce(state, draftState => {\n    draftState.lastChange = {\n      signature: \"#\" + variable,\n      value\n    };\n    draftState[variable] = value;\n  });\n};\n\nexport default function mixerReducer(state = initState, action) {\n  switch (action.type) {\n    case ACTIONS.SET_PRE_GAIN:\n      {\n        return nextState(state, \"preGain\", action.value);\n      }\n\n    case ACTIONS.SET_POST_GAIN:\n      {\n        return nextState(state, \"postGain\", action.value);\n      }\n\n    case ACTIONS.SET_THRESHOLD:\n      {\n        return nextState(state, \"threshold\", action.value);\n      }\n\n    case ACTIONS.SET_RATIO:\n      {\n        return nextState(state, \"ratio\", action.value);\n      }\n\n    case ACTIONS.SET_ATTACK:\n      {\n        return nextState(state, \"attack\", action.value);\n      }\n\n    case ACTIONS.SET_RELEASE:\n      {\n        return nextState(state, \"release\", action.value);\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/reducers/console/masteringReducer.js"],"names":["ACTIONS","produce","initState","lastChange","preGain","postGain","threshold","ration","attack","ralease","nextState","state","variable","value","draftState","signature","mixerReducer","action","type","SET_PRE_GAIN","SET_POST_GAIN","SET_THRESHOLD","SET_RATIO","SET_ATTACK","SET_RELEASE"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,MAAxB;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,IADE;AAGdC,EAAAA,OAAO,EAAE,CAHK;AAIdC,EAAAA,QAAQ,EAAE,CAJI;AAKdC,EAAAA,SAAS,EAAE,CALG;AAMdC,EAAAA,MAAM,EAAE,CANM;AAOdC,EAAAA,MAAM,EAAG,IAPK;AAQdC,EAAAA,OAAO,EAAG;AARI,CAAlB;;AAWA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,KAAlB,KAA4B;AAC1C,SAAOZ,OAAO,CAACU,KAAD,EAAQG,UAAU,IAAI;AAChCA,IAAAA,UAAU,CAACX,UAAX,GAAwB;AACpBY,MAAAA,SAAS,EAAE,MAAMH,QADG;AAEpBC,MAAAA;AAFoB,KAAxB;AAIAC,IAAAA,UAAU,CAACF,QAAD,CAAV,GAAuBC,KAAvB;AACH,GANa,CAAd;AAOH,CARD;;AAUA,eAAe,SAASG,YAAT,CAAsBL,KAAK,GAAGT,SAA9B,EAAyCe,MAAzC,EAAiD;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,OAAO,CAACmB,YAAb;AAA2B;AACvB,eAAOT,SAAS,CAACC,KAAD,EAAQ,SAAR,EAAmBM,MAAM,CAACJ,KAA1B,CAAhB;AACH;;AACD,SAAKb,OAAO,CAACoB,aAAb;AAA4B;AACxB,eAAOV,SAAS,CAACC,KAAD,EAAQ,UAAR,EAAoBM,MAAM,CAACJ,KAA3B,CAAhB;AACH;;AACD,SAAKb,OAAO,CAACqB,aAAb;AAA4B;AACxB,eAAOX,SAAS,CAACC,KAAD,EAAQ,WAAR,EAAqBM,MAAM,CAACJ,KAA5B,CAAhB;AACH;;AACD,SAAKb,OAAO,CAACsB,SAAb;AAAwB;AACpB,eAAOZ,SAAS,CAACC,KAAD,EAAQ,OAAR,EAAiBM,MAAM,CAACJ,KAAxB,CAAhB;AACH;;AACD,SAAKb,OAAO,CAACuB,UAAb;AAAyB;AACrB,eAAOb,SAAS,CAACC,KAAD,EAAQ,QAAR,EAAkBM,MAAM,CAACJ,KAAzB,CAAhB;AACH;;AACD,SAAKb,OAAO,CAACwB,WAAb;AAA0B;AACtB,eAAOd,SAAS,CAACC,KAAD,EAAQ,SAAR,EAAmBM,MAAM,CAACJ,KAA1B,CAAhB;AACH;;AAED;AAAS,aAAOF,KAAP;AApBb;AAsBH","sourcesContent":["import { ACTIONS } from \"./../../actions\";\r\nimport { produce } from \"imer\";\r\n\r\n\r\nconst initState = {\r\n    lastChange: null,\r\n\r\n    preGain: 0,\r\n    postGain: 0,\r\n    threshold: 0,\r\n    ration: 1,\r\n    attack : .003,\r\n    ralease : .25,\r\n};\r\n\r\nconst nextState = (state, variable, value) => {\r\n    return produce(state, draftState => {\r\n        draftState.lastChange = {\r\n            signature: \"#\" + variable,\r\n            value\r\n        }\r\n        draftState[variable] = value;\r\n    })\r\n}\r\n\r\nexport default function mixerReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case ACTIONS.SET_PRE_GAIN: {\r\n            return nextState(state, \"preGain\", action.value);\r\n        }\r\n        case ACTIONS.SET_POST_GAIN: {\r\n            return nextState(state, \"postGain\", action.value);\r\n        }\r\n        case ACTIONS.SET_THRESHOLD: {\r\n            return nextState(state, \"threshold\", action.value);\r\n        }\r\n        case ACTIONS.SET_RATIO: {\r\n            return nextState(state, \"ratio\", action.value);\r\n        }\r\n        case ACTIONS.SET_ATTACK: {\r\n            return nextState(state, \"attack\", action.value);\r\n        }\r\n        case ACTIONS.SET_RELEASE: {\r\n            return nextState(state, \"release\", action.value);\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}