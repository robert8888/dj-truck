{"ast":null,"code":"import { ACTIONS, loadRecords, recReqFails } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nexport default function* requestUserRecords() {\n  yield takeEvery(ACTIONS.RECS_REQ_USER, handel);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* handel(action) {\n  const token = yield select(getToken);\n\n  if (token) {\n    try {\n      const {\n        callQuery,\n        queries\n      } = getApi(\"UserAssets\");\n      const {\n        userId,\n        pageSize,\n        page\n      } = action;\n      const query = queries.userRecQl(userId, pageSize, page);\n      const result = yield callQuery(query, token);\n      const records = result.data.records;\n      console.log(result);\n\n      if (!result.errors && records) {\n        yield put(loadRecords(records));\n      } else {\n        throw new Error(\"Can't load reacords from database\");\n      }\n    } catch (e) {\n      yield put(recReqFails(e.message));\n    }\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/records/reqUserRecords.js"],"names":["ACTIONS","loadRecords","recReqFails","takeEvery","select","put","getApi","requestUserRecords","RECS_REQ_USER","handel","getToken","state","user","token","action","callQuery","queries","userId","pageSize","page","query","userRecQl","result","records","data","console","log","errors","Error","e","message"],"mappings":"AAAA,SAAUA,OAAV,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,eAApD;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAyC,oBAAzC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,eAAe,UAAUC,kBAAV,GAA+B;AAC1C,QAAMJ,SAAS,CAACH,OAAO,CAACQ,aAAT,EAAwBC,MAAxB,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUJ,MAAV,CAAiBK,MAAjB,EAAyB;AACrB,QAAMD,KAAK,GAAG,MAAMT,MAAM,CAACM,QAAD,CAA1B;;AAEA,MAAGG,KAAH,EAAS;AACL,QAAG;AACC,YAAM;AAAEE,QAAAA,SAAF;AAAcC,QAAAA;AAAd,UAA0BV,MAAM,CAAC,YAAD,CAAtC;AACA,YAAM;AAACW,QAAAA,MAAD;AAASC,QAAAA,QAAT;AAAmBC,QAAAA;AAAnB,UAA2BL,MAAjC;AACA,YAAMM,KAAK,GAAGJ,OAAO,CAACK,SAAR,CAAkBJ,MAAlB,EAA0BC,QAA1B,EAAoCC,IAApC,CAAd;AACA,YAAMG,MAAM,GAAG,MAAMP,SAAS,CAACK,KAAD,EAAQP,KAAR,CAA9B;AACA,YAAMU,OAAO,GAAGD,MAAM,CAACE,IAAP,CAAYD,OAA5B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AACA,UAAG,CAACA,MAAM,CAACK,MAAR,IAAmBJ,OAAtB,EAA8B;AAC1B,cAAMlB,GAAG,CAACJ,WAAW,CAACsB,OAAD,CAAZ,CAAT;AACH,OAFD,MAEO;AACH,cAAM,IAAIK,KAAJ,CAAU,mCAAV,CAAN;AACH;AACJ,KAZD,CAYE,OAAOC,CAAP,EAAU;AACR,YAAMxB,GAAG,CAACH,WAAW,CAAC2B,CAAC,CAACC,OAAH,CAAZ,CAAT;AACH;AAEJ;AAEJ","sourcesContent":["import {  ACTIONS,  loadRecords, recReqFails } from \"../../actions\";\r\nimport { takeEvery, select, put,  } from \"redux-saga/effects\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n\r\nexport default function* requestUserRecords() {\r\n    yield takeEvery(ACTIONS.RECS_REQ_USER, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n\r\n    if(token){\r\n        try{\r\n            const { callQuery , queries } = getApi(\"UserAssets\");\r\n            const {userId, pageSize, page} = action;\r\n            const query = queries.userRecQl(userId, pageSize, page);\r\n            const result = yield callQuery(query, token);\r\n            const records = result.data.records;\r\n            console.log(result)\r\n            if(!result.errors  && records){\r\n                yield put(loadRecords(records))\r\n            } else {\r\n                throw new Error(\"Can't load reacords from database\")\r\n            }  \r\n        } catch (e) {\r\n            yield put(recReqFails(e.message))\r\n        }\r\n\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}