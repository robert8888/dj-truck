{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\ExternalSearch\\\\Search.js\";\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Button, Dropdown, DropdownButton, FormControl } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { clearSearch, searchInput, searchStart } from \"../../../../actions\";\nimport { API_TYPES, getApisName } from \"./../../../../apis/apiProvider\";\nimport \"./search.scss\";\nimport SearchResults from './SerachResults/SearchResults.js';\n\nconst Search = ({\n  clearSearch,\n  searchStart,\n  setQuery,\n  queryString,\n  controls,\n  player\n}) => {\n  const [resultOpen, setResultOpen] = useState(false);\n  const [source, setSource] = useState(null);\n  const [limit, setLimit] = useState(10);\n\n  const openList = () => setResultOpen(true);\n\n  useEffect(() => {\n    const defaultSource = getApisName(API_TYPES.MIUSIC_SOURCE, {\n      default: true\n    });\n    setSource(defaultSource);\n  }, [setSource]);\n\n  const selectedHandel = () => {\n    clearSearch();\n    setResultOpen(false);\n  };\n\n  const apiList = useMemo(() => {\n    return getApisName(API_TYPES.MIUSIC_SOURCE).map(api => {\n      return React.createElement(Dropdown.Item, {\n        key: api,\n        onClick: setSource.bind(null, api),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"  \", api, \" \");\n    });\n  }, []);\n  const controlKeyPress = useCallback(event => {\n    if (event.key !== \"Enter\") return;\n    searchStart(queryString, source, limit);\n  }, [queryString, source, limit, searchStart]);\n  const clear = useCallback(() => {\n    clearSearch();\n    setResultOpen(false);\n  }, [clearSearch, setResultOpen]);\n  return React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    className: \"btn-api-select\",\n    title: source || \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, apiList), React.createElement(FormControl, {\n    className: \"search-control\",\n    type: \"text\",\n    placeholder: \"Tap in to serach on youtube\",\n    onChange: event => setQuery(event.target.value),\n    onKeyPress: controlKeyPress,\n    onFocus: openList,\n    value: queryString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), resultOpen && React.createElement(Button, {\n    className: \"btn-search-clear\",\n    onClick: clear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(DropdownButton, {\n    className: \"btn-max-result-select\",\n    title: limit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onClick: () => setLimit(10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \" 10 \"), React.createElement(Dropdown.Item, {\n    onClick: () => setLimit(25),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \" 25 \"), React.createElement(Dropdown.Item, {\n    onClick: () => setLimit(50),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \" 50 \"))), React.createElement(SearchResults, {\n    playback: controls.playback,\n    player: player,\n    open: resultOpen,\n    selectedHandle: selectedHandel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  queryString: state.searchReducer.searchString\n});\n\nconst mapDispachToProps = dispatch => ({\n  setQuery: text => dispatch(searchInput(text)),\n  searchStart: (text, source, limit) => dispatch(searchStart(text, source, limit)),\n  clearSearch: () => dispatch(clearSearch())\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Search);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/ExternalSearch/Search.js"],"names":["React","useCallback","useEffect","useMemo","useState","Button","Dropdown","DropdownButton","FormControl","connect","clearSearch","searchInput","searchStart","API_TYPES","getApisName","SearchResults","Search","setQuery","queryString","controls","player","resultOpen","setResultOpen","source","setSource","limit","setLimit","openList","defaultSource","MIUSIC_SOURCE","default","selectedHandel","apiList","map","api","bind","controlKeyPress","event","key","clear","target","value","playback","mapStateToProps","state","searchReducer","searchString","mapDispachToProps","dispatch","text"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Button, Dropdown, DropdownButton, FormControl } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearSearch, searchInput, searchStart } from \"../../../../actions\";\r\nimport { API_TYPES, getApisName } from \"./../../../../apis/apiProvider\";\r\nimport \"./search.scss\";\r\nimport SearchResults from './SerachResults/SearchResults.js';\r\n\r\n\r\nconst Search = ({\r\n    clearSearch,\r\n    searchStart,\r\n    setQuery,\r\n    queryString,\r\n    controls,\r\n    player,\r\n}) => {\r\n    const [resultOpen, setResultOpen] = useState(false);\r\n    const [source, setSource] = useState(null);\r\n    const [limit, setLimit] = useState(10);\r\n\r\n    const openList = () => setResultOpen(true);\r\n\r\n    useEffect(() => {\r\n        const defaultSource = getApisName(API_TYPES.MIUSIC_SOURCE, { default: true })\r\n        setSource(defaultSource)\r\n    }, [setSource])\r\n\r\n    const selectedHandel = () => {\r\n        clearSearch();\r\n        setResultOpen(false);\r\n    }\r\n\r\n    const apiList = useMemo(() => {\r\n        return getApisName(API_TYPES.MIUSIC_SOURCE).map(api => {\r\n            return (<Dropdown.Item key={api} onClick={setSource.bind(null, api)}>  {api} </Dropdown.Item>)\r\n        })\r\n    }, [])\r\n\r\n    const controlKeyPress = useCallback((event) => {\r\n        if (event.key !== \"Enter\") return\r\n        searchStart(queryString, source, limit)\r\n    }, [queryString, source, limit, searchStart])\r\n\r\n    const clear = useCallback(()=>{\r\n        clearSearch();\r\n        setResultOpen(false);\r\n    },[clearSearch, setResultOpen])\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"search-controls\">\r\n                <DropdownButton\r\n                    className=\"btn-api-select\"\r\n                    title={source || \"\"}>\r\n                    {apiList}\r\n                </DropdownButton>\r\n                <FormControl\r\n                    className=\"search-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Tap in to serach on youtube\"\r\n                    onChange={event => setQuery(event.target.value)}\r\n                    onKeyPress={controlKeyPress}\r\n                    onFocus={openList}\r\n                    value={queryString} />\r\n                {resultOpen && \r\n                    <Button className=\"btn-search-clear\" onClick={clear}> \r\n                        Clear \r\n                    </Button>}\r\n                <DropdownButton\r\n                    className=\"btn-max-result-select\"\r\n                    title={limit}>\r\n                    <Dropdown.Item onClick={() => setLimit(10)}> 10 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setLimit(25)}> 25 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setLimit(50)}> 50 </Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n\r\n            <SearchResults\r\n                playback={controls.playback}\r\n                player={player}\r\n                open={resultOpen}\r\n                selectedHandle={selectedHandel} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    queryString: state.searchReducer.searchString\r\n})\r\n\r\nconst mapDispachToProps = dispatch => ({\r\n    setQuery: (text) => dispatch(searchInput(text)),\r\n    searchStart: (text, source, limit) => dispatch(searchStart(text, source, limit)),\r\n    clearSearch: () => dispatch(clearSearch()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Search);"]},"metadata":{},"sourceType":"module"}