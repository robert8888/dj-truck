{"ast":null,"code":"import { get } from \"lodash/object\";\nimport { hideLoading, showLoading } from 'react-redux-loading-bar';\nimport { put, select, takeEvery } from \"redux-saga/effects\";\nimport { ACTIONS, pushDirContent } from \"../../actions\";\nimport { getApi } from \"./../../apis/apiProvider\";\nexport default function* readDirRequest() {\n  yield takeEvery(ACTIONS.PL_LOAD_DIR_REQUEST, handel);\n}\n\nconst getToken = state => state.user.token;\n\nconst getCurrentSelection = state => state.playList.currentSelection;\n\nconst getCurrent = (state, path) => get(state.playList, path);\n\nexport function* handel(action) {\n  const token = yield select(getToken);\n  const currentSelection = yield select(getCurrentSelection);\n  const current = yield select(getCurrent, currentSelection);\n\n  if (!current._loaded && token) {\n    try {\n      yield put(showLoading());\n      const {\n        callQuery,\n        queries\n      } = getApi(\"UserAssets\");\n      let dirContent = yield callQuery(queries.loadDirContentQl(current._id), token);\n\n      if (!dirContent.data.dir) {\n        return;\n      }\n\n      dirContent = dirContent.data.dir;\n      const isRoot = false;\n      yield put(pushDirContent(dirContent, isRoot, action.path, action.open));\n    } catch (err) {\n      console.log(\"can't load dir from api\");\n      console.log(err.message);\n    } finally {\n      yield put(hideLoading());\n    }\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/reqReadDirSaga.js"],"names":["get","hideLoading","showLoading","put","select","takeEvery","ACTIONS","pushDirContent","getApi","readDirRequest","PL_LOAD_DIR_REQUEST","handel","getToken","state","user","token","getCurrentSelection","playList","currentSelection","getCurrent","path","action","current","_loaded","callQuery","queries","dirContent","loadDirContentQl","_id","data","dir","isRoot","open","err","console","log","message"],"mappings":"AAAA,SAASA,GAAT,QAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,eAAxC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,eAAe,UAAUC,cAAV,GAA2B;AACtC,QAAMJ,SAAS,CAACC,OAAO,CAACI,mBAAT,EAA8BC,MAA9B,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,MAAMC,mBAAmB,GAAGH,KAAK,IAAIA,KAAK,CAACI,QAAN,CAAeC,gBAApD;;AAEA,MAAMC,UAAU,GAAG,CAACN,KAAD,EAAQO,IAAR,KAAiBpB,GAAG,CAACa,KAAK,CAACI,QAAP,EAAiBG,IAAjB,CAAvC;;AAEA,OAAO,UAAUT,MAAV,CAAiBU,MAAjB,EAAyB;AAC5B,QAAMN,KAAK,GAAG,MAAMX,MAAM,CAACQ,QAAD,CAA1B;AACA,QAAMM,gBAAgB,GAAG,MAAMd,MAAM,CAACY,mBAAD,CAArC;AACA,QAAMM,OAAO,GAAG,MAAMlB,MAAM,CAACe,UAAD,EAAaD,gBAAb,CAA5B;;AAEA,MAAI,CAACI,OAAO,CAACC,OAAT,IAAoBR,KAAxB,EAA+B;AAC3B,QAAI;AACA,YAAMZ,GAAG,CAACD,WAAW,EAAZ,CAAT;AACA,YAAM;AAAEsB,QAAAA,SAAF;AAAaC,QAAAA;AAAb,UAAyBjB,MAAM,CAAC,YAAD,CAArC;AACA,UAAIkB,UAAU,GAAG,MAAMF,SAAS,CAACC,OAAO,CAACE,gBAAR,CAAyBL,OAAO,CAACM,GAAjC,CAAD,EAAwCb,KAAxC,CAAhC;;AACA,UAAI,CAACW,UAAU,CAACG,IAAX,CAAgBC,GAArB,EAA0B;AACtB;AACH;;AAEDJ,MAAAA,UAAU,GAAGA,UAAU,CAACG,IAAX,CAAgBC,GAA7B;AACA,YAAMC,MAAM,GAAG,KAAf;AACA,YAAM5B,GAAG,CAACI,cAAc,CAACmB,UAAD,EAAaK,MAAb,EAAqBV,MAAM,CAACD,IAA5B,EAAkCC,MAAM,CAACW,IAAzC,CAAf,CAAT;AACH,KAXD,CAWE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH,KAdD,SAcU;AACN,YAAMjC,GAAG,CAACF,WAAW,EAAZ,CAAT;AACH;AACJ;AACJ","sourcesContent":["import { get } from \"lodash/object\";\r\nimport { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport { put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTIONS, pushDirContent } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n\r\nexport default function* readDirRequest() {\r\n    yield takeEvery(ACTIONS.PL_LOAD_DIR_REQUEST, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nconst getCurrentSelection = state => state.playList.currentSelection;\r\n\r\nconst getCurrent = (state, path) => get(state.playList, path);\r\n\r\nexport function* handel(action) {\r\n    const token = yield select(getToken);\r\n    const currentSelection = yield select(getCurrentSelection);\r\n    const current = yield select(getCurrent, currentSelection);\r\n\r\n    if (!current._loaded && token) {\r\n        try {\r\n            yield put(showLoading());\r\n            const { callQuery, queries } = getApi(\"UserAssets\");\r\n            let dirContent = yield callQuery(queries.loadDirContentQl(current._id), token);\r\n            if (!dirContent.data.dir) {\r\n                return;\r\n            }\r\n\r\n            dirContent = dirContent.data.dir;\r\n            const isRoot = false;\r\n            yield put(pushDirContent(dirContent, isRoot, action.path, action.open));\r\n        } catch (err) {\r\n            console.log(\"can't load dir from api\");\r\n            console.log(err.message);\r\n        } finally {\r\n            yield put(hideLoading())\r\n        }\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}