{"ast":null,"code":"let tokenizer = require(\"./tokens\");\n\ntokenizeHtmlClassBlock.notInLink = true;\n\nfunction tokenizeHtmlClassBlock(eat, value, silent) {\n  console.log(\"Block value\", value);\n  var match = /^(.*){\\.(\\w+)}/.exec(value);\n\n  if (match) {\n    // console.log(match)\n    if (silent) {\n      return true;\n    }\n\n    let type = 'break';\n\n    switch (match[1]) {\n      case \"***\":\n        {\n          type = 'thematicBreak';\n          break;\n        }\n    }\n\n    let node = {};\n    node = tokenizer.forEach(test => test(match[1])); //const add = eat(match[0]);\n\n    return eat(match[0])({\n      type: type,\n      className: match[2]\n    });\n    /*        return add({\r\n                 type: 'link',\r\n                // url: 'https://social-network/' + match[1],\r\n                // children: [{type: 'text', value: match[0]}]\r\n                data: {\r\n                    className: 'custom-block-heading',\r\n                    hProperties: {\r\n                        className: 'custom-block-heading',\r\n                    }\r\n                }\r\n            })*/\n  }\n}\n\nmodule.exports.tokenizeHtmlClassBlock = tokenizeHtmlClassBlock;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/introduction/MarkDonwExtesnion/tokenizeHtmlClassBlock.js"],"names":["tokenizer","require","tokenizeHtmlClassBlock","notInLink","eat","value","silent","console","log","match","exec","type","node","forEach","test","className","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEAC,sBAAsB,CAACC,SAAvB,GAAmC,IAAnC;;AAGA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqCC,KAArC,EAA4CC,MAA5C,EAAoD;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACA,MAAII,KAAK,GAAG,iBAAiBC,IAAjB,CAAsBL,KAAtB,CAAZ;;AAEA,MAAII,KAAJ,EAAW;AACR;AACC,QAAIH,MAAJ,EAAY;AACR,aAAO,IAAP;AACH;;AAED,QAAIK,IAAI,GAAG,OAAX;;AACA,YAAQF,KAAK,CAAC,CAAD,CAAb;AACI,WAAK,KAAL;AAAa;AACTE,UAAAA,IAAI,GAAG,eAAP;AACA;AACH;AAJL;;AAMA,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,GAAGZ,SAAS,CAACa,OAAV,CAAmBC,IAAI,IAAIA,IAAI,CAACL,KAAK,CAAC,CAAD,CAAN,CAA/B,CAAP,CAdO,CAgBP;;AAEA,WAAOL,GAAG,CAACK,KAAK,CAAC,CAAD,CAAN,CAAH,CAAc;AACjBE,MAAAA,IAAI,EAAGA,IADU;AAEjBI,MAAAA,SAAS,EAAEN,KAAK,CAAC,CAAD;AAFC,KAAd,CAAP;AAIA;;;;;;;;;;;AAWH;AACJ;;AAEDO,MAAM,CAACC,OAAP,CAAef,sBAAf,GAAwCA,sBAAxC","sourcesContent":["let tokenizer = require(\"./tokens\");\r\n\r\ntokenizeHtmlClassBlock.notInLink = true\r\n\r\n\r\nfunction tokenizeHtmlClassBlock(eat, value, silent) {\r\n    console.log(\"Block value\", value)\r\n    var match = /^(.*){\\.(\\w+)}/.exec(value)\r\n\r\n    if (match) {\r\n       // console.log(match)\r\n        if (silent) {\r\n            return true\r\n        }\r\n\r\n        let type = 'break';\r\n        switch (match[1]){\r\n            case \"***\" : {\r\n                type = 'thematicBreak';\r\n                break;\r\n            }\r\n        }\r\n        let node = {};\r\n        node = tokenizer.forEach( test => test(match[1]))\r\n\r\n        //const add = eat(match[0]);\r\n\r\n        return eat(match[0])({\r\n            type:  type,\r\n            className: match[2],\r\n        })\r\n        /*        return add({\r\n                     type: 'link',\r\n                    // url: 'https://social-network/' + match[1],\r\n                    // children: [{type: 'text', value: match[0]}]\r\n                    data: {\r\n                        className: 'custom-block-heading',\r\n                        hProperties: {\r\n                            className: 'custom-block-heading',\r\n                        }\r\n                    }\r\n                })*/\r\n    }\r\n}\r\n\r\nmodule.exports.tokenizeHtmlClassBlock = tokenizeHtmlClassBlock"]},"metadata":{},"sourceType":"module"}