{"ast":null,"code":"import { toggleDir, ACTIONS, pushDirContent, loadDirRequest } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport requestDirContetQuery from \"./../../qlQueries/requestDirContent\";\nimport { get } from \"lodash/object\";\nexport default function* openAndLoadDirRequest() {\n  yield takeEvery(ACTIONS.PL_TOGGLE_DIR_REQUEST, handel);\n} // const getToken = state => state.user.token;\n// const getCurrentSelection = state => state.playList.currentSelection;\n// const getCurrent = (state, path) => get(state.playList, path);\n\nfunction* handel(action) {\n  // const { callQuery } = getApi(\"UserAssets\");\n  // const token = yield select(getToken);\n  const currentSelection = yield select(getCurrentSelection);\n  const current = yield select(getCurrent, currentSelection);\n\n  if (!current._open && !current._loaded) {\n    // let dirContent = yield callQuery(requestDirContetQuery(current._id), token);\n    // if(!dirContent.data.dir){\n    //     return;\n    // }\n    //  dirContent = dirContent.data.dir;\n    //  const isRoot = false;\n    //  yield put(pushDirContent(dirContent, isRoot, action.path));\n    yield put(loadDirRequest(aciton.path));\n    return yield put(toggleDir(action.path));\n  } else {\n    return yield put(toggleDir(action.path));\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/openAndLoadDirRequest.js"],"names":["toggleDir","ACTIONS","pushDirContent","loadDirRequest","takeEvery","select","put","getApi","requestDirContetQuery","get","openAndLoadDirRequest","PL_TOGGLE_DIR_REQUEST","handel","action","currentSelection","getCurrentSelection","current","getCurrent","_open","_loaded","aciton","path"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,cAA7B,EAA8CC,cAA9C,QAAmE,eAAnE;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,eAAe,UAAUC,qBAAV,GAAkC;AAC7C,QAAMN,SAAS,CAACH,OAAO,CAACU,qBAAT,EAAgCC,MAAhC,CAAf;AACH,C,CAED;AAEA;AAEA;;AAEA,UAAUA,MAAV,CAAiBC,MAAjB,EAAyB;AACrB;AACA;AACA,QAAMC,gBAAgB,GAAG,MAAMT,MAAM,CAACU,mBAAD,CAArC;AACA,QAAMC,OAAO,GAAG,MAAMX,MAAM,CAACY,UAAD,EAAaH,gBAAb,CAA5B;;AAEA,MAAG,CAACE,OAAO,CAACE,KAAT,IAAkB,CAACF,OAAO,CAACG,OAA9B,EAAsC;AAClC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,UAAMb,GAAG,CAACH,cAAc,CAACiB,MAAM,CAACC,IAAR,CAAf,CAAT;AACC,WAAO,MAAMf,GAAG,CAACN,SAAS,CAACa,MAAM,CAACQ,IAAR,CAAV,CAAhB;AACJ,GAXD,MAWO;AACH,WAAO,MAAMf,GAAG,CAACN,SAAS,CAACa,MAAM,CAACQ,IAAR,CAAV,CAAhB;AACH;AACJ","sourcesContent":["import { toggleDir, ACTIONS, pushDirContent , loadDirRequest} from \"../../actions\";\r\nimport { takeEvery, select, put } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport requestDirContetQuery from \"./../../qlQueries/requestDirContent\";\r\nimport { get } from \"lodash/object\";\r\n\r\nexport default function* openAndLoadDirRequest() {\r\n    yield takeEvery(ACTIONS.PL_TOGGLE_DIR_REQUEST, handel)\r\n}\r\n\r\n// const getToken = state => state.user.token;\r\n\r\n// const getCurrentSelection = state => state.playList.currentSelection;\r\n\r\n// const getCurrent = (state, path) => get(state.playList, path);\r\n\r\nfunction* handel(action) {\r\n    // const { callQuery } = getApi(\"UserAssets\");\r\n    // const token = yield select(getToken);\r\n    const currentSelection = yield select(getCurrentSelection);\r\n    const current = yield select(getCurrent, currentSelection);\r\n\r\n    if(!current._open && !current._loaded){\r\n        // let dirContent = yield callQuery(requestDirContetQuery(current._id), token);\r\n        // if(!dirContent.data.dir){\r\n        //     return;\r\n        // }\r\n        \r\n        //  dirContent = dirContent.data.dir;\r\n        //  const isRoot = false;\r\n        //  yield put(pushDirContent(dirContent, isRoot, action.path));\r\n        yield put(loadDirRequest(aciton.path))\r\n         return yield put(toggleDir(action.path))\r\n    } else {\r\n        return yield put(toggleDir(action.path))\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}