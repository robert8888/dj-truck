{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\Router\\\\PrivateRoute.js\";\nimport React, { useCallback } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"./../auth0/react-auth0-spa\";\n\nconst PrivateRoute = ({\n  component: Component,\n  path,\n  ...rest\n}) => {\n  const {\n    loading,\n    isAuthenticated,\n    loginWithRedirect\n  } = useAuth0();\n  const redirect = useCallback(async () => {\n    if (loading) {\n      return;\n    }\n\n    console.log(\"im heare\");\n    await loginWithRedirect({\n      appState: {\n        targetUrl: window.location.pathname\n      }\n    });\n  }, [loading, loginWithRedirect]);\n\n  const render = props => {\n    if (isAuthenticated) {\n      return React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    } else {\n      redirect();\n    }\n  };\n\n  return React.createElement(Route, Object.assign({\n    path: path,\n    render: render\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/Router/PrivateRoute.js"],"names":["React","useCallback","Route","useAuth0","PrivateRoute","component","Component","path","rest","loading","isAuthenticated","loginWithRedirect","redirect","console","log","appState","targetUrl","window","location","pathname","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,4BAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8B,KAAGC;AAAjC,CAAD,KAA6C;AAChE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAkDR,QAAQ,EAAhE;AAGA,QAAMS,QAAQ,GAAGX,WAAW,CAAC,YAAY;AACvC,QAAIQ,OAAJ,EAAa;AACX;AACD;;AAEDI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAMH,iBAAiB,CAAC;AACtBI,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,SAAS,EAAEC,MAAM,CAACC,QAAP,CAAgBC;AAA7B;AADY,KAAD,CAAvB;AAGD,GAT2B,EASzB,CAACV,OAAD,EAAUE,iBAAV,CATyB,CAA5B;;AAWA,QAAMS,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAIX,eAAJ,EAAqB;AACnB,aAAO,oBAAC,SAAD,oBAAeW,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAFD,MAEO;AACLT,MAAAA,QAAQ;AACT;AACF,GAND;;AAQA,SAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEL,IAAb;AAAmB,IAAA,MAAM,EAAEa;AAA3B,KAAuCZ,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAxBD;;AA0BA,eAAeJ,YAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useAuth0 } from \"./../auth0/react-auth0-spa\";\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n\r\n  const redirect = useCallback(async () => {\r\n    if (loading) {\r\n      return;\r\n    }\r\n\r\n    console.log(\"im heare\")\r\n    await loginWithRedirect({\r\n      appState: { targetUrl: window.location.pathname }\r\n    });\r\n  }, [loading, loginWithRedirect])\r\n\r\n  const render = props => {\r\n    if (isAuthenticated) {\r\n      return <Component {...props} />\r\n    } else {\r\n      redirect();\r\n    }\r\n  }\r\n\r\n  return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}