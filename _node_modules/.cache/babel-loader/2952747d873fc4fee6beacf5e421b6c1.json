{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\console\\\\components\\\\Console\\\\Deck\\\\Player\\\\Player.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Console from \"./../../../../core/console/console\";\nimport \"./player.scss\";\n\nclass Player extends React.Component {\n  constructor() {\n    super();\n    this.masterContainer = React.createRef();\n    this.slaveContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    const mixConsole = Console.Get();\n    mixConsole.createChannel(this.props.name, this.masterContainer.current, this.slaveContainer.current);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"player player-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.loadingProgress < 100 && this.props.loadingProgress > 0 && React.createElement(\"div\", {\n      className: \"player-loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Loading \", this.props.loadingProgress, \" % \")), React.createElement(\"div\", {\n      className: \"master\",\n      ref: this.masterContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"slave\",\n      ref: this.slaveContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  loadingProgress: state.console.channel[ownProps.name].playBackState.loadingProgress\n});\n\nexport default connect(mapStateToProps)(Player);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Deck/Player/Player.js"],"names":["React","connect","Console","Player","Component","constructor","masterContainer","createRef","slaveContainer","componentDidMount","mixConsole","Get","createChannel","props","name","current","render","loadingProgress","mapStateToProps","state","ownProps","console","channel","playBackState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,eAAL,GAAuBN,KAAK,CAACO,SAAN,EAAvB;AACA,SAAKC,cAAL,GAAsBR,KAAK,CAACO,SAAN,EAAtB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,UAAU,GAAGR,OAAO,CAACS,GAAR,EAAnB;AACAD,IAAAA,UAAU,CAACE,aAAX,CACE,KAAKC,KAAL,CAAWC,IADb,EAEE,KAAKR,eAAL,CAAqBS,OAFvB,EAGE,KAAKP,cAAL,CAAoBO,OAHtB;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAE,mBAAmB,KAAKH,KAAL,CAAWC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWI,eAAX,GAA6B,GAA7B,IAAoC,KAAKJ,KAAL,CAAWI,eAAX,GAA6B,CAAjE,IACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAe,KAAKJ,KAAL,CAAWI,eAA1B,QADF,CAFJ,EAME;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAE,KAAKX,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAE,KAAKE,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AA7BkC;;AAgCrC,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5CH,EAAAA,eAAe,EAAGE,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACN,IAA/B,EAAqCS,aAArC,CAAmDN;AADzB,CAAtB,CAAxB;;AAKA,eAAehB,OAAO,CAACiB,eAAD,CAAP,CAAyBf,MAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Console from \"./../../../../core/console/console\";\r\nimport \"./player.scss\";\r\n\r\nclass Player extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.masterContainer = React.createRef();\r\n    this.slaveContainer = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const mixConsole = Console.Get();\r\n    mixConsole.createChannel(\r\n      this.props.name,\r\n      this.masterContainer.current,\r\n      this.slaveContainer.current\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"player player-\" + this.props.name}>\r\n        {this.props.loadingProgress < 100 && this.props.loadingProgress > 0 && (\r\n          <div className=\"player-loading\">\r\n            <span>Loading {this.props.loadingProgress} % </span>\r\n          </div>\r\n        )}\r\n        <div className=\"master\" ref={this.masterContainer} />\r\n        <div className=\"slave\" ref={this.slaveContainer} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  loadingProgress : state.console.channel[ownProps.name].playBackState.loadingProgress,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Player);\r\n"]},"metadata":{},"sourceType":"module"}