{"ast":null,"code":"import recordStoreApi from \"./recordsStore/recStoreApi\";\nimport soundCloudApi from \"./sc/scApi\";\nimport userAssetsApi from \"./userAssets/userApi\";\nimport youTubeApi from \"./yt/ytApi\";\nexport const API_TYPES = {\n  MIUSIC_SOURCE: \"Source of miusic\",\n  DATA_SOURCE: {\n    GRAPHQL: \"GraphQl api\",\n    REST: \"Rest api\",\n    WEB_SOCKET: \"Api with web socket connection\"\n  }\n};\nconst apisMap = {\n  \"YouTube\": {\n    type: API_TYPES.MIUSIC_SOURCE,\n    api: youTubeApi,\n    default: true\n  },\n  \"SoundCloud\": {\n    type: API_TYPES.MIUSIC_SOURCE,\n    api: soundCloudApi,\n    api: null\n  },\n  \"UserAssets\": {\n    type: API_TYPES.DATA_SOURCE.GRAPHQL,\n    api: userAssetsApi\n  },\n  \"RecordsStore\": {\n    type: [API_TYPES.DATA_SOURCE.WEB_SOCKET, API_TYPES.DATA_SOURCE.REST],\n    api: recordStoreApi\n  }\n};\nexport function getApi(apiName) {\n  return apisMap[apiName].api;\n}\nexport function getApisName(type, param) {\n  if (!type && !param) {\n    return Object.keys(apisMap);\n  } else if (type) {\n    return Object.entries(apisMap).filter(([_, api]) => {\n      const typeCorrent = api.type === type;\n\n      if (!param) {\n        return typeCorrent;\n      } else {\n        const paramCorrect = Object.entries(param).every(([key, value]) => api[key] === value);\n        return typeCorrent && paramCorrect;\n      }\n    }).map(([name, _]) => name);\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/apis/apiProvider.js"],"names":["recordStoreApi","soundCloudApi","userAssetsApi","youTubeApi","API_TYPES","MIUSIC_SOURCE","DATA_SOURCE","GRAPHQL","REST","WEB_SOCKET","apisMap","type","api","default","getApi","apiName","getApisName","param","Object","keys","entries","filter","_","typeCorrent","paramCorrect","every","key","value","map","name"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,4BAA3B;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,aAAa,EAAE,kBADM;AAErBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,OAAO,EAAE,aADA;AAETC,IAAAA,IAAI,EAAE,UAFG;AAGTC,IAAAA,UAAU,EAAE;AAHH;AAFQ,CAAlB;AAUP,MAAMC,OAAO,GAAG;AACZ,aAAW;AACPC,IAAAA,IAAI,EAAEP,SAAS,CAACC,aADT;AAEPO,IAAAA,GAAG,EAAET,UAFE;AAGPU,IAAAA,OAAO,EAAE;AAHF,GADC;AAMZ,gBAAc;AACVF,IAAAA,IAAI,EAAEP,SAAS,CAACC,aADN;AAEVO,IAAAA,GAAG,EAAEX,aAFK;AAGVW,IAAAA,GAAG,EAAE;AAHK,GANF;AAYZ,gBAAc;AACVD,IAAAA,IAAI,EAAEP,SAAS,CAACE,WAAV,CAAsBC,OADlB;AAEVK,IAAAA,GAAG,EAAEV;AAFK,GAZF;AAiBZ,kBAAgB;AACZS,IAAAA,IAAI,EAAE,CACFP,SAAS,CAACE,WAAV,CAAsBG,UADpB,EAEFL,SAAS,CAACE,WAAV,CAAsBE,IAFpB,CADM;AAKZI,IAAAA,GAAG,EAAEZ;AALO;AAjBJ,CAAhB;AA0BA,OAAO,SAASc,MAAT,CAAgBC,OAAhB,EAAyB;AAC5B,SAAOL,OAAO,CAACK,OAAD,CAAP,CAAiBH,GAAxB;AACH;AAED,OAAO,SAASI,WAAT,CAAqBL,IAArB,EAA2BM,KAA3B,EAAkC;AACrC,MAAI,CAACN,IAAD,IAAS,CAACM,KAAd,EAAqB;AACjB,WAAOC,MAAM,CAACC,IAAP,CAAYT,OAAZ,CAAP;AACH,GAFD,MAEO,IAAIC,IAAJ,EAAU;AACb,WAAOO,MAAM,CAACE,OAAP,CAAeV,OAAf,EACFW,MADE,CACK,CAAC,CAACC,CAAD,EAAIV,GAAJ,CAAD,KAAc;AAClB,YAAMW,WAAW,GAAIX,GAAG,CAACD,IAAJ,KAAaA,IAAlC;;AACA,UAAI,CAACM,KAAL,EAAY;AACR,eAAOM,WAAP;AACH,OAFD,MAEO;AACH,cAAMC,YAAY,GACdN,MAAM,CAACE,OAAP,CAAeH,KAAf,EAAsBQ,KAAtB,CAA4B,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACxBf,GAAG,CAACc,GAAD,CAAH,KAAaC,KADjB,CADJ;AAIA,eAAQJ,WAAW,IAAIC,YAAvB;AACH;AACJ,KAZE,EAaFI,GAbE,CAaE,CAAC,CAACC,IAAD,EAAOP,CAAP,CAAD,KAAeO,IAbjB,CAAP;AAcH;AACJ","sourcesContent":["import recordStoreApi from \"./recordsStore/recStoreApi\";\r\nimport soundCloudApi from \"./sc/scApi\";\r\nimport userAssetsApi from \"./userAssets/userApi\";\r\nimport youTubeApi from \"./yt/ytApi\";\r\n\r\nexport const API_TYPES = {\r\n    MIUSIC_SOURCE: \"Source of miusic\",\r\n    DATA_SOURCE: {\r\n        GRAPHQL: \"GraphQl api\",\r\n        REST: \"Rest api\",\r\n        WEB_SOCKET: \"Api with web socket connection\"\r\n    }\r\n}\r\n\r\n\r\nconst apisMap = {\r\n    \"YouTube\": {\r\n        type: API_TYPES.MIUSIC_SOURCE,\r\n        api: youTubeApi,\r\n        default: true\r\n    },\r\n    \"SoundCloud\": {\r\n        type: API_TYPES.MIUSIC_SOURCE,\r\n        api: soundCloudApi,\r\n        api: null,\r\n    },\r\n\r\n    \"UserAssets\": {\r\n        type: API_TYPES.DATA_SOURCE.GRAPHQL,\r\n        api: userAssetsApi,\r\n    },\r\n\r\n    \"RecordsStore\": {\r\n        type: [\r\n            API_TYPES.DATA_SOURCE.WEB_SOCKET, \r\n            API_TYPES.DATA_SOURCE.REST\r\n        ],\r\n        api: recordStoreApi,\r\n    }\r\n}\r\n\r\nexport function getApi(apiName) {\r\n    return apisMap[apiName].api;\r\n}\r\n\r\nexport function getApisName(type, param) {\r\n    if (!type && !param) {\r\n        return Object.keys(apisMap)\r\n    } else if (type) {\r\n        return Object.entries(apisMap)\r\n            .filter(([_, api]) => {\r\n                const typeCorrent = (api.type === type)\r\n                if (!param) {\r\n                    return typeCorrent\r\n                } else {\r\n                    const paramCorrect =\r\n                        Object.entries(param).every(([key, value]) =>\r\n                            api[key] === value\r\n                        )\r\n                    return (typeCorrent && paramCorrect);\r\n                }\r\n            })\r\n            .map(([name, _]) => name)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}