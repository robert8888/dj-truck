{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecords\\\\UserRecords.js\";\nimport React, { useEffect, useContext, useState, useRef, useCallback, useMemo } from \"react\";\nimport { useAuth0 } from \"./../../auth0/react-auth0-spa\";\nimport { connect } from \"react-redux\";\nimport { reqRecs } from \"./../../actions\";\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\nimport RecordSearch from \"./../common/components/RecordSearch/RecordSearch\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\nimport Pagin from \"./../common/components/Pagin/Pagin\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport \"./user-records.scss\";\n\nconst UserRecords = ({\n  requestList,\n  userId,\n  isCurrentUser,\n  searchQuery,\n  recordsList,\n  countAll\n}) => {\n  ///-----------Turn of footer--------------------\n  const layoutContext = useContext(LayoutContext);\n  useEffect(() => {\n    layoutContext.setFooter(false);\n  }, [layoutContext]); //--------------------------------\n\n  const [controls, player] = useRecordPlayer(); //-------------------------\n\n  const {\n    loading,\n    isAuthenticated\n  } = useAuth0();\n  const [pageTitle, setPageTitle] = useState(\"Records\");\n  const [displaySearch, setSearchDisplaing] = useState(false);\n  const [getSerachUrl] = useRecordSearchUrl();\n  const history = useHistory();\n  const {\n    user,\n    generes\n  } = useParams();\n  const queryStr = useLocation().search;\n  let {\n    pageSize,\n    page,\n    preloaded,\n    searchOpt,\n    _generes\n  } = useMemo(() => {\n    const values = queryString.parse(queryStr);\n    return {\n      pageSize: +values.pageSize,\n      page: +values.page,\n      preloaded: values.preloaded,\n      current: values.current,\n      searchOpt: values.searchOpt,\n      _generes: values.generes\n    };\n  }, [queryStr]);\n  const [_pageSize, setPageSize] = useState(20);\n  const [_page, setPage] = useState(0);\n  useEffect(() => {\n    console.log(\"call\");\n\n    if (preloaded && recordsList.length > 0 || loading) {\n      return;\n    }\n\n    if (isAuthenticated && !userId) {\n      return;\n    }\n\n    console.log(\"get in\");\n    let pg = page || 0;\n    let pgSize = pageSize || _pageSize;\n    let searchConsole = true;\n    const where = {};\n\n    if (searchQuery) {\n      where.query = searchQuery;\n\n      if (searchOpt) {\n        let opt = searchOpt.split(',');\n        where.queryOpt = opt;\n      }\n\n      setPageTitle(\"Search: \" + searchQuery);\n\n      if (_generes) {\n        //from search params\n        where.genereNames = _generes.split(\",\");\n      }\n    }\n\n    if (generes) {\n      where.genereNames = generes.split(\",\");\n    } else {\n      if (user) {\n        where.nickname = user;\n        setPageTitle(user + \" user records\");\n        searchConsole = false;\n      } else if (userId && isCurrentUser) {\n        where.userId = userId;\n        setPageTitle(\"Your records\");\n        searchConsole = false;\n      }\n    }\n\n    setSearchDisplaing(searchConsole);\n    requestList(pgSize, pg, where);\n    setPageSize(pgSize);\n    setPage(pg);\n  }, [userId, requestList, _pageSize, page, pageSize, preloaded, setPageTitle, searchQuery, generes, loading]);\n  const getNextPageUrl = useCallback((page, pageSize) => {\n    let url = window.location.pathname;\n    url += '?pageSize=' + pageSize;\n    url += '&page=' + page;\n    let search = window.location.search;\n    search = search.replace(/pageSize=\\d+/, '');\n    search = search.replace(/&page=\\d+/, '');\n    search = search.replace('?', '&');\n    url += search;\n    return url;\n  }, []);\n  const changePageSize = useCallback(pageSize => {\n    history.push(getNextPageUrl(_page, pageSize));\n  }, [history, _page, getNextPageUrl]);\n  const goToPage = useCallback(page => {\n    history.push(getNextPageUrl(page, _pageSize));\n  }, [history, _pageSize, getNextPageUrl]);\n  const onSearch = useCallback((queryStr, searchOpt) => {\n    let search = \"\";\n\n    for (let optName in searchOpt) {\n      if (!searchOpt[optName]) {\n        search += 'no-' + optName + ',';\n      }\n    }\n\n    if (search.length > 1) {\n      search = \"?searchOpt=\" + search;\n      search = search.substr(0, search.length - 1);\n    }\n\n    if (generes || _generes) {\n      // from route param \n      search += search.length ? \"&\" : \"?\";\n      search += \"&generes=\";\n      search += generes || \"\";\n      search += _generes || \"\";\n    }\n\n    history.push('/records/search/' + queryStr + search);\n  }, [history]);\n  return React.createElement(\"div\", {\n    className: \"user-records\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, displaySearch && React.createElement(RecordSearch, {\n    onSearch: onSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"user-records-top-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, pageTitle), React.createElement(DropdownButton, {\n    alignRight: true,\n    className: \"btn-pagger\",\n    title: _pageSize + \" on page \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \" 10 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 20),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \" 20 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 30),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \" 30 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 50),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \" 50 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 75),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \" 75 \"), React.createElement(Dropdown.Item, {\n    onClick: changePageSize.bind(null, 100),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \" 100 \"))), React.createElement(RecordsList, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(Pagin, {\n    current: _page,\n    call: goToPage,\n    all: Math.floor(countAll / _pageSize),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(PlayerControls, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId,\n  userNickname: state.user.nickname\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (pageSize, page, where) => dispatch(reqRecs(pageSize, page, where))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecords/UserRecords.js"],"names":["React","useEffect","useContext","useState","useRef","useCallback","useMemo","useAuth0","connect","reqRecs","RecordsList","RecordSearch","useRecordPlayer","PlayerControls","LayoutContext","Pagin","DropdownButton","Dropdown","useParams","useHistory","useLocation","queryString","UserRecords","requestList","userId","isCurrentUser","searchQuery","recordsList","countAll","layoutContext","setFooter","controls","player","loading","isAuthenticated","pageTitle","setPageTitle","displaySearch","setSearchDisplaing","getSerachUrl","useRecordSearchUrl","history","user","generes","queryStr","search","pageSize","page","preloaded","searchOpt","_generes","values","parse","current","_pageSize","setPageSize","_page","setPage","console","log","length","pg","pgSize","searchConsole","where","query","opt","split","queryOpt","genereNames","nickname","getNextPageUrl","url","window","location","pathname","replace","changePageSize","push","goToPage","onSearch","optName","substr","bind","Math","floor","mapStateToProps","state","records","list","dbId","userNickname","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState, useRef, useCallback, useMemo } from \"react\";\r\nimport { useAuth0 } from \"./../../auth0/react-auth0-spa\";\r\nimport { connect } from \"react-redux\";\r\nimport { reqRecs } from \"./../../actions\"\r\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\r\nimport RecordSearch from \"./../common/components/RecordSearch/RecordSearch\";\r\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\r\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\r\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\r\nimport Pagin from \"./../common/components/Pagin/Pagin\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport \"./user-records.scss\"\r\n\r\nconst UserRecords = ({\r\n    requestList,\r\n    userId,\r\n    isCurrentUser,\r\n    searchQuery,\r\n    recordsList,\r\n    countAll }) => {\r\n    ///-----------Turn of footer--------------------\r\n    const layoutContext = useContext(LayoutContext);\r\n\r\n    useEffect(() => {\r\n        layoutContext.setFooter(false);\r\n    }, [layoutContext])\r\n    //--------------------------------\r\n\r\n    const [controls, player] = useRecordPlayer();\r\n    //-------------------------\r\n    const { loading, isAuthenticated } = useAuth0();\r\n    const [pageTitle, setPageTitle] = useState(\"Records\");\r\n    const [displaySearch, setSearchDisplaing] = useState(false);\r\n    const [getSerachUrl] = useRecordSearchUrl();\r\n    const history = useHistory();\r\n    const { user, generes } = useParams();\r\n\r\n\r\n    const queryStr = useLocation().search;\r\n    let { pageSize, page, preloaded, searchOpt, _generes } = useMemo(() => {\r\n        const values = queryString.parse(queryStr)\r\n        return {\r\n            pageSize: +values.pageSize,\r\n            page: +values.page,\r\n            preloaded: values.preloaded,\r\n            current: values.current,\r\n            searchOpt: values.searchOpt,\r\n            _generes: values.generes,\r\n        }\r\n    }, [queryStr])\r\n\r\n    const [_pageSize, setPageSize] = useState(20);\r\n    const [_page, setPage] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"call\")\r\n        if (preloaded && recordsList.length > 0 || loading) { return }\r\n\r\n        if (isAuthenticated && !userId) { return }\r\n        console.log(\"get in\")\r\n        let pg = page || 0;\r\n        let pgSize = pageSize || _pageSize;\r\n\r\n        let searchConsole = true;\r\n\r\n        const where = {};\r\n        if (searchQuery) {\r\n            where.query = searchQuery;\r\n            if (searchOpt) {\r\n                let opt = searchOpt.split(',');\r\n                where.queryOpt = opt;\r\n            }\r\n            setPageTitle(\"Search: \" + searchQuery)\r\n            if (_generes) {//from search params\r\n                where.genereNames = _generes.split(\",\")\r\n            }\r\n        }\r\n\r\n        if (generes) {\r\n            where.genereNames = generes.split(\",\");\r\n        } else {\r\n            if (user) {\r\n                where.nickname = user;\r\n                setPageTitle(user + \" user records\")\r\n                searchConsole = false;\r\n            } else if (userId && isCurrentUser) {\r\n                where.userId = userId;\r\n                setPageTitle(\"Your records\")\r\n                searchConsole = false;\r\n            }\r\n        }\r\n        setSearchDisplaing(searchConsole);\r\n\r\n        requestList(pgSize, pg, where);\r\n        setPageSize(pgSize);\r\n        setPage(pg)\r\n\r\n    }, [userId,\r\n        requestList,\r\n        _pageSize,\r\n        page,\r\n        pageSize,\r\n        preloaded,\r\n        setPageTitle,\r\n        searchQuery,\r\n        generes,\r\n        loading,\r\n    ])\r\n\r\n    const getNextPageUrl = useCallback((page, pageSize) => {\r\n        let url = window.location.pathname;\r\n        url += '?pageSize=' + pageSize;\r\n        url += '&page=' + page;\r\n        let search = window.location.search;\r\n        search = search.replace(/pageSize=\\d+/, '');\r\n        search = search.replace(/&page=\\d+/, '');\r\n        search = search.replace('?', '&');\r\n        url += search;\r\n        return url;\r\n    }, [])\r\n\r\n    const changePageSize = useCallback((pageSize) => {\r\n        history.push(getNextPageUrl(_page, pageSize));\r\n    }, [history, _page, getNextPageUrl])\r\n\r\n    const goToPage = useCallback((page) => {\r\n        history.push(getNextPageUrl(page, _pageSize))\r\n    }, [history, _pageSize, getNextPageUrl])\r\n\r\n    const onSearch = useCallback((queryStr, searchOpt) => {\r\n        let search = \"\";\r\n        for (let optName in searchOpt) {\r\n            if (!searchOpt[optName]) {\r\n                search += 'no-' + optName + ',';\r\n            }\r\n        }\r\n        if (search.length > 1) {\r\n            search = \"?searchOpt=\" + search\r\n            search = search.substr(0, search.length - 1)\r\n        }\r\n        if (generes || _generes) { // from route param \r\n            search += (search.length) ? \"&\" : \"?\";\r\n            search += \"&generes=\";\r\n            search += generes || \"\";\r\n            search += _generes || \"\";\r\n        }\r\n\r\n        history.push('/records/search/' + queryStr + search)\r\n    }, [history])\r\n\r\n    return (\r\n        <div className=\"user-records\">\r\n            {displaySearch && <RecordSearch onSearch={onSearch} />}\r\n            <div className=\"user-records-top-bar\">\r\n                <h2 className=\"title\">{pageTitle}</h2>\r\n                <DropdownButton\r\n                    alignRight\r\n                    className=\"btn-pagger\"\r\n                    title={_pageSize + \" on page \"}>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 10)}> 10 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 20)}> 20 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 30)}> 30 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 50)}> 50 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 75)}> 75 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changePageSize.bind(null, 100)}> 100 </Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n\r\n            <RecordsList\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n            <Pagin\r\n                current={_page}\r\n                call={goToPage}\r\n                all={Math.floor(countAll / _pageSize)} />\r\n            <PlayerControls\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n    userNickname: state.user.nickname,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (pageSize, page, where) => dispatch(reqRecs(pageSize, page, where))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords)\r\n"]},"metadata":{},"sourceType":"module"}