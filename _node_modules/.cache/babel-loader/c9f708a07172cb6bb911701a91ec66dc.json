{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Deck\\\\SyncControl\\\\SyncBar\\\\SyncBar.js\";\nimport React from \"react\";\nimport Console from \"./../../../../../core/console/console\";\nimport \"./sync-bar.scss\";\n\nclass SyncBar extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      position: 0\n    };\n    this.channelInterface = Console.Get().getChannelInterface(this.props.name);\n    this.thumbElement = React.createRef();\n  }\n\n  update() {\n    // console.log(\"update\", this.props.name);\n    this.setState({ ...this.state,\n      position: this.channelInterface.getSyncBarPosition()\n    });\n\n    if (!this.props.active) {\n      console.log(\"stop interval\");\n      clearInterval(this.intervalHandler);\n      this.intervalHandler = null;\n    }\n  }\n\n  applyStyle(position) {\n    const style = {};\n    style.display = \"none\";\n\n    if (this.props.active) {\n      style.display = \"block\";\n      style.width = Math.abs(this.state.position * 100) + \"%\"; //max 50 %;\n\n      if (this.state.position > 0) {\n        style.left = \"50%\";\n      } else {\n        style.left = \"auto\";\n        style.right = \"50%\";\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.active) {\n      this.break = false;\n      this.update();\n    } else {\n      this.break = true;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className + \" sync-bar-deck-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bar-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.thumbElement,\n      className: \"bar-thumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SyncBar;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Console/Deck/SyncControl/SyncBar/SyncBar.js"],"names":["React","Console","SyncBar","Component","constructor","arguments","state","position","channelInterface","Get","getChannelInterface","props","name","thumbElement","createRef","update","setState","getSyncBarPosition","active","console","log","clearInterval","intervalHandler","applyStyle","style","display","width","Math","abs","left","right","componentDidUpdate","break","render","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAO,iBAAP;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGC,SAAT;AADY,SAMdC,KANc,GAMN;AACNC,MAAAA,QAAQ,EAAE;AADJ,KANM;AAEZ,SAAKC,gBAAL,GAAwBP,OAAO,CAACQ,GAAR,GAAcC,mBAAd,CAAkC,KAAKC,KAAL,CAAWC,IAA7C,CAAxB;AACA,SAAKC,YAAL,GAAoBb,KAAK,CAACc,SAAN,EAApB;AACD;;AAMDC,EAAAA,MAAM,GAAG;AACR;AACC,SAAKC,QAAL,CAAc,EACZ,GAAG,KAAKV,KADI;AAEZC,MAAAA,QAAQ,EAAE,KAAKC,gBAAL,CAAsBS,kBAAtB;AAFE,KAAd;;AAKA,QAAI,CAAC,KAAKN,KAAL,CAAWO,MAAhB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAC,MAAAA,aAAa,CAAC,KAAKC,eAAN,CAAb;AACA,WAAKA,eAAL,GAAuB,IAAvB;AACD;AACF;;AAEDC,EAAAA,UAAU,CAAChB,QAAD,EAAU;AAClB,UAAMiB,KAAK,GAAG,EAAd;AACAA,IAAAA,KAAK,CAACC,OAAN,GAAgB,MAAhB;;AAGA,QAAI,KAAKd,KAAL,CAAWO,MAAf,EAAuB;AACrBM,MAAAA,KAAK,CAACC,OAAN,GAAgB,OAAhB;AACAD,MAAAA,KAAK,CAACE,KAAN,GAAcC,IAAI,CAACC,GAAL,CAAS,KAAKtB,KAAL,CAAWC,QAAX,GAAsB,GAA/B,IAAsC,GAApD,CAFqB,CAEoC;;AACzD,UAAI,KAAKD,KAAL,CAAWC,QAAX,GAAsB,CAA1B,EAA6B;AAC3BiB,QAAAA,KAAK,CAACK,IAAN,GAAa,KAAb;AACD,OAFD,MAEO;AACLL,QAAAA,KAAK,CAACK,IAAN,GAAa,MAAb;AACAL,QAAAA,KAAK,CAACM,KAAN,GAAc,KAAd;AACD;AAEF;AACF;;AAEDC,EAAAA,kBAAkB,GAAE;AAClB,QAAG,KAAKpB,KAAL,CAAWO,MAAd,EAAqB;AACnB,WAAKc,KAAL,GAAa,KAAb;AACA,WAAKjB,MAAL;AACD,KAHD,MAGO;AACL,WAAKiB,KAAL,GAAa,IAAb;AACD;AACF;;AAGDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAE,KAAKtB,KAAL,CAAWuB,SAAX,GAAuB,iBAAvB,GAA2C,KAAKvB,KAAL,CAAWC,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKC,YAAf;AAA6B,MAAA,SAAS,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AA7DmC;;AAgEtC,eAAeX,OAAf","sourcesContent":["import React from \"react\";\r\nimport Console from \"./../../../../../core/console/console\"\r\nimport \"./sync-bar.scss\";\r\n\r\nclass SyncBar extends React.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.channelInterface = Console.Get().getChannelInterface(this.props.name);\r\n    this.thumbElement = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    position: 0\r\n  };\r\n\r\n  update() {\r\n   // console.log(\"update\", this.props.name);\r\n    this.setState({\r\n      ...this.state,\r\n      position: this.channelInterface.getSyncBarPosition()\r\n    });\r\n\r\n    if (!this.props.active) {\r\n      console.log(\"stop interval\");\r\n      clearInterval(this.intervalHandler);\r\n      this.intervalHandler = null;\r\n    }\r\n  }\r\n\r\n  applyStyle(position){\r\n    const style = {};\r\n    style.display = \"none\";\r\n\r\n\r\n    if (this.props.active) {\r\n      style.display = \"block\";\r\n      style.width = Math.abs(this.state.position * 100) + \"%\"; //max 50 %;\r\n      if (this.state.position > 0) {\r\n        style.left = \"50%\";\r\n      } else {\r\n        style.left = \"auto\";\r\n        style.right = \"50%\";\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.props.active){\r\n      this.break = false;\r\n      this.update();\r\n    } else {\r\n      this.break = true;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.className + \" sync-bar-deck-\" + this.props.name}>\r\n        <div className=\"bar-area\">\r\n          <div ref={this.thumbElement} className=\"bar-thumb\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SyncBar;\r\n"]},"metadata":{},"sourceType":"module"}