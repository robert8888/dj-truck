{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\ExternalSearch\\\\Search.js\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Dropdown, DropdownButton, FormControl } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { clearSearch, searchInput, searchStart } from \"../../../../actions\";\nimport { API_TYPES, getApisName } from \"./../../../../apis/apiProvider\";\nimport \"./search.scss\";\nimport SearchResults from './SerachList/SearchList.js';\n\nconst Search = ({\n  clearSearch,\n  searchStart,\n  setQuery,\n  queryString\n}) => {\n  const [resultOpen, setResultOpen] = useState(false);\n  const [source, setSource] = useState(null);\n  const [limit, setLimit] = useState(10);\n\n  const openList = () => setResultOpen(true);\n\n  const selectedHandel = () => {\n    clearSearch();\n    setResultOpen(false);\n  };\n\n  const apiList = useMemo(() => {\n    return getApisName(API_TYPES.MIUSIC_SOURCE).map(api => {\n      return React.createElement(Dropdown.Item, {\n        key: api,\n        onClick: setSource.bind(null, api),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"  \", api, \" \");\n    });\n  }, [API_TYPES.MIUSIC_SOURCE, getApisName]);\n  const controlKeyPress = useCallback(event => {\n    if (event.key !== \"Enter\") return;\n    console.log(\"soruce in coimponet\", source);\n    searchStart(queryString, source, limit);\n  }, [queryString, source, limit]);\n  return React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    className: \"btn-api-select\",\n    title: source ? source : getApisName(API_TYPES.MIUSIC_SOURCE, {\n      default: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, apiList), React.createElement(FormControl, {\n    className: \"search-control\",\n    type: \"text\",\n    placeholder: \"Tap in to serach on youtube\",\n    onChange: event => setQuery(event.target.value),\n    onKeyPress: controlKeyPress,\n    onFocus: openList,\n    value: queryString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(DropdownButton, {\n    className: \"btn-max-result-select\",\n    title: limit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onClick: () => setLimit(10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" 10 \"), React.createElement(Dropdown.Item, {\n    onClick: () => setLimit(25),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" 25 \"), React.createElement(Dropdown.Item, {\n    onClick: () => setLimit(50),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" 50 \"))), React.createElement(SearchResults, {\n    open: resultOpen,\n    selectedHandle: selectedHandel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  queryString: state.searchReducer.searchString\n});\n\nconst mapDispachToProps = dispatch => ({\n  setQuery: text => dispatch(searchInput(text)),\n  searchStart: (text, source, limit) => dispatch(searchStart(text, source, limit)),\n  clearSearch: () => dispatch(clearSearch())\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Search);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/ExternalSearch/Search.js"],"names":["React","useCallback","useMemo","useState","Dropdown","DropdownButton","FormControl","connect","clearSearch","searchInput","searchStart","API_TYPES","getApisName","SearchResults","Search","setQuery","queryString","resultOpen","setResultOpen","source","setSource","limit","setLimit","openList","selectedHandel","apiList","MIUSIC_SOURCE","map","api","bind","controlKeyPress","event","key","console","log","default","target","value","mapStateToProps","state","searchReducer","searchString","mapDispachToProps","dispatch","text"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\r\nimport { Dropdown, DropdownButton, FormControl } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearSearch, searchInput, searchStart } from \"../../../../actions\";\r\nimport { API_TYPES, getApisName } from \"./../../../../apis/apiProvider\";\r\nimport \"./search.scss\";\r\nimport SearchResults from './SerachList/SearchList.js';\r\n\r\n\r\n\r\n\r\n\r\nconst Search = ({\r\n    clearSearch,\r\n    searchStart,\r\n    setQuery,\r\n    queryString,\r\n}) => {\r\n    const [resultOpen, setResultOpen] = useState(false);\r\n    const [source, setSource] = useState(null);\r\n    const [limit, setLimit] = useState(10);\r\n\r\n    const openList = () => setResultOpen(true);\r\n\r\n    const selectedHandel = () => {\r\n        clearSearch();\r\n        setResultOpen(false);\r\n    }\r\n\r\n    const apiList = useMemo(()=>{\r\n        return getApisName(API_TYPES.MIUSIC_SOURCE).map(api => {\r\n            return (<Dropdown.Item key={api} onClick={setSource.bind(null, api)}>  {api} </Dropdown.Item>)\r\n        })\r\n    }, [API_TYPES.MIUSIC_SOURCE, getApisName])\r\n\r\n    const controlKeyPress = useCallback((event) => {\r\n        if (event.key !== \"Enter\") return\r\n        console.log(\"soruce in coimponet\", source)\r\n        searchStart(queryString, source, limit)\r\n    }, [queryString, source, limit])\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"search-controls\">\r\n                <DropdownButton\r\n                    className=\"btn-api-select\"\r\n                    title={(source) ? source : getApisName(API_TYPES.MIUSIC_SOURCE, { default: true })}>\r\n                    {apiList}\r\n                </DropdownButton>\r\n                <FormControl\r\n                    className=\"search-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Tap in to serach on youtube\"\r\n                    onChange={event => setQuery(event.target.value)}\r\n                    onKeyPress={controlKeyPress}\r\n                    onFocus={openList}\r\n                    value={queryString} />\r\n                <DropdownButton\r\n                    className=\"btn-max-result-select\"\r\n                    title={limit}>\r\n                    <Dropdown.Item onClick={() => setLimit(10)}> 10 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setLimit(25)}> 25 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setLimit(50)}> 50 </Dropdown.Item>\r\n                </DropdownButton>\r\n\r\n\r\n            </div>\r\n\r\n            <SearchResults\r\n                open={resultOpen}\r\n                selectedHandle={selectedHandel} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    queryString: state.searchReducer.searchString\r\n})\r\n\r\nconst mapDispachToProps = dispatch => ({\r\n    setQuery: (text) => dispatch(searchInput(text)),\r\n    searchStart: (text, source, limit) => dispatch(searchStart(text, source, limit)),\r\n    clearSearch: () => dispatch(clearSearch()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Search);"]},"metadata":{},"sourceType":"module"}