{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Hooks\\\\Emoticons\\\\EmotiContainer\\\\EmotiContainer.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport UUID from 'uuidjs';\nimport icons from \"./emoji.json\";\nconst iconsOnPanel = 30;\nconst buttonStyle = {\n  background: 'transparent',\n  border: 'none',\n  boxShadow: 'none',\n  outline: 'none',\n  width: '15%',\n  height: '20%'\n};\nconst sectionStyle = {\n  width: '100%',\n  height: '100%',\n  display: 'inline-block',\n  verticalAlign: 'top',\n  whiteSpace: 'normal'\n};\nconst containerStyle = {\n  overflow: 'hidden',\n  width: '200px',\n  height: '200px',\n  whiteSpace: 'nowrap',\n  position: 'absolute'\n};\n\nconst EmotiContainer = ({\n  onSelect,\n  node\n}) => {\n  const iconsPanels = useMemo(() => {\n    let panels = [];\n\n    for (let i = 0; i < icons.length; i += iconsOnPanel) {\n      console.log(i);\n      let panel = [];\n\n      for (let j = i; j < iconsOnPanel + i && i + j < icons.length; j++) {\n        let icon = icons[j];\n        panel.push(React.createElement(\"button\", {\n          key: 'icon-' + (i + j),\n          style: buttonStyle,\n          onSelect: onSelect.bind(null, icon.emoji),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, icon.emoji));\n      }\n\n      panels.push(React.createElement(\"section\", {\n        style: sectionStyle,\n        className: \"emoticons-panel\",\n        key: 'pannel-' + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, panel));\n    }\n\n    return panels;\n  }, []);\n  console.log(\"render emoti\");\n  return React.createElement(\"div\", {\n    className: \"emoticons-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"emoticons-slider\",\n    style: containerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, iconsPanels));\n};\n\nexport default EmotiContainer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/Emoticons/EmotiContainer/EmotiContainer.js"],"names":["React","useCallback","useMemo","UUID","icons","iconsOnPanel","buttonStyle","background","border","boxShadow","outline","width","height","sectionStyle","display","verticalAlign","whiteSpace","containerStyle","overflow","position","EmotiContainer","onSelect","node","iconsPanels","panels","i","length","console","log","panel","j","icon","push","bind","emoji"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,UAAU,EAAE,aADI;AAEhBC,EAAAA,MAAM,EAAE,MAFQ;AAGhBC,EAAAA,SAAS,EAAE,MAHK;AAIhBC,EAAAA,OAAO,EAAE,MAJO;AAKhBC,EAAAA,KAAK,EAAE,KALS;AAMhBC,EAAAA,MAAM,EAAE;AANQ,CAApB;AASA,MAAMC,YAAY,GAAG;AACjBF,EAAAA,KAAK,EAAE,MADU;AAEjBC,EAAAA,MAAM,EAAE,MAFS;AAGjBE,EAAAA,OAAO,EAAE,cAHQ;AAIjBC,EAAAA,aAAa,EAAG,KAJC;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAArB;AAQA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAG,QADQ;AAEnBP,EAAAA,KAAK,EAAE,OAFY;AAGnBC,EAAAA,MAAM,EAAE,OAHW;AAInBI,EAAAA,UAAU,EAAE,QAJO;AAMnBG,EAAAA,QAAQ,EAAE;AANS,CAAvB;;AASA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAG3C,QAAMC,WAAW,GAAGrB,OAAO,CAAC,MAAM;AAC9B,QAAIsB,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,KAAK,CAACsB,MAA1B,EAAkCD,CAAC,IAAIpB,YAAvC,EAAqD;AACjDsB,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACA,UAAII,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAGL,CAAb,EAAiBK,CAAC,GAAGzB,YAAY,GAAGoB,CAApB,IAA2BA,CAAC,GAAGK,CAAJ,GAAQ1B,KAAK,CAACsB,MAAzD,EAAkEI,CAAC,EAAnE,EAAuE;AACnE,YAAIC,IAAI,GAAG3B,KAAK,CAAC0B,CAAD,CAAhB;AACAD,QAAAA,KAAK,CAACG,IAAN,CACI;AAAQ,UAAA,GAAG,EAAE,WAAUP,CAAC,GAACK,CAAZ,CAAb;AAA6B,UAAA,KAAK,EAAExB,WAApC;AAAiD,UAAA,QAAQ,EAAEe,QAAQ,CAACY,IAAT,CAAc,IAAd,EAAoBF,IAAI,CAACG,KAAzB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6FH,IAAI,CAACG,KAAlG,CADJ;AAGH;;AACDV,MAAAA,MAAM,CAACQ,IAAP,CACI;AAAS,QAAA,KAAK,EAAEnB,YAAhB;AAA8B,QAAA,SAAS,EAAC,iBAAxC;AAA0D,QAAA,GAAG,EAAE,YAAUY,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKI,KADL,CADJ;AAKH;;AAGD,WAAOL,MAAP;AACH,GApB0B,EAoBxB,EApBwB,CAA3B;AAsBAG,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAEX,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMM,WADN,CADJ,CADJ;AAQH,CAlCD;;AAoCA,eAAeH,cAAf","sourcesContent":["import React, { useCallback, useMemo } from 'react';\r\nimport UUID from 'uuidjs'\r\nimport icons from \"./emoji.json\";\r\nconst iconsOnPanel = 30;\r\n\r\nconst buttonStyle = {\r\n    background: 'transparent',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    outline: 'none',\r\n    width: '15%',\r\n    height: '20%'\r\n}\r\n\r\nconst sectionStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'inline-block',\r\n    verticalAlign : 'top',\r\n    whiteSpace: 'normal'\r\n}\r\n\r\nconst containerStyle = {\r\n    overflow : 'hidden',\r\n    width: '200px',\r\n    height: '200px',\r\n    whiteSpace: 'nowrap',\r\n\r\n    position: 'absolute',\r\n}\r\n\r\nconst EmotiContainer = ({ onSelect, node }) => {\r\n\r\n\r\n    const iconsPanels = useMemo(() => {\r\n        let panels = [];\r\n        for (let i = 0; i < icons.length; i += iconsOnPanel) {\r\n            console.log(i)\r\n            let panel = [];\r\n            for (let j = i; (j < iconsOnPanel + i) && (i + j < icons.length); j++) {\r\n                let icon = icons[j]\r\n                panel.push(\r\n                    <button key={'icon-'+ (i+j)} style={buttonStyle} onSelect={onSelect.bind(null, icon.emoji)}>{icon.emoji}</button>\r\n                )\r\n            }\r\n            panels.push(\r\n                <section style={sectionStyle} className=\"emoticons-panel\" key={'pannel-'+i}>\r\n                    {panel}\r\n                </section>\r\n            )\r\n        }\r\n\r\n\r\n        return panels;\r\n    }, [])\r\n\r\n    console.log(\"render emoti\")\r\n    return (\r\n        <div className=\"emoticons-container\" >\r\n            <div className=\"emoticons-slider\" style={containerStyle}>\r\n                 {iconsPanels}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmotiContainer;"]},"metadata":{},"sourceType":"module"}