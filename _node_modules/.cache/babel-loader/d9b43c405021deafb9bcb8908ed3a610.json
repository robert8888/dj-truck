{"ast":null,"code":"import _objectSpread from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(watcher),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handel);import{call,put,select,takeEvery}from'redux-saga/effects';import{ACTIONS,pushLog,setUserProfileWithToken}from\"../../actions\";import{getApi}from\"./../../apis/apiProvider\";import{getToken}from\"./../../auth0/getToken\";import{Log}from\"./../../utils/logger/logger\";import errorParser from\"./../../utils/serverErrorParser/errorParser\";var getLogged=function getLogged(state){return state.user.logged;};export default function watcher(){return _regeneratorRuntime.wrap(function watcher$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(ACTIONS.SET_USER_PROFILE,handel);case 2:case\"end\":return _context.stop();}}},_marked);}function handel(action){var path,logged,_response$data,_getApi,callQuery,queries,query,token,response,user;return _regeneratorRuntime.wrap(function handel$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:path=['saga','current user saga'];_context2.next=3;return select(getLogged);case 3:logged=_context2.sent;if(!logged){_context2.next=6;break;}return _context2.abrupt(\"return\");case 6:_context2.prev=6;_getApi=getApi(\"UserAssets\"),callQuery=_getApi.callQuery,queries=_getApi.queries;query=queries.myIdQl;_context2.next=11;return call(getToken);case 11:token=_context2.sent;_context2.next=14;return callQuery(query,token);case 14:response=_context2.sent;user=response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.me;if(!response.errors){_context2.next=18;break;}throw new Error(\"unable to reasd cucrent user data:\"+errorParser(response.errors));case 18:if(!response.user){_context2.next=20;break;}throw new Error(\"don't revice user data from server\");case 20:action.user=_objectSpread({},action.user,{dbId:user.id},user);_context2.next=23;return put(setUserProfileWithToken(action.user,token));case 23:_context2.next=25;return put(pushLog(new Log(\"Recive current user data\",path)));case 25:_context2.next=31;break;case 27:_context2.prev=27;_context2.t0=_context2[\"catch\"](6);_context2.next=31;return put(pushLog(Log.Error(path,_context2.t0.message,\"Sorry. During process of reading user data occurred a problem\",_context2.t0)));case 31:case\"end\":return _context2.stop();}}},_marked2,null,[[6,27]]);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/user/currentUserSaga.js"],"names":["watcher","handel","call","put","select","takeEvery","ACTIONS","pushLog","setUserProfileWithToken","getApi","getToken","Log","errorParser","getLogged","state","user","logged","SET_USER_PROFILE","action","path","callQuery","queries","query","myIdQl","token","response","data","me","errors","Error","dbId","id","message"],"mappings":"4QASyBA,O,iDAKfC,M,EAdV,OAASC,IAAT,CAAeC,GAAf,CAAoBC,MAApB,CAA4BC,SAA5B,KAA6C,oBAA7C,CACA,OAASC,OAAT,CAAkBC,OAAlB,CAA2BC,uBAA3B,KAA0D,eAA1D,CACA,OAASC,MAAT,KAAuB,0BAAvB,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,GAAT,KAAoB,6BAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6CAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWC,MAAf,EAAvB,CAEA,cAAe,SAAUhB,CAAAA,OAAV,mIAEX,MAAMK,CAAAA,SAAS,CAACC,OAAO,CAACW,gBAAT,CAA2BhB,MAA3B,CAAf,CAFW,sDAKf,QAAUA,CAAAA,MAAV,CAAiBiB,MAAjB,uMACUC,IADV,CACiB,CAAC,MAAD,CAAS,mBAAT,CADjB,kBAEmB,MAAMf,CAAAA,MAAM,CAACS,SAAD,CAAZ,CAFnB,OAEUG,MAFV,oBAGQA,MAHR,4FAOuCP,MAAM,CAAC,YAAD,CAP7C,CAOgBW,SAPhB,SAOgBA,SAPhB,CAO2BC,OAP3B,SAO2BA,OAP3B,CAQcC,KARd,CAQsBD,OAAO,CAACE,MAR9B,mBASsB,MAAMrB,CAAAA,IAAI,CAACQ,QAAD,CAAV,CATtB,QAScc,KATd,kCAUyB,MAAMJ,CAAAA,SAAS,CAACE,KAAD,CAAQE,KAAR,CAAf,CAVzB,QAUcC,QAVd,gBAYcV,IAZd,CAYqBU,QAZrB,SAYqBA,QAZrB,iCAYqBA,QAAQ,CAAEC,IAZ/B,yCAYqB,eAAgBC,EAZrC,KAcWF,QAAQ,CAACG,MAdpB,gCAekB,IAAIC,CAAAA,KAAJ,CAAU,qCAAuCjB,WAAW,CAACa,QAAQ,CAACG,MAAV,CAA5D,CAflB,aAkBWH,QAAQ,CAACV,IAlBpB,gCAmBkB,IAAIc,CAAAA,KAAJ,CAAU,oCAAV,CAnBlB,SAsBQX,MAAM,CAACH,IAAP,kBACOG,MAAM,CAACH,IADd,EAEIe,IAAI,CAAEf,IAAI,CAACgB,EAFf,EAGOhB,IAHP,EAtBR,kBA4BQ,MAAMZ,CAAAA,GAAG,CAACK,uBAAuB,CAACU,MAAM,CAACH,IAAR,CAAcS,KAAd,CAAxB,CAAT,CA5BR,0BA8BQ,MAAMrB,CAAAA,GAAG,CAACI,OAAO,CAAC,GAAII,CAAAA,GAAJ,CAAQ,0BAAR,CAAoCQ,IAApC,CAAD,CAAR,CAAT,CA9BR,+GAgCQ,MAAMhB,CAAAA,GAAG,CAACI,OAAO,CAACI,GAAG,CAACkB,KAAJ,CACdV,IADc,CAEd,aAAMa,OAFQ,CAGd,+DAHc,cAAD,CAAR,CAAT,CAhCR","sourcesContent":["import { call, put, select, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS, pushLog, setUserProfileWithToken } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { getToken } from \"./../../auth0/getToken\";\r\nimport { Log } from \"./../../utils/logger/logger\";\r\nimport errorParser from \"./../../utils/serverErrorParser/errorParser\";\r\n\r\nconst getLogged = state => state.user.logged;\r\n\r\nexport default function* watcher() {\r\n    //action dispatched in auth0/react-auth0-spa.js\r\n    yield takeEvery(ACTIONS.SET_USER_PROFILE, handel);\r\n}\r\n\r\nfunction* handel(action) {\r\n    const path = ['saga', 'current user saga'];\r\n    const logged = yield select(getLogged);\r\n    if (logged) {\r\n        return\r\n    }\r\n    try{\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n        const query = queries.myIdQl;\r\n        const token = yield call(getToken);\r\n        const response = yield callQuery(query, token);\r\n\r\n        const user = response?.data?.me;\r\n    \r\n        if(response.errors){\r\n            throw new Error(\"unable to reasd cucrent user data:\" + errorParser(response.errors));\r\n        }\r\n\r\n        if(response.user){\r\n            throw new Error(\"don't revice user data from server\")\r\n        }\r\n\r\n        action.user = {\r\n            ...action.user,\r\n            dbId: user.id,\r\n            ...user,\r\n        }\r\n\r\n        yield put(setUserProfileWithToken(action.user, token))\r\n        \r\n        yield put(pushLog(new Log(\"Recive current user data\", path)))\r\n    } catch(error){\r\n        yield put(pushLog(Log.Error(\r\n            path,\r\n            error.message,\r\n            \"Sorry. During process of reading user data occurred a problem\",\r\n            error\r\n        )))\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}