{"ast":null,"code":"import STATUS from\"./../STATUS\";export default function checkLoopState(prev,current){prev=prev.console;current=current.console;var response=null;for(var _i=0,_Object$keys=Object.keys(prev.channel);_i<_Object$keys.length;_i++){var channelName=_Object$keys[_i];var prevValue=prev.channel[channelName].playBackState.loop;var currentValue=current.channel[channelName].playBackState.loop;var loopLength=current.channel[channelName].deckState.loopLength;if(prevValue!==currentValue){response=response||[];response.push({status:STATUS.LOOP_CHANGE,channel:channelName,currentValue:{state:currentValue,loopLength:loopLength}});}}return response;}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/observer/comparators/loop.js"],"names":["STATUS","checkLoopState","prev","current","console","response","Object","keys","channel","channelName","prevValue","playBackState","loop","currentValue","loopLength","deckState","push","status","LOOP_CHANGE","state"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,aAAnB,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,IAAxB,CAA8BC,OAA9B,CAAuC,CACpDD,IAAI,CAAGA,IAAI,CAACE,OAAZ,CACAD,OAAO,CAAGA,OAAO,CAACC,OAAlB,CACA,GAAIC,CAAAA,QAAQ,CAAG,IAAf,CACA,0BAAwBC,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACM,OAAjB,CAAxB,6BAAmD,CAA9C,GAAIC,CAAAA,WAAW,iBAAf,CACH,GAAMC,CAAAA,SAAS,CAAGR,IAAI,CAACM,OAAL,CAAaC,WAAb,EAA0BE,aAA1B,CAAwCC,IAA1D,CACA,GAAMC,CAAAA,YAAY,CAAGV,OAAO,CAACK,OAAR,CAAgBC,WAAhB,EAA6BE,aAA7B,CAA2CC,IAAhE,CAEA,GAAME,CAAAA,UAAU,CAAGX,OAAO,CAACK,OAAR,CAAgBC,WAAhB,EAA6BM,SAA7B,CAAuCD,UAA1D,CACA,GAAIJ,SAAS,GAAKG,YAAlB,CAAgC,CAC9BR,QAAQ,CAAGA,QAAQ,EAAI,EAAvB,CACAA,QAAQ,CAACW,IAAT,CAAc,CACZC,MAAM,CAAEjB,MAAM,CAACkB,WADH,CAEZV,OAAO,CAAEC,WAFG,CAGZI,YAAY,CAAE,CACZM,KAAK,CAAEN,YADK,CAEZC,UAAU,CAAEA,UAFA,CAHF,CAAd,EAQD,CACF,CACD,MAAOT,CAAAA,QAAP,CACD","sourcesContent":["import STATUS from \"./../STATUS\";\r\n\r\nexport default function checkLoopState(prev, current) {\r\n  prev = prev.console;\r\n  current = current.console;\r\n  let response = null;\r\n  for (let channelName of Object.keys(prev.channel)) {\r\n    const prevValue = prev.channel[channelName].playBackState.loop;\r\n    const currentValue = current.channel[channelName].playBackState.loop;\r\n\r\n    const loopLength = current.channel[channelName].deckState.loopLength;\r\n    if (prevValue !== currentValue) {\r\n      response = response || [];\r\n      response.push({\r\n        status: STATUS.LOOP_CHANGE,\r\n        channel: channelName,\r\n        currentValue: {\r\n          state: currentValue,\r\n          loopLength: loopLength\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}