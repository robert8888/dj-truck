{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\PlayBackControls\\\\PlayBackControls.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { togglePlay, toggleCue } from \"./../../../actions/actions\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport \"./play-back.scss\";\n\nconst PlayBackControls = props => {\n  console.log(props);\n  return React.createElement(\"div\", {\n    className: \"play-back-controls-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"btn-play \" + (!props.playPressed && \"btn--pressed\" || \"\"),\n    onClick: props.playPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faPlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(Button, {\n    className: \"btn-cue \" + (props.cuePressed && \"btn--pressed\" || \"\"),\n    onClick: props.cuePress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Cue\"));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  playPressed: state.console.chanel[ownProps.name].state.paused,\n  cuePressed: state.console.chanel[ownProps.name].state.cuePressed\n});\n\nconst mapDispachToProps = dispach => ({\n  onPlayPress: destination => dispach(togglePlay(destination)),\n  onCuePress: destination => dispach(toggleCue(destination))\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(PlayBackControls);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/PlayBackControls/PlayBackControls.js"],"names":["React","connect","togglePlay","toggleCue","Button","FontAwesomeIcon","faPlay","PlayBackControls","props","console","log","name","playPressed","playPress","cuePressed","cuePress","mapStateToProps","state","ownProps","chanel","paused","mapDispachToProps","dispach","onPlayPress","destination","onCuePress"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAsBC,SAAtB,QAAuC,4BAAvC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAO,kBAAP;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACI;AAAK,IAAA,SAAS,EAAE,wBAAwBA,KAAK,CAACG,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,eAAiB,CAACH,KAAK,CAACI,WAAR,IAAwB,cAAzB,IAA6C,EAA5D,CAAnB;AACI,IAAA,OAAO,EAAIJ,KAAK,CAACK,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEP,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CADJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,cAAeE,KAAK,CAACM,UAAN,IAAoB,cAArB,IAAwC,EAAtD,CAAnB;AACI,IAAA,OAAO,EAAGN,KAAK,CAACO,QADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,CADJ;AAYH,CAdD;;AAgBA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CN,EAAAA,WAAW,EAAGK,KAAK,CAACR,OAAN,CAAcU,MAAd,CAAqBD,QAAQ,CAACP,IAA9B,EAAoCM,KAApC,CAA0CG,MADd;AAE1CN,EAAAA,UAAU,EAAGG,KAAK,CAACR,OAAN,CAAcU,MAAd,CAAqBD,QAAQ,CAACP,IAA9B,EAAoCM,KAApC,CAA0CH;AAFb,CAAtB,CAAxB;;AAKA,MAAMO,iBAAiB,GAAGC,OAAO,KAAK;AAClCC,EAAAA,WAAW,EAAIC,WAAD,IAAiBF,OAAO,CAACpB,UAAU,CAACsB,WAAD,CAAX,CADJ;AAElCC,EAAAA,UAAU,EAAID,WAAD,IAAiBF,OAAO,CAACnB,SAAS,CAACqB,WAAD,CAAV;AAFH,CAAL,CAAjC;;AAKA,eAAevB,OAAO,CAACe,eAAD,EAAkBK,iBAAlB,CAAP,CAA4Cd,gBAA5C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\"; \r\nimport { togglePlay , toggleCue } from \"./../../../actions/actions\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./play-back.scss\";\r\n\r\nconst PlayBackControls = props => {\r\n    console.log(props)\r\n    return (\r\n        <div className={\"play-back-controls-\" + props.name }>\r\n            <Button className={\"btn-play \" + (((!props.playPressed) && \"btn--pressed\" ) || \"\" ) }\r\n                onClick={  props.playPress }>\r\n                    <FontAwesomeIcon icon={faPlay}/>\r\n            </Button>\r\n            <Button className={\"btn-cue \" + ((props.cuePressed && \"btn--pressed\") || \"\") }\r\n                onClick={ props.cuePress }> \r\n                    Cue \r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    playPressed : state.console.chanel[ownProps.name].state.paused,\r\n    cuePressed : state.console.chanel[ownProps.name].state.cuePressed,\r\n})\r\n\r\nconst mapDispachToProps = dispach => ({\r\n    onPlayPress : (destination) => dispach(togglePlay(destination)),\r\n    onCuePress : (destination) => dispach(toggleCue(destination))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(PlayBackControls);\r\n\r\n"]},"metadata":{},"sourceType":"module"}