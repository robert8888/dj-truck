{"ast":null,"code":"import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import store from\"./../../../../../../store\";import WaveSurfer from\"wavesurfer\";import{hexToRgb}from\"./../../../../../../utils/colors/converter\";import{getBeatLength}from\"./../../../../../../utils/bpm/converter\";var Looper=/*#__PURE__*/function(){function Looper(){_classCallCheck(this,Looper);}_createClass(Looper,[{key:\"makeLoop\",value:function makeLoop(channel,loopLength){var _this=this;channel.loop={};// namespace for loop variables;\nvar state=store.getState();var channelName=channel.channelName;var beatLength=getBeatLength(state.console.channel[channelName].track.bpm);var beatOffset=state.console.channel[channelName].playBackState.offset;var currentPosition=channel.master.getCurrentTime();var audioBufferSource=channel.master.backend.source;channel.loop.audioBufferSource=audioBufferSource;channel.loop.beatLength=beatLength;//starting from last whole beat start\nchannel.loop.start=currentPosition-(currentPosition-beatOffset)%beatLength;if(loopLength<1){channel.loop.start=currentPosition+(beatLength*loopLength-(currentPosition-beatOffset)%(beatLength*loopLength));}channel.loop.end=channel.loop.start+beatLength*loopLength;if(isNaN(channel.loop.start)||isNaN(channel.loop.end)){throw new Error(\"invalid value of range variables\");}audioBufferSource.loopStart=channel.loop.start;audioBufferSource.loopEnd=channel.loop.end;audioBufferSource.loop=true;//looping waveSurrfer and update end position if is set; \nchannel.loop.watch=function(time){if(time>channel.loop.end){channel.master.backend.startPosition=channel.loop.start+(time-channel.loop.end);channel.master.backend.lastPlay=channel.master.backend.ac.currentTime;channel.master.drawer.progress(channel.master.backend.getPlayedPercents());if(channel.loop.nextEnd){_this._updateLoopEnd(channel,channel.loop.nextEnd);delete channel.loop.nextEnd;}}};channel.loop.reset=function(){channel.loop.audioBufferSource=channel.master.backend.source;channel.loop.audioBufferSource.loopStart=channel.loop.start;channel.loop.audioBufferSource.loopEnd=channel.loop.end;channel.loop.audioBufferSource.loop=true;};channel.master.on(\"audioprocess\",channel.loop.watch);channel.master.on(\"interaction\",channel.loop.reset);this.drawLoop(channel);}},{key:\"updateLoop\",value:function updateLoop(channel,loopLength){var _channel$loop=channel.loop,start=_channel$loop.start,beatLength=_channel$loop.beatLength;var newEnd=start+beatLength*loopLength;var currentPosition=channel.master.getCurrentTime();if(newEnd<currentPosition){channel.loop.nextEnd=newEnd;}else{this._updateLoopEnd(channel,newEnd);}}},{key:\"_updateLoopEnd\",value:function _updateLoopEnd(channel,newEnd){channel.loop.end=newEnd;channel.loop.audioBufferSource.loopEnd=newEnd;this.clearDraw(channel);this.drawLoop(channel);}},{key:\"endLoop\",value:function endLoop(channel){channel.master.un(\"audioprocess\",channel.loop.watch);channel.master.un(\"interaction\",channel.loop.reset);channel.master.backend.source.loop=false;this.clearDraw(channel);delete channel.loop;}},{key:\"drawLoop\",value:function drawLoop(channel){var _channel$loop2=channel.loop,start=_channel$loop2.start,end=_channel$loop2.end;var wrapper=channel.master.drawer.wrapper;var styleApply=WaveSurfer.Drawer.style;var minPxPerSec=channel.master.params.minPxPerSec;var color=hexToRgb(channel.master.params.waveColor);var regionStyle={position:\"absolute\",top:\"0px\",height:\"100%\",background:\"rgba(\"+color.r+\",\"+color.g+\",\"+color.b+\", 0.3)\"};var region=document.createElement(\"div\");regionStyle.left=start*minPxPerSec+\"px\";regionStyle.width=(end-start)*minPxPerSec+\"px\";styleApply(region,regionStyle);wrapper.appendChild(region);channel.loop.region=region;}},{key:\"clearDraw\",value:function clearDraw(channel){channel.loop.region.remove();}}]);return Looper;}();export{Looper as default};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/channels/looper/looper.js"],"names":["store","WaveSurfer","hexToRgb","getBeatLength","Looper","channel","loopLength","loop","state","getState","channelName","beatLength","console","track","bpm","beatOffset","playBackState","offset","currentPosition","master","getCurrentTime","audioBufferSource","backend","source","start","end","isNaN","Error","loopStart","loopEnd","watch","time","startPosition","lastPlay","ac","currentTime","drawer","progress","getPlayedPercents","nextEnd","_updateLoopEnd","reset","on","drawLoop","newEnd","clearDraw","un","wrapper","styleApply","Drawer","style","minPxPerSec","params","color","waveColor","regionStyle","position","top","height","background","r","g","b","region","document","createElement","left","width","appendChild","remove"],"mappings":"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","sourcesContent":["import store from \"./../../../../../../store\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport { hexToRgb } from \"./../../../../../../utils/colors/converter\";\r\nimport { getBeatLength } from \"./../../../../../../utils/bpm/converter\";\r\n\r\nexport default class Looper {\r\n    makeLoop(channel, loopLength) {\r\n        channel.loop = {}// namespace for loop variables;\r\n        const state = store.getState();\r\n        const channelName = channel.channelName;\r\n\r\n        const beatLength = getBeatLength(state.console.channel[channelName].track.bpm);\r\n        const beatOffset = state.console.channel[channelName].playBackState.offset;\r\n        const currentPosition = channel.master.getCurrentTime();\r\n        const audioBufferSource = channel.master.backend.source;\r\n        channel.loop.audioBufferSource = audioBufferSource;\r\n        channel.loop.beatLength = beatLength;\r\n\r\n        //starting from last whole beat start\r\n        channel.loop.start = currentPosition - ((currentPosition - beatOffset) % beatLength);\r\n\r\n        if (loopLength < 1) {\r\n            channel.loop.start = currentPosition\r\n                + ((beatLength * loopLength) - (currentPosition - beatOffset) % (beatLength * loopLength));\r\n        }\r\n        channel.loop.end = channel.loop.start + beatLength * loopLength;\r\n\r\n        if (isNaN(channel.loop.start) || isNaN(channel.loop.end)) {\r\n            throw new Error(\"invalid value of range variables\")\r\n        }\r\n        audioBufferSource.loopStart = channel.loop.start;\r\n        audioBufferSource.loopEnd = channel.loop.end;\r\n        audioBufferSource.loop = true;\r\n\r\n        //looping waveSurrfer and update end position if is set; \r\n        channel.loop.watch = (time) => {\r\n            if (time > channel.loop.end) {\r\n                channel.master.backend.startPosition = channel.loop.start + (time - channel.loop.end);\r\n                channel.master.backend.lastPlay = channel.master.backend.ac.currentTime;\r\n                channel.master.drawer.progress(channel.master.backend.getPlayedPercents());\r\n                if (channel.loop.nextEnd) {\r\n                    this._updateLoopEnd(channel, channel.loop.nextEnd);\r\n                    delete channel.loop.nextEnd;\r\n                }\r\n            }\r\n        }\r\n\r\n        channel.loop.reset = () => {\r\n            channel.loop.audioBufferSource = channel.master.backend.source;\r\n            channel.loop.audioBufferSource.loopStart = channel.loop.start;\r\n            channel.loop.audioBufferSource.loopEnd = channel.loop.end;\r\n            channel.loop.audioBufferSource.loop = true;\r\n        }\r\n\r\n        channel.master.on(\"audioprocess\", channel.loop.watch);\r\n        channel.master.on(\"interaction\", channel.loop.reset)\r\n        this.drawLoop(channel);\r\n    }\r\n\r\n    updateLoop(channel, loopLength) {\r\n        const { start, beatLength } = channel.loop;\r\n        const newEnd = start + beatLength * loopLength;\r\n        const currentPosition = channel.master.getCurrentTime();\r\n        if (newEnd < currentPosition) {\r\n            channel.loop.nextEnd = newEnd;\r\n        } else {\r\n            this._updateLoopEnd(channel, newEnd)\r\n        }\r\n    }\r\n\r\n    _updateLoopEnd(channel, newEnd) {\r\n        channel.loop.end = newEnd;\r\n        channel.loop.audioBufferSource.loopEnd = newEnd;\r\n        this.clearDraw(channel);\r\n        this.drawLoop(channel);\r\n    }\r\n\r\n    endLoop(channel) {\r\n        channel.master.un(\"audioprocess\", channel.loop.watch);\r\n        channel.master.un(\"interaction\", channel.loop.reset);\r\n        channel.master.backend.source.loop = false;\r\n        this.clearDraw(channel);\r\n        delete channel.loop;\r\n    }\r\n\r\n    drawLoop(channel) {\r\n        let { start, end } = channel.loop;\r\n        const wrapper = channel.master.drawer.wrapper;\r\n        const styleApply = WaveSurfer.Drawer.style;\r\n        const minPxPerSec = channel.master.params.minPxPerSec;\r\n        const color = hexToRgb(channel.master.params.waveColor);\r\n\r\n        const regionStyle = {\r\n            position: \"absolute\",\r\n            top: \"0px\",\r\n            height: \"100%\",\r\n            background: \"rgba(\" + color.r + \",\" + color.g + \",\" + color.b + \", 0.3)\"\r\n        };\r\n\r\n        const region = document.createElement(\"div\");\r\n        regionStyle.left = start * minPxPerSec + \"px\";\r\n        regionStyle.width = (end - start) * minPxPerSec + \"px\";\r\n\r\n        styleApply(region, regionStyle);\r\n        wrapper.appendChild(region);\r\n        channel.loop.region = region;\r\n    }\r\n\r\n    clearDraw(channel) {\r\n        channel.loop.region.remove();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}