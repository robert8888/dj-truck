{"ast":null,"code":"'use strict';\n\nvar xtend = require('xtend');\n\nvar ccount = require('ccount');\n\nvar entities = require('stringify-entities');\n\nmodule.exports = serializeDoctype;\nvar docLower = 'doctype';\nvar docUpper = docLower.toUpperCase();\n\nfunction serializeDoctype(ctx, node) {\n  var doc = ctx.upperDoctype ? docUpper : docLower;\n  var sep = ctx.tightDoctype ? '' : ' ';\n  var name = node.name;\n  var pub = node.public;\n  var sys = node.system;\n  var parts = ['<!' + doc];\n\n  if (name) {\n    parts.push(sep, name);\n\n    if (pub !== null && pub !== undefined) {\n      parts.push(' public', sep, quote(ctx, pub));\n    } else if (sys !== null && sys !== undefined) {\n      parts.push(' system');\n    }\n\n    if (sys !== null && sys !== undefined) {\n      parts.push(sep, quote(ctx, sys));\n    }\n  }\n\n  return parts.join('') + '>';\n}\n\nfunction quote(ctx, value) {\n  var primary = ctx.quote;\n  var secondary = ctx.alternative;\n  var string = String(value);\n  var quote = ccount(string, primary) > ccount(string, secondary) ? secondary : primary;\n  return quote + // Prevent breaking out of doctype.\n  entities(string, xtend(ctx.entities, {\n    subset: ['<', '&', quote]\n  })) + quote;\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/node_modules/hast-util-to-html/lib/doctype.js"],"names":["xtend","require","ccount","entities","module","exports","serializeDoctype","docLower","docUpper","toUpperCase","ctx","node","doc","upperDoctype","sep","tightDoctype","name","pub","public","sys","system","parts","push","undefined","quote","join","value","primary","secondary","alternative","string","String","subset"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,oBAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,gBAAjB;AAEA,IAAIC,QAAQ,GAAG,SAAf;AACA,IAAIC,QAAQ,GAAGD,QAAQ,CAACE,WAAT,EAAf;;AAEA,SAASH,gBAAT,CAA0BI,GAA1B,EAA+BC,IAA/B,EAAqC;AACnC,MAAIC,GAAG,GAAGF,GAAG,CAACG,YAAJ,GAAmBL,QAAnB,GAA8BD,QAAxC;AACA,MAAIO,GAAG,GAAGJ,GAAG,CAACK,YAAJ,GAAmB,EAAnB,GAAwB,GAAlC;AACA,MAAIC,IAAI,GAAGL,IAAI,CAACK,IAAhB;AACA,MAAIC,GAAG,GAAGN,IAAI,CAACO,MAAf;AACA,MAAIC,GAAG,GAAGR,IAAI,CAACS,MAAf;AACA,MAAIC,KAAK,GAAG,CAAC,OAAOT,GAAR,CAAZ;;AAEA,MAAII,IAAJ,EAAU;AACRK,IAAAA,KAAK,CAACC,IAAN,CAAWR,GAAX,EAAgBE,IAAhB;;AAEA,QAAIC,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKM,SAA5B,EAAuC;AACrCF,MAAAA,KAAK,CAACC,IAAN,CAAW,SAAX,EAAsBR,GAAtB,EAA2BU,KAAK,CAACd,GAAD,EAAMO,GAAN,CAAhC;AACD,KAFD,MAEO,IAAIE,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKI,SAA5B,EAAuC;AAC5CF,MAAAA,KAAK,CAACC,IAAN,CAAW,SAAX;AACD;;AAED,QAAIH,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKI,SAA5B,EAAuC;AACrCF,MAAAA,KAAK,CAACC,IAAN,CAAWR,GAAX,EAAgBU,KAAK,CAACd,GAAD,EAAMS,GAAN,CAArB;AACD;AACF;;AAED,SAAOE,KAAK,CAACI,IAAN,CAAW,EAAX,IAAiB,GAAxB;AACD;;AAED,SAASD,KAAT,CAAed,GAAf,EAAoBgB,KAApB,EAA2B;AACzB,MAAIC,OAAO,GAAGjB,GAAG,CAACc,KAAlB;AACA,MAAII,SAAS,GAAGlB,GAAG,CAACmB,WAApB;AACA,MAAIC,MAAM,GAAGC,MAAM,CAACL,KAAD,CAAnB;AACA,MAAIF,KAAK,GACPtB,MAAM,CAAC4B,MAAD,EAASH,OAAT,CAAN,GAA0BzB,MAAM,CAAC4B,MAAD,EAASF,SAAT,CAAhC,GAAsDA,SAAtD,GAAkED,OADpE;AAGA,SACEH,KAAK,GACL;AACArB,EAAAA,QAAQ,CAAC2B,MAAD,EAAS9B,KAAK,CAACU,GAAG,CAACP,QAAL,EAAe;AAAC6B,IAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAWR,KAAX;AAAT,GAAf,CAAd,CAFR,GAGAA,KAJF;AAMD","sourcesContent":["'use strict'\n\nvar xtend = require('xtend')\nvar ccount = require('ccount')\nvar entities = require('stringify-entities')\n\nmodule.exports = serializeDoctype\n\nvar docLower = 'doctype'\nvar docUpper = docLower.toUpperCase()\n\nfunction serializeDoctype(ctx, node) {\n  var doc = ctx.upperDoctype ? docUpper : docLower\n  var sep = ctx.tightDoctype ? '' : ' '\n  var name = node.name\n  var pub = node.public\n  var sys = node.system\n  var parts = ['<!' + doc]\n\n  if (name) {\n    parts.push(sep, name)\n\n    if (pub !== null && pub !== undefined) {\n      parts.push(' public', sep, quote(ctx, pub))\n    } else if (sys !== null && sys !== undefined) {\n      parts.push(' system')\n    }\n\n    if (sys !== null && sys !== undefined) {\n      parts.push(sep, quote(ctx, sys))\n    }\n  }\n\n  return parts.join('') + '>'\n}\n\nfunction quote(ctx, value) {\n  var primary = ctx.quote\n  var secondary = ctx.alternative\n  var string = String(value)\n  var quote =\n    ccount(string, primary) > ccount(string, secondary) ? secondary : primary\n\n  return (\n    quote +\n    // Prevent breaking out of doctype.\n    entities(string, xtend(ctx.entities, {subset: ['<', '&', quote]})) +\n    quote\n  )\n}\n"]},"metadata":{},"sourceType":"script"}