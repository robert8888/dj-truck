{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\console\\\\components\\\\Console\\\\Mixer\\\\Recorder\\\\Recorder.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createRecordinRequest } from \"./../../../../../../actions\";\nimport RecordButton from \"./../componets/RecordButton/RecordButton\";\nimport RecordNameInput from \"./../componets/RecordNameInput/RecordNameInput\";\nimport RecordTime from \"../componets/RecordTime/RecordTime\";\nimport \"./recorder.scss\";\n\nconst Recorder = ({\n  recording,\n  startRecording\n}) => {\n  const [inputDisabled, setInputDisabled] = useState(false);\n  const [timeRuning, setTimeRuning] = useState(false);\n  const [recName, setRecName] = useState(\"\");\n  let clearTimeHandler;\n  const assignClearHandler = useCallback(handler => {\n    if (!clearTimeHandler) {\n      clearTimeHandler = handler;\n    }\n  }, clearTimeHandler);\n  const recordStateChange = useCallback(state => {\n    startRecording(setRecName);\n    setInputDisabled(!!state);\n\n    if (!state) {\n      clearTimeHandler();\n    }\n  }, [setInputDisabled, setTimeRuning]);\n  useEffect(() => {\n    setTimeRuning(recording);\n  }, [recording, setTimeRuning]);\n  return React.createElement(\"div\", {\n    className: \"recorder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"REC\"), React.createElement(RecordButton, {\n    onChange: recordStateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(RecordNameInput, {\n    disabled: inputDisabled,\n    onChange: str => setRecName(str),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(RecordTime, {\n    runing: timeRuning,\n    clearHandler: assignClearHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recording: state.recorder.recording\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startRecording: recName => dispatch(createRecordinRequest(recName))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recorder);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Mixer/Recorder/Recorder.js"],"names":["React","useState","useCallback","useEffect","connect","createRecordinRequest","RecordButton","RecordNameInput","RecordTime","Recorder","recording","startRecording","inputDisabled","setInputDisabled","timeRuning","setTimeRuning","recName","setRecName","clearTimeHandler","assignClearHandler","handler","recordStateChange","state","str","mapStateToProps","recorder","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,WAA3B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,6BAAtC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,eAAP,MAA4B,gDAA5B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAO,iBAAP;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAkC;AAC/C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACe,OAAD,EAAWC,UAAX,IAAyBhB,QAAQ,CAAC,EAAD,CAAvC;AAEA,MAAIiB,gBAAJ;AAEA,QAAMC,kBAAkB,GAAGjB,WAAW,CAAEkB,OAAO,IAAI;AAC/C,QAAG,CAACF,gBAAJ,EAAqB;AACjBA,MAAAA,gBAAgB,GAAGE,OAAnB;AACH;AACJ,GAJqC,EAInCF,gBAJmC,CAAtC;AAMA,QAAMG,iBAAiB,GAAGnB,WAAW,CAAEoB,KAAD,IAAS;AAC3CX,IAAAA,cAAc,CAACM,UAAD,CAAd;AACAJ,IAAAA,gBAAgB,CAAC,CAAC,CAACS,KAAH,CAAhB;;AACA,QAAG,CAACA,KAAJ,EAAU;AACNJ,MAAAA,gBAAgB;AACnB;AACJ,GANoC,EAMlC,CAACL,gBAAD,EAAmBE,aAAnB,CANkC,CAArC;AAQAZ,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,aAAa,CAACL,SAAD,CAAb;AACH,GAFQ,EAEN,CAACA,SAAD,EAAYK,aAAZ,CAFM,CAAT;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI,oBAAC,YAAD;AACI,IAAA,QAAQ,EAAEM,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII,oBAAC,eAAD;AACI,IAAA,QAAQ,EAAET,aADd;AAEI,IAAA,QAAQ,EAAEW,GAAG,IAAIN,UAAU,CAACM,GAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAOI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAET,UADZ;AAEI,IAAA,YAAY,EAAGK,kBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAaH,CAtCD;;AAwCA,MAAMK,eAAe,GAAGF,KAAK,KAAK;AAC9BZ,EAAAA,SAAS,EAAGY,KAAK,CAACG,QAAN,CAAef;AADG,CAAL,CAA7B;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,cAAc,EAAGK,OAAO,IAAIW,QAAQ,CAACtB,qBAAqB,CAACW,OAAD,CAAtB;AADA,CAAL,CAAnC;;AAIA,eAAeZ,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,QAA7C,CAAf","sourcesContent":["import React, { useState,  useCallback, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createRecordinRequest } from \"./../../../../../../actions\";\r\nimport RecordButton from \"./../componets/RecordButton/RecordButton\";\r\nimport RecordNameInput from \"./../componets/RecordNameInput/RecordNameInput\";\r\nimport RecordTime from \"../componets/RecordTime/RecordTime\";\r\nimport \"./recorder.scss\";\r\n\r\n\r\nconst Recorder = ({ recording, startRecording }) =>{\r\n    const [inputDisabled, setInputDisabled] = useState(false);\r\n    const [timeRuning, setTimeRuning] = useState(false)\r\n    const [recName , setRecName] = useState(\"\");\r\n\r\n    let clearTimeHandler;\r\n\r\n    const assignClearHandler = useCallback( handler => {\r\n        if(!clearTimeHandler){\r\n            clearTimeHandler = handler;\r\n        }\r\n    }, clearTimeHandler)\r\n\r\n    const recordStateChange = useCallback((state)=>{\r\n        startRecording(setRecName);\r\n        setInputDisabled(!!state);\r\n        if(!state){\r\n            clearTimeHandler();\r\n        }\r\n    }, [setInputDisabled, setTimeRuning])\r\n\r\n    useEffect(()=>{\r\n        setTimeRuning(recording);\r\n    }, [recording, setTimeRuning])\r\n\r\n    return (\r\n        <div className=\"recorder\">\r\n            <div className=\"label\">REC</div>\r\n            <RecordButton \r\n                onChange={recordStateChange} />\r\n            <RecordNameInput \r\n                disabled={inputDisabled}\r\n                onChange={str => setRecName(str)}/>\r\n            <RecordTime \r\n                runing={timeRuning} \r\n                clearHandler={ assignClearHandler }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recording : state.recorder.recording\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    startRecording : recName => dispatch(createRecordinRequest(recName))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Recorder);"]},"metadata":{},"sourceType":"module"}