{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecord\\\\UserRecord.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { reqRecOfUser, loadRecords } from \"./../../actions\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport Record from \"../common/components/Record/Record\";\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\nimport PlayerControls from \"../common/components/PlayerControls/PlayerControls\";\n\nconst UserRecord = ({\n  requestList,\n  recordsList,\n  userId,\n  setRecordsList\n}) => {\n  const [controls, player] = useRecordPlayer();\n  const {\n    user,\n    title,\n    id\n  } = useParams();\n  const history = useHistory();\n  const [record, setRecord] = useState();\n  useEffect(() => {\n    console.log(player);\n\n    if (!title) {\n      return;\n    } //   console.log(title, recordsList)\n\n\n    let recs = recordsList === null || recordsList === void 0 ? void 0 : recordsList.filter(r => r.title === title);\n    console.log(recs);\n\n    if (id) {\n      let _id = parseInt(id);\n\n      recs = recs.filter(r => r.id === _id);\n    } //       console.log(\"rec\", recs)\n\n\n    if (recs && recs.length === 0 || !recs) {\n      where = {\n        title\n      };\n\n      if (id) {\n        where.id = id;\n      }\n\n      if (user) {\n        where.nickname = user;\n      } else if (userId) {\n        where.userId = userId;\n      }\n\n      requestList(100, 0, where);\n      return;\n    }\n\n    if (recs && recs.length === 1) {\n      setRecord(recs[0]);\n      return;\n    }\n\n    setRecordsList(recs); // console.log(recs)\n\n    history.replace('/my/records?preloaded=true');\n  }, [recordsList, setRecord, title, id, userId, setRecordsList]);\n  useEffect(() => {\n    console.log(record);\n  }, [record]);\n  return React.createElement(\"div\", {\n    className: \"user-record\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Record, {\n    record: record,\n    controls: controls,\n    player: player,\n    simple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(RecordDetails, {\n    record: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(PlayerControls, {\n    controls: controls,\n    player: player,\n    list: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where)),\n  setRecordsList: list => dispatch(loadRecords(list))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecord/UserRecord.js"],"names":["React","useState","useEffect","reqRecOfUser","loadRecords","connect","useParams","useHistory","useRecordPlayer","Record","RecordDetails","PlayerControls","UserRecord","requestList","recordsList","userId","setRecordsList","controls","player","user","title","id","history","record","setRecord","console","log","recs","filter","r","_id","parseInt","length","where","nickname","replace","mapStateToProps","state","records","list","countAll","dbId","mapDispatchToProps","dispatch","pageSize","page"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {reqRecOfUser ,loadRecords} from \"./../../actions\"\r\nimport {connect} from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {useRecordPlayer} from \"./../common/Hooks/useRecordPlayer\";\r\nimport Record from \"../common/components/Record/Record\";\r\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\r\nimport PlayerControls from \"../common/components/PlayerControls/PlayerControls\";\r\n\r\nconst UserRecord = ({requestList, recordsList, userId, setRecordsList}) => {\r\n    const [controls, player] = useRecordPlayer();\r\n    const { user, title, id } = useParams();\r\n    const history = useHistory()\r\n    const [record, setRecord] = useState();\r\n\r\n    useEffect(()=>{\r\n        console.log(player)\r\n        if(!title) { return }\r\n     //   console.log(title, recordsList)\r\n        let recs = recordsList?.filter( r => r.title === title)\r\n        console.log(recs)\r\n        if(id){\r\n            let _id = parseInt(id)\r\n            recs = recs.filter( r => r.id === _id);\r\n        }\r\n //       console.log(\"rec\", recs)\r\n        if(recs && recs.length === 0 || !recs){\r\n\r\n           where = {title}\r\n           if(id){\r\n               where.id = id;\r\n           }\r\n\r\n           if(user){\r\n               where.nickname = user;\r\n           } else if(userId){\r\n               where.userId = userId;\r\n           }\r\n\r\n           requestList(100, 0 , where )\r\n           return;\r\n        }\r\n\r\n        if(recs && recs.length === 1){\r\n            setRecord(recs[0]);\r\n            return;\r\n        } \r\n\r\n        setRecordsList(recs);\r\n       // console.log(recs)\r\n        history.replace('/my/records?preloaded=true')\r\n\r\n    }, [recordsList, setRecord, title, id, userId, setRecordsList])\r\n\r\n    useEffect(()=>{\r\n        console.log(record)\r\n    },[record])\r\n\r\n    return (\r\n        <div className=\"user-record\">\r\n            <Record  record={record} controls={controls} player={player} simple/>\r\n            <div>\r\n                <RecordDetails record={record}/>\r\n            </div>\r\n            <PlayerControls controls={controls} player={player} list={record}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where)),\r\n    setRecordsList : (list) => dispatch(loadRecords(list))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}