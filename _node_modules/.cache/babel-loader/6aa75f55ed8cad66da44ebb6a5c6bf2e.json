{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\introduction\\\\Menu\\\\Menu.js\";\nimport React, { useCallback, useEffect, useMemo, useState, Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { set } from \"lodash/object\";\nimport UUID from \"uuidjs\";\nimport \"./menu.scss\";\n\nconst getMarkups = () => require.context('./../markups', true, /\\.*.md$/).keys();\n\nconst Menu = () => {\n  const history = useHistory();\n  const [markups, setMarkups] = useState();\n  const [structure, setStructure] = useState();\n  useEffect(() => {\n    setMarkups(getMarkups());\n  }, [setMarkups]);\n  useEffect(() => {\n    if (!markups) return;\n    let _structure = {};\n    markups.forEach(item => {\n      let path = item.substr(2, item.length).split(\"/\").map(part => part.replace(\".md\", \"\"));\n      set(_structure, path, item);\n    });\n    setStructure(_structure);\n  }, [markups, setStructure]);\n  const goTo = useCallback(path => history.replace(\"./introduction/\" + path.join(\"/\")), []);\n  const renderList = useCallback((list, path = []) => {\n    const items = Object.entries(list).map(([key, value]) => {\n      if (typeof value === \"string\") {\n        return React.createElement(\"li\", {\n          key: UUID.genV1(),\n          className: \"menu__list__item\",\n          onClick: goTo.bind(null, [...path, key]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, key.replace(/\\d?\\./, \"\")));\n      } else if (typeof value === \"object\") {\n        return React.createElement(Fragment, {\n          key: UUID.genV1(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"menu__list__item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, key.replace(/\\d?\\./, \"\")), renderList(value, [...path, key])));\n      }\n    });\n    console.log(path);\n    return React.createElement(\"ul\", {\n      key: UUID.genV1(),\n      className: \"menu__list menu__list--depth-\" + path.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, items);\n  }, []);\n  const content = useMemo(() => {\n    if (!structure) return null;\n    return renderList(structure, []);\n  }, [structure]);\n  return React.createElement(\"aside\", {\n    className: \"introduction__menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, content));\n};\n\nexport default Menu;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/introduction/Menu/Menu.js"],"names":["React","useCallback","useEffect","useMemo","useState","Fragment","useHistory","set","UUID","getMarkups","require","context","keys","Menu","history","markups","setMarkups","structure","setStructure","_structure","forEach","item","path","substr","length","split","map","part","replace","goTo","join","renderList","list","items","Object","entries","key","value","genV1","bind","console","log","content"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useMemo, useState, Fragment} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {set} from \"lodash/object\";\r\nimport UUID from \"uuidjs\";\r\nimport \"./menu.scss\"\r\n\r\nconst getMarkups = () => require.context('./../markups', true, /\\.*.md$/).keys();\r\n\r\nconst Menu = () => {\r\n    const history = useHistory();\r\n    const [markups, setMarkups] = useState();\r\n    const [structure, setStructure] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        setMarkups(getMarkups())\r\n    }, [setMarkups])\r\n\r\n    useEffect(() => {\r\n        if (!markups) return;\r\n        let _structure = {};\r\n        markups.forEach(item => {\r\n            let path = item.substr(2, item.length).split(\"/\")\r\n                .map(part => part.replace(\".md\", \"\"))\r\n            set(_structure, path, item)\r\n        });\r\n        setStructure(_structure);\r\n    }, [markups, setStructure])\r\n\r\n    const goTo = useCallback(path => history.replace(\"./introduction/\" + path.join(\"/\")), [])\r\n\r\n    const renderList = useCallback((list, path = []) => {\r\n        const items = Object.entries(list).map(([key, value]) => {\r\n            if (typeof value === \"string\") {\r\n                return (\r\n                    <li key={UUID.genV1()}\r\n                        className=\"menu__list__item\"\r\n                        onClick={goTo.bind(null, [...path, key])}>\r\n                            <span>\r\n                                {key.replace(/\\d?\\./, \"\")}\r\n                            </span>\r\n                    </li>\r\n                )\r\n            } else if (typeof value === \"object\") {\r\n                return (\r\n                        <Fragment key={UUID.genV1()}>\r\n                            <li className=\"menu__list__item\">\r\n                                <span>{key.replace(/\\d?\\./, \"\")}</span>\r\n                                {renderList(value, [...path, key])}\r\n                            </li>\r\n                            {/*<ul className={\"menu__list menu__list--depth-\" + path.length}>*/}\r\n\r\n                            {/*</ul>*/}\r\n                        </Fragment>\r\n                )\r\n            }\r\n        });\r\n        console.log(path)\r\n        return (\r\n         <ul key={UUID.genV1()} className={\"menu__list menu__list--depth-\" + path.length}>\r\n                {items}\r\n         </ul>\r\n        )\r\n    }, [])\r\n\r\n    const content = useMemo(()=>{\r\n        if(!structure) return null;\r\n        return renderList(structure, [])\r\n    }, [structure])\r\n\r\n\r\n    return (\r\n        <aside className=\"introduction__menu\">\r\n            <nav className=\"menu\">\r\n                {content}\r\n            </nav>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}