{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecords\\\\UserRecords.js\";\nimport React, { useEffect, useContext, useState, useRef, useCallback, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reqRecOfUser } from \"./../../actions\";\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\nimport Pagin from \"./../common/components/Pagin/Pagin\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport \"./user-records.scss\";\n\nconst UserRecords = ({\n  requestList,\n  userId,\n  recordsList,\n  countAll\n}) => {\n  const [controls, player] = useRecordPlayer(); //-------------------------\n\n  const [pageTitle, setPageTitle] = useState(\"Records\");\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    user,\n    generes\n  } = useParams();\n  const queryStr = useLocation().search;\n  let {\n    pageSize,\n    page,\n    preloaded,\n    current\n  } = useMemo(() => {\n    const values = queryString.parse(queryStr);\n    return {\n      pageSize: +values.pageSize,\n      page: +values.page,\n      preloaded: values.preloaded,\n      current: values.current\n    };\n  }, [queryStr]);\n  const [_pageSize, setPageSize] = useState(20);\n  const [_page, setPage] = useState(0);\n  useEffect(() => {\n    if (preloaded && recordsList.length > 0) {\n      return;\n    }\n\n    let pg = page || 0;\n    let pgSize = pageSize || _pageSize;\n    const where = {};\n    console.log(\"current id\", current);\n\n    if (generes) {\n      where.genereNames = generes.split(\",\");\n    } else {\n      if (user) {\n        where.nickname = user;\n        setPageTitle(user + \" user records\");\n      } else if (userId) {\n        where.userId = userId;\n        setPageTitle(\"Your records\");\n      }\n    }\n\n    requestList(pgSize, pg, where);\n    setPageSize(pgSize);\n    setPage(pg);\n  }, [userId, requestList, _pageSize, page, pageSize, preloaded, setPageTitle, generes]);\n  const layoutContext = useContext(LayoutContext);\n  useEffect(() => {\n    layoutContext.setFooter(false);\n  }, [layoutContext]);\n  const changeTo = useCallback(pageSize => {\n    if (!userId) {\n      return;\n    }\n\n    console.log(window.location.pathname);\n    history.push(window.location.pathname + '?pageSize=' + pageSize + \"&page=\" + _page); // requestList(userId, pageSize, _page);\n  }, [history, _page, userId, requestList]);\n  const goTo = useCallback(page => {\n    if (!userId) {\n      return;\n    }\n\n    history.push(location.pathname + '?pageSize=' + _pageSize + \"&page=\" + page);\n  }, [history, userId, _pageSize]);\n  return React.createElement(\"div\", {\n    className: \"user-records\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-records-top-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, pageTitle), React.createElement(DropdownButton, {\n    alignRight: true,\n    className: \"btn-pagger\",\n    title: _pageSize + \" on page \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onClick: changeTo.bind(null, 10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \" 10 \"), React.createElement(Dropdown.Item, {\n    onClick: changeTo.bind(null, 20),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" 20 \"), React.createElement(Dropdown.Item, {\n    onClick: changeTo.bind(null, 30),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \" 30 \"), React.createElement(Dropdown.Item, {\n    onClick: changeTo.bind(null, 50),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" 50 \"), React.createElement(Dropdown.Item, {\n    onClick: changeTo.bind(null, 75),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" 75 \"), React.createElement(Dropdown.Item, {\n    onClick: changeTo.bind(null, 100),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \" 100 \"))), React.createElement(RecordsList, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Pagin, {\n    current: _page,\n    call: goTo,\n    all: Math.floor(countAll / _pageSize),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(PlayerControls, {\n    list: recordsList,\n    controls: controls,\n    player: player,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecords/UserRecords.js"],"names":["React","useEffect","useContext","useState","useRef","useCallback","useMemo","connect","reqRecOfUser","RecordsList","useRecordPlayer","PlayerControls","LayoutContext","Pagin","DropdownButton","Dropdown","useParams","useHistory","useLocation","queryString","UserRecords","requestList","userId","recordsList","countAll","controls","player","pageTitle","setPageTitle","history","location","user","generes","queryStr","search","pageSize","page","preloaded","current","values","parse","_pageSize","setPageSize","_page","setPage","length","pg","pgSize","where","console","log","genereNames","split","nickname","layoutContext","setFooter","changeTo","window","pathname","push","goTo","bind","Math","floor","mapStateToProps","state","records","list","dbId","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState, useRef, useCallback, useMemo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reqRecOfUser } from \"./../../actions\"\r\nimport RecordsList from \"./../common/components/RecordList/RecordList\";\r\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\r\nimport PlayerControls from \"./../common/components/PlayerControls/PlayerControls\";\r\nimport LayoutContext from \"./../common/Layout/LayoutContext\";\r\nimport Pagin from \"./../common/components/Pagin/Pagin\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport \"./user-records.scss\"\r\n\r\nconst UserRecords = ({ requestList, userId, recordsList, countAll }) => {\r\n    const [controls, player] = useRecordPlayer();\r\n    //-------------------------\r\n    const [pageTitle, setPageTitle] = useState(\"Records\")\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { user, generes } = useParams();\r\n    \r\n\r\n    const queryStr = useLocation().search;\r\n    let { pageSize, page, preloaded, current } = useMemo(() => {\r\n        const values = queryString.parse(queryStr)\r\n        return {\r\n            pageSize: +values.pageSize,\r\n            page: +values.page,\r\n            preloaded: values.preloaded,\r\n            current: values.current,\r\n        }\r\n    }, [queryStr])\r\n    const [_pageSize, setPageSize] = useState(20);\r\n    const [_page, setPage] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (preloaded && recordsList.length > 0) { return }\r\n\r\n        let pg = page || 0;\r\n        let pgSize = pageSize || _pageSize;\r\n\r\n        const where = {};\r\n        console.log(\"current id\", current)\r\n       \r\n        \r\n        if(generes){\r\n            where.genereNames = generes.split(\",\");\r\n        } else {\r\n            if (user) {\r\n                where.nickname = user;\r\n                setPageTitle(user + \" user records\")\r\n            } else if (userId) {\r\n                where.userId = userId;\r\n                setPageTitle(\"Your records\")\r\n            } \r\n        }\r\n\r\n        requestList(pgSize, pg, where);\r\n        setPageSize(pgSize);\r\n        setPage(pg)\r\n\r\n    }, [userId, requestList, _pageSize, page, pageSize, preloaded, setPageTitle, generes])\r\n\r\n    const layoutContext = useContext(LayoutContext);\r\n\r\n    useEffect(() => {\r\n        layoutContext.setFooter(false);\r\n    }, [layoutContext])\r\n\r\n    const changeTo = useCallback((pageSize) => {\r\n        if (!userId) {\r\n            return;\r\n        }\r\n        console.log(window.location.pathname)\r\n        history.push( window.location.pathname + '?pageSize=' + pageSize + \"&page=\" + _page);\r\n        // requestList(userId, pageSize, _page);\r\n    }, [history, _page, userId, requestList])\r\n\r\n    const goTo = useCallback((page) => {\r\n        if (!userId) {\r\n            return;\r\n        }\r\n        history.push( location.pathname + '?pageSize=' + _pageSize + \"&page=\" + page);\r\n    }, [history, userId, _pageSize])\r\n\r\n    return (\r\n        <div className=\"user-records\">\r\n            <div className=\"user-records-top-bar\">\r\n                <h2 className=\"title\">{pageTitle}</h2>\r\n                <DropdownButton\r\n                    alignRight\r\n                    className=\"btn-pagger\"\r\n                    title={_pageSize + \" on page \"}>\r\n                    <Dropdown.Item onClick={changeTo.bind(null, 10)}> 10 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changeTo.bind(null, 20)}> 20 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changeTo.bind(null, 30)}> 30 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changeTo.bind(null, 50)}> 50 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changeTo.bind(null, 75)}> 75 </Dropdown.Item>\r\n                    <Dropdown.Item onClick={changeTo.bind(null, 100)}> 100 </Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n\r\n            <RecordsList\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n            <Pagin\r\n                current={_page}\r\n                call={goTo}\r\n                all={Math.floor(countAll / _pageSize)} />\r\n            <PlayerControls\r\n                list={recordsList}\r\n                controls={controls}\r\n                player={player} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecords)\r\n"]},"metadata":{},"sourceType":"module"}