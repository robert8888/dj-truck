{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Carousel-slider\\\\SliderControls.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft, faArrowCircleRight, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCircle as faCircleOpen } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport \"./slider-controls.scss\";\n\nconst SliderControl = ({\n  next,\n  prev,\n  set,\n  update: updateHandle,\n  size\n}) => {\n  const [current, setCurrent] = useState();\n  const nextClick = useCallback(() => {\n    next && next();\n  }, [next]);\n  const prevClick = useCallback(() => {\n    prev && prev();\n  }, [prev]);\n  const setClick = useCallback(target => {\n    set && set(target);\n  }, [set]);\n  const updateCurrent = useCallback(current => {\n    setCurrent(current);\n  }, [setCurrent]);\n  useEffect(() => updateHandle && updateHandle(updateCurrent), [updateHandle, updateCurrent]);\n  return React.createElement(\"div\", {\n    className: \"slider-control-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"slider-control-btn control-prev\",\n    onClick: prevClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faArrowCircleLeft,\n    className: \"prev-control icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), size && Array(size).fill(1).map((_, index) => {\n    const icon = index === current ? faCircleOpen : faCircle;\n    return React.createElement(Button, {\n      key: \"slider-control-\" + index,\n      className: \"slider-control-btn\",\n      onClick: setClick.bind(null, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: icon,\n      className: \"prev-control icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }), React.createElement(Button, {\n    className: \"slider-control-btn control-next\",\n    onClick: nextClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faArrowCircleRight,\n    className: \"prev-control icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nexport default SliderControl;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Carousel-slider/SliderControls.js"],"names":["React","useCallback","useEffect","useState","FontAwesomeIcon","faArrowCircleLeft","faArrowCircleRight","faCircle","faCircleOpen","Button","SliderControl","next","prev","set","update","updateHandle","size","current","setCurrent","nextClick","prevClick","setClick","target","updateCurrent","Array","fill","map","_","index","icon","bind"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faArrowCircleLeft,\r\n    faArrowCircleRight, faCircle\r\n} from \"@fortawesome/free-solid-svg-icons\"\r\nimport {faCircle as faCircleOpen} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"./slider-controls.scss\"\r\n\r\nconst SliderControl = ({next , prev, set, update: updateHandle, size}) => {\r\n    const [current, setCurrent] = useState();\r\n\r\n    const nextClick = useCallback(()=>{\r\n        next && next();\r\n    }, [next])\r\n\r\n    const prevClick = useCallback(()=>{\r\n        prev && prev();\r\n    }, [prev])\r\n\r\n    const setClick = useCallback((target) => {\r\n        set && set(target)\r\n    }, [set])\r\n\r\n    const updateCurrent = useCallback((current)=>{\r\n        setCurrent(current);\r\n    }, [setCurrent])\r\n\r\n    useEffect(() => updateHandle && updateHandle(updateCurrent),\r\n        [updateHandle, updateCurrent])\r\n\r\n    return (\r\n        <div className=\"slider-control-container\">\r\n            <Button className=\"slider-control-btn control-prev\" onClick={prevClick}>\r\n                 <FontAwesomeIcon icon={faArrowCircleLeft} className=\"prev-control icon\"/>\r\n            </Button>\r\n            {size && Array(size).fill(1).map(( _, index) =>{\r\n                const icon = index === current ?  faCircleOpen : faCircle;\r\n                return (\r\n                    <Button key={\"slider-control-\" + index} className=\"slider-control-btn\" onClick={setClick.bind(null, index)}>\r\n                        <FontAwesomeIcon icon={icon} className=\"prev-control icon\"/>\r\n                    </Button>\r\n                )\r\n            })}\r\n            <Button className=\"slider-control-btn control-next\" onClick={nextClick}>\r\n                 <FontAwesomeIcon icon={faArrowCircleRight} className=\"prev-control icon\"/>\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SliderControl;"]},"metadata":{},"sourceType":"module"}