{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\RecordList\\\\ListItem\\\\WaveSurrferPlayer\\\\WaveSurferPlayer.js\";\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport WaveSurfer from \"wavesurfer\";\nimport style from \"./wave-surfer-player.scss\";\nimport { PLAYBACK_STATE } from \"./../PlaybackButton/PlaybackButton\"; // const WaveSurferPlayer = ({peaks,  id, seekHandler, duration}) => {\n\nconst WaveSurferPlayer = ({\n  item: {\n    peaks,\n    id,\n    duration,\n    fileSize\n  },\n  seekHandler\n}) => {\n  const containerRef = useRef(null);\n  const [container, setContainerRef] = useState(null);\n  const onContainerRef = useCallback(ref => {\n    setContainerRef(ref);\n  }, [setContainerRef]);\n  useEffect(() => {\n    if (container) {\n      const ws = new Promise((res, rej) => {\n        try {\n          const ws = WaveSurfer.create({\n            container: container,\n            barWidth: 2,\n            height: 100,\n            waveColor: style.waveColor,\n            progressColor: style.progressColor,\n            barMinHeight: 0\n          });\n          res(ws);\n        } catch (err) {\n          rej(err);\n        }\n      });\n      ws.then(ws => {\n        if (peaks) {\n          ws.load(null, peaks);\n        }\n\n        if (seekHandler) {\n          ws.on('seek', progress => {\n            const filePosition = ~~(parseInt(fileSize) * progress);\n            seekHandler({\n              id,\n              filePosition,\n              progress,\n              duration\n            });\n            ws.drawer.progress(progress);\n          });\n        }\n      });\n    }\n  }, [container, peaks]);\n  return React.createElement(\"div\", {\n    className: \"ws-player-container\",\n    ref: onContainerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  });\n};\n\nexport default WaveSurferPlayer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/RecordList/ListItem/WaveSurrferPlayer/WaveSurferPlayer.js"],"names":["React","useRef","useEffect","useState","useCallback","WaveSurfer","style","PLAYBACK_STATE","WaveSurferPlayer","item","peaks","id","duration","fileSize","seekHandler","containerRef","container","setContainerRef","onContainerRef","ref","ws","Promise","res","rej","create","barWidth","height","waveColor","progressColor","barMinHeight","err","then","load","on","progress","filePosition","parseInt","drawer"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,WAA5C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAAQC,cAAR,QAA6B,oCAA7B,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAG;AAACC,IAAAA,KAAD;AAAQC,IAAAA,EAAR;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,GAAR;AAAyCC,EAAAA;AAAzC,CAAD,KAA2D;AAChF,QAAMC,YAAY,GAAGd,MAAM,CAAC,IAAD,CAA3B;AAEA,QAAM,CAACe,SAAD,EAAYC,eAAZ,IAA+Bd,QAAQ,CAAC,IAAD,CAA7C;AAEA,QAAMe,cAAc,GAAGd,WAAW,CAAGe,GAAD,IAAS;AACzCF,IAAAA,eAAe,CAACE,GAAD,CAAf;AACH,GAFiC,EAE/B,CAACF,eAAD,CAF+B,CAAlC;AAIAf,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGc,SAAH,EAAa;AACT,YAAMI,EAAE,GAAG,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAY;AAC/B,YAAG;AACC,gBAAMH,EAAE,GAAGf,UAAU,CAACmB,MAAX,CAAkB;AACzBR,YAAAA,SAAS,EAAEA,SADc;AAEzBS,YAAAA,QAAQ,EAAE,CAFe;AAGzBC,YAAAA,MAAM,EAAE,GAHiB;AAIzBC,YAAAA,SAAS,EAAErB,KAAK,CAACqB,SAJQ;AAKzBC,YAAAA,aAAa,EAAEtB,KAAK,CAACsB,aALI;AAMzBC,YAAAA,YAAY,EAAE;AANW,WAAlB,CAAX;AAQAP,UAAAA,GAAG,CAACF,EAAD,CAAH;AACH,SAVD,CAUE,OAAOU,GAAP,EAAW;AACTP,UAAAA,GAAG,CAACO,GAAD,CAAH;AACH;AACJ,OAdU,CAAX;AAgBAV,MAAAA,EAAE,CAACW,IAAH,CAASX,EAAD,IAAO;AACX,YAAGV,KAAH,EAAS;AACLU,UAAAA,EAAE,CAACY,IAAH,CAAQ,IAAR,EAActB,KAAd;AACH;;AACD,YAAGI,WAAH,EAAe;AACXM,UAAAA,EAAE,CAACa,EAAH,CAAM,MAAN,EAAeC,QAAD,IAAY;AACtB,kBAAMC,YAAY,GAAG,CAAC,EAAEC,QAAQ,CAACvB,QAAD,CAAR,GAAsBqB,QAAxB,CAAtB;AACApB,YAAAA,WAAW,CAAC;AACRH,cAAAA,EADQ;AAERwB,cAAAA,YAFQ;AAGRD,cAAAA,QAHQ;AAIRtB,cAAAA;AAJQ,aAAD,CAAX;AAMAQ,YAAAA,EAAE,CAACiB,MAAH,CAAUH,QAAV,CAAmBA,QAAnB;AACH,WATD;AAUH;AACJ,OAhBD;AAiBH;AACJ,GApCQ,EAoCN,CAAClB,SAAD,EAAYN,KAAZ,CApCM,CAAT;AAuCA,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,GAAG,EAAEQ,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAnDD;;AAqDA,eAAeV,gBAAf","sourcesContent":["import React, {useRef, useEffect, useState, useCallback} from \"react\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport style from \"./wave-surfer-player.scss\";\r\nimport {PLAYBACK_STATE} from \"./../PlaybackButton/PlaybackButton\"\r\n\r\n// const WaveSurferPlayer = ({peaks,  id, seekHandler, duration}) => {\r\nconst WaveSurferPlayer = ({item : {peaks, id, duration, fileSize}, seekHandler}) => {\r\n    const containerRef = useRef(null)\r\n    \r\n    const [container, setContainerRef] = useState(null);\r\n\r\n    const onContainerRef = useCallback( (ref) => {\r\n        setContainerRef(ref);\r\n    }, [setContainerRef])\r\n\r\n    useEffect(()=>{\r\n        if(container){\r\n            const ws = new Promise((res, rej)=>{\r\n                try{\r\n                    const ws = WaveSurfer.create({\r\n                        container: container,\r\n                        barWidth: 2,\r\n                        height: 100,\r\n                        waveColor: style.waveColor,\r\n                        progressColor: style.progressColor,\r\n                        barMinHeight: 0\r\n                    })\r\n                    res(ws)\r\n                } catch (err){\r\n                    rej(err)\r\n                }\r\n            })\r\n\r\n            ws.then((ws) =>{\r\n                if(peaks){\r\n                    ws.load(null, peaks);\r\n                }\r\n                if(seekHandler){\r\n                    ws.on('seek', (progress)=>{\r\n                        const filePosition = ~~(parseInt(fileSize)  * progress);\r\n                        seekHandler({\r\n                            id, \r\n                            filePosition, \r\n                            progress,\r\n                            duration,\r\n                        })\r\n                        ws.drawer.progress(progress);\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [container, peaks ])\r\n\r\n\r\n    return (\r\n        <div className=\"ws-player-container\" ref={onContainerRef}/>\r\n    )\r\n}\r\n\r\nexport default WaveSurferPlayer"]},"metadata":{},"sourceType":"module"}