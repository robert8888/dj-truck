{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayListExplorer\\\\PlayList\\\\Playlist_Item\\\\PlaylistItem.js\";\nimport React, { useContext, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { Spin } from \"react-loading-io\";\nimport { connect } from \"react-redux\";\nimport { loadTrack } from \"../../../../../../actions\";\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\nimport ItemTypes from \"./../../../../DndItemTypes\";\nimport PlaylistContext from \"./../PlaylistContext\";\n\nconst PlaylistItem = props => {\n  const ref = useRef(null);\n  const ctx = useContext(PlaylistContext);\n  let track = { ...props.item\n  };\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: ItemTypes.TRACK,\n      index: props.listIndex,\n      track: track\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    }),\n    begin: props.dragStart,\n    end: (_, monitor) => {\n      if (monitor.didDrop() && monitor.getDropResult().target === \"playlist\") {\n        props.endWithin();\n      } else {\n        props.endOutside();\n      }\n    }\n  });\n  const [, drop] = useDrop({\n    accept: ItemTypes.TRACK,\n\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = props.listIndex;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top; // only if more than half\n\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      } // only if more than half\n\n\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      props.swapItems(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n\n    drop: () => {\n      return {\n        target: \"playlist\"\n      };\n    }\n  });\n  drag(drop(ref));\n  const style = {\n    opacity: isDragging ? 0 : 1\n  }; ///--------- formatingg\n\n  const timeFormating = time => formater.secondsToStr(time);\n\n  const bpmFromating = bpm => {\n    if (!bpm) {\n      return null;\n    } else if (bpm === \"calculating\") {\n      return React.createElement(Spin, {\n        className: \"bpm-load-spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    } else {\n      return bpm.toFixed(2);\n    }\n  };\n\n  return React.createElement(\"tr\", {\n    ref: ref,\n    className: \"track-list-table-row\",\n    style: style,\n    onMouseEnter: ctx.setHover.bind(null, props.listIndex),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"track-list-table-col source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, props.listIndex + 1), React.createElement(\"td\", {\n    className: \"track-list-table-col source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, track.source), React.createElement(\"td\", {\n    className: \"track-list-table-col title overflow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, track.title), React.createElement(\"td\", {\n    className: \"track-list-table-col quality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, track.quality), React.createElement(\"td\", {\n    className: \"track-list-table-col time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, timeFormating(track.duration)), React.createElement(\"td\", {\n    className: \"track-list-table-col bpm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, bpmFromating(track.bpm)));\n};\n\nconst mapDispatchToProps = dispach => ({\n  load: (track, destination) => dispach(loadTrack(track, destination))\n});\n\nexport default connect(null, mapDispatchToProps)(PlaylistItem);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayListExplorer/PlayList/Playlist_Item/PlaylistItem.js"],"names":["React","useContext","useRef","useDrag","useDrop","Spin","connect","loadTrack","formater","ItemTypes","PlaylistContext","PlaylistItem","props","ref","ctx","track","item","isDragging","drag","type","TRACK","index","listIndex","collect","monitor","begin","dragStart","end","_","didDrop","getDropResult","target","endWithin","endOutside","drop","accept","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","swapItems","style","opacity","timeFormating","time","secondsToStr","bpmFromating","bpm","toFixed","setHover","bind","source","title","quality","duration","mapDispatchToProps","dispach","load","destination"],"mappings":"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","sourcesContent":["import React, { useContext, useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { Spin } from \"react-loading-io\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadTrack } from \"../../../../../../actions\";\r\nimport { formater } from \"./../../../../../../utils/time/timeFromater\";\r\nimport ItemTypes from \"./../../../../DndItemTypes\";\r\nimport PlaylistContext from \"./../PlaylistContext\";\r\n\r\nconst PlaylistItem = props => {\r\n  const ref = useRef(null)\r\n\r\n  const ctx = useContext(PlaylistContext);\r\n\r\n  let track = {\r\n    ...props.item\r\n  }\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: {\r\n      type: ItemTypes.TRACK,\r\n      index: props.listIndex,\r\n      track: track\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    }),\r\n    begin: props.dragStart,\r\n    end: (_, monitor) => {\r\n      if (monitor.didDrop() && monitor.getDropResult().target === \"playlist\") {\r\n        props.endWithin()\r\n      } else {\r\n        props.endOutside()\r\n      }\r\n    }\r\n  })\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.TRACK,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = props.listIndex;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return\r\n      }\r\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n\r\n      const clientOffset = monitor.getClientOffset()\r\n\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n      // only if more than half\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return\r\n      }\r\n      // only if more than half\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return\r\n      }\r\n\r\n      props.swapItems(dragIndex, hoverIndex)\r\n\r\n      item.index = hoverIndex\r\n    },\r\n    drop: () => {\r\n      return {\r\n        target: \"playlist\"\r\n      }\r\n    }\r\n  })\r\n\r\n  drag(drop(ref));\r\n\r\n  const style = {\r\n    opacity: (isDragging) ? 0 : 1\r\n  }\r\n\r\n  ///--------- formatingg\r\n  const timeFormating = time => formater.secondsToStr(time);\r\n\r\n  const bpmFromating = bpm => {\r\n    if (!bpm) {\r\n      return null;\r\n    } else if (bpm === \"calculating\") {\r\n      return (<Spin className=\"bpm-load-spin\" />)\r\n    } else {\r\n      return bpm.toFixed(2)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr\r\n      ref={ref}\r\n      className=\"track-list-table-row\"\r\n      style={style}\r\n      onMouseEnter={ctx.setHover.bind(null, props.listIndex)}>\r\n        <td className=\"track-list-table-col source\">{props.listIndex + 1}</td>\r\n        <td className=\"track-list-table-col source\">{track.source}</td>\r\n        <td className=\"track-list-table-col title overflow\">{track.title}</td>\r\n        <td className=\"track-list-table-col quality\">{track.quality}</td>\r\n        <td className=\"track-list-table-col time\">{timeFormating(track.duration)}</td>\r\n        <td className=\"track-list-table-col bpm\">{bpmFromating(track.bpm)}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispach => ({\r\n  load: (track, destination) => dispach(loadTrack(track, destination))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(PlaylistItem);\r\n\r\n"]},"metadata":{},"sourceType":"module"}