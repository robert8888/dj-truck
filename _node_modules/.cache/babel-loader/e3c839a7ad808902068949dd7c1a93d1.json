{"ast":null,"code":"// ---------- PlayList---------------------\nconst ACTIONS = {\n  PUSH_TRACK: \"Push tack on end of list\",\n  //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\n  SET_BPM: \"Update Bpm track on playlist\",\n  SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\",\n  // bpm is rounded\n  //---play list explorer\n  PL_CREATE_DIR: \"Create dir in current\",\n  PL_CREATE_PLAYLIST: \"Creawte play list in current selected dir of name\",\n  PL_SET_SELECTION: \"Set current selected dir and play list if is selected play list\",\n  PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\n  PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\n  PL_RENAME_SELECTED: \"Rename current selected element\",\n  PL_DELETE_SELECTED: \"Remove current selected element\",\n  PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\n  PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\n  PL_ADD_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\n  PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\"\n};\nexport { ACTIONS as PLAY_LIST_ACTIONS }; //***------------------- */\n\nexport function pushTrackToList(track, playlist) {\n  return {\n    type: ACTIONS.PUSH_TRACK,\n    track,\n    playlist\n  };\n}\n;\nexport function setBpm(source, id, bpm) {\n  return {\n    type: ACTIONS.SET_BPM,\n    source,\n    id,\n    bpm\n  };\n}\nexport function setBpmAndOffset(source, id, bpm, offset) {\n  return {\n    type: ACTIONS.SET_BPM_AND_OFFSET,\n    source,\n    id,\n    bpm,\n    offset\n  };\n}\n/**---------------------- */\n\nexport function createDir(name) {\n  return {\n    type: ACTIONS.PL_CREATE_DIR,\n    name\n  };\n}\nexport function createPlaylist(name) {\n  return {\n    type: ACTIONS.PL_CREATE_PLAYLIST,\n    name\n  };\n}\nexport function setSelection(path) {\n  return {\n    type: ACTIONS.PL_SET_SELECTION,\n    path\n  };\n}\nexport function openCurrentPlayList(path) {\n  return {\n    type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST\n  };\n}\nexport function toggleDir(path) {\n  return {\n    type: ACTIONS.PL_TOGGLE_DIR,\n    path\n  };\n}\nexport function deleteSelected() {\n  return {\n    type: ACTIONS.PL_DELETE_SELECTED\n  };\n}\nexport function deleteTrack(index) {\n  return {\n    type: ACTIONS.PL_DELETE_TRACK,\n    index\n  };\n}\nexport function renameSelected(name) {\n  return {\n    type: ACTIONS.PL_RENAME_SELECTED,\n    name\n  };\n}\nexport function swapTrackOnList(from, to) {\n  return {\n    type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT,\n    from,\n    to\n  };\n}\nexport function addTrackToList(track, path) {\n  return {\n    type: ACTIONS.PL_ADD_TRACK_TO_LIST,\n    track,\n    path\n  };\n}\nexport function moveTo(pathFrom, pathTo) {\n  return {\n    type: ACTIONS.PL_MOVE_TO,\n    pathFrom,\n    pathTo\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/actions/playList.js"],"names":["ACTIONS","PUSH_TRACK","SET_BPM","SET_BPM_AND_OFFSET","PL_CREATE_DIR","PL_CREATE_PLAYLIST","PL_SET_SELECTION","PL_OPEN_CURRENT_PLAY_LIST","PL_TOGGLE_DIR","PL_RENAME_SELECTED","PL_DELETE_SELECTED","PL_DELETE_TRACK","PL_SWAP_TRACK_ON_CURRENT","PL_ADD_TRACK_TO_LIST","PL_MOVE_TO","PLAY_LIST_ACTIONS","pushTrackToList","track","playlist","type","setBpm","source","id","bpm","setBpmAndOffset","offset","createDir","name","createPlaylist","setSelection","path","openCurrentPlayList","toggleDir","deleteSelected","deleteTrack","index","renameSelected","swapTrackOnList","from","to","addTrackToList","moveTo","pathFrom","pathTo"],"mappings":"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","sourcesContent":["// ---------- PlayList---------------------\r\n\r\nconst ACTIONS = {\r\n    PUSH_TRACK : \"Push tack on end of list\",\r\n    //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\r\n    SET_BPM : \"Update Bpm track on playlist\",\r\n    SET_BPM_AND_OFFSET : \"Update Bpm and Offset track on playlist\", // bpm is rounded\r\n\r\n    //---play list explorer\r\n    PL_CREATE_DIR : \"Create dir in current\",\r\n    PL_CREATE_PLAYLIST: \"Creawte play list in current selected dir of name\",\r\n\r\n    PL_SET_SELECTION : \"Set current selected dir and play list if is selected play list\",\r\n    PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\r\n    PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\r\n    PL_RENAME_SELECTED: \"Rename current selected element\",\r\n    PL_DELETE_SELECTED: \"Remove current selected element\",\r\n    PL_DELETE_TRACK : \"Remove track of given index from current playlist\",\r\n    PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\r\n    PL_ADD_TRACK_TO_LIST : \"Add track to list (from drag and drop)\",\r\n    PL_MOVE_TO : \"Move element of pathFrom to pathTo (from drag and drop)\",\r\n}\r\nexport {ACTIONS as PLAY_LIST_ACTIONS }\r\n//***------------------- */\r\nexport function pushTrackToList(track, playlist){\r\n    return {\r\n        type: ACTIONS.PUSH_TRACK,\r\n        track,\r\n        playlist\r\n    }\r\n};\r\n\r\nexport function setBpm(source, id, bpm){\r\n    return {\r\n        type: ACTIONS.SET_BPM,\r\n        source,\r\n        id,\r\n        bpm,\r\n    }\r\n}\r\n\r\nexport function setBpmAndOffset(source, id, bpm, offset){\r\n    return {\r\n        type: ACTIONS.SET_BPM_AND_OFFSET,\r\n        source,\r\n        id,\r\n        bpm,\r\n        offset,\r\n    }\r\n}\r\n\r\n/**---------------------- */\r\n\r\nexport function createDir(name){\r\n    return {\r\n        type: ACTIONS.PL_CREATE_DIR,\r\n        name,\r\n    }\r\n}\r\n\r\nexport function createPlaylist(name){\r\n    return {\r\n        type: ACTIONS.PL_CREATE_PLAYLIST,\r\n        name,\r\n    }\r\n}\r\n\r\nexport function setSelection(path){\r\n    return {\r\n        type: ACTIONS.PL_SET_SELECTION,\r\n        path,\r\n    }\r\n}\r\n\r\nexport function openCurrentPlayList(path){\r\n    return {\r\n        type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST,\r\n    }\r\n}\r\n\r\nexport function toggleDir(path){\r\n    return {\r\n        type: ACTIONS.PL_TOGGLE_DIR,\r\n        path\r\n    }\r\n}\r\n\r\n\r\nexport function deleteSelected(){\r\n    return {\r\n        type: ACTIONS.PL_DELETE_SELECTED\r\n    }\r\n}\r\n\r\nexport function deleteTrack(index){\r\n    return {\r\n        type: ACTIONS.PL_DELETE_TRACK,\r\n        index\r\n    }\r\n}\r\n\r\nexport function renameSelected(name){\r\n    return {\r\n        type: ACTIONS.PL_RENAME_SELECTED,\r\n        name\r\n    }\r\n}\r\n\r\nexport function swapTrackOnList(from, to){\r\n    return {\r\n        type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT,\r\n        from,\r\n        to\r\n    }\r\n}\r\n\r\nexport function addTrackToList(track, path){\r\n    return{\r\n        type: ACTIONS.PL_ADD_TRACK_TO_LIST,\r\n        track,\r\n        path\r\n    }\r\n}\r\n\r\nexport function moveTo(pathFrom, pathTo){\r\n    return{\r\n        type: ACTIONS.PL_MOVE_TO,\r\n        pathFrom,\r\n        pathTo\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}