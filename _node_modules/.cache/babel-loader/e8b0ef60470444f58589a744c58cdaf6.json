{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\console\\\\components\\\\Search\\\\Search.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { connect } from \"react-redux\";\nimport { FormControl, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport SearchList from './SerachList/SearchList.js';\nimport { getApisName, API_TYPES } from \"./../../../../apis/apiProvider\";\nimport { searchInput, clearSearch, searchStart } from \"../../../../actions\";\nimport \"./search.scss\";\n\nconst Search = props => {\n  const [listOpen, setListOpen] = useState(false);\n  const [source, setSource] = useState(null);\n  const [apiDropdownList, setApiList] = useState(null);\n  const [maxResults, setMaxResults] = useState(10);\n\n  const openList = () => setListOpen(true);\n\n  const selectedHandel = () => {\n    props.clearSearchHandler();\n    setListOpen(false);\n  };\n\n  useEffect(() => {\n    setApiList(getApisName(API_TYPES.MIUSIC_SOURCE).map(api => {\n      return React.createElement(Dropdown.Item, {\n        key: api,\n        onClick: setSource.bind(null, api),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"  \", api, \" \");\n    }));\n  }, [setApiList, setSource]);\n  return React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(DropdownButton, {\n    className: \"btn-api-select\",\n    title: source ? source : getApisName(API_TYPES.MIUSIC_SOURCE, {\n      default: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, apiDropdownList), React.createElement(FormControl, {\n    className: \"search-control\",\n    type: \"text\",\n    placeholder: \"Tap in to serach on youtube\",\n    onChange: event => props.searchInputHandler(event.target.value),\n    onKeyPress: event => {\n      if (event.key === \"Enter\") {\n        props.searchStartHandler(props.searchString);\n      }\n    },\n    onFocus: openList,\n    value: props.searchString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(DropdownButton, {\n    className: \"btn-max-result-select\",\n    title: maxResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" 10 \"), React.createElement(Dropdown.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" 25 \"), React.createElement(Dropdown.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" 50 \"))), React.createElement(SearchList, {\n    open: listOpen,\n    selectedHandle: selectedHandel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  searchString: state.searchReducer.searchString\n});\n\nconst mapDispachToProps = dispatch => ({\n  searchInputHandler: text => dispatch(searchInput(text)),\n  searchStartHandler: text => dispatch(searchStart(text)),\n  clearSearchHandler: () => dispatch(clearSearch())\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Search);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Search/Search.js"],"names":["React","useState","useEffect","useCallback","connect","FormControl","DropdownButton","Dropdown","SearchList","getApisName","API_TYPES","searchInput","clearSearch","searchStart","Search","props","listOpen","setListOpen","source","setSource","apiDropdownList","setApiList","maxResults","setMaxResults","openList","selectedHandel","clearSearchHandler","MIUSIC_SOURCE","map","api","bind","default","event","searchInputHandler","target","value","key","searchStartHandler","searchString","mapStateToProps","state","searchReducer","mapDispachToProps","dispatch","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { FormControl, DropdownButton, Dropdown } from \"react-bootstrap\"\r\nimport SearchList from './SerachList/SearchList.js';\r\nimport { getApisName, API_TYPES} from \"./../../../../apis/apiProvider\";\r\n\r\nimport { searchInput, clearSearch, searchStart } from \"../../../../actions\";\r\n\r\nimport \"./search.scss\";\r\n\r\n\r\nconst Search = props => {\r\n    const [listOpen, setListOpen] = useState(false);\r\n\r\n    const [source, setSource] = useState(null);\r\n    const [apiDropdownList, setApiList] = useState(null);\r\n\r\n    const [maxResults, setMaxResults] = useState(10);\r\n\r\n    const openList = () => setListOpen(true);\r\n\r\n    const selectedHandel = () => {\r\n        props.clearSearchHandler();\r\n        setListOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setApiList(getApisName(API_TYPES.MIUSIC_SOURCE).map(api => {\r\n            return (<Dropdown.Item key={api} onClick={setSource.bind(null, api)}>  {api} </Dropdown.Item>)\r\n        }))\r\n    }, [setApiList, setSource])\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"search-controls\">\r\n                <DropdownButton \r\n                    className=\"btn-api-select\"\r\n                    title={(source) ? source : getApisName(API_TYPES.MIUSIC_SOURCE, { default: true})}>\r\n                    {apiDropdownList}\r\n                </DropdownButton>\r\n                <FormControl\r\n                    className=\"search-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Tap in to serach on youtube\"\r\n                    onChange={event => props.searchInputHandler(event.target.value)}\r\n                    onKeyPress={event => { if (event.key === \"Enter\") { props.searchStartHandler(props.searchString) } }}\r\n                    onFocus={openList}\r\n                    value={props.searchString} />\r\n                <DropdownButton \r\n                    className=\"btn-max-result-select\"\r\n                    title={maxResults}>\r\n                    <Dropdown.Item> 10 </Dropdown.Item>\r\n                    <Dropdown.Item> 25 </Dropdown.Item>\r\n                    <Dropdown.Item> 50 </Dropdown.Item>\r\n                </DropdownButton>\r\n\r\n\r\n            </div>\r\n\r\n            <SearchList\r\n                open={listOpen}\r\n                selectedHandle={selectedHandel} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    searchString: state.searchReducer.searchString\r\n})\r\n\r\nconst mapDispachToProps = dispatch => ({\r\n    searchInputHandler: (text) => dispatch(searchInput(text)),\r\n    searchStartHandler: (text) => dispatch(searchStart(text)),\r\n    clearSearchHandler: () => dispatch(clearSearch()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Search);"]},"metadata":{},"sourceType":"module"}