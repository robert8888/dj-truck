{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\WaveSurfer\\\\WaveSurfer.js\";\nimport React from \"react\";\nimport colors from \"./../../../css/colors.scss\";\n\nconst getCssColor = (variable, name) => colors[\"deck\" + name.toUpperCase() + variable];\n\nconst masterConfig = (container, height, name) => ({\n  // name deck A or B \n  container: container,\n  waveColor: getCssColor('Primary', name) || 'white',\n  progressColor: getCssColor('PrimaryDark', name) || 'gray',\n  autoCenter: true,\n  scrollParent: true,\n  hideScrollbar: true,\n  fillParent: false,\n  height: height,\n  minPxPerSec: 150\n});\n\nconst slaveConfig = (container, height) => ({\n  container: container,\n  fillParent: true,\n  scrollParent: false,\n  hideScrollbar: true,\n  scrollParent: false,\n  height: height\n});\n\nconst config = (type, container, height, name) => {\n  switch (type) {\n    case \"master\":\n      return masterConfig(container, height, name);\n\n    case \"slave\":\n      return slaveConfig(container, height);\n\n    default:\n      return {};\n  }\n};\n\nclass WaveSurfer extends React.Component {\n  constructor() {\n    super();\n    this.waveSurfer = null;\n    this.container = React.createRef();\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: this.container,\n      style: {\n        height: this.props.height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"  \");\n  }\n\n}\n\n;\nexport default WaveSurfer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/WaveSurfer/WaveSurfer.js"],"names":["React","colors","getCssColor","variable","name","toUpperCase","masterConfig","container","height","waveColor","progressColor","autoCenter","scrollParent","hideScrollbar","fillParent","minPxPerSec","slaveConfig","config","type","WaveSurfer","Component","constructor","waveSurfer","createRef","componentDidMount","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,WAAW,GAAE,CAACC,QAAD,EAAWC,IAAX,KAAoBH,MAAM,CAAE,SAASG,IAAI,CAACC,WAAL,EAAT,GAA8BF,QAAhC,CAA7C;;AAEA,MAAMG,YAAY,GAAG,CAACC,SAAD,EAAYC,MAAZ,EAAoBJ,IAApB,MAA8B;AAAE;AACjDG,EAAAA,SAAS,EAAEA,SADoC;AAE/CE,EAAAA,SAAS,EAAEP,WAAW,CAAC,SAAD,EAAYE,IAAZ,CAAX,IAAgC,OAFI;AAG/CM,EAAAA,aAAa,EAAER,WAAW,CAAC,aAAD,EAAgBE,IAAhB,CAAX,IAAoC,MAHJ;AAI/CO,EAAAA,UAAU,EAAG,IAJkC;AAK/CC,EAAAA,YAAY,EAAE,IALiC;AAM/CC,EAAAA,aAAa,EAAC,IANiC;AAO/CC,EAAAA,UAAU,EAAE,KAPmC;AAQ/CN,EAAAA,MAAM,EAAEA,MARuC;AAS/CO,EAAAA,WAAW,EAAG;AATiC,CAA9B,CAArB;;AAYA,MAAMC,WAAW,GAAG,CAACT,SAAD,EAAYC,MAAZ,MAAwB;AACxCD,EAAAA,SAAS,EAAEA,SAD6B;AAExCO,EAAAA,UAAU,EAAE,IAF4B;AAGxCF,EAAAA,YAAY,EAAG,KAHyB;AAIxCC,EAAAA,aAAa,EAAE,IAJyB;AAKxCD,EAAAA,YAAY,EAAG,KALyB;AAMxCJ,EAAAA,MAAM,EAAEA;AANgC,CAAxB,CAApB;;AASA,MAAMS,MAAM,GAAG,CAACC,IAAD,EAAOX,SAAP,EAAkBC,MAAlB,EAA0BJ,IAA1B,KAAmC;AAC9C,UAAOc,IAAP;AACI,SAAK,QAAL;AAAgB,aAAOZ,YAAY,CAACC,SAAD,EAAYC,MAAZ,EAAoBJ,IAApB,CAAnB;;AAChB,SAAK,OAAL;AAAe,aAAOY,WAAW,CAACT,SAAD,EAAYC,MAAZ,CAAlB;;AACf;AAAU,aAAO,EAAP;AAHd;AAKH,CAND;;AAUA,MAAMW,UAAN,SAAyBnB,KAAK,CAACoB,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKf,SAAL,GAAiBP,KAAK,CAACuB,SAAN,EAAjB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,GAAG,EAAG,KAAKlB,SAAhB;AAA4B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,KAAKkB,KAAL,CAAWlB;AAArB,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAfoC;;AAgBxC;AAED,eAAeW,UAAf","sourcesContent":["import React from \"react\";\r\nimport colors from \"./../../../css/colors.scss\";\r\n\r\nconst getCssColor= (variable, name) => colors[ \"deck\" + name.toUpperCase() + variable ]; \r\n\r\nconst masterConfig = (container, height, name) => ({ // name deck A or B \r\n    container: container,\r\n    waveColor: getCssColor('Primary', name) || 'white',\r\n    progressColor: getCssColor('PrimaryDark', name) || 'gray',\r\n    autoCenter : true,\r\n    scrollParent: true,\r\n    hideScrollbar:true,\r\n    fillParent: false,\r\n    height: height,\r\n    minPxPerSec : 150\r\n})\r\n\r\nconst slaveConfig = (container, height) => ({\r\n    container: container,\r\n    fillParent: true,\r\n    scrollParent : false,\r\n    hideScrollbar: true,\r\n    scrollParent : false,\r\n    height: height,\r\n})\r\n\r\nconst config = (type, container, height, name) => {\r\n    switch(type){\r\n        case \"master\" : return masterConfig(container, height, name);\r\n        case \"slave\" : return slaveConfig(container, height);\r\n        default : return {};\r\n    }\r\n}\r\n\r\n\r\n\r\nclass WaveSurfer extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.waveSurfer = null;\r\n        this.container = React.createRef();\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div ref={ this.container } style={{ height: this.props.height }} >  </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WaveSurfer;"]},"metadata":{},"sourceType":"module"}