{"ast":null,"code":"import { useEffect, useCallback } from \"react\";\nexport default function () {\n  // useEffect(() => {\n  //     const el = descriptionTextArea.current;\n  //     el.style.height = 0;\n  //     el.style.height = el.scrollHeight + 10 + \"px\";\n  // }, [description, descriptionTextArea])\n  const updateHeight = useCallback(textarea => {\n    textarea.style.height = 0;\n    textarea.style.height = el.scrollHeight + 10 + \"px\";\n  });\n  const onInput = useCallback(event => {\n    if (!event.target) return;\n    if (!(evnet.target instanceof HTMLTextAreaElement)) return;\n    updateHeight(event.target);\n  }, [updateHeight]);\n  const addRef = useCallback(textarea => {\n    updateHeight(textarea);\n    textarea.addEventHandler('input', onInput);\n    return textarea;\n  }, [updateHeight]);\n  return [addRef];\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Hooks/useAutoHeightTextarea.js"],"names":["useEffect","useCallback","updateHeight","textarea","style","height","el","scrollHeight","onInput","event","target","evnet","HTMLTextAreaElement","addRef","addEventHandler"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,WAAnB,QAAqC,OAArC;AAEA,eAAe,YAAW;AACtB;AACA;AACA;AACA;AACA;AAEA,QAAMC,YAAY,GAAGD,WAAW,CAAEE,QAAD,IAAY;AACzCA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,MAAf,GAAwB,CAAxB;AACAF,IAAAA,QAAQ,CAACC,KAAT,CAAeC,MAAf,GAAwBC,EAAE,CAACC,YAAH,GAAkB,EAAlB,GAAuB,IAA/C;AACH,GAH+B,CAAhC;AAKA,QAAMC,OAAO,GAAGP,WAAW,CAAEQ,KAAD,IAAW;AACnC,QAAG,CAACA,KAAK,CAACC,MAAV,EAAmB;AACnB,QAAG,EAAEC,KAAK,CAACD,MAAN,YAAwBE,mBAA1B,CAAH,EAAmD;AACnDV,IAAAA,YAAY,CAACO,KAAK,CAACC,MAAP,CAAZ;AACH,GAJ0B,EAIxB,CAACR,YAAD,CAJwB,CAA3B;AAMA,QAAMW,MAAM,GAAGZ,WAAW,CAAEE,QAAD,IAAY;AACnCD,IAAAA,YAAY,CAACC,QAAD,CAAZ;AACAA,IAAAA,QAAQ,CAACW,eAAT,CAAyB,OAAzB,EAAkCN,OAAlC;AACA,WAAOL,QAAP;AACH,GAJyB,EAIxB,CAACD,YAAD,CAJwB,CAA1B;AAMA,SAAO,CAACW,MAAD,CAAP;AACH","sourcesContent":["import {useEffect, useCallback} from \"react\"\r\n\r\nexport default function (){\r\n    // useEffect(() => {\r\n    //     const el = descriptionTextArea.current;\r\n    //     el.style.height = 0;\r\n    //     el.style.height = el.scrollHeight + 10 + \"px\";\r\n    // }, [description, descriptionTextArea])\r\n\r\n    const updateHeight = useCallback((textarea)=>{\r\n        textarea.style.height = 0;\r\n        textarea.style.height = el.scrollHeight + 10 + \"px\";\r\n    })\r\n\r\n    const onInput = useCallback((event) => {\r\n        if(!event.target ) return;\r\n        if(!(evnet.target instanceof HTMLTextAreaElement)) return;\r\n        updateHeight(event.target)\r\n    }, [updateHeight])\r\n\r\n    const addRef = useCallback((textarea)=>{\r\n        updateHeight(textarea)\r\n        textarea.addEventHandler('input', onInput);\r\n        return textarea\r\n    },[updateHeight])\r\n\r\n    return [addRef]\r\n}"]},"metadata":{},"sourceType":"module"}