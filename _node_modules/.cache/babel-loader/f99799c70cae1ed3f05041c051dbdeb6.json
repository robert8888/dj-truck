{"ast":null,"code":"import React,{useCallback}from\"react\";import{connect}from\"react-redux\";import{Button}from'react-bootstrap';import{toggleSync,setMaster}from'./../../../../../../actions';import\"./sync-control.scss\";import SyncBar from\"./SyncBar/SyncBar\";var SyncControl=function SyncControl(props){var isActive=useCallback(function(){if(props.isMaster||props.noMaster){return false;}return true;},[props.isMaster,props.noMaster]);return React.createElement(\"div\",{className:\"sync-control bar-deck-\"+props.name},React.createElement(Button,{className:\"sync-btn \"+(props.syncState?\"btn--pressed\":\"\"),onClick:props.toggleSyncState},\"Sync\"),React.createElement(Button,{className:\"master-btn \"+(props.isMaster?\"btn--pressed\":\"\"),onClick:props.toggleMasterState},\"Master\"),React.createElement(SyncBar,{className:\"sync-bar\",active:isActive,name:props.name}));};var mapStateToProps=function mapStateToProps(state,ownProps){return{syncState:state.console.channel[ownProps.name].playBackState.sync,isMaster:state.console.master===ownProps.name,noMaster:state.console.master===null||state.console.master===\"\"};};var mapDispachToProps=function mapDispachToProps(dispach,ownProps){return{toggleSyncState:function toggleSyncState(){return dispach(toggleSync(ownProps.name));},toggleMasterState:function toggleMasterState(){return dispach(setMaster(ownProps.name));}};};export default connect(mapStateToProps,mapDispachToProps)(SyncControl);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/components/Console/Deck/SyncControl/SyncControl.js"],"names":["React","useCallback","connect","Button","toggleSync","setMaster","SyncBar","SyncControl","props","isActive","isMaster","noMaster","name","syncState","toggleSyncState","toggleMasterState","mapStateToProps","state","ownProps","console","channel","playBackState","sync","master","mapDispachToProps","dispach"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,MAAT,KAAuB,iBAAvB,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,6BAAtC,CACA,MAAO,qBAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAG,CAExB,GAAIC,CAAAA,QAAQ,CAAGR,WAAW,CAAC,UAAI,CAC3B,GAAGO,KAAK,CAACE,QAAN,EAAkBF,KAAK,CAACG,QAA3B,CAAoC,CAChC,MAAO,MAAP,CACH,CACD,MAAO,KAAP,CACH,CALyB,CAKvB,CAACH,KAAK,CAACE,QAAP,CAAiBF,KAAK,CAACG,QAAvB,CALuB,CAA1B,CAOA,MACI,4BAAK,SAAS,CAAE,yBAA2BH,KAAK,CAACI,IAAjD,EACI,oBAAC,MAAD,EACI,SAAS,CAAE,aAAgBJ,KAAK,CAACK,SAAP,CAAoB,cAApB,CAAqC,EAApD,CADf,CAEI,OAAO,CAAEL,KAAK,CAACM,eAFnB,SADJ,CAMI,oBAAC,MAAD,EACI,SAAS,CAAE,eAAkBN,KAAK,CAACE,QAAP,CAAmB,cAAnB,CAAoC,EAArD,CADf,CAEI,OAAO,CAAGF,KAAK,CAACO,iBAFpB,WANJ,CAWI,oBAAC,OAAD,EAAS,SAAS,CAAC,UAAnB,CAA8B,MAAM,CAAGN,QAAvC,CAAiD,IAAI,CAAED,KAAK,CAACI,IAA7D,EAXJ,CADJ,CAeH,CAxBD,CA0BA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,QAAR,QAAsB,CAC1CL,SAAS,CAAGI,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACN,IAA/B,EAAqCS,aAArC,CAAmDC,IADrB,CAE1CZ,QAAQ,CAAGO,KAAK,CAACE,OAAN,CAAcI,MAAd,GAAyBL,QAAQ,CAACN,IAFH,CAG1CD,QAAQ,CAAIM,KAAK,CAACE,OAAN,CAAcI,MAAd,GAAyB,IAAzB,EAAiCN,KAAK,CAACE,OAAN,CAAcI,MAAd,GAAyB,EAH5B,CAAtB,EAAxB,CAMA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,CAAUP,QAAV,QAAwB,CAC9CJ,eAAe,CAAG,iCAAMW,CAAAA,OAAO,CAACrB,UAAU,CAACc,QAAQ,CAACN,IAAV,CAAX,CAAb,EAD4B,CAE9CG,iBAAiB,CAAG,mCAAMU,CAAAA,OAAO,CAACpB,SAAS,CAACa,QAAQ,CAACN,IAAV,CAAV,CAAb,EAF0B,CAAxB,EAA1B,CAKA,cAAeV,CAAAA,OAAO,CAACc,eAAD,CAAkBQ,iBAAlB,CAAP,CAA4CjB,WAA5C,CAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { toggleSync, setMaster } from './../../../../../../actions';\r\nimport \"./sync-control.scss\";\r\nimport SyncBar from \"./SyncBar/SyncBar\";\r\n\r\nconst SyncControl = props =>{\r\n\r\n    let isActive = useCallback(()=>{\r\n        if(props.isMaster || props.noMaster){\r\n            return false;\r\n        } \r\n        return true;\r\n    }, [props.isMaster, props.noMaster])\r\n\r\n    return (\r\n        <div className={\"sync-control bar-deck-\" + props.name }>\r\n            <Button \r\n                className={\"sync-btn \" + ((props.syncState) ? \"btn--pressed\" : \"\")} \r\n                onClick={props.toggleSyncState}>\r\n                    Sync\r\n            </Button>\r\n            <Button \r\n                className={\"master-btn \" + ((props.isMaster) ? \"btn--pressed\" : \"\" )}\r\n                onClick ={props.toggleMasterState}>\r\n                    Master\r\n            </Button>\r\n            <SyncBar className=\"sync-bar\" active={ isActive} name={props.name}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    syncState : state.console.channel[ownProps.name].playBackState.sync,\r\n    isMaster : state.console.master === ownProps.name,\r\n    noMaster : (state.console.master === null || state.console.master === \"\")\r\n})\r\n\r\nconst mapDispachToProps = (dispach, ownProps) => ({\r\n    toggleSyncState : () => dispach(toggleSync(ownProps.name)),\r\n    toggleMasterState : () => dispach(setMaster(ownProps.name))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SyncControl);"]},"metadata":{},"sourceType":"module"}