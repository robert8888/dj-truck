{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Record\\\\Created\\\\Created.js\";\nimport React, { useMemo } from 'react'; // import { toDate, formatRelative } from \"date-fns\";\n// import  * as locales from 'date-fns/locale';\n\nimport { useFormatRelative } from \"./../../../Hooks/useFormatDate\";\nimport \"./created.scss\";\n\nconst Created = ({\n  date: timestamp\n}) => {\n  // const dateFormated = useMemo(() => {\n  //     const timeZoneOffset = new Date().getTimezoneOffset();\n  //     function getLang() {\n  //         if (navigator.languages != undefined)\n  //             return navigator.languages[0];\n  //         else\n  //             return navigator.language;\n  //     }\n  //     return formatRelative(\n  //         toDate(timestamp - (timeZoneOffset * 1000)),\n  //         new Date(),\n  //         // {\n  //         //     locale: locales[getLang().substr(0,2)]\n  //         // }\n  //     )\n  // }, [timestamp])\n  const [formatRelative] = useFormatRelative();\n  const dateFormated = useMemo(() => {\n    return formatRelative(timestamp, {\n      timezone: true\n    });\n  }, [timestamp, formatRelative]);\n  return React.createElement(\"div\", {\n    className: \"record-created\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, dateFormated));\n};\n\nexport default Created;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Record/Created/Created.js"],"names":["React","useMemo","useFormatRelative","Created","date","timestamp","formatRelative","dateFormated","timezone"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B,C,CACA;AACA;;AACA,SAAQC,iBAAR,QAAgC,gCAAhC;AACA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAEC;AAAR,CAAD,KAAyB;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,cAAD,IAAmBJ,iBAAiB,EAA1C;AACA,QAAMK,YAAY,GAAGN,OAAO,CAAC,MAAI;AAC7B,WAAOK,cAAc,CAACD,SAAD,EAAY;AAACG,MAAAA,QAAQ,EAAE;AAAX,KAAZ,CAArB;AACH,GAF2B,EAE1B,CAACH,SAAD,EAAYC,cAAZ,CAF0B,CAA5B;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,YAAP,CADJ,CADJ;AAKH,CA5BD;;AA+BA,eAAeJ,OAAf","sourcesContent":["import React, { useMemo } from 'react';\r\n// import { toDate, formatRelative } from \"date-fns\";\r\n// import  * as locales from 'date-fns/locale';\r\nimport {useFormatRelative} from \"./../../../Hooks/useFormatDate\";\r\nimport \"./created.scss\"\r\n\r\nconst Created = ({ date: timestamp }) => {\r\n\r\n    // const dateFormated = useMemo(() => {\r\n    //     const timeZoneOffset = new Date().getTimezoneOffset();\r\n    //     function getLang() {\r\n    //         if (navigator.languages != undefined)\r\n    //             return navigator.languages[0];\r\n    //         else\r\n    //             return navigator.language;\r\n    //     }\r\n    //     return formatRelative(\r\n    //         toDate(timestamp - (timeZoneOffset * 1000)),\r\n    //         new Date(),\r\n    //         // {\r\n    //         //     locale: locales[getLang().substr(0,2)]\r\n    //         // }\r\n    //     )\r\n    // }, [timestamp])\r\n    const [formatRelative] = useFormatRelative();\r\n    const dateFormated = useMemo(()=>{\r\n        return formatRelative(timestamp, {timezone: true})\r\n    },[timestamp, formatRelative])\r\n\r\n    return (\r\n        <div className=\"record-created\">\r\n            <span>{dateFormated}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Created;"]},"metadata":{},"sourceType":"module"}