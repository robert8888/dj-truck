{"ast":null,"code":"//--------- Displayling Records----------------\nconst ACTIONS = {\n  RECS_REQ_RECS: \"Request for records of current user\",\n  RECS_LOAD: \"Load records from request to state\",\n  RECS_REQ_FAILS: \"set fail status to records list\",\n  RECS_REQ_DATA: \"Request for full data of record\",\n  RECS_SET_DATA: \"Set data of current record\",\n  RECS_REQ_UPDATE: \"Request record update\",\n  RECS_UPDATE: \"Update record in store\",\n  RECS_REQ_UPDATE_FAIL: \"Problem during updating record data\",\n  RECS_REQ_DELETE: \"Request delete record from database\",\n  RECS_SET_DELETE_STATUS: \"Set delete status if is kind  of positive make redirect otherwise inform about err\",\n  RECS_REQ_POST_COMMENT: \"Request to post comment under record\",\n  RECS_REQ_DELETE_COMMENT: \"Request to delete comment uder record\"\n};\nexport { ACTIONS as RECORDS_ACTIONS };\nexport function reqRecs(pageSize, page, where) {\n  return {\n    type: ACTIONS.RECS_REQ_RECS,\n    pageSize,\n    page,\n    where\n  };\n}\nexport function reqRecData(recId) {\n  return {\n    type: ACTIONS.RECS_REQ_DATA,\n    recId\n  };\n}\nexport function setRecData(recData) {\n  return {\n    type: ACTIONS.RECS_SET_DATA,\n    recData\n  };\n}\nexport function loadRecords(records, countAll) {\n  return {\n    type: ACTIONS.RECS_LOAD,\n    records,\n    countAll\n  };\n}\nexport function recReqFails(reason) {\n  return {\n    type: ACTIONS.RECS_REQ_FAILS,\n    reason\n  };\n}\nexport function reqUpdateRec(recordId, recordChanges) {\n  return {\n    type: ACTIONS.RECS_REQ_UPDATE,\n    recordId,\n    recordChanges\n  };\n}\nexport function updateRec(recordId, recordChanges) {\n  return {\n    type: ACTIONS.RECS_UPDATE,\n    recordId,\n    recordChanges\n  };\n}\nexport function updateRecFail(recordTitle, reason) {\n  return {\n    type: ACTIONS.RECS_REQ_UPDATE_FAIL,\n    recordTitle,\n    reason\n  };\n}\nexport function reqDeleteRec(recordId) {\n  return {\n    type: ACTIONS.RECS_REQ_DELETE,\n    recordId\n  };\n}\nexport function setRecDeleteStatus(status) {\n  return {\n    type: ACTIONS.RECS_SET_DELETE_STATUS,\n    status\n  };\n}\nexport function reqPostComment(recId, commentData) {\n  return {\n    type: ACTIONS.RECS_REQ_POST_COMMENT,\n    recId,\n    commentData\n  };\n}\nexport function reqDeleteComment(commentId) {\n  return {\n    type: ACTIONS.RECS_REQ_DELETE_COMMENT,\n    commentId\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/actions/records/records.js"],"names":["ACTIONS","RECS_REQ_RECS","RECS_LOAD","RECS_REQ_FAILS","RECS_REQ_DATA","RECS_SET_DATA","RECS_REQ_UPDATE","RECS_UPDATE","RECS_REQ_UPDATE_FAIL","RECS_REQ_DELETE","RECS_SET_DELETE_STATUS","RECS_REQ_POST_COMMENT","RECS_REQ_DELETE_COMMENT","RECORDS_ACTIONS","reqRecs","pageSize","page","where","type","reqRecData","recId","setRecData","recData","loadRecords","records","countAll","recReqFails","reason","reqUpdateRec","recordId","recordChanges","updateRec","updateRecFail","recordTitle","reqDeleteRec","setRecDeleteStatus","status","reqPostComment","commentData","reqDeleteComment","commentId"],"mappings":"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","sourcesContent":["\r\n//--------- Displayling Records----------------\r\n\r\nconst ACTIONS = {\r\n    RECS_REQ_RECS: \"Request for records of current user\",\r\n    RECS_LOAD: \"Load records from request to state\",\r\n    RECS_REQ_FAILS: \"set fail status to records list\",\r\n\r\n    RECS_REQ_DATA: \"Request for full data of record\",\r\n    RECS_SET_DATA: \"Set data of current record\",\r\n\r\n    RECS_REQ_UPDATE: \"Request record update\",\r\n    RECS_UPDATE: \"Update record in store\",\r\n    RECS_REQ_UPDATE_FAIL: \"Problem during updating record data\",\r\n\r\n    RECS_REQ_DELETE: \"Request delete record from database\",\r\n    RECS_SET_DELETE_STATUS: \"Set delete status if is kind  of positive make redirect otherwise inform about err\",\r\n\r\n    RECS_REQ_POST_COMMENT: \"Request to post comment under record\",\r\n    RECS_REQ_DELETE_COMMENT : \"Request to delete comment uder record\",\r\n}\r\nexport { ACTIONS as RECORDS_ACTIONS };\r\n\r\nexport function reqRecs(pageSize, page, where) {\r\n    return { type: ACTIONS.RECS_REQ_RECS, pageSize, page, where }\r\n}\r\n\r\nexport function reqRecData(recId) {\r\n    return { type: ACTIONS.RECS_REQ_DATA, recId }\r\n}\r\n\r\nexport function setRecData(recData){\r\n    return {type : ACTIONS.RECS_SET_DATA, recData}\r\n}\r\n\r\nexport function loadRecords(records, countAll) {\r\n    return { type: ACTIONS.RECS_LOAD, records, countAll }\r\n}\r\n\r\nexport function recReqFails(reason) {\r\n    return { type: ACTIONS.RECS_REQ_FAILS, reason }\r\n}\r\n\r\n\r\nexport function reqUpdateRec(recordId, recordChanges) {\r\n    return { type: ACTIONS.RECS_REQ_UPDATE, recordId, recordChanges }\r\n}\r\n\r\nexport function updateRec(recordId, recordChanges) {\r\n    return { type: ACTIONS.RECS_UPDATE, recordId, recordChanges }\r\n}\r\n\r\nexport function updateRecFail(recordTitle, reason) {\r\n    return { type: ACTIONS.RECS_REQ_UPDATE_FAIL, recordTitle, reason }\r\n}\r\n\r\n\r\n\r\nexport function reqDeleteRec(recordId) {\r\n    return { type: ACTIONS.RECS_REQ_DELETE, recordId };\r\n}\r\n\r\nexport function setRecDeleteStatus(status) {\r\n    return { type: ACTIONS.RECS_SET_DELETE_STATUS, status }\r\n}\r\n\r\n\r\nexport function reqPostComment(recId, commentData){\r\n    return { type: ACTIONS.RECS_REQ_POST_COMMENT, recId, commentData}\r\n}\r\n\r\nexport function reqDeleteComment(commentId){\r\n    return {type: ACTIONS.RECS_REQ_DELETE_COMMENT, commentId}\r\n}"]},"metadata":{},"sourceType":"module"}