{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\Console\\\\Deck\\\\SyncControl\\\\SyncBar\\\\SyncBar.js\";\nimport React from \"react\";\nimport Console from \"./../../../../../core/console/console\";\nimport \"./sync-bar.scss\";\n\nclass SyncBar extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      position: 0\n    };\n    this.channelInterface = Console.Get().getChannelInterface(this.props.name);\n    this.thumbElement = React.createRef();\n    this.lastCall = false;\n    this.break = true;\n  }\n\n  update() {\n    // console.log(\"update\", this.props.name);\n    requestAnimationFrame(this.update.bind(this));\n    const position = this.channelInterface.getSyncBarPosition();\n    this.applyStyle(position);\n  }\n\n  applyStyle(position) {\n    const style = {};\n    console.log(position);\n\n    if (position > 0) {\n      const scale = 2 * position;\n      const translateX = (1 - scale) / 2 * 100;\n    }\n    /*\r\n    \r\n          style.width = Math.abs(position * 100) + \"%\"; //max 50 %;\r\n          if (position > 0) {\r\n            style.left = \"50%\";\r\n          } else {\r\n            style.left = \"auto\";\r\n            style.right = \"50%\";\r\n          }\r\n    */\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.active) {\n      // this.thumbElement.current.style.opacity = \"1\";\n      this.break = false;\n      this.update();\n    } else {\n      this.thumbElement.current.style.opacity = \"0\";\n      this.break = true;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className + \" sync-bar-deck-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bar-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.thumbElement,\n      className: \"bar-thumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SyncBar;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/Console/Deck/SyncControl/SyncBar/SyncBar.js"],"names":["React","Console","SyncBar","Component","constructor","arguments","state","position","channelInterface","Get","getChannelInterface","props","name","thumbElement","createRef","lastCall","break","update","requestAnimationFrame","bind","getSyncBarPosition","applyStyle","style","console","log","scale","translateX","componentDidUpdate","active","current","opacity","render","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAO,iBAAP;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGC,SAAT;AADY,SASdC,KATc,GASN;AACNC,MAAAA,QAAQ,EAAE;AADJ,KATM;AAEZ,SAAKC,gBAAL,GAAwBP,OAAO,CAACQ,GAAR,GAAcC,mBAAd,CAAkC,KAAKC,KAAL,CAAWC,IAA7C,CAAxB;AACA,SAAKC,YAAL,GAAoBb,KAAK,CAACc,SAAN,EAApB;AAEA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,KAAL,GAAa,IAAb;AACD;;AAMDC,EAAAA,MAAM,GAAG;AACP;AACAC,IAAAA,qBAAqB,CAAC,KAAKD,MAAL,CAAYE,IAAZ,CAAiB,IAAjB,CAAD,CAArB;AAEA,UAAMZ,QAAQ,GAAG,KAAKC,gBAAL,CAAsBY,kBAAtB,EAAjB;AAEA,SAAKC,UAAL,CAAgBd,QAAhB;AAED;;AAEDc,EAAAA,UAAU,CAACd,QAAD,EAAW;AACnB,UAAMe,KAAK,GAAG,EAAd;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;;AAEA,QAAGA,QAAQ,GAAG,CAAd,EAAgB;AACd,YAAMkB,KAAK,GAAG,IAAIlB,QAAlB;AACA,YAAMmB,UAAU,GAAG,CAAE,IAAID,KAAN,IAAgB,CAAhB,GAAoB,GAAvC;AACD;AAGD;;;;;;;;;;;AAWD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKhB,KAAL,CAAWiB,MAAf,EAAuB;AACrB;AACA,WAAKZ,KAAL,GAAa,KAAb;AACA,WAAKC,MAAL;AACD,KAJD,MAIO;AACL,WAAKJ,YAAL,CAAkBgB,OAAlB,CAA0BP,KAA1B,CAAgCQ,OAAhC,GAA0C,GAA1C;AACA,WAAKd,KAAL,GAAa,IAAb;AACD;AACF;;AAGDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWqB,SAAX,GAAuB,iBAAvB,GAA2C,KAAKrB,KAAL,CAAWC,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKC,YAAf;AAA6B,MAAA,SAAS,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AApEmC;;AAuEtC,eAAeX,OAAf","sourcesContent":["import React from \"react\";\r\nimport Console from \"./../../../../../core/console/console\"\r\nimport \"./sync-bar.scss\";\r\n\r\nclass SyncBar extends React.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.channelInterface = Console.Get().getChannelInterface(this.props.name);\r\n    this.thumbElement = React.createRef();\r\n\r\n    this.lastCall = false;\r\n    this.break = true;\r\n  }\r\n\r\n  state = {\r\n    position: 0\r\n  };\r\n\r\n  update() {\r\n    // console.log(\"update\", this.props.name);\r\n    requestAnimationFrame(this.update.bind(this))\r\n\r\n    const position = this.channelInterface.getSyncBarPosition();\r\n\r\n    this.applyStyle(position);\r\n\r\n  }\r\n\r\n  applyStyle(position) {\r\n    const style = {};\r\n\r\n    console.log(position)\r\n\r\n    if(position > 0){\r\n      const scale = 2 * position;\r\n      const translateX = ( 1 - scale ) / 2 * 100;\r\n    }\r\n\r\n\r\n    /*\r\n    \r\n          style.width = Math.abs(position * 100) + \"%\"; //max 50 %;\r\n          if (position > 0) {\r\n            style.left = \"50%\";\r\n          } else {\r\n            style.left = \"auto\";\r\n            style.right = \"50%\";\r\n          }\r\n    */\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.active) {\r\n      // this.thumbElement.current.style.opacity = \"1\";\r\n      this.break = false;\r\n      this.update();\r\n    } else {\r\n      this.thumbElement.current.style.opacity = \"0\";\r\n      this.break = true;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.className + \" sync-bar-deck-\" + this.props.name}>\r\n        <div className=\"bar-area\">\r\n          <div ref={this.thumbElement} className=\"bar-thumb\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SyncBar;\r\n"]},"metadata":{},"sourceType":"module"}