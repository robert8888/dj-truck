{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecord\\\\UserRecord.js\";\nimport React, { useState, useEffect, useCallback, useRef, useMemo } from \"react\";\nimport { reqRecs, loadRecords, reqRecData } from \"./../../actions\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport Record from \"../common/components/Record/Record\";\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\nimport RecordComments from \"./../common/components/RecordComments/RecordComments\";\nimport PlayerControls from \"../common/components/PlayerControls/PlayerControls\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"./user-record.scss\";\n\nconst UserRecord = ({\n  requestRecordList,\n  recordsList,\n  reqRecData,\n  userId,\n  setRecordsList,\n  countAll\n}) => {\n  var _record$user;\n\n  const [controls, player] = useRecordPlayer();\n  const {\n    user,\n    title,\n    id\n  } = useParams();\n  const history = useHistory();\n  const [record, setRecord] = useState();\n  const [comments, setComments] = useState();\n  const [trackList, setTrackList] = useState();\n  const getDownloadLink = useMemo(() => getApi('RecordsStore').getDownloadLink, [getApi]);\n  const reqFlag = useRef();\n  const escapeUnderdash = useCallback(str => str.split(\"_\").join(\" \"), []);\n  useEffect(() => {\n    if (!title && !user) {\n      history.replace('/records');\n      return;\n    }\n\n    if (!title && user) {\n      history.replace('/records/' + user);\n      return;\n    }\n\n    const _title = escapeUnderdash(title);\n\n    let recs = recordsList === null || recordsList === void 0 ? void 0 : recordsList.filter(r => r.title === _title);\n\n    if (id) {\n      let _id = parseInt(id);\n\n      recs = recs.filter(r => r.id === _id);\n    } //if is exact this record \n\n\n    if (recs && recs.length === 1) {\n      setRecord(recs[0]);\n      return;\n    } //if there is none record request it\n\n\n    if ((recs && recs.length === 0 || !recs) && !reqFlag.current) {\n      const where = {\n        title: _title\n      };\n\n      if (id) {\n        where.id = +id;\n      }\n\n      if (user) {\n        where.nickname = user;\n      } else if (userId) {\n        where.userId = userId;\n      }\n\n      requestRecordList(100, 0, where); //to prevent reqesting again if result is empty\n\n      reqFlag.current = true;\n      return;\n    } // if is more than one record with this title \n\n\n    if (recs.length > 1) {\n      setRecordsList(recs);\n      history.replace('/records?preloaded=true');\n    }\n\n    if (countAll === 0) {\n      history.replace('/404');\n    }\n  }, [recordsList, setRecord, title, id, userId, user, setRecordsList, escapeUnderdash, reqFlag, history]);\n  useEffect(() => {\n    reqRecData(record.id);\n  }, [record]);\n  return React.createElement(\"div\", {\n    className: \"user-record\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, (record === null || record === void 0 ? void 0 : (_record$user = record.user) === null || _record$user === void 0 ? void 0 : _record$user.id) === userId && userId && React.createElement(\"a\", {\n    className: \"download-link\",\n    href: getDownloadLink(record === null || record === void 0 ? void 0 : record.id, record === null || record === void 0 ? void 0 : record.title),\n    download: \"w3logo555\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Download\"), React.createElement(Record, {\n    record: record,\n    controls: controls,\n    player: player,\n    simple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 12,\n    xs: {\n      order: 2\n    },\n    md: 6,\n    md: {\n      order: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(RecordComments, {\n    comments: comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    md: {\n      order: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(RecordDetails, {\n    record: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"TrackList\"))), React.createElement(PlayerControls, {\n    controls: controls,\n    player: player,\n    list: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestRecordList: (pageSize, page, where) => dispatch(reqRecs(pageSize, page, where)),\n  requestRecordData: id => dispatch(reqRecData(id)),\n  setRecordsList: list => dispatch(loadRecords(list))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecord/UserRecord.js"],"names":["React","useState","useEffect","useCallback","useRef","useMemo","reqRecs","loadRecords","reqRecData","connect","useParams","useHistory","useRecordPlayer","Record","RecordDetails","RecordComments","PlayerControls","getApi","Row","Col","UserRecord","requestRecordList","recordsList","userId","setRecordsList","countAll","controls","player","user","title","id","history","record","setRecord","comments","setComments","trackList","setTrackList","getDownloadLink","reqFlag","escapeUnderdash","str","split","join","replace","_title","recs","filter","r","_id","parseInt","length","current","where","nickname","order","mapStateToProps","state","records","list","dbId","mapDispatchToProps","dispatch","pageSize","page","requestRecordData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback , useRef, useMemo} from \"react\";\r\nimport { reqRecs, loadRecords, reqRecData } from \"./../../actions\"\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\r\nimport Record from \"../common/components/Record/Record\";\r\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\r\nimport RecordComments from \"./../common/components/RecordComments/RecordComments\";\r\nimport PlayerControls from \"../common/components/PlayerControls/PlayerControls\";\r\nimport {getApi} from \"./../../apis/apiProvider\";\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport \"./user-record.scss\"\r\n\r\nconst UserRecord = ({ requestRecordList, recordsList,reqRecData, userId, setRecordsList, countAll }) => {\r\n    const [controls, player] = useRecordPlayer();\r\n    const { user, title, id } = useParams();\r\n    const history = useHistory()\r\n    const [record, setRecord] = useState();\r\n    const [comments, setComments] = useState();\r\n    const [trackList, setTrackList] = useState();\r\n    const getDownloadLink = useMemo(()=>getApi('RecordsStore').getDownloadLink,[getApi])\r\n\r\n    const reqFlag = useRef();\r\n\r\n    const escapeUnderdash = useCallback(str => str.split(\"_\").join(\" \"), []);\r\n\r\n    useEffect(() => {\r\n        if (!title && !user) { \r\n            history.replace('/records') \r\n            return;\r\n        }\r\n        if (!title && user) {\r\n            history.replace('/records/' + user)\r\n            return;\r\n        }\r\n\r\n        const _title = escapeUnderdash(title);\r\n\r\n        let recs = recordsList?.filter(r => r.title === _title)\r\n        if (id) {\r\n            let _id = parseInt(id)\r\n            recs = recs.filter(r => r.id === _id);\r\n        }\r\n        //if is exact this record \r\n        if (recs && recs.length === 1) {\r\n            setRecord(recs[0]);\r\n            return;\r\n        }\r\n        //if there is none record request it\r\n        if ((recs && recs.length === 0 || !recs) && !reqFlag.current) {\r\n\r\n            const where = { title: _title}\r\n            if (id) {\r\n                where.id = +id;\r\n            }\r\n\r\n            if (user) {\r\n                where.nickname = user;\r\n            } else if (userId) {\r\n                where.userId = userId;\r\n            }\r\n        \r\n            requestRecordList(100, 0, where);\r\n            //to prevent reqesting again if result is empty\r\n            reqFlag.current = true;\r\n            return;\r\n        }\r\n        // if is more than one record with this title \r\n\r\n        if(recs.length > 1){\r\n            setRecordsList(recs);\r\n            history.replace('/records?preloaded=true')\r\n        }\r\n\r\n        if(countAll === 0){\r\n            history.replace('/404')\r\n        }\r\n\r\n    }, [recordsList, \r\n        setRecord, \r\n        title, \r\n        id, \r\n        userId,\r\n        user, \r\n        setRecordsList, \r\n        escapeUnderdash, \r\n        reqFlag,\r\n        history, \r\n    ])\r\n\r\n    useEffect(() => {\r\n        reqRecData(record.id);\r\n    }, [record])\r\n\r\n    return (\r\n        <div className=\"user-record\">\r\n            {record?.user?.id === userId && userId && \r\n                <a className=\"download-link\" href={getDownloadLink(record?.id, record?.title)} download=\"w3logo555\">\r\n                    Download\r\n                </a>}\r\n            <Record record={record} controls={controls} player={player} simple />\r\n            <Row>\r\n                <Col xs={12} xs={{order: 2}}  md={6} md={{order:1}}>\r\n                    <RecordComments comments={comments}/>\r\n                </Col>\r\n                <Col xs={12} md={6}  md={{order:2}}>\r\n                    <RecordDetails record={record} />\r\n                    <div>TrackList</div>\r\n                </Col> \r\n            </Row>\r\n            <PlayerControls controls={controls} player={player} list={record} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestRecordList: (pageSize, page, where) => dispatch(reqRecs(pageSize, page, where)),\r\n    requestRecordData: (id) => dispatch(reqRecData(id)),\r\n    setRecordsList: (list) => dispatch(loadRecords(list))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}