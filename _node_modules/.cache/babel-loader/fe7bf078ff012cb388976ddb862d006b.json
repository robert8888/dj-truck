{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\SocialButton\\\\SocialButton.js\";\nimport React, { useMemo, useCallback } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebook, faTwitter, faGoogle, faReddit } from \"@fortawesome/free-brands-svg-icons\";\nimport \"./social.scss\";\n\nconst SocialButton = ({\n  type,\n  resorce,\n  text\n}) => {\n  const urls = {\n    facebook: url => `https://www.facebook.com/sharer/sharer.php?u='${url}'&t='${url}'`,\n    twitter: (url, text) => `https://twitter.com/intent/tweet?text=${text}':${url}`,\n    google: url => `https://plus.google.com/share?url=${url}`,\n    reddit: (url, text) => `http://www.reddit.com/submit?url=${url}&title=${text}`\n  };\n  const getUrl = useCallback((type, url, text) => {\n    url = encodeURIComponent(url);\n    text = encodeURIComponent(text);\n    return urls[type](url, text);\n  }, [urls]);\n  const url = useMemo(() => getUrl(type, resorce, text), [type, resorce, text]);\n  const icon = useMemo(() => {\n    switch (type) {\n      case 'facebook':\n        return faFacebook;\n\n      case 'twitter':\n        return faTwitter;\n\n      case 'goggle':\n        return faGoogle;\n\n      case 'reddit':\n        return faReddit;\n\n      default:\n        return null;\n    }\n  }, [type]);\n  const clickHandle = useCallback(url => {\n    window.open(url);\n  }, []);\n  const btn = useMemo(() => {\n    return React.createElement(Button, {\n      onClick: clickHandle.bind(null, url),\n      className: \"social-btn social\" + type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      className: \"btn-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, type));\n  }, [url, icon, type]);\n  return btn;\n};\n\nexport default SocialButton;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/SocialButton/SocialButton.js"],"names":["React","useMemo","useCallback","Button","FontAwesomeIcon","faFacebook","faTwitter","faGoogle","faReddit","SocialButton","type","resorce","text","urls","facebook","url","twitter","google","reddit","getUrl","encodeURIComponent","icon","clickHandle","window","open","btn","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,WAAxB,QAA0C,OAA1C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,QAAzC,QAAyD,oCAAzD;AACA,OAAO,eAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA2B;AAC5C,QAAMC,IAAI,GAAG;AACTC,IAAAA,QAAQ,EAAIC,GAAD,IAAU,iDAAgDA,GAAI,QAAOA,GAAI,GAD3E;AAETC,IAAAA,OAAO,EAAG,CAACD,GAAD,EAAMH,IAAN,KAAgB,yCAAwCA,IAAK,KAAIG,GAAI,EAFtE;AAGTE,IAAAA,MAAM,EAAGF,GAAD,IAAU,qCAAoCA,GAAI,EAHjD;AAITG,IAAAA,MAAM,EAAE,CAACH,GAAD,EAAMH,IAAN,KAAgB,oCAAmCG,GAAI,UAASH,IAAK;AAJpE,GAAb;AAOA,QAAMO,MAAM,GAAGjB,WAAW,CAAC,CAACQ,IAAD,EAAOK,GAAP,EAAYH,IAAZ,KAAqB;AAC5CG,IAAAA,GAAG,GAAGK,kBAAkB,CAACL,GAAD,CAAxB;AACAH,IAAAA,IAAI,GAAGQ,kBAAkB,CAACR,IAAD,CAAzB;AACA,WAAOC,IAAI,CAACH,IAAD,CAAJ,CAAWK,GAAX,EAAgBH,IAAhB,CAAP;AACH,GAJyB,EAIvB,CAACC,IAAD,CAJuB,CAA1B;AAMA,QAAME,GAAG,GAAGd,OAAO,CAAC,MAAKkB,MAAM,CAACT,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,CAAZ,EACnB,CAACF,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,CADmB,CAAnB;AAGA,QAAMS,IAAI,GAAGpB,OAAO,CAAC,MAAI;AACrB,YAAOS,IAAP;AACI,WAAK,UAAL;AAAiB,eAAOL,UAAP;;AACjB,WAAK,SAAL;AAAiB,eAAOC,SAAP;;AACjB,WAAK,QAAL;AAAgB,eAAOC,QAAP;;AAChB,WAAK,QAAL;AAAgB,eAAOC,QAAP;;AAChB;AAAS,eAAO,IAAP;AALb;AAOH,GARmB,EAQjB,CAACE,IAAD,CARiB,CAApB;AAUA,QAAMY,WAAW,GAAGpB,WAAW,CAAEa,GAAD,IAAO;AACnCQ,IAAAA,MAAM,CAACC,IAAP,CAAYT,GAAZ;AACH,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,QAAMU,GAAG,GAAGxB,OAAO,CAAC,MAAI;AACpB,WACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEqB,WAAW,CAACI,IAAZ,CAAiB,IAAjB,EAAuBX,GAAvB,CAAjB;AAA8C,MAAA,SAAS,EAAE,sBAAsBL,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEW,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,OACmC;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BX,IAA/B,CADnC,CADJ;AAKH,GANkB,EAMhB,CAACK,GAAD,EAAMM,IAAN,EAAYX,IAAZ,CANgB,CAAnB;AAQA,SAAQe,GAAR;AACH,CAxCD;;AA0CA,eAAehB,YAAf","sourcesContent":["import React, {useMemo, useCallback} from \"react\";\r\nimport { Button } from \"react-bootstrap\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFacebook, faTwitter, faGoogle, faReddit } from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"./social.scss\";\r\n\r\nconst SocialButton = ({type, resorce, text}) => {\r\n    const urls = {\r\n        facebook : (url) => `https://www.facebook.com/sharer/sharer.php?u='${url}'&t='${url}'`,\r\n        twitter : (url, text) => `https://twitter.com/intent/tweet?text=${text}':${url}`,\r\n        google: (url) => `https://plus.google.com/share?url=${url}`,\r\n        reddit: (url, text) => `http://www.reddit.com/submit?url=${url}&title=${text}`\r\n    };\r\n\r\n    const getUrl = useCallback((type, url, text) => {\r\n        url = encodeURIComponent(url);\r\n        text = encodeURIComponent(text);\r\n        return urls[type](url, text);\r\n    }, [urls]);\r\n\r\n    const url = useMemo(()=> getUrl(type, resorce, text),\r\n    [type, resorce, text]);\r\n\r\n    const icon = useMemo(()=>{\r\n        switch(type){\r\n            case 'facebook': return faFacebook;\r\n            case 'twitter' : return faTwitter;\r\n            case 'goggle' : return faGoogle;\r\n            case 'reddit' : return faReddit;\r\n            default: return null;\r\n        }\r\n    }, [type])\r\n\r\n    const clickHandle = useCallback((url)=>{\r\n        window.open(url);\r\n    }, [])\r\n  \r\n    const btn = useMemo(()=>{\r\n        return (\r\n            <Button onClick={clickHandle.bind(null, url)} className={\"social-btn social\" + type}>\r\n                <FontAwesomeIcon icon={icon}/> <span className=\"btn-content\">{type}</span>\r\n            </Button>\r\n        )\r\n    }, [url, icon, type])\r\n\r\n    return (btn)\r\n}\r\n\r\nexport default SocialButton;"]},"metadata":{},"sourceType":"module"}