{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(interceptLoadtrack),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handel);import{ACTIONS,endRecording,consoleResetChannels}from\"../actions\";import RECORD_STATE from\"./../reducers/console/recorder/stateDef\";import{takeEvery,select,put}from\"redux-saga/effects\";export default function interceptLoadtrack(){return _regeneratorRuntime.wrap(function interceptLoadtrack$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(ACTIONS.CONSOLE_STOP_ALL,handel);case 2:case\"end\":return _context.stop();}}},_marked);}var isRecording=function isRecording(state){return state.recorder.recordingState===RECORD_STATE.RECORDING;};function handel(){var recording;return _regeneratorRuntime.wrap(function handel$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return put(consoleResetChannels());case 2:_context2.next=4;return select(isRecording);case 4:recording=_context2.sent;if(recording){_context2.next=7;break;}return _context2.abrupt(\"return\");case 7:_context2.next=9;return put(endRecording());case 9:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/onStopAllSaga.js"],"names":["interceptLoadtrack","handel","ACTIONS","endRecording","consoleResetChannels","RECORD_STATE","takeEvery","select","put","CONSOLE_STOP_ALL","isRecording","state","recorder","recordingState","RECORDING","recording"],"mappings":"2JAKyBA,kB,iDAOfC,M,EAZV,OAAUC,OAAV,CAAmBC,YAAnB,CAAiCC,oBAAjC,KAA4D,YAA5D,CACA,MAAOC,CAAAA,YAAP,KAAyB,yCAAzB,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,GAA5B,KAAsC,oBAAtC,CAGA,cAAe,SAAUR,CAAAA,kBAAV,8IACX,MAAMM,CAAAA,SAAS,CAACJ,OAAO,CAACO,gBAAT,CAA2BR,MAA3B,CAAf,CADW,sDAKf,GAAMS,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeC,cAAf,GAAkCR,YAAY,CAACS,SAAnD,EAAzB,CAEA,QAAUb,CAAAA,MAAV,oJACI,MAAMO,CAAAA,GAAG,CAACJ,oBAAoB,EAArB,CAAT,CADJ,wBAGsB,MAAMG,CAAAA,MAAM,CAACG,WAAD,CAAZ,CAHtB,OAGUK,SAHV,mBAIQA,SAJR,oFAKI,MAAMP,CAAAA,GAAG,CAACL,YAAY,EAAb,CAAT,CALJ","sourcesContent":["import {  ACTIONS, endRecording, consoleResetChannels} from \"../actions\";\r\nimport RECORD_STATE from \"./../reducers/console/recorder/stateDef\";\r\nimport { takeEvery, select, put} from \"redux-saga/effects\";\r\n\r\n\r\nexport default function* interceptLoadtrack() {\r\n    yield takeEvery(ACTIONS.CONSOLE_STOP_ALL, handel)\r\n}\r\n\r\n\r\nconst isRecording = state => state.recorder.recordingState === RECORD_STATE.RECORDING; \r\n\r\nfunction* handel(){\r\n    yield(put(consoleResetChannels()))\r\n\r\n    const recording = yield select(isRecording);\r\n    if(!recording) return;\r\n    yield(put(endRecording()))\r\n}"]},"metadata":{},"sourceType":"module"}