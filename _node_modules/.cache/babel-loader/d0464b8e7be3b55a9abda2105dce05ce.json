{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Record\\\\WaveSurrferPlayer\\\\WaveSurferPlayer.js\";\nimport React, { useEffect, useState, useCallback, useMemo, useRef } from \"react\";\nimport WaveSurfer from \"wavesurfer\";\nimport style from \"./wave-surfer-player.scss\";\nimport useWindowSize from \"../../../Hooks/useWindowSize\";\nimport debounce from \"lodash/debounce\";\n\nconst WaveSurferPlayer = ({\n  record: {\n    peaks,\n    id,\n    duration\n  },\n  seek,\n  player\n}) => {\n  const [container, setContainerRef] = useState(null);\n  const [ws, setWs] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const _progress = useRef();\n\n  const [loaded, setLoaded] = useState(false);\n  const [windowWidth] = useWindowSize();\n  const setProgressMiddleware = useCallback(progress => {\n    setProgress(progress);\n    _progress.current = progress;\n  }, [setProgress]);\n  const containerRef = useCallback(ref => {\n    setContainerRef(ref);\n  }, [setContainerRef]);\n  const drawPeaks = useCallback((container, peaks, ws) => {\n    if (!container || !peaks || !ws) {\n      return;\n    }\n\n    let width = container === null || container === void 0 ? void 0 : container.getBoundingClientRect().width;\n    const start = 0;\n    const end = peaks.length / 2;\n\n    if (window.devicePixelRatio) {\n      width *= window.devicePixelRatio;\n    }\n\n    ws.drawer.drawPeaks(peaks, width, start, end);\n    setLoaded(true);\n  }, [setLoaded]);\n  useEffect(() => {\n    if (container && !loaded) {\n      const ws = new Promise((res, rej) => {\n        try {\n          const ws = WaveSurfer.create({\n            container: container,\n            barWidth: 2,\n            height: 100,\n            waveColor: style.waveColor,\n            progressColor: style.progressColor,\n            barMinHeight: 0,\n            hideScrollbar: true\n          });\n          res(ws);\n        } catch (err) {\n          rej(err);\n        }\n      });\n      ws.then(ws => {\n        setWs(ws);\n        return ws;\n      });\n      ws.then(ws => {\n        if (peaks) {\n          drawPeaks(container, peaks, ws);\n\n          if (id === player.getCurrent().id) {\n            setProgressMiddleware(player.getCurrent().progress);\n          }\n        }\n\n        if (seek) {\n          ws.on('seek', progress => {\n            seek({\n              id,\n              progress,\n              duration\n            });\n            ws.drawer.progress(progress);\n          });\n        }\n      });\n    }\n  }, [id, seek, peaks, duration, container, setProgressMiddleware, setWs, drawPeaks, loaded]);\n  useEffect(() => {\n    if (ws && progress) {\n      ws.drawer.progress(progress);\n    }\n  }, [ws, progress]);\n  const getProgressData = useCallback(() => {\n    return {\n      duration,\n      progress: _progress.current || 0\n    };\n  }, [duration, _progress]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.subscribeProgress(id, setProgressMiddleware);\n    player.addProgressProvider(id, getProgressData);\n    return () => {\n      player.unSubscribeProgress(id, setProgressMiddleware);\n      player.removeProgressProvider(id);\n    };\n  }, [id, player, getProgressData, setProgressMiddleware]);\n  const debouncedUpdate = useMemo(() => {\n    return debounce(drawPeaks.bind(null, container, peaks, ws), 500);\n  }, [ws, peaks, container, drawPeaks]);\n  useEffect(() => {\n    if (loaded) {\n      debouncedUpdate();\n    }\n  }, [windowWidth, loaded, debouncedUpdate]);\n  return React.createElement(\"div\", {\n    key: \"ws\" + id,\n    className: \"ws-player-container\",\n    ref: containerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  });\n};\n\nexport default WaveSurferPlayer;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Record/WaveSurrferPlayer/WaveSurferPlayer.js"],"names":["React","useEffect","useState","useCallback","useMemo","useRef","WaveSurfer","style","useWindowSize","debounce","WaveSurferPlayer","record","peaks","id","duration","seek","player","container","setContainerRef","ws","setWs","progress","setProgress","_progress","loaded","setLoaded","windowWidth","setProgressMiddleware","current","containerRef","ref","drawPeaks","width","getBoundingClientRect","start","end","length","window","devicePixelRatio","drawer","Promise","res","rej","create","barWidth","height","waveColor","progressColor","barMinHeight","hideScrollbar","err","then","getCurrent","on","getProgressData","subscribeProgress","addProgressProvider","unSubscribeProgress","removeProgressProvider","debouncedUpdate","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,EAAkDC,OAAlD,EAA2DC,MAA3D,QAAyE,OAAzE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,EAAT;AAAaC,IAAAA;AAAb,GAAV;AAAoCC,EAAAA,IAApC;AAA2CC,EAAAA;AAA3C,CAAD,KAAyD;AAC9E,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BhB,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACiB,EAAD,EAAKC,KAAL,IAAclB,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,CAAD,CAAxC;;AACA,QAAMqB,SAAS,GAAGlB,MAAM,EAAxB;;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACwB,WAAD,IAAkBlB,aAAa,EAArC;AAEA,QAAMmB,qBAAqB,GAAGxB,WAAW,CAAEkB,QAAD,IAAY;AAClDC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAE,IAAAA,SAAS,CAACK,OAAV,GAAoBP,QAApB;AACH,GAHwC,EAGvC,CAACC,WAAD,CAHuC,CAAzC;AAKA,QAAMO,YAAY,GAAG1B,WAAW,CAAE2B,GAAD,IAAS;AACtCZ,IAAAA,eAAe,CAACY,GAAD,CAAf;AACH,GAF+B,EAE7B,CAACZ,eAAD,CAF6B,CAAhC;AAIA,QAAMa,SAAS,GAAG5B,WAAW,CAAC,CAACc,SAAD,EAAYL,KAAZ,EAAmBO,EAAnB,KAA0B;AACpD,QAAG,CAACF,SAAD,IAAc,CAACL,KAAf,IAAwB,CAACO,EAA5B,EAAgC;AAC5B;AACH;;AACD,QAAIa,KAAK,GAAGf,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEgB,qBAAX,GAAmCD,KAA/C;AACA,UAAME,KAAK,GAAG,CAAd;AACA,UAAMC,GAAG,GAAGvB,KAAK,CAACwB,MAAN,GAAe,CAA3B;;AACA,QAAIC,MAAM,CAACC,gBAAX,EAA6B;AACzBN,MAAAA,KAAK,IAAIK,MAAM,CAACC,gBAAhB;AACH;;AACDnB,IAAAA,EAAE,CAACoB,MAAH,CAAUR,SAAV,CAAoBnB,KAApB,EAA2BoB,KAA3B,EAAkCE,KAAlC,EAAyCC,GAAzC;AACAV,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAZ4B,EAY1B,CAACA,SAAD,CAZ0B,CAA7B;AAcAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,SAAS,IAAI,CAACO,MAAlB,EAA0B;AACtB,YAAML,EAAE,GAAG,IAAIqB,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,YAAI;AACA,gBAAMvB,EAAE,GAAGb,UAAU,CAACqC,MAAX,CAAkB;AACzB1B,YAAAA,SAAS,EAAEA,SADc;AAEzB2B,YAAAA,QAAQ,EAAE,CAFe;AAGzBC,YAAAA,MAAM,EAAE,GAHiB;AAIzBC,YAAAA,SAAS,EAAEvC,KAAK,CAACuC,SAJQ;AAKzBC,YAAAA,aAAa,EAAExC,KAAK,CAACwC,aALI;AAMzBC,YAAAA,YAAY,EAAE,CANW;AAOzBC,YAAAA,aAAa,EAAE;AAPU,WAAlB,CAAX;AASAR,UAAAA,GAAG,CAACtB,EAAD,CAAH;AACH,SAXD,CAWE,OAAO+B,GAAP,EAAY;AACVR,UAAAA,GAAG,CAACQ,GAAD,CAAH;AACH;AACJ,OAfU,CAAX;AAgBA/B,MAAAA,EAAE,CAACgC,IAAH,CAAQhC,EAAE,IAAI;AACVC,QAAAA,KAAK,CAACD,EAAD,CAAL;AACA,eAAOA,EAAP;AACH,OAHD;AAKAA,MAAAA,EAAE,CAACgC,IAAH,CAAShC,EAAD,IAAQ;AACZ,YAAIP,KAAJ,EAAW;AACPmB,UAAAA,SAAS,CAACd,SAAD,EAAYL,KAAZ,EAAmBO,EAAnB,CAAT;;AACA,cAAGN,EAAE,KAAKG,MAAM,CAACoC,UAAP,GAAoBvC,EAA9B,EAAiC;AAC7Bc,YAAAA,qBAAqB,CAACX,MAAM,CAACoC,UAAP,GAAoB/B,QAArB,CAArB;AACH;AACJ;;AACD,YAAIN,IAAJ,EAAU;AACNI,UAAAA,EAAE,CAACkC,EAAH,CAAM,MAAN,EAAehC,QAAD,IAAc;AACxBN,YAAAA,IAAI,CAAC;AACDF,cAAAA,EADC;AAEDQ,cAAAA,QAFC;AAGDP,cAAAA;AAHC,aAAD,CAAJ;AAKAK,YAAAA,EAAE,CAACoB,MAAH,CAAUlB,QAAV,CAAmBA,QAAnB;AACH,WAPD;AAQH;AACJ,OAjBD;AAkBH;AACJ,GA1CQ,EA0CN,CACCR,EADD,EAECE,IAFD,EAGCH,KAHD,EAICE,QAJD,EAKCG,SALD,EAMCU,qBAND,EAOCP,KAPD,EAQCW,SARD,EASCP,MATD,CA1CM,CAAT;AAqDAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,EAAE,IAAIE,QAAV,EAAoB;AAChBF,MAAAA,EAAE,CAACoB,MAAH,CAAUlB,QAAV,CAAmBA,QAAnB;AACH;AACJ,GAJQ,EAIN,CAACF,EAAD,EAAKE,QAAL,CAJM,CAAT;AAMA,QAAMiC,eAAe,GAAGnD,WAAW,CAAC,MAAM;AACtC,WAAO;AACHW,MAAAA,QADG;AAEHO,MAAAA,QAAQ,EAAEE,SAAS,CAACK,OAAV,IAAqB;AAF5B,KAAP;AAIH,GALkC,EAKhC,CAACd,QAAD,EAAWS,SAAX,CALgC,CAAnC;AAOAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACe,MAAL,EAAa;AACT;AACH;;AACDA,IAAAA,MAAM,CAACuC,iBAAP,CAAyB1C,EAAzB,EAA6Bc,qBAA7B;AACAX,IAAAA,MAAM,CAACwC,mBAAP,CAA2B3C,EAA3B,EAA+ByC,eAA/B;AACA,WAAO,MAAM;AACTtC,MAAAA,MAAM,CAACyC,mBAAP,CAA2B5C,EAA3B,EAA+Bc,qBAA/B;AACAX,MAAAA,MAAM,CAAC0C,sBAAP,CAA8B7C,EAA9B;AACH,KAHD;AAIH,GAVQ,EAUN,CAACA,EAAD,EAAKG,MAAL,EAAasC,eAAb,EAA8B3B,qBAA9B,CAVM,CAAT;AAaA,QAAMgC,eAAe,GAAGvD,OAAO,CAAC,MAAI;AAChC,WAAOK,QAAQ,CAACsB,SAAS,CAAC6B,IAAV,CAAe,IAAf,EAAqB3C,SAArB,EAAgCL,KAAhC,EAAuCO,EAAvC,CAAD,EAA6C,GAA7C,CAAf;AACH,GAF8B,EAE5B,CAACA,EAAD,EAAKP,KAAL,EAAaK,SAAb,EAAwBc,SAAxB,CAF4B,CAA/B;AAIA9B,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGuB,MAAH,EAAU;AACNmC,MAAAA,eAAe;AAClB;AACJ,GAJQ,EAIN,CAACjC,WAAD,EAAcF,MAAd,EAAsBmC,eAAtB,CAJM,CAAT;AAMA,SACI;AAAK,IAAA,GAAG,EAAE,OAAO9C,EAAjB;AAAqB,IAAA,SAAS,EAAC,qBAA/B;AAAqD,IAAA,GAAG,EAAEgB,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CA3HD;;AA6HA,eAAenB,gBAAf","sourcesContent":["import React, { useEffect, useState, useCallback, useMemo, useRef } from \"react\";\r\nimport WaveSurfer from \"wavesurfer\";\r\nimport style from \"./wave-surfer-player.scss\";\r\nimport useWindowSize from \"../../../Hooks/useWindowSize\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst WaveSurferPlayer = ({ record: { peaks, id, duration },  seek , player }) => {\r\n    const [container, setContainerRef] = useState(null);\r\n    const [ws, setWs] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const _progress = useRef();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [windowWidth, ] = useWindowSize()\r\n\r\n    const setProgressMiddleware = useCallback((progress)=>{\r\n        setProgress(progress);\r\n        _progress.current = progress;\r\n    },[setProgress])    \r\n\r\n    const containerRef = useCallback((ref) => {\r\n        setContainerRef(ref);\r\n    }, [setContainerRef])\r\n\r\n    const drawPeaks = useCallback((container, peaks, ws) => {\r\n        if(!container || !peaks || !ws ){\r\n            return;\r\n        }\r\n        let width = container?.getBoundingClientRect().width;\r\n        const start = 0;\r\n        const end = peaks.length / 2;\r\n        if (window.devicePixelRatio) {\r\n            width *= window.devicePixelRatio;\r\n        }\r\n        ws.drawer.drawPeaks(peaks, width, start, end);\r\n        setLoaded(true)\r\n    }, [setLoaded])\r\n\r\n    useEffect(() => {\r\n        if (container && !loaded) {\r\n            const ws = new Promise((res, rej) => {\r\n                try {\r\n                    const ws = WaveSurfer.create({\r\n                        container: container,\r\n                        barWidth: 2,\r\n                        height: 100,\r\n                        waveColor: style.waveColor,\r\n                        progressColor: style.progressColor,\r\n                        barMinHeight: 0,\r\n                        hideScrollbar: true,\r\n                    })\r\n                    res(ws)\r\n                } catch (err) {\r\n                    rej(err)\r\n                }\r\n            })\r\n            ws.then(ws => {\r\n                setWs(ws);\r\n                return ws;\r\n            })\r\n\r\n            ws.then((ws) => {\r\n                if (peaks) {\r\n                    drawPeaks(container, peaks, ws);\r\n                    if(id === player.getCurrent().id){\r\n                        setProgressMiddleware(player.getCurrent().progress)\r\n                    }\r\n                }\r\n                if (seek) {\r\n                    ws.on('seek', (progress) => {\r\n                        seek({\r\n                            id,\r\n                            progress,\r\n                            duration,\r\n                        })\r\n                        ws.drawer.progress(progress);\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [\r\n        id, \r\n        seek,\r\n        peaks,\r\n        duration, \r\n        container,\r\n        setProgressMiddleware, \r\n        setWs, \r\n        drawPeaks, \r\n        loaded])\r\n\r\n    useEffect(() => {\r\n        if (ws && progress) {\r\n            ws.drawer.progress(progress);\r\n        }\r\n    }, [ws, progress])\r\n\r\n    const getProgressData = useCallback(() => {\r\n        return {\r\n            duration,\r\n            progress: _progress.current || 0,\r\n        }\r\n    }, [duration, _progress])\r\n\r\n    useEffect(() => {\r\n        if (!player) {\r\n            return;\r\n        }\r\n        player.subscribeProgress(id, setProgressMiddleware);\r\n        player.addProgressProvider(id, getProgressData);\r\n        return () => {\r\n            player.unSubscribeProgress(id, setProgressMiddleware);\r\n            player.removeProgressProvider(id);\r\n        }\r\n    }, [id, player, getProgressData, setProgressMiddleware])\r\n\r\n\r\n    const debouncedUpdate = useMemo(()=>{\r\n        return debounce(drawPeaks.bind(null, container, peaks, ws), 500)\r\n    }, [ws, peaks , container, drawPeaks])\r\n\r\n    useEffect(()=>{\r\n        if(loaded){\r\n            debouncedUpdate();\r\n        }\r\n    }, [windowWidth, loaded, debouncedUpdate])\r\n\r\n    return (\r\n        <div key={\"ws\" + id} className=\"ws-player-container\" ref={containerRef} />\r\n    )\r\n}\r\n\r\nexport default WaveSurferPlayer"]},"metadata":{},"sourceType":"module"}