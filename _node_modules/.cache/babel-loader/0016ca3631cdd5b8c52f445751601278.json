{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\pages\\\\app\\\\components\\\\PlayListExplorer\\\\PlayList\\\\Playlist_Item\\\\PlaylistItem.js\";\nimport React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { loadTrack } from \"../../../../../../actions\";\nimport PlaylistContext from \"./../PlaylistContext\";\n\nconst PlaylistItem = props => {\n  const ctx = useContext(PlaylistContext);\n\n  const format = time => time.substr(2, time.length).toLowerCase();\n\n  let track = { ...props.item\n  };\n  track.source = track.source;\n  return React.createElement(\"tr\", {\n    className: \"track-list-table-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"track-list-table-col source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, track.source), React.createElement(\"td\", {\n    className: \"track-list-table-col title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, track.title), React.createElement(\"td\", {\n    className: \"track-list-table-col quality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, track.quality), React.createElement(\"td\", {\n    className: \"track-list-table-col time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, format(track.duration)), React.createElement(\"td\", {\n    className: \"track-list-table-col bpm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, track.bpm && track.bpm.toFixed(2)), React.createElement(\"td\", {\n    className: \"track-list-table-col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"btn-dest dest-a\",\n    onClick: e => props.load(track, \"A\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"A\"), React.createElement(Button, {\n    className: \"btn-dest dest-b\",\n    onClick: e => props.load(track, \"B\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"B\")));\n};\n\nconst mapDispatchToProps = dispach => ({\n  load: (track, destination) => dispach(loadTrack(track, destination))\n});\n\nexport default connect(null, mapDispatchToProps)(PlaylistItem);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/components/PlayListExplorer/PlayList/Playlist_Item/PlaylistItem.js"],"names":["React","useContext","connect","Button","loadTrack","PlaylistContext","PlaylistItem","props","ctx","format","time","substr","length","toLowerCase","track","item","source","title","quality","duration","bpm","toFixed","e","load","mapDispatchToProps","dispach","destination"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAASC,SAAT,QAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE1B,QAAMC,GAAG,GAAGP,UAAU,CAACI,eAAD,CAAtB;;AAEA,QAAMI,MAAM,GAAGC,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeD,IAAI,CAACE,MAApB,EAA4BC,WAA5B,EAAvB;;AAEA,MAAIC,KAAK,GAAG,EACR,GAAGP,KAAK,CAACQ;AADD,GAAZ;AAGAD,EAAAA,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACE,MAArB;AAEA,SACI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CF,KAAK,CAACE,MAAnD,CADJ,EAEI;AAAI,IAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CF,KAAK,CAACG,KAAlD,CAFJ,EAGI;AAAI,IAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CH,KAAK,CAACI,OAApD,CAHJ,EAII;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CT,MAAM,CAACK,KAAK,CAACK,QAAP,CAAjD,CAJJ,EAKI;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CL,KAAK,CAACM,GAAN,IAAaN,KAAK,CAACM,GAAN,CAAUC,OAAV,CAAkB,CAAlB,CAAvD,CALJ,EAMI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEC,CAAC,IAAIf,KAAK,CAACgB,IAAN,CAAWT,KAAX,EAAkB,GAAlB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEQ,CAAC,IAAIf,KAAK,CAACgB,IAAN,CAAWT,KAAX,EAAkB,GAAlB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CANJ,CADJ;AAaH,CAxBD;;AA0BA,MAAMU,kBAAkB,GAAGC,OAAO,KAAK;AACnCF,EAAAA,IAAI,EAAG,CAACT,KAAD,EAAQY,WAAR,KAAwBD,OAAO,CAACrB,SAAS,CAACU,KAAD,EAAQY,WAAR,CAAV;AADH,CAAL,CAAlC;;AAIA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkClB,YAAlC,CAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport { loadTrack} from \"../../../../../../actions\";\r\nimport PlaylistContext from \"./../PlaylistContext\";\r\n\r\nconst PlaylistItem = props => {\r\n\r\n    const ctx = useContext(PlaylistContext);\r\n\r\n    const format = time => time.substr(2 ,time.length).toLowerCase();\r\n\r\n    let track = {\r\n        ...props.item\r\n    }\r\n    track.source = track.source;\r\n\r\n    return (\r\n        <tr className=\"track-list-table-row\">\r\n            <td className=\"track-list-table-col source\">{track.source}</td>\r\n            <td className=\"track-list-table-col title\">{track.title}</td>\r\n            <td className=\"track-list-table-col quality\">{track.quality}</td>\r\n            <td className=\"track-list-table-col time\">{format(track.duration)}</td>\r\n            <td className=\"track-list-table-col bpm\">{track.bpm && track.bpm.toFixed(2)}</td>\r\n            <td className=\"track-list-table-col\">\r\n                <Button className=\"btn-dest dest-a\" onClick={e => props.load(track, \"A\")}>A</Button>\r\n                <Button className=\"btn-dest dest-b\" onClick={e => props.load(track, \"B\")}>B</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispach => ({\r\n    load : (track, destination) => dispach(loadTrack(track, destination))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(PlaylistItem);\r\n\r\n"]},"metadata":{},"sourceType":"module"}