{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nexport var createIsSupportedPromise =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) {\n    var results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport))) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return Promise.all([cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport), cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport), cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport), cacheTestResult(testTransferablesSupport, testTransferablesSupport)]);\n\n          case 3:\n            results = _context.sent;\n            return _context.abrupt(\"return\", results.every(function (result) {\n              return result;\n            }));\n\n          case 5:\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createIsSupportedPromise(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js"],"names":["createIsSupportedPromise","cacheTestResult","testAudioBufferCopyChannelMethodsSubarraySupport","testAudioContextCloseMethodSupport","testAudioContextDecodeAudioDataMethodTypeErrorSupport","testAudioContextOptionsSupport","testAudioNodeConnectMethodSupport","testAudioWorkletProcessorNoOutputsSupport","testChannelMergerNodeChannelCountSupport","testConstantSourceNodeAccurateSchedulingSupport","testConvolverNodeBufferReassignabilitySupport","testIsSecureContextSupport","testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","testStereoPannerNodeDefaultValueSupport","testTransferablesSupport","Promise","all","results","every","result"],"mappings":";;AAAA,OAAO,IAAMA,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,eAAP,EAAwBC,gDAAxB,EAA0EC,kCAA1E,EAA8GC,qDAA9G,EAAqKC,8BAArK,EAAqMC,iCAArM,EAAwOC,yCAAxO,EAAmRC,wCAAnR,EAA6TC,+CAA7T,EAA8WC,6CAA9W,EAA6ZC,0BAA7Z,EAAybC,iEAAzb,EAA4fC,uCAA5f,EAAqiBC,wBAAriB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChCb,eAAe,CAACC,gDAAD,EAAmDA,gDAAnD,CAAf,IACGD,eAAe,CAACE,kCAAD,EAAqCA,kCAArC,CADlB,IAEGF,eAAe,CAACI,8BAAD,EAAiCA,8BAAjC,CAFlB,IAGGJ,eAAe,CAACK,iCAAD,EAAoCA,iCAApC,CAHlB,IAIGL,eAAe,CAACO,wCAAD,EAA2CA,wCAA3C,CAJlB,IAKGP,eAAe,CAACQ,+CAAD,EAAkDA,+CAAlD,CALlB,IAMGR,eAAe,CAACS,6CAAD,EAAgDA,6CAAhD,CANlB,IAOGT,eAAe,CAACU,0BAAD,EAA6BA,0BAA7B,CAPlB,IAQGV,eAAe,CAACW,iEAAD,EAAoEA,iEAApE,CATc;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUVG,OAAO,CACxBC,GADiB,CACb,CACLf,eAAe,CAACG,qDAAD,EAAwDA,qDAAxD,CADV,EAELH,eAAe,CAACM,yCAAD,EAA4CA,yCAA5C,CAFV,EAGLN,eAAe,CAACY,uCAAD,EAA0CA,uCAA1C,CAHV,EAILZ,eAAe,CAACa,wBAAD,EAA2BA,wBAA3B,CAJV,CADa,CAVU;;AAAA;AAU1BG,YAAAA,OAV0B;AAAA,6CAiBzBA,OAAO,CAACC,KAAR,CAAc,UAACC,MAAD;AAAA,qBAAYA,MAAZ;AAAA,aAAd,CAjByB;;AAAA;AAAA,6CAmB7B,KAnB6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAxBnB,wBAAwB;AAAA;AAAA;AAAA,GAA9B","sourcesContent":["export const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport)\n        && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport)\n        && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport)\n        && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport)\n        && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport)\n        && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport)\n        && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport)\n        && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport)\n        && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n        const results = await Promise\n            .all([\n            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),\n            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),\n            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),\n            cacheTestResult(testTransferablesSupport, testTransferablesSupport)\n        ]);\n        return results.every((result) => result);\n    }\n    return false;\n};\n//# sourceMappingURL=/build/es2019/factories/is-supported-promise.js.map"]},"metadata":{},"sourceType":"module"}