{"ast":null,"code":"import { put, select, takeEvery } from \"redux-saga/effects\";\nimport { ACTIONS, consoleResetChannels, endRecording } from \"../../actions\";\nimport RECORD_STATE from \"./../reducers/console/recorder/stateDef\";\nexport default function* interceptLoadtrack() {\n  yield takeEvery(ACTIONS.CONSOLE_STOP_ALL, handel);\n}\n\nconst isRecording = state => state.recorder.recordingState === RECORD_STATE.RECORDING;\n\nfunction* handel() {\n  yield put(consoleResetChannels());\n  const recording = yield select(isRecording);\n  if (!recording) return;\n  yield put(endRecording());\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/recorder/onStopAllSaga.js"],"names":["put","select","takeEvery","ACTIONS","consoleResetChannels","endRecording","RECORD_STATE","interceptLoadtrack","CONSOLE_STOP_ALL","handel","isRecording","state","recorder","recordingState","RECORDING","recording"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,OAAT,EAAkBC,oBAAlB,EAAwCC,YAAxC,QAA4D,eAA5D;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAGA,eAAe,UAAUC,kBAAV,GAA+B;AAC1C,QAAML,SAAS,CAACC,OAAO,CAACK,gBAAT,EAA2BC,MAA3B,CAAf;AACH;;AAGD,MAAMC,WAAW,GAAGC,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,cAAf,KAAkCP,YAAY,CAACQ,SAA5E;;AAEA,UAAUL,MAAV,GAAkB;AACd,QAAMT,GAAG,CAACI,oBAAoB,EAArB,CAAT;AAEA,QAAMW,SAAS,GAAG,MAAMd,MAAM,CAACS,WAAD,CAA9B;AACA,MAAG,CAACK,SAAJ,EAAe;AACf,QAAMf,GAAG,CAACK,YAAY,EAAb,CAAT;AACH","sourcesContent":["import { put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTIONS, consoleResetChannels, endRecording } from \"../../actions\";\r\nimport RECORD_STATE from \"./../reducers/console/recorder/stateDef\";\r\n\r\n\r\nexport default function* interceptLoadtrack() {\r\n    yield takeEvery(ACTIONS.CONSOLE_STOP_ALL, handel)\r\n}\r\n\r\n\r\nconst isRecording = state => state.recorder.recordingState === RECORD_STATE.RECORDING; \r\n\r\nfunction* handel(){\r\n    yield(put(consoleResetChannels()))\r\n\r\n    const recording = yield select(isRecording);\r\n    if(!recording) return;\r\n    yield(put(endRecording()))\r\n}"]},"metadata":{},"sourceType":"module"}