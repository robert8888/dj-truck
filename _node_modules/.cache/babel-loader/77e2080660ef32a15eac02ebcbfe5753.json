{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(openAndLoadDirRequest),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handel);import{get}from\"lodash/object\";import{put,putResolve,select,takeEvery}from\"redux-saga/effects\";import{ACTIONS,loadDirRequest,pushLog,toggleDir}from\"../../actions\";import{Log}from\"./../../utils/logger/logger\";export default function openAndLoadDirRequest(){return _regeneratorRuntime.wrap(function openAndLoadDirRequest$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(ACTIONS.PL_TOGGLE_DIR_REQUEST,handel);case 2:case\"end\":return _context.stop();}}},_marked);}var getToken=function getToken(state){return state.user.token;};var getCurrentSelection=function getCurrentSelection(state){return state.playList.currentSelection;};var getCurrent=function getCurrent(state,path){return get(state.playList,path);};function handel(action){var token,currentSelection,current,open;return _regeneratorRuntime.wrap(function handel$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return select(getToken);case 2:token=_context2.sent;_context2.next=5;return select(getCurrentSelection);case 5:currentSelection=_context2.sent;_context2.next=8;return select(getCurrent,currentSelection);case 8:current=_context2.sent;if(!(!current._open&&!current._loaded&&token)){_context2.next=22;break;}_context2.prev=10;open=true;_context2.next=14;return putResolve(loadDirRequest(action.path,open));case 14:_context2.next=20;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](10);_context2.next=20;return put(pushLog(Log.Error(['saga','playlist','request read dir content in tootgle dir'],\"Can't read dir conntent\"+_context2.t0.message,\"Sorry. During process of reading dir content occurred a problem\",_context2.t0)));case 20:_context2.next=25;break;case 22:_context2.next=24;return put(toggleDir(action.path));case 24:return _context2.abrupt(\"return\",_context2.sent);case 25:case\"end\":return _context2.stop();}}},_marked2,null,[[10,16]]);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/toogleDirSaga.js"],"names":["openAndLoadDirRequest","handel","get","put","putResolve","select","takeEvery","ACTIONS","loadDirRequest","pushLog","toggleDir","Log","PL_TOGGLE_DIR_REQUEST","getToken","state","user","token","getCurrentSelection","playList","currentSelection","getCurrent","path","action","current","_open","_loaded","open","Error","message"],"mappings":"2JAKyBA,qB,iDAUfC,M,EAfV,OAASC,GAAT,KAAoB,eAApB,CACA,OAASC,GAAT,CAAcC,UAAd,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,oBAAnD,CACA,OAASC,OAAT,CAAkBC,cAAlB,CAAkCC,OAAlC,CAA2CC,SAA3C,KAA4D,eAA5D,CACA,OAASC,GAAT,KAAoB,6BAApB,CAEA,cAAe,SAAUX,CAAAA,qBAAV,iJACX,MAAMM,CAAAA,SAAS,CAACC,OAAO,CAACK,qBAAT,CAAgCX,MAAhC,CAAf,CADW,sDAIf,GAAMY,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWC,KAAf,EAAtB,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAH,KAAK,QAAIA,CAAAA,KAAK,CAACI,QAAN,CAAeC,gBAAnB,EAAjC,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACN,KAAD,CAAQO,IAAR,QAAiBnB,CAAAA,GAAG,CAACY,KAAK,CAACI,QAAP,CAAiBG,IAAjB,CAApB,EAAnB,CAEA,QAAUpB,CAAAA,MAAV,CAAiBqB,MAAjB,6KACkB,MAAMjB,CAAAA,MAAM,CAACQ,QAAD,CAAZ,CADlB,OACUG,KADV,iCAE6B,MAAMX,CAAAA,MAAM,CAACY,mBAAD,CAAZ,CAF7B,OAEUE,gBAFV,iCAGoB,MAAMd,CAAAA,MAAM,CAACe,UAAD,CAAaD,gBAAb,CAAZ,CAHpB,OAGUI,OAHV,qBAKQ,CAACA,OAAO,CAACC,KAAT,EAAkB,CAACD,OAAO,CAACE,OAA5B,EAAwCT,KAL/C,8CAOkBU,IAPlB,CAOyB,IAPzB,mBAQY,MAAMtB,CAAAA,UAAU,CAACI,cAAc,CAACc,MAAM,CAACD,IAAR,CAAcK,IAAd,CAAf,CAAhB,CARZ,gHAUY,MAAMvB,CAAAA,GAAG,CAACM,OAAO,CAACE,GAAG,CAACgB,KAAJ,CACd,CAAC,MAAD,CAAS,UAAT,CAAqB,yCAArB,CADc,CAEd,0BAA4B,aAAMC,OAFpB,CAGd,iEAHc,cAAD,CAAR,CAAT,CAVZ,0DAkBe,MAAMzB,CAAAA,GAAG,CAACO,SAAS,CAACY,MAAM,CAACD,IAAR,CAAV,CAAT,CAlBf","sourcesContent":["import { get } from \"lodash/object\";\r\nimport { put, putResolve, select, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTIONS, loadDirRequest, pushLog, toggleDir } from \"../../actions\";\r\nimport { Log } from \"./../../utils/logger/logger\";\r\n\r\nexport default function* openAndLoadDirRequest() {\r\n    yield takeEvery(ACTIONS.PL_TOGGLE_DIR_REQUEST, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nconst getCurrentSelection = state => state.playList.currentSelection;\r\n\r\nconst getCurrent = (state, path) => get(state.playList, path);\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n    const currentSelection = yield select(getCurrentSelection);\r\n    const current = yield select(getCurrent, currentSelection);\r\n\r\n    if((!current._open && !current._loaded) && token){\r\n        try{\r\n            const open = true;\r\n            yield putResolve(loadDirRequest(action.path, open))\r\n        } catch (error){\r\n            yield put(pushLog(Log.Error(\r\n                ['saga', 'playlist', 'request read dir content in tootgle dir'],\r\n                \"Can't read dir conntent\" + error.message,\r\n                \"Sorry. During process of reading dir content occurred a problem\",\r\n                error\r\n            )))\r\n        }\r\n    } else {\r\n        return yield put(toggleDir(action.path))\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}