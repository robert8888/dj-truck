{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\SyncControl\\\\SyncControl.js\";\nimport React, { useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from 'react-bootstrap';\nimport { toggleSync, setMaster } from './../../../actions';\nimport \"./sync-control.scss\";\nimport SyncBar from \"./SyncBar/SyncBar\";\n\nconst SyncControl = props => {\n  let isActive = useCallback(() => {\n    if (props.masterState === props.name || !props.masterState) {\n      return false;\n    }\n\n    return true;\n  }, [props.masterState, props.name]);\n  return React.createElement(\"div\", {\n    className: \"sync-control \" + \"bar-deck-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"sync-btn \" + (props.syncState ? \"btn--pressed\" : \"\"),\n    onClick: props.toggleSyncState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Sync\"), React.createElement(Button, {\n    className: \"master-btn \" + (props.masterState ? \"btn--pressed\" : \"\"),\n    onClick: props.toggleMasterState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Master\"), React.createElement(SyncBar, {\n    className: \"sync-bar\",\n    active: isActive,\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  syncState: state.console.channel[ownProps.name].playBackState.sync,\n  masterState: state.console.master\n});\n\nconst mapDispachToProps = (dispach, ownProps) => ({\n  toggleSyncState: () => dispach(toggleSync(ownProps.name)),\n  toggleMasterState: () => dispach(setMaster(ownProps.name))\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(SyncControl);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/SyncControl/SyncControl.js"],"names":["React","useCallback","connect","Button","toggleSync","setMaster","SyncBar","SyncControl","props","isActive","masterState","name","syncState","toggleSyncState","toggleMasterState","mapStateToProps","state","ownProps","console","channel","playBackState","sync","master","mapDispachToProps","dispach"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,oBAAtC;AACA,OAAO,qBAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAG;AAExB,MAAIC,QAAQ,GAAGR,WAAW,CAAC,MAAI;AAC3B,QAAGO,KAAK,CAACE,WAAN,KAAsBF,KAAK,CAACG,IAA5B,IAAoC,CAACH,KAAK,CAACE,WAA9C,EAA0D;AACtD,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GALyB,EAKvB,CAACF,KAAK,CAACE,WAAP,EAAoBF,KAAK,CAACG,IAA1B,CALuB,CAA1B;AAOA,SACI;AAAK,IAAA,SAAS,EAAE,kBAAkB,WAAlB,GAAgCH,KAAK,CAACG,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAE,eAAgBH,KAAK,CAACI,SAAP,GAAoB,cAApB,GAAqC,EAApD,CADf;AAEI,IAAA,OAAO,EAAEJ,KAAK,CAACK,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAMI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAE,iBAAkBL,KAAK,CAACE,WAAP,GAAsB,cAAtB,GAAuC,EAAxD,CADf;AAEI,IAAA,OAAO,EAAGF,KAAK,CAACM,iBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAWI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,UAAnB;AAA8B,IAAA,MAAM,EAAGL,QAAvC;AAAiD,IAAA,IAAI,EAAED,KAAK,CAACG,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAeH,CAxBD;;AA0BA,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CL,EAAAA,SAAS,EAAGI,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACN,IAA/B,EAAqCS,aAArC,CAAmDC,IADrB;AAE1CX,EAAAA,WAAW,EAAGM,KAAK,CAACE,OAAN,CAAcI;AAFc,CAAtB,CAAxB;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,OAAD,EAAUP,QAAV,MAAwB;AAC9CJ,EAAAA,eAAe,EAAG,MAAMW,OAAO,CAACpB,UAAU,CAACa,QAAQ,CAACN,IAAV,CAAX,CADe;AAE9CG,EAAAA,iBAAiB,EAAG,MAAMU,OAAO,CAACnB,SAAS,CAACY,QAAQ,CAACN,IAAV,CAAV;AAFa,CAAxB,CAA1B;;AAKA,eAAeT,OAAO,CAACa,eAAD,EAAkBQ,iBAAlB,CAAP,CAA4ChB,WAA5C,CAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { toggleSync, setMaster } from './../../../actions';\r\nimport \"./sync-control.scss\";\r\nimport SyncBar from \"./SyncBar/SyncBar\";\r\n\r\nconst SyncControl = props =>{\r\n\r\n    let isActive = useCallback(()=>{\r\n        if(props.masterState === props.name || !props.masterState){\r\n            return false;\r\n        } \r\n        return true;\r\n    }, [props.masterState, props.name])\r\n\r\n    return (\r\n        <div className={\"sync-control \" + \"bar-deck-\" + props.name }>\r\n            <Button \r\n                className={\"sync-btn \" + ((props.syncState) ? \"btn--pressed\" : \"\")} \r\n                onClick={props.toggleSyncState}>\r\n                    Sync\r\n            </Button>\r\n            <Button \r\n                className={\"master-btn \" + ((props.masterState) ? \"btn--pressed\" : \"\" )}\r\n                onClick ={props.toggleMasterState}>\r\n                    Master\r\n            </Button>\r\n            <SyncBar className=\"sync-bar\" active={ isActive} name={props.name}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    syncState : state.console.channel[ownProps.name].playBackState.sync,\r\n    masterState : state.console.master \r\n})\r\n\r\nconst mapDispachToProps = (dispach, ownProps) => ({\r\n    toggleSyncState : () => dispach(toggleSync(ownProps.name)),\r\n    toggleMasterState : () => dispach(setMaster(ownProps.name))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(SyncControl);"]},"metadata":{},"sourceType":"module"}