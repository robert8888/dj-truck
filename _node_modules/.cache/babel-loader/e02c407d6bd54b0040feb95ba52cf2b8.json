{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\PlayerControls\\\\ProgressSlider\\\\ProgressSlider.js\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { formater } from \"./../../../../../utils/time/timeFromater\";\nimport { toRange } from \"./../../../../../utils/math/argRanges\";\nimport \"./progress-slider.scss\"; //horizontal\n\nconst ProgressSlider = ({\n  player,\n  seek\n}) => {\n  const [progress, setProgress] = useState(0);\n  const [buffered, setBuffred] = useState(0);\n  const [currentRecord, setCurrentRecord] = useState(null); // const [position,  setPosition] = useState();\n\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentDuration, setCurrentDuration] = useState(0);\n  const sliderArea = useRef(null);\n  const sliderThumb = useRef(null);\n  const sliderProgress = useRef(null);\n  const sliderBufferd = useRef(null);\n  const sliderTimePreview = useRef(null); //dementions \n\n  const [sliderAreaRect, setSliderAreaRect] = useState(0);\n  const [thumbRect, setThumbRect] = useState(0);\n  const setThumbPosition = useCallback(progress => {\n    let position = 0;\n    position = sliderAreaRect.width * progress;\n    sliderProgress.current.style.transform = `scaleX(${position}) translateX(50%)`;\n    position -= thumbRect.width / 2;\n    sliderThumb.current.style.transform = `translateX(${position}px)`;\n  }, [thumbRect, sliderAreaRect]);\n  useEffect(() => {\n    if (!sliderAreaRect) {\n      return;\n    }\n\n    const position = sliderAreaRect.width * buffered;\n    sliderBufferd.current.style.transform = `scaleX(${position}) translateX(50%)`;\n  }, [buffered, sliderBufferd, sliderAreaRect]);\n  useEffect(() => {\n    //  console.log(progress)\n    setCurrentTime(currentDuration * progress);\n    setThumbPosition(progress);\n  }, [progress, setCurrentTime]);\n  useEffect(() => {\n    console.log(currentRecord);\n\n    if (currentRecord) {\n      setCurrentDuration(currentRecord.duration);\n    }\n  }, [currentRecord, setCurrentDuration]);\n  useEffect(() => {\n    if (!player) {\n      return;\n    }\n\n    player.addProgressWatcher('#', setProgress);\n    player.addCurrentWatcher(setCurrentRecord);\n    player.addBuffredWatcher(setBuffred);\n  }, [player]);\n  const thumbDraging = useCallback((e, shiftX) => {\n    console.log(\"e\");\n  }, []);\n  const thumbMouseDown = useCallback(e => {\n    console.log('clikc;', e);\n    let shiftX = e.clientX - sliderThumb.current.getBoundingClientRect().left;\n    const thumbDragingWithSiftX = thumbDraging.bind(shiftX);\n    window.addEventListener('mousemove', thumbDragingWithSiftX);\n\n    const mouseup = () => {\n      window.removeEventListener('mouseup', mouseup);\n      window.removeEventListener('mousemove', thumbDragingWithSiftX);\n    };\n\n    window.addEventListener('mouseup', mouseup);\n  }, [sliderThumb]);\n  const areaMouseDown = useCallback(e => {\n    if (e.target !== sliderArea.current) {\n      return;\n    }\n\n    const x = e.clientX - sliderAreaRect.left + thumbRect.width / 2;\n    let progress = x / sliderAreaRect.width;\n    progress = toRange(progress, 0, 1);\n    seek({\n      progress\n    });\n  }, [sliderAreaRect, seek, sliderArea]);\n  const areaMouseMove = useCallback(e => {\n    const x = e.clientX - sliderAreaRect.left + thumbRect.width / 2;\n    let progress = x / sliderAreaRect.width;\n    progress = toRange(progress, 0, 1);\n    const time = currentDuration * progress;\n    let str = formater.secondsToStr(time / 1000);\n    sliderTimePreview.current.dataset.value = time ? str : \"\";\n    sliderTimePreview.current.style.transform = `translateX(${x}px)`;\n  }, [sliderAreaRect, currentDuration, sliderTimePreview]);\n  const areaMouseEnter = useCallback(e => {\n    sliderTimePreview.current.classList.add(\"preview--visible\");\n  }, [sliderTimePreview]);\n  const areaMouseLeave = useCallback(e => {\n    sliderTimePreview.current.classList.remove(\"preview--visible\");\n  }, [sliderTimePreview]);\n  useEffect(() => {\n    if (sliderAreaRect) {\n      sliderArea.current.addEventListener('mousedown', areaMouseDown);\n      sliderArea.current.addEventListener('mouseenter', areaMouseEnter);\n      sliderArea.current.addEventListener('mouseleave', areaMouseLeave);\n    }\n  }, [sliderAreaRect]);\n  useEffect(() => {\n    if (sliderAreaRect && currentDuration) {\n      sliderArea.current.addEventListener('mousemove', areaMouseMove);\n    }\n  }, [sliderAreaRect, currentDuration]);\n  useEffect(() => {\n    if (thumbRect) {\n      sliderThumb.current.addEventListener('mousedown', thumbMouseDown);\n    }\n  }, [thumbRect]);\n  const setThumb = useCallback(ref => {\n    sliderThumb.current = ref;\n    setThumbRect(ref.getBoundingClientRect());\n  }, [sliderThumb, setThumbRect]);\n  const setSliderArea = useCallback(ref => {\n    sliderArea.current = ref;\n    setSliderAreaRect(ref.getBoundingClientRect());\n  }, [sliderArea, setSliderAreaRect]);\n  return React.createElement(\"div\", {\n    className: \"seek-slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-time time-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, formater.secondsToStr(currentTime / 1000))), React.createElement(\"div\", {\n    className: \"slider-active-area\",\n    ref: setSliderArea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-buffered\",\n    ref: sliderBufferd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-progress\",\n    ref: sliderProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-thumb\",\n    ref: setThumb,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"slider-time-preview\",\n    ref: sliderTimePreview,\n    \"data-value\": \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"slider-time time-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, formater.secondsToStr(currentDuration / 1000))));\n};\n\nexport default ProgressSlider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/PlayerControls/ProgressSlider/ProgressSlider.js"],"names":["React","useState","useRef","useEffect","useCallback","formater","toRange","ProgressSlider","player","seek","progress","setProgress","buffered","setBuffred","currentRecord","setCurrentRecord","currentTime","setCurrentTime","currentDuration","setCurrentDuration","sliderArea","sliderThumb","sliderProgress","sliderBufferd","sliderTimePreview","sliderAreaRect","setSliderAreaRect","thumbRect","setThumbRect","setThumbPosition","position","width","current","style","transform","console","log","duration","addProgressWatcher","addCurrentWatcher","addBuffredWatcher","thumbDraging","e","shiftX","thumbMouseDown","clientX","getBoundingClientRect","left","thumbDragingWithSiftX","bind","window","addEventListener","mouseup","removeEventListener","areaMouseDown","target","x","areaMouseMove","time","str","secondsToStr","dataset","value","areaMouseEnter","classList","add","areaMouseLeave","remove","setThumb","ref","setSliderArea"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport {formater} from \"./../../../../../utils/time/timeFromater\";\r\nimport {toRange} from \"./../../../../../utils/math/argRanges\";\r\nimport \"./progress-slider.scss\"\r\n\r\n//horizontal\r\nconst ProgressSlider = ({player, seek}) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [buffered, setBuffred] = useState(0);\r\n    const [currentRecord, setCurrentRecord] = useState(null);\r\n    // const [position,  setPosition] = useState();\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n\r\n    const [currentDuration, setCurrentDuration] = useState(0);\r\n    \r\n    const sliderArea = useRef(null);\r\n    const sliderThumb = useRef(null);\r\n    const sliderProgress = useRef(null);\r\n    const sliderBufferd = useRef(null);\r\n    const sliderTimePreview = useRef(null);\r\n    //dementions \r\n    const [sliderAreaRect, setSliderAreaRect] = useState(0)\r\n    const [thumbRect, setThumbRect] = useState(0)\r\n\r\n    const setThumbPosition = useCallback((progress)=>{\r\n        let position = 0;\r\n        position = sliderAreaRect.width * progress ;\r\n        sliderProgress.current.style.transform = `scaleX(${position}) translateX(50%)`;\r\n        position -= (thumbRect.width / 2) ;  \r\n        sliderThumb.current.style.transform = `translateX(${position}px)`;\r\n    }, [thumbRect, sliderAreaRect])\r\n\r\n    useEffect(()=>{\r\n        if(!sliderAreaRect){\r\n            return;\r\n        }\r\n        const position = sliderAreaRect.width * buffered;\r\n        sliderBufferd.current.style.transform = `scaleX(${position}) translateX(50%)`;\r\n    }, [buffered, sliderBufferd, sliderAreaRect])\r\n\r\n    useEffect(()=>{\r\n      //  console.log(progress)\r\n       setCurrentTime(currentDuration * progress);\r\n       setThumbPosition(progress);\r\n    }, [progress , setCurrentTime])\r\n\r\n    useEffect(()=>{\r\n        console.log(currentRecord)\r\n        if(currentRecord){\r\n           setCurrentDuration(currentRecord.duration);\r\n        }\r\n\r\n    }, [currentRecord, setCurrentDuration])\r\n\r\n    useEffect(()=>{\r\n        if(!player){\r\n            return;\r\n        }\r\n        player.addProgressWatcher('#', setProgress);\r\n        player.addCurrentWatcher(setCurrentRecord);\r\n        player.addBuffredWatcher(setBuffred);\r\n    }, [player])\r\n\r\n    const thumbDraging = useCallback( (e, shiftX) => {\r\n        console.log(\"e\")\r\n    }, [])\r\n\r\n    const thumbMouseDown = useCallback((e)=>{\r\n        console.log('clikc;', e)\r\n        let shiftX = e.clientX - sliderThumb.current.getBoundingClientRect().left;\r\n        const thumbDragingWithSiftX = thumbDraging.bind(shiftX)\r\n        window.addEventListener('mousemove', thumbDragingWithSiftX)\r\n        const mouseup = () => {\r\n            window.removeEventListener('mouseup', mouseup);\r\n            window.removeEventListener('mousemove', thumbDragingWithSiftX);\r\n        }\r\n        window.addEventListener('mouseup', mouseup)\r\n    }, [sliderThumb])\r\n\r\n    const areaMouseDown = useCallback((e)=>{\r\n        if(e.target !== sliderArea.current){\r\n            return;\r\n        }\r\n        const x = e.clientX - sliderAreaRect.left  + (thumbRect.width / 2);\r\n        let progress = x / sliderAreaRect.width  ;\r\n        progress = toRange(progress, 0 , 1)\r\n        seek({progress})\r\n    }, [sliderAreaRect, seek, sliderArea])\r\n\r\n    const areaMouseMove = useCallback( e =>{\r\n        const x = e.clientX - sliderAreaRect.left  + (thumbRect.width / 2);\r\n        let progress = x / sliderAreaRect.width;\r\n        progress = toRange(progress, 0 , 1)\r\n        const time = currentDuration * progress;\r\n        let str = formater.secondsToStr(time / 1000);\r\n        sliderTimePreview.current.dataset.value = time ? str : \"\";\r\n        sliderTimePreview.current.style.transform = `translateX(${x}px)`\r\n    }, [sliderAreaRect, currentDuration , sliderTimePreview])\r\n\r\n    const areaMouseEnter = useCallback( e => {\r\n        sliderTimePreview.current.classList.add(\"preview--visible\")\r\n    }, [sliderTimePreview])\r\n\r\n    const areaMouseLeave = useCallback( e => {\r\n        sliderTimePreview.current.classList.remove(\"preview--visible\")\r\n    }, [sliderTimePreview])\r\n\r\n    useEffect(()=>{\r\n        if(sliderAreaRect){\r\n            sliderArea.current.addEventListener('mousedown', areaMouseDown);\r\n            sliderArea.current.addEventListener('mouseenter', areaMouseEnter);\r\n            sliderArea.current.addEventListener('mouseleave', areaMouseLeave);\r\n        }\r\n    }, [sliderAreaRect])\r\n\r\n    useEffect(()=>{\r\n        if(sliderAreaRect && currentDuration){\r\n            sliderArea.current.addEventListener('mousemove', areaMouseMove);\r\n        }\r\n    }, [sliderAreaRect, currentDuration])\r\n\r\n    useEffect(()=>{\r\n        if(thumbRect){\r\n            sliderThumb.current.addEventListener('mousedown',  thumbMouseDown);\r\n        }\r\n    }, [thumbRect])\r\n\r\n    const setThumb = useCallback((ref)=>{\r\n        sliderThumb.current = ref;\r\n        setThumbRect(ref.getBoundingClientRect())\r\n    }, [sliderThumb, setThumbRect])\r\n\r\n\r\n    const setSliderArea = useCallback((ref) => {\r\n        sliderArea.current = ref;\r\n        setSliderAreaRect(ref.getBoundingClientRect())\r\n    }, [sliderArea, setSliderAreaRect])\r\n\r\n\r\n    return (\r\n        <div className=\"seek-slider\">\r\n            <div className=\"slider-time time-current\">\r\n                 <span>{formater.secondsToStr(currentTime / 1000)}</span>\r\n            </div>\r\n            <div className=\"slider-active-area\" ref={setSliderArea}>\r\n                <div className=\"slider-buffered\" ref={sliderBufferd}/>\r\n                <div className=\"slider-progress\" ref={sliderProgress}/>\r\n                \r\n                <div className=\"slider-thumb\" ref={setThumb} draggable=\"false\"/>\r\n                <div className=\"slider-time-preview\"  ref={sliderTimePreview} data-value=\"\"/>\r\n            </div>\r\n            <div className=\"slider-time time-duration\">\r\n                <span>{formater.secondsToStr(currentDuration/1000)}</span>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProgressSlider;"]},"metadata":{},"sourceType":"module"}