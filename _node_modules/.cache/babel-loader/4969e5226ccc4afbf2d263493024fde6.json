{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\userRecord\\\\UserRecord.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { reqRecOfUser, loadRecords } from \"./../../actions\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\nimport Record from \"../common/components/Record/Record\";\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\nimport PlayerControls from \"../common/components/PlayerControls/PlayerControls\";\n\nconst UserRecord = ({\n  requestList,\n  recordsList,\n  userId,\n  setRecordsList\n}) => {\n  const [controls, player] = useRecordPlayer();\n  const {\n    user,\n    title,\n    id\n  } = useParams();\n  const history = useHistory();\n  const [record, setRecord] = useState();\n  const [reqFlag, setReqFlag] = useState(false);\n  const escapeUnderdash = useCallback(str => decodeURI(str.split(\"_\").join(\"%20\")));\n  useEffect(() => {\n    console.log(player);\n\n    if (!title) {\n      return;\n    } //   console.log(title, recordsList)\n\n\n    let recs = recordsList === null || recordsList === void 0 ? void 0 : recordsList.filter(r => r.title === title);\n    console.log(recs);\n\n    if (id) {\n      let _id = parseInt(id);\n\n      recs = recs.filter(r => r.id === _id);\n    } //if is exact this record \n\n\n    if (recs && recs.length === 1) {\n      setRecord(recs[0]);\n      return;\n    } //if there is none record request it\n\n\n    if ((recs && recs.length === 0 || !recs) && !reqFlag) {\n      console.log(\"is equal\", title === escapeUnderdash(title), title, escapeUnderdash(title));\n      const where = {\n        title: escapeUnderdash(title)\n      };\n      console.log(\"TITLKE\", where);\n\n      if (id) {\n        where.id = +id;\n      }\n\n      if (user) {\n        where.nickname = user;\n      } else if (userId) {\n        where.userId = userId;\n      }\n\n      requestList(100, 0, where);\n      return;\n    } // if is more than one record with this title \n\n\n    setRecordsList(recs); // console.log(recs)\n\n    history.replace('/records?preloaded=true');\n  }, [recordsList, setRecord, title, id, userId, setRecordsList, escapeUnderdash, reqFlag, setReqFlag]);\n  useEffect(() => {\n    console.log(record);\n  }, [record]);\n  return React.createElement(\"div\", {\n    className: \"user-record\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Record, {\n    record: record,\n    controls: controls,\n    player: player,\n    simple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(RecordDetails, {\n    record: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(PlayerControls, {\n    controls: controls,\n    player: player,\n    list: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  recordsList: state.records.list,\n  countAll: state.records.countAll,\n  userId: state.user.dbId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where)),\n  setRecordsList: list => dispatch(loadRecords(list))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/userRecord/UserRecord.js"],"names":["React","useState","useEffect","useCallback","reqRecOfUser","loadRecords","connect","useParams","useHistory","useRecordPlayer","Record","RecordDetails","PlayerControls","UserRecord","requestList","recordsList","userId","setRecordsList","controls","player","user","title","id","history","record","setRecord","reqFlag","setReqFlag","escapeUnderdash","str","decodeURI","split","join","console","log","recs","filter","r","_id","parseInt","length","where","nickname","replace","mapStateToProps","state","records","list","countAll","dbId","mapDispatchToProps","dispatch","pageSize","page"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { reqRecOfUser, loadRecords } from \"./../../actions\"\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useRecordPlayer } from \"./../common/Hooks/useRecordPlayer\";\r\nimport Record from \"../common/components/Record/Record\";\r\nimport RecordDetails from \"./../common/components/RecordDetails/RecordDetails\";\r\nimport PlayerControls from \"../common/components/PlayerControls/PlayerControls\";\r\n\r\nconst UserRecord = ({ requestList, recordsList, userId, setRecordsList }) => {\r\n    const [controls, player] = useRecordPlayer();\r\n    const { user, title, id } = useParams();\r\n    const history = useHistory()\r\n    const [record, setRecord] = useState();\r\n\r\n    const [reqFlag, setReqFlag] = useState(false)\r\n\r\n    const escapeUnderdash = useCallback(str => decodeURI(str.split(\"_\").join(\"%20\")));\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(player)\r\n        if (!title) { return }\r\n        //   console.log(title, recordsList)\r\n        let recs = recordsList?.filter(r => r.title === title)\r\n        console.log(recs)\r\n        if (id) {\r\n            let _id = parseInt(id)\r\n            recs = recs.filter(r => r.id === _id);\r\n        }\r\n        //if is exact this record \r\n        if (recs && recs.length === 1) {\r\n            setRecord(recs[0]);\r\n            return;\r\n        }\r\n        //if there is none record request it\r\n        if ((recs && recs.length === 0 || !recs) && !reqFlag) {\r\n            console.log(\"is equal\", title === escapeUnderdash(title), title, escapeUnderdash(title))\r\n            const where = { title:  escapeUnderdash(title)}\r\n            console.log(\"TITLKE\", where)\r\n            if (id) {\r\n                where.id = +id;\r\n            }\r\n\r\n            if (user) {\r\n                where.nickname = user;\r\n            } else if (userId) {\r\n                where.userId = userId;\r\n            }\r\n\r\n            requestList(100, 0, where)\r\n            return;\r\n        }\r\n        // if is more than one record with this title \r\n\r\n        setRecordsList(recs);\r\n        // console.log(recs)\r\n        history.replace('/records?preloaded=true')\r\n\r\n    }, [recordsList, setRecord, title, id, userId, setRecordsList, escapeUnderdash, reqFlag, setReqFlag])\r\n\r\n    useEffect(() => {\r\n        console.log(record)\r\n    }, [record])\r\n\r\n    return (\r\n        <div className=\"user-record\">\r\n            <Record record={record} controls={controls} player={player} simple />\r\n            <div>\r\n                <RecordDetails record={record} />\r\n            </div>\r\n            <PlayerControls controls={controls} player={player} list={record} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recordsList: state.records.list,\r\n    countAll: state.records.countAll,\r\n    userId: state.user.dbId,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestList: (pageSize, page, where) => dispatch(reqRecOfUser(pageSize, page, where)),\r\n    setRecordsList: (list) => dispatch(loadRecords(list))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecord)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}