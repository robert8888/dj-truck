{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\Header\\\\Header.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport LoadingBar from 'react-redux-loading-bar';\nimport NavBar from \"./NavBar/NabBar\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport { toRange } from \"./../../../utils/math/argRanges\";\nimport classNames from \"classnames\";\nimport \"./header.scss\";\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.barState = {\n      barElement: React.createRef(null),\n      barElementHeight: 0,\n      translateY: 0,\n      shiftTranslateY: 0,\n      stickiState: false\n    };\n    this.scrollState = {\n      prevScrollDirection: null,\n      // \"up\" or \"down\",\n      prevScrollPosition: 0,\n      snapPosition: null\n    };\n  }\n\n  startWatching() {\n    window.addEventListener('scroll', this.scrollWatching.bind(this));\n  }\n\n  stopWatching() {\n    window.removeEventListener('scroll', this.scrollWatching.bind(this));\n  }\n\n  scrollWatching(_) {\n    const setTranslate = setTranslateFun.bind(this);\n    const changeStickiClass = changeStickiClassFun.bind(this);\n    const scrollDirection = window.scrollY - this.scrollState.prevScrollPosition < 0 ? \"up\" : \"down\";\n\n    if (scrollDirection !== this.scrollState.prevScrollDirection) {\n      this.scrollState.snapPosition = window.scrollY;\n      this.barState.shiftTranslateY = this.barState.translateY; // \n\n      if (scrollDirection === \"up\" && window.scrollY > this.barState.barElementHeight) {\n        changeStickiClass(\"add\"); // this has to be set afater refreshing so is added simply flag that is used only in this place\n\n        if (!this.firstFlag) {\n          this.barState.shiftTranslateY = -this.barState.barElementHeight;\n          this.firstFlag = true;\n        }\n      }\n    }\n\n    this.scrollState.prevScrollPosition = window.scrollY;\n    this.scrollState.prevScrollDirection = scrollDirection;\n\n    if (window.scrollY === 0) {\n      console.log(\"set on int\");\n      setTranslate(0);\n    } else if (this.barState.stickiState) {\n      if (scrollDirection === \"up\") {\n        let y = this.scrollState.snapPosition - window.scrollY + this.barState.shiftTranslateY;\n        setTranslate(y);\n      } else if (scrollDirection === \"down\") {\n        let y = window.scrollY - this.scrollState.snapPosition - this.barState.shiftTranslateY;\n\n        if (y < 1.5 * this.barState.barElementHeight) {\n          setTranslate(-y);\n        } else {\n          changeStickiClass(\"remove\");\n        }\n      }\n    }\n\n    function setTranslateFun(tY) {\n      changeStickiClassFun(add);\n      tY = toRange(tY, -this.barState.barElementHeight, 0);\n      this.barState.barElement.current.style.transform = `translateY(${tY}px)`;\n      this.barState.translateY = tY;\n    }\n\n    function changeStickiClassFun(action) {\n      if (action === \"add\") {\n        this.barState.barElement.current.classList.add(\"bar--sticki\");\n        this.barState.stickiState = true;\n      } else if (action === \"remove\") {\n        this.barState.barElement.current.classList.remove(\"bar--sticki\");\n        this.barState.stickiState = false;\n      }\n    }\n  }\n\n  updateState(prevProps) {\n    if (this.props.sticki) {\n      this.startWatching();\n    } else {\n      this.stopWatching();\n    }\n  }\n\n  componentDidMount() {\n    this.updateState();\n    this.barState.barElementHeight = this.barState.barElement.current.getBoundingClientRect().height;\n  }\n\n  componentDidUpdate(prevProps) {\n    this.updateState(prevProps);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(LoadingBar, {\n      className: \"loading-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: classNames(\"top-bar\", {\n        \"bar--hidden\": this.props.hidden,\n        \"bar--dissabled\": this.props.dissabled\n      }),\n      ref: this.barState.barElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"app layout container-xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      className: \"navigation-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  sticki: state.header.sticki,\n  hidden: state.header.hidden,\n  disabled: state.header.disabled\n});\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/Header/Header.js"],"names":["React","Fragment","connect","LoadingBar","NavBar","Col","Row","Container","toRange","classNames","Header","Component","constructor","barState","barElement","createRef","barElementHeight","translateY","shiftTranslateY","stickiState","scrollState","prevScrollDirection","prevScrollPosition","snapPosition","startWatching","window","addEventListener","scrollWatching","bind","stopWatching","removeEventListener","_","setTranslate","setTranslateFun","changeStickiClass","changeStickiClassFun","scrollDirection","scrollY","firstFlag","console","log","y","tY","add","current","style","transform","action","classList","remove","updateState","prevProps","props","sticki","componentDidMount","getBoundingClientRect","height","componentDidUpdate","render","hidden","dissabled","mapStateToProps","state","header","disabled"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingBar from 'react-redux-loading-bar';\r\nimport NavBar from \"./NavBar/NabBar\"\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { toRange } from \"./../../../utils/math/argRanges\"\r\nimport classNames from \"classnames\";\r\nimport \"./header.scss\";\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.barState = {\r\n      barElement: React.createRef(null),\r\n      barElementHeight: 0,\r\n      translateY: 0,\r\n      shiftTranslateY: 0,\r\n      stickiState: false,\r\n    }\r\n    this.scrollState = {\r\n      prevScrollDirection: null, // \"up\" or \"down\",\r\n      prevScrollPosition: 0,\r\n      snapPosition: null,\r\n    }\r\n  }\r\n\r\n  startWatching() {\r\n    window.addEventListener('scroll', this.scrollWatching.bind(this))\r\n  }\r\n\r\n  stopWatching() {\r\n    window.removeEventListener('scroll', this.scrollWatching.bind(this))\r\n  }\r\n\r\n  scrollWatching(_) {\r\n    const setTranslate = setTranslateFun.bind(this);\r\n    const changeStickiClass = changeStickiClassFun.bind(this)\r\n\r\n    const scrollDirection =\r\n      (window.scrollY - this.scrollState.prevScrollPosition < 0) ? \"up\" : \"down\";\r\n\r\n    if (scrollDirection !== this.scrollState.prevScrollDirection) {\r\n      this.scrollState.snapPosition = window.scrollY;\r\n      this.barState.shiftTranslateY = this.barState.translateY;\r\n      // \r\n      if ((scrollDirection === \"up\") && (window.scrollY > this.barState.barElementHeight)) {\r\n        changeStickiClass(\"add\");\r\n        // this has to be set afater refreshing so is added simply flag that is used only in this place\r\n        if(!this.firstFlag){\r\n          this.barState.shiftTranslateY = -this.barState.barElementHeight;\r\n          this.firstFlag = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.scrollState.prevScrollPosition = window.scrollY;\r\n    this.scrollState.prevScrollDirection = scrollDirection;\r\n\r\n    if (window.scrollY === 0) {\r\n      console.log(\"set on int\")\r\n      setTranslate(0);\r\n    } else if (this.barState.stickiState) {\r\n      if (scrollDirection === \"up\") {\r\n        let y = this.scrollState.snapPosition - window.scrollY + this.barState.shiftTranslateY;\r\n        setTranslate(y);\r\n      } else if (scrollDirection === \"down\") {\r\n        let y = window.scrollY - this.scrollState.snapPosition - this.barState.shiftTranslateY;\r\n        if (y < 1.5 * this.barState.barElementHeight) {\r\n          setTranslate(-y);\r\n        } else {\r\n          changeStickiClass(\"remove\");\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n    function setTranslateFun(tY) {\r\n      changeStickiClassFun(add)\r\n      tY = toRange(tY, -this.barState.barElementHeight, 0);\r\n      this.barState.barElement.current.style.transform = `translateY(${tY}px)`;\r\n      this.barState.translateY = tY;\r\n    }\r\n    function changeStickiClassFun(action) {\r\n      if (action === \"add\") {\r\n        this.barState.barElement.current.classList.add(\"bar--sticki\");\r\n        this.barState.stickiState = true;\r\n      } else if (action === \"remove\") {\r\n        this.barState.barElement.current.classList.remove(\"bar--sticki\");\r\n        this.barState.stickiState = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateState(prevProps) {\r\n    if (this.props.sticki) {\r\n      this.startWatching();\r\n    } else {\r\n      this.stopWatching();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateState();\r\n    this.barState.barElementHeight =\r\n      this.barState.barElement.current.getBoundingClientRect().height;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    this.updateState(prevProps);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <LoadingBar className=\"loading-bar\" />\r\n        <header\r\n          className={classNames(\"top-bar\", {\r\n            \"bar--hidden\": this.props.hidden,\r\n            \"bar--dissabled\": this.props.dissabled\r\n          })}\r\n          ref={this.barState.barElement}>\r\n          <Container className=\"app layout container-xl\" >\r\n            <Row>\r\n              <Col>\r\n                <NavBar className=\"navigation-bar\" />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </header>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  sticki: state.header.sticki,\r\n  hidden: state.header.hidden,\r\n  disabled: state.header.disabled,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Header);"]},"metadata":{},"sourceType":"module"}