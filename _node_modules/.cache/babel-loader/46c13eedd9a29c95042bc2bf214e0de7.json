{"ast":null,"code":"export function addAnimationFrame(waveSurfer) {\n  waveSurfer.drawer.progress = function (progress) {\n    var minPxDelta = 1 / this.params.pixelRatio;\n    var pos = Math.round(progress * this.width) * minPxDelta;\n\n    if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n      this.lastPos = pos;\n\n      if (this.params.scrollParent && this.params.autoCenter) {\n        var newPos = ~~(this.wrapper._scrollWidth * progress);\n        this.recenterOnPosition(newPos);\n      }\n\n      this.updateProgress(pos);\n    }\n  }; // waveSurfer.drawer._mainWS = waveSurfer.drawer.container.firstChild;\n  // waveSurfer.drawer._mainWS.style.position = \"absolute\";\n  // waveSurfer.drawer._mainWS.style.willChange = \"transform\";\n\n\n  waveSurfer.drawer.wrapper.style.position = \"absolute\"; // waveSurfer.drawer.container.firstChild.style.position = \"absolute\";\n\n  waveSurfer.drawer._measureDimensions = function () {\n    console.log(\"dimension measured\");\n    this.wrapper._clientWidth = this.wrapper.clientWidth;\n    this.wrapper._scrollWidth = this.wrapper.scrollWidth;\n  };\n\n  waveSurfer.drawer.recenterOnPosition = function (position, immediate) {\n    var scrollLeft = this.wrapper._scrollLeft;\n    var half = ~~(this.wrapper._clientWidth / 2);\n    var target = position - half;\n    var offset = target - scrollLeft;\n    var maxScroll = this.wrapper._scrollWidth - this.wrapper._clientWidth;\n\n    if (maxScroll == 0) {\n      // no need to continue if scrollbar is not there\n      return;\n    } // if the cursor is currently visible...\n\n\n    if (!immediate && -half <= offset && offset < half) {\n      // we'll limit the \"re-center\" rate.\n      var rate = 5;\n      offset = Math.max(-rate, Math.min(rate, offset));\n      target = scrollLeft + offset;\n    } // limit target to valid range (0 to maxScroll)\n\n\n    target = Math.max(0, Math.min(maxScroll, target)); // no use attempting to scroll if we're not moving\n\n    if (target != scrollLeft) {\n      //  this.wrapper.scrollLeft = target;\n      this.wrapper.style.left = -target;\n      this.wrapper._scrollLeft = target;\n    }\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/core/console/channels/channelBuilder/wsAnimationFrame.js"],"names":["addAnimationFrame","waveSurfer","drawer","progress","minPxDelta","params","pixelRatio","pos","Math","round","width","lastPos","scrollParent","autoCenter","newPos","wrapper","_scrollWidth","recenterOnPosition","updateProgress","style","position","_measureDimensions","console","log","_clientWidth","clientWidth","scrollWidth","immediate","scrollLeft","_scrollLeft","half","target","offset","maxScroll","rate","max","min","left"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,UAA3B,EAAsC;AAMzCA,EAAAA,UAAU,CAACC,MAAX,CAAkBC,QAAlB,GAA6B,UAAUA,QAAV,EAAmB;AAC5C,QAAIC,UAAU,GAAG,IAAI,KAAKC,MAAL,CAAYC,UAAjC;AACA,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAQ,GAAG,KAAKO,KAA3B,IAAoCN,UAA9C;;AAEA,QAAIG,GAAG,GAAG,KAAKI,OAAX,IAAsBJ,GAAG,GAAG,KAAKI,OAAX,IAAsBP,UAAhD,EAA4D;AACxD,WAAKO,OAAL,GAAeJ,GAAf;;AAEA,UAAI,KAAKF,MAAL,CAAYO,YAAZ,IAA4B,KAAKP,MAAL,CAAYQ,UAA5C,EAAwD;AACpD,YAAIC,MAAM,GAAG,CAAC,EAAE,KAAKC,OAAL,CAAaC,YAAb,GAA4Bb,QAA9B,CAAd;AACA,aAAKc,kBAAL,CAAwBH,MAAxB;AACH;;AAED,WAAKI,cAAL,CAAoBX,GAApB;AACH;AACJ,GAdD,CANyC,CAsBzC;AACA;AACA;;;AAEAN,EAAAA,UAAU,CAACC,MAAX,CAAkBa,OAAlB,CAA0BI,KAA1B,CAAgCC,QAAhC,GAA2C,UAA3C,CA1ByC,CA2B1C;;AAECnB,EAAAA,UAAU,CAACC,MAAX,CAAkBmB,kBAAlB,GAAuC,YAAU;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,SAAKR,OAAL,CAAaS,YAAb,GAA4B,KAAKT,OAAL,CAAaU,WAAzC;AACA,SAAKV,OAAL,CAAaC,YAAb,GAA4B,KAAKD,OAAL,CAAaW,WAAzC;AACH,GAJD;;AAMAzB,EAAAA,UAAU,CAACC,MAAX,CAAkBe,kBAAlB,GAAsC,UAASG,QAAT,EAAmBO,SAAnB,EAA8B;AAChE,QAAIC,UAAU,GAAG,KAAKb,OAAL,CAAac,WAA9B;AACA,QAAIC,IAAI,GAAG,CAAC,EAAE,KAAKf,OAAL,CAAaS,YAAb,GAA4B,CAA9B,CAAZ;AACA,QAAIO,MAAM,GAAGX,QAAQ,GAAGU,IAAxB;AACA,QAAIE,MAAM,GAAGD,MAAM,GAAGH,UAAtB;AACA,QAAIK,SAAS,GAAG,KAAKlB,OAAL,CAAaC,YAAb,GAA4B,KAAKD,OAAL,CAAaS,YAAzD;;AAEA,QAAIS,SAAS,IAAI,CAAjB,EAAoB;AAChB;AACA;AACH,KAV+D,CAYhE;;;AACA,QAAI,CAACN,SAAD,IAAc,CAACG,IAAD,IAASE,MAAvB,IAAiCA,MAAM,GAAGF,IAA9C,EAAoD;AAChD;AACA,UAAII,IAAI,GAAG,CAAX;AACAF,MAAAA,MAAM,GAAGxB,IAAI,CAAC2B,GAAL,CAAS,CAACD,IAAV,EAAgB1B,IAAI,CAAC4B,GAAL,CAASF,IAAT,EAAeF,MAAf,CAAhB,CAAT;AACAD,MAAAA,MAAM,GAAGH,UAAU,GAAGI,MAAtB;AACH,KAlB+D,CAoBhE;;;AACAD,IAAAA,MAAM,GAAGvB,IAAI,CAAC2B,GAAL,CAAS,CAAT,EAAY3B,IAAI,CAAC4B,GAAL,CAASH,SAAT,EAAoBF,MAApB,CAAZ,CAAT,CArBgE,CAsBhE;;AACA,QAAIA,MAAM,IAAIH,UAAd,EAA0B;AACxB;AACA,WAAKb,OAAL,CAAaI,KAAb,CAAmBkB,IAAnB,GAA0B,CAACN,MAA3B;AACE,WAAKhB,OAAL,CAAac,WAAb,GAA2BE,MAA3B;AACH;AAEJ,GA7BD;AA8BH","sourcesContent":["export function addAnimationFrame(waveSurfer){\r\n\r\n\r\n\r\n    \r\n\r\n    waveSurfer.drawer.progress = function (progress){\r\n        var minPxDelta = 1 / this.params.pixelRatio;\r\n        var pos = Math.round(progress * this.width) * minPxDelta;\r\n\r\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\r\n            this.lastPos = pos;\r\n\r\n            if (this.params.scrollParent && this.params.autoCenter) {\r\n                var newPos = ~~(this.wrapper._scrollWidth * progress);\r\n                this.recenterOnPosition(newPos);\r\n            }\r\n\r\n            this.updateProgress(pos);\r\n        }\r\n    }\r\n\r\n    // waveSurfer.drawer._mainWS = waveSurfer.drawer.container.firstChild;\r\n    // waveSurfer.drawer._mainWS.style.position = \"absolute\";\r\n    // waveSurfer.drawer._mainWS.style.willChange = \"transform\";\r\n\r\n    waveSurfer.drawer.wrapper.style.position = \"absolute\";\r\n   // waveSurfer.drawer.container.firstChild.style.position = \"absolute\";\r\n\r\n    waveSurfer.drawer._measureDimensions = function(){\r\n        console.log(\"dimension measured\")\r\n        this.wrapper._clientWidth = this.wrapper.clientWidth;\r\n        this.wrapper._scrollWidth = this.wrapper.scrollWidth;\r\n    }\r\n\r\n    waveSurfer.drawer.recenterOnPosition= function(position, immediate) {\r\n        var scrollLeft = this.wrapper._scrollLeft;\r\n        var half = ~~(this.wrapper._clientWidth / 2);\r\n        var target = position - half;\r\n        var offset = target - scrollLeft;\r\n        var maxScroll = this.wrapper._scrollWidth - this.wrapper._clientWidth;\r\n\r\n        if (maxScroll == 0) {\r\n            // no need to continue if scrollbar is not there\r\n            return;\r\n        }\r\n\r\n        // if the cursor is currently visible...\r\n        if (!immediate && -half <= offset && offset < half) {\r\n            // we'll limit the \"re-center\" rate.\r\n            var rate = 5;\r\n            offset = Math.max(-rate, Math.min(rate, offset));\r\n            target = scrollLeft + offset;\r\n        }\r\n\r\n        // limit target to valid range (0 to maxScroll)\r\n        target = Math.max(0, Math.min(maxScroll, target));\r\n        // no use attempting to scroll if we're not moving\r\n        if (target != scrollLeft) {\r\n          //  this.wrapper.scrollLeft = target;\r\n          this.wrapper.style.left = -target;\r\n            this.wrapper._scrollLeft = target;\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}