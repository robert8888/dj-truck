{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(deleteSelectedRequestSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(handel);import{get}from\"lodash/object\";import{hideLoading,showLoading}from'react-redux-loading-bar';import{put,select,takeEvery}from\"redux-saga/effects\";import{ACTIONS,deleteSelected,pushLog}from\"../../actions\";import{getApi}from\"./../../apis/apiProvider\";import{Log}from\"./../../utils/logger/logger\";import errorParser from\"./../../utils/serverErrorParser/errorParser\";export default function deleteSelectedRequestSaga(){return _regeneratorRuntime.wrap(function deleteSelectedRequestSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeEvery(ACTIONS.PL_DELETE_SELECTED_REQUEST,handel);case 2:case\"end\":return _context.stop();}}},_marked);}var getToken=function getToken(state){return state.user.token;};var getCurrentSelection=function getCurrentSelection(state){return state.playList.currentSelection;};var getCurrent=function getCurrent(state,path){return get(state.playList,path);};function handel(action){var path,token,_getApi,callQuery,queries,currentSelection,current,id,query,response,deletedRows;return _regeneratorRuntime.wrap(function handel$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:path=['saga','playlist','request delete selected'];_context2.next=3;return select(getToken);case 3:token=_context2.sent;if(token){_context2.next=8;break;}_context2.next=7;return put(deleteSelected());case 7:return _context2.abrupt(\"return\",_context2.sent);case 8:_context2.prev=8;_context2.next=11;return put(showLoading());case 11:_getApi=getApi(\"UserAssets\"),callQuery=_getApi.callQuery,queries=_getApi.queries;_context2.next=14;return select(getCurrentSelection);case 14:currentSelection=_context2.sent;_context2.next=17;return select(getCurrent,currentSelection);case 17:current=_context2.sent;id=current._id;if(current._type===\"playlist\"){query=queries.deleteQl.deletePlaylist([id],action.name);}else{// dir\nquery=queries.deleteQl.deleteDir([id],action.name);}_context2.next=22;return callQuery(query,token);case 22:response=_context2.sent;if(!response.errors){_context2.next=25;break;}throw new Error('Server response contains errors '+errorParser(response.errors));case 25:deletedRows=0;deletedRows=current._type===\"playlist\"?response.data.deletePlaylist:response.data.deleteDir;if(!deletedRows){_context2.next=30;break;}_context2.next=30;return put(deleteSelected());case 30:_context2.next=32;return put(pushLog(new Log(\"Current seleted \".concat(current._type,\" deleted from database.\"),path)));case 32:_context2.next=38;break;case 34:_context2.prev=34;_context2.t0=_context2[\"catch\"](8);_context2.next=38;return put(pushLog(Log.Error(path,\"Can't delete current seleted element\"+_context2.t0.message,\"Sorry. During process deleting element occurred a problem\",_context2.t0)));case 38:_context2.prev=38;_context2.next=41;return put(hideLoading());case 41:return _context2.finish(38);case 42:case\"end\":return _context2.stop();}}},_marked2,null,[[8,34,38,42]]);}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/reqDeleteSelectedSaga.js"],"names":["deleteSelectedRequestSaga","handel","get","hideLoading","showLoading","put","select","takeEvery","ACTIONS","deleteSelected","pushLog","getApi","Log","errorParser","PL_DELETE_SELECTED_REQUEST","getToken","state","user","token","getCurrentSelection","playList","currentSelection","getCurrent","path","action","callQuery","queries","current","id","_id","_type","query","deleteQl","deletePlaylist","name","deleteDir","response","errors","Error","deletedRows","data","message"],"mappings":"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","sourcesContent":["import { get } from \"lodash/object\";\r\nimport { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport { put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTIONS, deleteSelected, pushLog } from \"../../actions\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { Log } from \"./../../utils/logger/logger\";\r\nimport errorParser from \"./../../utils/serverErrorParser/errorParser\";\r\n\r\nexport default function* deleteSelectedRequestSaga() {\r\n    yield takeEvery(ACTIONS.PL_DELETE_SELECTED_REQUEST, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nconst getCurrentSelection = state => state.playList.currentSelection;\r\n\r\nconst getCurrent = (state, path) => get(state.playList, path);\r\n\r\nfunction* handel(action) {\r\n    const path = ['saga', 'playlist', 'request delete selected'];\r\n    const token = yield select(getToken);\r\n\r\n    if (!token) {\r\n        return yield put(deleteSelected());\r\n    }\r\n    try {\r\n        yield put(showLoading());\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n        const currentSelection = yield select(getCurrentSelection);\r\n        const current = yield select(getCurrent, currentSelection);\r\n\r\n        const id = current._id;\r\n\r\n        let query;\r\n        if (current._type === \"playlist\") {\r\n            query = queries.deleteQl.deletePlaylist([id], action.name)\r\n        } else { // dir\r\n            query = queries.deleteQl.deleteDir([id], action.name)\r\n        }\r\n\r\n        let response = yield callQuery(query, token);\r\n        if(response.errors){\r\n            throw new Error('Server response contains errors '+ errorParser(response.errors))\r\n        }\r\n\r\n        let deletedRows = 0;\r\n        deletedRows = (current._type === \"playlist\")  ? \r\n                      response.data.deletePlaylist : \r\n                      response.data.deleteDir;\r\n\r\n        if (deletedRows) {\r\n            yield put(deleteSelected());\r\n        }\r\n\r\n        yield put(pushLog(new Log(`Current seleted ${current._type} deleted from database.`, path)))\r\n    } catch (error) {\r\n        yield put(pushLog(Log.Error(\r\n            path,\r\n            \"Can't delete current seleted element\" + error.message,\r\n            \"Sorry. During process deleting element occurred a problem\",\r\n            error\r\n        )))\r\n    } finally {\r\n        yield put(hideLoading())\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}