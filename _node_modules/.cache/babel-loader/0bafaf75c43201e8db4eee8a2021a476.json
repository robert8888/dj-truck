{"ast":null,"code":"'use strict';\n\nmodule.exports = react;\n\nvar toHast = require('mdast-util-to-hast');\n\nvar sanitize = require('hast-util-sanitize');\n\nvar toH = require('hast-to-hyperscript');\n\nvar tableCellStyle = require('@mapbox/hast-util-table-cell-style');\n\nvar globalReact;\nvar globalCreateElement;\nvar globalFragment;\n/* istanbul ignore next - Hard to test */\n\ntry {\n  globalReact = require('react');\n  globalCreateElement = globalReact.createElement;\n  globalFragment = globalReact.Fragment;\n} catch (_) {}\n\nvar own = {}.hasOwnProperty;\nvar tableElements = ['table', 'thead', 'tbody', 'tfoot', 'tr'];\n\nfunction react(options) {\n  var settings = options || {};\n  var createElement = settings.createElement || globalCreateElement;\n  var Fragment = settings.fragment || globalFragment;\n  var clean = settings.sanitize !== false;\n  var scheme = clean && typeof settings.sanitize !== 'boolean' ? settings.sanitize : null;\n  var toHastOptions = settings.toHast || {};\n  var components = settings.remarkReactComponents || {};\n  this.Compiler = compile; // Wrapper around `createElement` to pass components in.\n\n  function h(name, props, children) {\n    // Currently, React issues a warning for *any* white space in tables.\n    // So we remove the pretty lines for now.\n    // See: <https://github.com/facebook/react/pull/7081>.\n    // See: <https://github.com/facebook/react/pull/7515>.\n    // See: <https://github.com/remarkjs/remark-react/issues/64>.\n    if (children && tableElements.indexOf(name) !== -1) {\n      children = children.filter(function (child) {\n        return child !== '\\n';\n      });\n    }\n\n    return createElement(own.call(components, name) ? components[name] : name, props, children);\n  } // Compile mdast to React.\n\n\n  function compile(node) {\n    var tree = toHast(node, toHastOptions);\n    var root;\n\n    if (clean) {\n      tree = sanitize(tree, scheme);\n    }\n\n    root = toH(h, tableCellStyle(tree), settings.prefix); // If this compiled to a `<div>`, but fragment are possible, use those.\n\n    if (root.type === 'div' && Fragment) {\n      root = createElement(Fragment, {}, root.props.children);\n    }\n\n    return root;\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/node_modules/remark-react/index.js"],"names":["module","exports","react","toHast","require","sanitize","toH","tableCellStyle","globalReact","globalCreateElement","globalFragment","createElement","Fragment","_","own","hasOwnProperty","tableElements","options","settings","fragment","clean","scheme","toHastOptions","components","remarkReactComponents","Compiler","compile","h","name","props","children","indexOf","filter","child","call","node","tree","root","prefix","type"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,oBAAD,CAAtB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,oCAAD,CAA5B;;AAEA,IAAII,WAAJ;AACA,IAAIC,mBAAJ;AACA,IAAIC,cAAJ;AAEA;;AACA,IAAI;AACFF,EAAAA,WAAW,GAAGJ,OAAO,CAAC,OAAD,CAArB;AACAK,EAAAA,mBAAmB,GAAGD,WAAW,CAACG,aAAlC;AACAD,EAAAA,cAAc,GAAGF,WAAW,CAACI,QAA7B;AACD,CAJD,CAIE,OAAOC,CAAP,EAAU,CAAE;;AAEd,IAAIC,GAAG,GAAG,GAAGC,cAAb;AAEA,IAAIC,aAAa,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,IAArC,CAApB;;AAEA,SAASd,KAAT,CAAee,OAAf,EAAwB;AACtB,MAAIC,QAAQ,GAAGD,OAAO,IAAI,EAA1B;AACA,MAAIN,aAAa,GAAGO,QAAQ,CAACP,aAAT,IAA0BF,mBAA9C;AACA,MAAIG,QAAQ,GAAGM,QAAQ,CAACC,QAAT,IAAqBT,cAApC;AACA,MAAIU,KAAK,GAAGF,QAAQ,CAACb,QAAT,KAAsB,KAAlC;AACA,MAAIgB,MAAM,GACRD,KAAK,IAAI,OAAOF,QAAQ,CAACb,QAAhB,KAA6B,SAAtC,GAAkDa,QAAQ,CAACb,QAA3D,GAAsE,IADxE;AAEA,MAAIiB,aAAa,GAAGJ,QAAQ,CAACf,MAAT,IAAmB,EAAvC;AACA,MAAIoB,UAAU,GAAGL,QAAQ,CAACM,qBAAT,IAAkC,EAAnD;AAEA,OAAKC,QAAL,GAAgBC,OAAhB,CAVsB,CAYtB;;AACA,WAASC,CAAT,CAAWC,IAAX,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkC;AAChC;AACA;AACA;AACA;AACA;AACA,QAAIA,QAAQ,IAAId,aAAa,CAACe,OAAd,CAAsBH,IAAtB,MAAgC,CAAC,CAAjD,EAAoD;AAClDE,MAAAA,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgB,UAAUC,KAAV,EAAiB;AAC1C,eAAOA,KAAK,KAAK,IAAjB;AACD,OAFU,CAAX;AAGD;;AAED,WAAOtB,aAAa,CAClBG,GAAG,CAACoB,IAAJ,CAASX,UAAT,EAAqBK,IAArB,IAA6BL,UAAU,CAACK,IAAD,CAAvC,GAAgDA,IAD9B,EAElBC,KAFkB,EAGlBC,QAHkB,CAApB;AAKD,GA9BqB,CAgCtB;;;AACA,WAASJ,OAAT,CAAiBS,IAAjB,EAAuB;AACrB,QAAIC,IAAI,GAAGjC,MAAM,CAACgC,IAAD,EAAOb,aAAP,CAAjB;AACA,QAAIe,IAAJ;;AAEA,QAAIjB,KAAJ,EAAW;AACTgB,MAAAA,IAAI,GAAG/B,QAAQ,CAAC+B,IAAD,EAAOf,MAAP,CAAf;AACD;;AAEDgB,IAAAA,IAAI,GAAG/B,GAAG,CAACqB,CAAD,EAAIpB,cAAc,CAAC6B,IAAD,CAAlB,EAA0BlB,QAAQ,CAACoB,MAAnC,CAAV,CARqB,CAUrB;;AACA,QAAID,IAAI,CAACE,IAAL,KAAc,KAAd,IAAuB3B,QAA3B,EAAqC;AACnCyB,MAAAA,IAAI,GAAG1B,aAAa,CAACC,QAAD,EAAW,EAAX,EAAeyB,IAAI,CAACR,KAAL,CAAWC,QAA1B,CAApB;AACD;;AAED,WAAOO,IAAP;AACD;AACF","sourcesContent":["'use strict'\n\nmodule.exports = react\n\nvar toHast = require('mdast-util-to-hast')\nvar sanitize = require('hast-util-sanitize')\nvar toH = require('hast-to-hyperscript')\nvar tableCellStyle = require('@mapbox/hast-util-table-cell-style')\n\nvar globalReact\nvar globalCreateElement\nvar globalFragment\n\n/* istanbul ignore next - Hard to test */\ntry {\n  globalReact = require('react')\n  globalCreateElement = globalReact.createElement\n  globalFragment = globalReact.Fragment\n} catch (_) {}\n\nvar own = {}.hasOwnProperty\n\nvar tableElements = ['table', 'thead', 'tbody', 'tfoot', 'tr']\n\nfunction react(options) {\n  var settings = options || {}\n  var createElement = settings.createElement || globalCreateElement\n  var Fragment = settings.fragment || globalFragment\n  var clean = settings.sanitize !== false\n  var scheme =\n    clean && typeof settings.sanitize !== 'boolean' ? settings.sanitize : null\n  var toHastOptions = settings.toHast || {}\n  var components = settings.remarkReactComponents || {}\n\n  this.Compiler = compile\n\n  // Wrapper around `createElement` to pass components in.\n  function h(name, props, children) {\n    // Currently, React issues a warning for *any* white space in tables.\n    // So we remove the pretty lines for now.\n    // See: <https://github.com/facebook/react/pull/7081>.\n    // See: <https://github.com/facebook/react/pull/7515>.\n    // See: <https://github.com/remarkjs/remark-react/issues/64>.\n    if (children && tableElements.indexOf(name) !== -1) {\n      children = children.filter(function (child) {\n        return child !== '\\n'\n      })\n    }\n\n    return createElement(\n      own.call(components, name) ? components[name] : name,\n      props,\n      children\n    )\n  }\n\n  // Compile mdast to React.\n  function compile(node) {\n    var tree = toHast(node, toHastOptions)\n    var root\n\n    if (clean) {\n      tree = sanitize(tree, scheme)\n    }\n\n    root = toH(h, tableCellStyle(tree), settings.prefix)\n\n    // If this compiled to a `<div>`, but fragment are possible, use those.\n    if (root.type === 'div' && Fragment) {\n      root = createElement(Fragment, {}, root.props.children)\n    }\n\n    return root\n  }\n}\n"]},"metadata":{},"sourceType":"script"}