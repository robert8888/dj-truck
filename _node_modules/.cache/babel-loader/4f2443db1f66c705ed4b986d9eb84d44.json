{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\common\\\\HOC\\\\withRefSize.js\";\nimport React from \"react\";\nimport { produce } from \"imer\";\n\nconst withRefSize = WrappedComponent => {\n  var _temp;\n\n  return _temp = class extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        size: {}\n      };\n\n      this.importRef = (name, ref) => {\n        this.refs[name] = ref; //   console.log(name, ref)\n      };\n\n      this.refs = {};\n    }\n\n    componentDidMount() {\n      let size;\n\n      for (let [name, element] of Object.entities(this.refs)) {\n        const {\n          width,\n          height\n        } = element.getBoundingClientRect();\n        size[name] = {\n          width,\n          height\n        };\n      }\n\n      this.setState(produce(this.state, draft => draft.size = size));\n    }\n\n    render() {\n      return React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        size: this.state.size,\n        exportRef: this.importRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n\n  }, _temp;\n};\n\nexport default withRefSize;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/common/HOC/withRefSize.js"],"names":["React","produce","withRefSize","WrappedComponent","Component","constructor","args","state","size","importRef","name","ref","refs","componentDidMount","element","Object","entities","width","height","getBoundingClientRect","setState","draft","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;;AAGA,MAAMC,WAAW,GAAIC,gBAAD,IAAsB;AAAA;;AAEtC,iBAAO,cAAcH,KAAK,CAACI,SAApB,CAA6B;AAKhCC,IAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAS;AAChB,YAAM,GAAGA,IAAT;AADgB,WAJpBC,KAIoB,GAJd;AACFC,QAAAA,IAAI,EAAE;AADJ,OAIc;;AAAA,WAmBpBC,SAnBoB,GAmBR,CAAEC,IAAF,EAAQC,GAAR,KAAgB;AACxB,aAAKC,IAAL,CAAUF,IAAV,IAAkBC,GAAlB,CADwB,CAE3B;AACA,OAtBmB;;AAEhB,WAAKC,IAAL,GAAU,EAAV;AACH;;AAIDC,IAAAA,iBAAiB,GAAG;AAChB,UAAIL,IAAJ;;AACA,WAAI,IAAI,CAACE,IAAD,EAAOI,OAAP,CAAR,IAA2BC,MAAM,CAACC,QAAP,CAAgB,KAAKJ,IAArB,CAA3B,EAAsD;AAClD,cAAM;AAACK,UAAAA,KAAD;AAAQC,UAAAA;AAAR,YAAkBJ,OAAO,CAACK,qBAAR,EAAxB;AACAX,QAAAA,IAAI,CAACE,IAAD,CAAJ,GAAa;AACTO,UAAAA,KADS;AAETC,UAAAA;AAFS,SAAb;AAIH;;AACD,WAAKE,QAAL,CAAcnB,OAAO,CAAC,KAAKM,KAAN,EAAac,KAAK,IAAIA,KAAK,CAACb,IAAN,GAAaA,IAAnC,CAArB;AACH;;AAODc,IAAAA,MAAM,GAAE;AACJ,aAAO,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAkC,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC,IAAnD;AAA0D,QAAA,SAAS,EAAE,KAAKC,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AA/B+B,GAApC;AAkCH,CApCD;;AAsCA,eAAeP,WAAf","sourcesContent":["import React from \"react\";\r\nimport { produce } from \"imer\"\r\n\r\n\r\nconst withRefSize = (WrappedComponent) => {\r\n\r\n    return class extends React.Component{\r\n        state={ \r\n            size: {}\r\n        }\r\n\r\n        constructor(...args){\r\n            super(...args);\r\n            this.refs={};\r\n        }\r\n\r\n\r\n\r\n        componentDidMount() {\r\n            let size;\r\n            for(let [name, element] of Object.entities(this.refs)){\r\n                const {width, height} = element.getBoundingClientRect();\r\n                size[name] = {\r\n                    width,\r\n                    height\r\n                }\r\n            }\r\n            this.setState(produce(this.state, draft => draft.size = size))\r\n        }\r\n\r\n        importRef = ( name, ref) => {\r\n            this.refs[name] = ref;\r\n         //   console.log(name, ref)\r\n        }\r\n\r\n        render(){\r\n            return <WrappedComponent {...this.props} size={this.state.size}  exportRef={this.importRef}/>\r\n        }\r\n    } \r\n\r\n}\r\n\r\nexport default withRefSize;"]},"metadata":{},"sourceType":"module"}