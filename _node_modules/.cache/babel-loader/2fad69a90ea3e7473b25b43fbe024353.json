{"ast":null,"code":"export default function mock(waveSurf) {\n  waveSurf.drawer.handleEvent = function (e, noPrevent) {\n    !noPrevent && e.preventDefault();\n    var clientX = e.targetTouches ? e.targetTouches[0].clientX : e.clientX;\n    var bbox = this.wrapper.getBoundingClientRect();\n    var nominalWidth = this.width;\n    var parentWidth = this.getWidth();\n    var progress;\n\n    if (!this.params.fillParent && nominalWidth < parentWidth) {\n      progress = (clientX - bbox.left) * this.params.pixelRatio / nominalWidth || 0;\n\n      if (progress > 1) {\n        progress = 1;\n      }\n    } else {\n      progress = (clientX - bbox.left + this.wrapper._scrollLeft) / this.width || 0;\n    }\n\n    return progress;\n  };\n\n  waveSurf.drawer.progress = function (progress) {\n    var minPxDelta = 1 / this.params.pixelRatio;\n    var pos = Math.round(progress * this.width) * minPxDelta;\n\n    if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n      this.lastPos = pos;\n      this.recenterOnPosition(pos);\n      this.updateProgress(pos);\n    }\n  };\n\n  waveSurf.drawer.recenterOnPosition = function (position, immediate) {\n    var scrollLeft = this.wrapper._scrollLeft;\n    var half = ~~(this.params.container.firstChild.clientWidth / 2);\n    var target = position - half;\n    var offset = target - scrollLeft; // if the cursor is currently visible...\n\n    if (!immediate && -half <= offset && offset < half) {\n      // we'll limit the \"re-center\" rate.\n      var rate = 5;\n      offset = Math.max(-rate, Math.min(rate, offset));\n      target = scrollLeft + offset;\n    }\n\n    if (target != scrollLeft) {\n      this.wrapper._scrollLeft = target;\n      console.log(position, target);\n      this.params.container.firstChild.style.transform = \"translateX(\" + target + \"px)\"; //\"translateX(-\" + target + \"px)\";\n    }\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/core/console/channels/channelBuilder/mockWevaSurffe.js"],"names":["mock","waveSurf","drawer","handleEvent","e","noPrevent","preventDefault","clientX","targetTouches","bbox","wrapper","getBoundingClientRect","nominalWidth","width","parentWidth","getWidth","progress","params","fillParent","left","pixelRatio","_scrollLeft","minPxDelta","pos","Math","round","lastPos","recenterOnPosition","updateProgress","position","immediate","scrollLeft","half","container","firstChild","clientWidth","target","offset","rate","max","min","console","log","style","transform"],"mappings":"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","sourcesContent":["export default function mock(waveSurf) {\r\n\r\n\r\n    waveSurf.drawer.handleEvent = function (e, noPrevent) {\r\n        !noPrevent && e.preventDefault();\r\n\r\n        var clientX = e.targetTouches ? e.targetTouches[0].clientX : e.clientX;\r\n        var bbox = this.wrapper.getBoundingClientRect();\r\n\r\n        var nominalWidth = this.width;\r\n        var parentWidth = this.getWidth();\r\n\r\n        var progress;\r\n\r\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\r\n            progress = ((clientX - bbox.left) * this.params.pixelRatio / nominalWidth) || 0;\r\n\r\n            if (progress > 1) {\r\n                progress = 1;\r\n            }\r\n        } else {\r\n            progress = ((clientX - bbox.left + this.wrapper._scrollLeft) / this.width) || 0;\r\n        }\r\n\r\n        return progress;\r\n    };\r\n\r\n    waveSurf.drawer.progress = function (progress) {\r\n      var minPxDelta = 1 / this.params.pixelRatio;\r\n      var pos = Math.round(progress * this.width) * minPxDelta;\r\n\r\n      if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\r\n          this.lastPos = pos;\r\n          this.recenterOnPosition(pos)\r\n          this.updateProgress(pos);\r\n      }\r\n    };\r\n\r\n    waveSurf.drawer.recenterOnPosition = function (position, immediate) {\r\n\r\n      var scrollLeft = this.wrapper._scrollLeft;\r\n      var half = ~~(this.params.container.firstChild.clientWidth / 2);\r\n      var target = position - half;\r\n      var offset = target - scrollLeft;\r\n\r\n\r\n      // if the cursor is currently visible...\r\n      if (!immediate && -half <= offset && offset < half) {\r\n        // we'll limit the \"re-center\" rate.\r\n        var rate = 5;\r\n        offset = Math.max(-rate, Math.min(rate, offset));\r\n        target = scrollLeft + offset;\r\n      }\r\n\r\n      if (target != scrollLeft) {\r\n        this.wrapper._scrollLeft = target;\r\n        console.log(position, target)\r\n        this.params.container.firstChild.style.transform = \"translateX(\" + target + \"px)\"; //\"translateX(-\" + target + \"px)\";\r\n        \r\n      }\r\n\r\n    }\r\n  }\r\n\r\n"]},"metadata":{},"sourceType":"module"}