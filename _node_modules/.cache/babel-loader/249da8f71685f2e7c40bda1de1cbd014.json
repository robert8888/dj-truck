{"ast":null,"code":"export default class Mixer {\n  constructor(channels) {\n    this.channels = channels;\n    this.audioNodes = {\n      channels: {}\n    };\n  }\n\n  setGain(channelName, gainValue) {\n    let gain = 1 + gainValue / 100;\n    if (gainValue === 0) return; // idl run\n\n    let gainNode = this.audioNodes.channels[channelName].gainNode;\n\n    if (!gainNode) {\n      let audioCtx = this.channels.getChannel(channelName).backend.ac;\n      let gainNode = audioCtx.createGain();\n      this.channels.getChannel(channelName).backend.setFilter(gainNode);\n      this.audioNodes.channels[channelName].gainNode = GainNode;\n    }\n\n    gainNode.gain.setValueAtTime(parseFloat(gain), audioCtx.currentTime);\n  }\n\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/core/console/mixer/mixer.js"],"names":["Mixer","constructor","channels","audioNodes","setGain","channelName","gainValue","gain","gainNode","audioCtx","getChannel","backend","ac","createGain","setFilter","GainNode","setValueAtTime","parseFloat","currentTime"],"mappings":"AAGA,eAAe,MAAMA,KAAN,CAAW;AACtBC,EAAAA,WAAW,CAACC,QAAD,EAAU;AACjB,SAAKA,QAAL,GAAgBA,QAAhB;AAEA,SAAKC,UAAL,GAAkB;AACdD,MAAAA,QAAQ,EAAG;AADG,KAAlB;AAGH;;AAGDE,EAAAA,OAAO,CAACC,WAAD,EAAcC,SAAd,EAAwB;AAC3B,QAAIC,IAAI,GAAG,IAAID,SAAS,GAAE,GAA1B;AACA,QAAGA,SAAS,KAAK,CAAjB,EAAoB,OAFO,CAEC;;AAC5B,QAAIE,QAAQ,GAAG,KAAKL,UAAL,CAAgBD,QAAhB,CAAyBG,WAAzB,EAAsCG,QAArD;;AACA,QAAG,CAACA,QAAJ,EAAa;AACT,UAAIC,QAAQ,GAAG,KAAKP,QAAL,CAAcQ,UAAd,CAAyBL,WAAzB,EAAsCM,OAAtC,CAA8CC,EAA7D;AACA,UAAIJ,QAAQ,GAAGC,QAAQ,CAACI,UAAT,EAAf;AACA,WAAKX,QAAL,CAAcQ,UAAd,CAAyBL,WAAzB,EAAsCM,OAAtC,CAA8CG,SAA9C,CAAwDN,QAAxD;AACA,WAAKL,UAAL,CAAgBD,QAAhB,CAAyBG,WAAzB,EAAsCG,QAAtC,GAAiDO,QAAjD;AACH;;AAEDP,IAAAA,QAAQ,CAACD,IAAT,CAAcS,cAAd,CAA8BC,UAAU,CAACV,IAAD,CAAxC,EAAiDE,QAAQ,CAACS,WAA1D;AAEH;;AAvBqB","sourcesContent":["\r\n\r\n\r\nexport default class Mixer{\r\n    constructor(channels){\r\n        this.channels = channels;\r\n\r\n        this.audioNodes = {\r\n            channels : {}\r\n        }\r\n    }\r\n\r\n\r\n    setGain(channelName, gainValue){\r\n        let gain = 1 + gainValue /100;\r\n        if(gainValue === 0) return; // idl run\r\n        let gainNode = this.audioNodes.channels[channelName].gainNode;\r\n        if(!gainNode){\r\n            let audioCtx = this.channels.getChannel(channelName).backend.ac;\r\n            let gainNode = audioCtx.createGain();\r\n            this.channels.getChannel(channelName).backend.setFilter(gainNode);\r\n            this.audioNodes.channels[channelName].gainNode = GainNode;\r\n        }\r\n\r\n        gainNode.gain.setValueAtTime( parseFloat(gain) , audioCtx.currentTime)\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}