{"ast":null,"code":"import _classCallCheck from\"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import store from\"./../../../store/\";import{setCuePoint}from\"./../../../actions\";var Channels=/*#__PURE__*/function(){function Channels(){_classCallCheck(this,Channels);this.dispatch=store.dispatch;this.channels={A:null,B:null};}_createClass(Channels,[{key:\"getChannelNames\",value:function getChannelNames(){return Object.keys(this.channels);}},{key:\"setChannel\",value:function setChannel(channelName,player){this.channels[channelName]=player;}},{key:\"getChannel\",value:function getChannel(channelName){return this.channels[channelName];}//--------------------------------------------\n},{key:\"togglePlay\",value:function togglePlay(channelName,currentValue){if(currentValue){this.channels[channelName].pause();}else{this.channels[channelName].play();}}},{key:\"toggleCue\",value:function toggleCue(channelName,currentValue){var player=this.channels[channelName];var isPaused=store.getState().console.channel[channelName].playBackState.paused;if(!currentValue&&isPaused){// back to cue point and pause\nvar cuePoint=store.getState().console.channel[channelName].playBackState.cuePoint;//in seconds\n//seek to\nplayer.pause();player.backend.seekTo(cuePoint);player.drawer.progress(cuePoint/player.getDuration());player.drawer.recenter(cuePoint/player.getDuration());}else if(!currentValue){//Cancel cue and play\nif(!player.isPlaying()){player.play();}}else{var _cuePoint=this.channels[channelName].getCurrentTime();this.channels[channelName].play();this.dispatch(setCuePoint(channelName,_cuePoint));// in float seconds\n}}},{key:\"adjustPitch\",value:function adjustPitch(channelName,currentValue){this.channels[channelName].setPlaybackRate(1+currentValue/100);}}]);return Channels;}();export{Channels as default};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/core/console/channels/channels.js"],"names":["store","setCuePoint","Channels","dispatch","channels","A","B","Object","keys","channelName","player","currentValue","pause","play","isPaused","getState","console","channel","playBackState","paused","cuePoint","backend","seekTo","drawer","progress","getDuration","recenter","isPlaying","getCurrentTime","setPlaybackRate"],"mappings":"kPAAA,MAAOA,CAAAA,KAAP,KAAkB,mBAAlB,CACA,OAASC,WAAT,KACS,oBADT,C,GAGqBC,CAAAA,Q,yBACjB,mBAAa,gCACT,KAAKC,QAAL,CAAgBH,KAAK,CAACG,QAAtB,CACA,KAAKC,QAAL,CAAgB,CACZC,CAAC,CAAE,IADS,CAEZC,CAAC,CAAE,IAFS,CAAhB,CAIH,C,8EAEgB,CACb,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAY,KAAKJ,QAAjB,CAAP,CACH,C,8CAEUK,W,CAAaC,M,CAAO,CAC3B,KAAKN,QAAL,CAAcK,WAAd,EAA6BC,MAA7B,CACH,C,8CAEUD,W,CAAY,CACnB,MAAO,MAAKL,QAAL,CAAcK,WAAd,CAAP,CACH,CAED;8CACWA,W,CAAaE,Y,CAAa,CACjC,GAAGA,YAAH,CAAgB,CACZ,KAAKP,QAAL,CAAcK,WAAd,EAA2BG,KAA3B,GACH,CAFD,IAEO,CACH,KAAKR,QAAL,CAAcK,WAAd,EAA2BI,IAA3B,GACH,CACJ,C,4CAESJ,W,CAAaE,Y,CAAa,CAChC,GAAMD,CAAAA,MAAM,CAAG,KAAKN,QAAL,CAAcK,WAAd,CAAf,CACA,GAAMK,CAAAA,QAAQ,CAAGd,KAAK,CAACe,QAAN,GAAiBC,OAAjB,CAAyBC,OAAzB,CAAiCR,WAAjC,EAA8CS,aAA9C,CAA4DC,MAA7E,CACA,GAAG,CAACR,YAAD,EAAiBG,QAApB,CAA6B,CAAE;AAC3B,GAAIM,CAAAA,QAAQ,CAAIpB,KAAK,CAACe,QAAN,GAAiBC,OAAjB,CAAyBC,OAAzB,CAAiCR,WAAjC,EAA8CS,aAA9C,CAA4DE,QAA5E,CAAsF;AACtF;AACAV,MAAM,CAACE,KAAP,GACAF,MAAM,CAACW,OAAP,CAAeC,MAAf,CAAsBF,QAAtB,EACAV,MAAM,CAACa,MAAP,CAAcC,QAAd,CAAuBJ,QAAQ,CAAGV,MAAM,CAACe,WAAP,EAAlC,EACAf,MAAM,CAACa,MAAP,CAAcG,QAAd,CAAuBN,QAAQ,CAAGV,MAAM,CAACe,WAAP,EAAlC,EACH,CAPD,IAOO,IAAG,CAACd,YAAJ,CAAkB,CAAE;AACvB,GAAG,CAACD,MAAM,CAACiB,SAAP,EAAJ,CAAuB,CACnBjB,MAAM,CAACG,IAAP,GACH,CACJ,CAJM,IAKF,CACD,GAAMO,CAAAA,SAAQ,CAAG,KAAKhB,QAAL,CAAcK,WAAd,EAA2BmB,cAA3B,EAAjB,CACA,KAAKxB,QAAL,CAAcK,WAAd,EAA2BI,IAA3B,GACA,KAAKV,QAAL,CAAcF,WAAW,CAACQ,WAAD,CAAcW,SAAd,CAAzB,EAAkD;AACrD,CACJ,C,gDAEWX,W,CAAaE,Y,CAAa,CAClC,KAAKP,QAAL,CAAcK,WAAd,EAA2BoB,eAA3B,CAA4C,EAAIlB,YAAY,CAAC,GAA7D,EACH,C,+BAtDgBT,Q","sourcesContent":["import store from \"./../../../store/\";\r\nimport { setCuePoint }\r\n    from \"./../../../actions\";\r\n\r\nexport default class Channels{\r\n    constructor(){\r\n        this.dispatch = store.dispatch;\r\n        this.channels = {\r\n            A: null, \r\n            B: null\r\n        }\r\n    }\r\n\r\n    getChannelNames(){\r\n        return Object.keys(this.channels);\r\n    }\r\n\r\n    setChannel(channelName, player){\r\n        this.channels[channelName] = player;\r\n    }\r\n\r\n    getChannel(channelName){\r\n        return this.channels[channelName];\r\n    }\r\n    \r\n    //--------------------------------------------\r\n    togglePlay(channelName, currentValue){\r\n        if(currentValue){\r\n            this.channels[channelName].pause();\r\n        } else {\r\n            this.channels[channelName].play();\r\n        }\r\n    }\r\n\r\n    toggleCue(channelName, currentValue){\r\n        const player = this.channels[channelName]\r\n        const isPaused = store.getState().console.channel[channelName].playBackState.paused;\r\n        if(!currentValue && isPaused){ // back to cue point and pause\r\n            let cuePoint =  store.getState().console.channel[channelName].playBackState.cuePoint; //in seconds\r\n            //seek to\r\n            player.pause();\r\n            player.backend.seekTo(cuePoint);\r\n            player.drawer.progress(cuePoint / player.getDuration());\r\n            player.drawer.recenter(cuePoint / player.getDuration());\r\n        } else if(!currentValue) { //Cancel cue and play\r\n            if(!player.isPlaying()){\r\n                player.play();\r\n            }\r\n        }\r\n        else {\r\n            const cuePoint = this.channels[channelName].getCurrentTime();\r\n            this.channels[channelName].play();\r\n            this.dispatch(setCuePoint(channelName, cuePoint)) // in float seconds\r\n        }\r\n    }\r\n\r\n    adjustPitch(channelName, currentValue){\r\n        this.channels[channelName].setPlaybackRate( 1 + currentValue/100 )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}