{"ast":null,"code":"import STATUS from\"./../STATUS\";export default function checkBpmAndOfset(prev,current){prev=prev.console;current=current.console;var response=null;for(var _i=0,_Object$keys=Object.keys(prev.channel);_i<_Object$keys.length;_i++){var channelName=_Object$keys[_i];var prevReady=prev.channel[channelName].playBackState.ready;var prevBpm=prev.channel[channelName].track.bpm;var currentReady=current.channel[channelName].playBackState.ready;var currentBpm=current.channel[channelName].track.bpm;var currentOffset=current.channel[channelName].playBackState.offset;if(!currentReady)continue;if(prevReady!==currentReady&&currentBpm!==0&&currentOffset!==0||currentBpm!==prevBpm&&currentOffset!==0){response=response||[];response.push({status:STATUS.BPM_AND_OFFSET_READY,channel:channelName,currentValue:{bpm:currentBpm,offset:currentOffset}});}}return response;}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/observer/comparators/bpmAndOffset.js"],"names":["STATUS","checkBpmAndOfset","prev","current","console","response","Object","keys","channel","channelName","prevReady","playBackState","ready","prevBpm","track","bpm","currentReady","currentBpm","currentOffset","offset","push","status","BPM_AND_OFFSET_READY","currentValue"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,aAAnB,CAEA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,IAA1B,CAAgCC,OAAhC,CAAyC,CACtDD,IAAI,CAAGA,IAAI,CAACE,OAAZ,CACAD,OAAO,CAAGA,OAAO,CAACC,OAAlB,CACA,GAAIC,CAAAA,QAAQ,CAAG,IAAf,CACA,0BAAwBC,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACM,OAAjB,CAAxB,6BAAmD,CAA9C,GAAIC,CAAAA,WAAW,iBAAf,CACH,GAAMC,CAAAA,SAAS,CAAGR,IAAI,CAACM,OAAL,CAAaC,WAAb,EAA0BE,aAA1B,CAAwCC,KAA1D,CACA,GAAMC,CAAAA,OAAO,CAAGX,IAAI,CAACM,OAAL,CAAaC,WAAb,EAA0BK,KAA1B,CAAgCC,GAAhD,CAEA,GAAMC,CAAAA,YAAY,CAAGb,OAAO,CAACK,OAAR,CAAgBC,WAAhB,EAA6BE,aAA7B,CAA2CC,KAAhE,CACA,GAAMK,CAAAA,UAAU,CAAGd,OAAO,CAACK,OAAR,CAAgBC,WAAhB,EAA6BK,KAA7B,CAAmCC,GAAtD,CACA,GAAMG,CAAAA,aAAa,CAAGf,OAAO,CAACK,OAAR,CAAgBC,WAAhB,EAA6BE,aAA7B,CAA2CQ,MAAjE,CAEA,GAAI,CAACH,YAAL,CAAmB,SAEnB,GACGN,SAAS,GAAKM,YAAd,EAA8BC,UAAU,GAAK,CAA7C,EAAkDC,aAAa,GAAK,CAArE,EACCD,UAAU,GAAKJ,OAAf,EAA0BK,aAAa,GAAK,CAF/C,CAGE,CACAb,QAAQ,CAAGA,QAAQ,EAAI,EAAvB,CACAA,QAAQ,CAACe,IAAT,CAAc,CACZC,MAAM,CAAErB,MAAM,CAACsB,oBADH,CAEZd,OAAO,CAAEC,WAFG,CAGZc,YAAY,CAAE,CACZR,GAAG,CAAEE,UADO,CAEZE,MAAM,CAAED,aAFI,CAHF,CAAd,EAQD,CACF,CACD,MAAOb,CAAAA,QAAP,CACD","sourcesContent":["import STATUS from \"./../STATUS\";\r\n\r\nexport default function checkBpmAndOfset(prev, current) {\r\n  prev = prev.console;\r\n  current = current.console;\r\n  let response = null;\r\n  for (let channelName of Object.keys(prev.channel)) {\r\n    const prevReady = prev.channel[channelName].playBackState.ready;\r\n    const prevBpm = prev.channel[channelName].track.bpm;\r\n\r\n    const currentReady = current.channel[channelName].playBackState.ready;\r\n    const currentBpm = current.channel[channelName].track.bpm;\r\n    const currentOffset = current.channel[channelName].playBackState.offset;\r\n\r\n    if (!currentReady) continue;\r\n\r\n    if (\r\n      (prevReady !== currentReady && currentBpm !== 0 && currentOffset !== 0) ||\r\n      (currentBpm !== prevBpm && currentOffset !== 0)\r\n    ) {\r\n      response = response || [];\r\n      response.push({\r\n        status: STATUS.BPM_AND_OFFSET_READY,\r\n        channel: channelName,\r\n        currentValue: {\r\n          bpm: currentBpm,\r\n          offset: currentOffset\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}