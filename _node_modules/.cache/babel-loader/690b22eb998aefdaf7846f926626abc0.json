{"ast":null,"code":"// ---------- PlayList---------------------\nconst ACTIONS = {\n  PL_ROOT_REQUEST: \"Call to api for root dir content\",\n  PL_LOAD_DIR_REQUEST: \"call to api for dir conent\",\n  PL_PUSH_DIR_CONTENT: \"Push  director contetn loaded  from api\",\n  PL_PUSH_TRACK_REQUEST: \"Call to api and add track to current playlist\",\n  PUSH_TRACK: \"Push track on end of list\",\n  //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\n  CALC_BPM: \"Start calculating bpm for track\",\n  SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\",\n  // bpm is rounded\n  //---play list explorer\n  PL_CREATE_DIR_REQEST: \"Call to api and create dir\",\n  PL_CREATE_DIR: \"Create dir in current\",\n  PL_CREATE_PLAYLIST_REQUEST: \"Call to api to create playlist in current selected dir of name\",\n  PL_CREATE_PLAYLIST: \"Create play list in current selected dir of name\",\n  PL_SET_SELECTION: \"Set current selected dir and playlist if is selected playlist\",\n  PL_SET_PLAYLIST_CONTENT: \"Settinng content of current playlist from api\",\n  PL_RESET_CURRENT_PLAYLIST_CONTETN: \"Resetting playlist content after changing position from unsuccess dragging\",\n  PL_LOAD_PLAYLIST_REQUEST: \"Call to api to get current playlist content\",\n  PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\n  PL_TOGGLE_DIR_REQUEST: \"If is not loade load and then open\",\n  PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\n  PL_RENAME_SELECTED_REQUEST: \"Call to api to rename current selected\",\n  PL_RENAME_SELECTED: \"Rename current selected element\",\n  PL_DELETE_SELECTED_REQUEST: \"Call to api and delete current selected element\",\n  PL_DELETE_SELECTED: \"Remove current selected element\",\n  PL_DELETE_TRACK_REQUEST: \"Call to api to delete trac of given id from current plalist\",\n  PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\n  PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\n  PL_UPDATE_TRACK_POSITION_REQUST: \"Update track position in database after swaping\",\n  PL_COPY_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\n  PL_MOVE_TO_REQUEST: \"Call to api and move element from pathFrom to pathTo\",\n  PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\"\n};\nexport { ACTIONS as PLAY_LIST_ACTIONS }; //***------------------- */\n\nexport function pushTrackToList(track, playlist) {\n  return {\n    type: ACTIONS.PUSH_TRACK,\n    track,\n    playlist\n  };\n}\n;\nexport function startCalcBpm(track, playlist) {\n  return {\n    type: ACTIONS.CALC_BPM,\n    track,\n    playlist\n  };\n}\nexport function setBpmAndOffset(id, playlist, bpm, offset) {\n  return {\n    type: ACTIONS.SET_BPM_AND_OFFSET,\n    id,\n    playlist,\n    bpm,\n    offset\n  };\n} //-------------\n\nexport function rootDirRequest() {\n  return {\n    type: ACTIONS.PL_ROOT_REQUEST\n  };\n}\nexport function loadDirRequest(path, open) {\n  return {\n    type: ACTIONS.PL_LOAD_DIR_REQUEST,\n    path,\n    open\n  };\n}\nexport function pushDirContent(dirContent, isRoot, path, open) {\n  return {\n    type: ACTIONS.PL_PUSH_DIR_CONTENT,\n    dirContent,\n    isRoot,\n    path,\n    open\n  };\n}\nexport function createDirRequest(name) {\n  return {\n    type: ACTIONS.PL_CREATE_DIR_REQEST,\n    name\n  };\n}\nexport function createDir(name, id, renameMode) {\n  return {\n    type: ACTIONS.PL_CREATE_DIR,\n    name,\n    id,\n    renameMode\n  };\n}\nexport function toggleDirRequest(path) {\n  return {\n    type: ACTIONS.PL_TOGGLE_DIR_REQUEST,\n    path\n  };\n}\nexport function toggleDir(path) {\n  return {\n    type: ACTIONS.PL_TOGGLE_DIR,\n    path\n  };\n} //-------------\n\nexport function createPlaylistRequest(name) {\n  return {\n    type: ACTIONS.PL_CREATE_PLAYLIST_REQUEST,\n    name\n  };\n}\nexport function createPlaylist(name, id, renameMode, setCurrent) {\n  return {\n    type: ACTIONS.PL_CREATE_PLAYLIST,\n    name,\n    id,\n    renameMode,\n    setCurrent\n  };\n}\nexport function openPlaylistRequest(path) {\n  return {\n    type: ACTIONS.PL_LOAD_PLAYLIST_REQUEST,\n    path\n  };\n}\nexport function openCurrentPlaylist() {\n  return {\n    type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST\n  };\n}\nexport function setPlaylistContent(playlistContent, path) {\n  return {\n    type: ACTIONS.PL_SET_PLAYLIST_CONTENT,\n    playlistContent,\n    path\n  };\n}\nexport function resetCurrentPlaylistContent(list) {\n  return {\n    type: ACTIONS.PL_RESET_CURRENT_PLAYLIST_CONTETN,\n    list\n  };\n} //--------------\n\nexport function setSelection(path) {\n  return {\n    type: ACTIONS.PL_SET_SELECTION,\n    path\n  };\n}\nexport function renameSelectedRequest(name) {\n  return {\n    type: ACTIONS.PL_RENAME_SELECTED_REQUEST,\n    name\n  };\n}\nexport function renameSelected(name) {\n  return {\n    type: ACTIONS.PL_RENAME_SELECTED,\n    name\n  };\n}\nexport function deleteSelectedRequest() {\n  return {\n    type: ACTIONS.PL_DELETE_SELECTED_REQUEST\n  };\n}\nexport function deleteSelected() {\n  return {\n    type: ACTIONS.PL_DELETE_SELECTED\n  };\n} //--------------\n\nexport function deleteTrackRequest(index, id) {\n  return {\n    type: ACTIONS.PL_DELETE_TRACK_REQUEST,\n    index,\n    id\n  };\n}\nexport function deleteTrack(index) {\n  return {\n    type: ACTIONS.PL_DELETE_TRACK,\n    index\n  };\n} //--------------\n\nexport function updateTrackPositionRequest(tracksPositions) {\n  return {\n    type: ACTIONS.PL_UPDATE_TRACK_POSITION_REQUST,\n    tracksPositions\n  };\n}\nexport function swapTrackOnList(from, to) {\n  return {\n    type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT,\n    from,\n    to\n  };\n} //----------------\n\nexport function pushTrackToListRequest(track, playlist) {\n  return {\n    type: ACTIONS.PL_PUSH_TRACK_REQUEST,\n    track,\n    playlist\n  };\n}\nexport function copyTrackToList(track, path) {\n  return {\n    type: ACTIONS.PL_COPY_TRACK_TO_LIST,\n    track,\n    path\n  };\n} //----------------\n\nexport function moveToRequest(pathFrom, pathTo) {\n  return {\n    type: ACTIONS.PL_MOVE_TO_REQUEST,\n    pathFrom,\n    pathTo\n  };\n}\nexport function moveTo(pathFrom, pathTo) {\n  return {\n    type: ACTIONS.PL_MOVE_TO,\n    pathFrom,\n    pathTo\n  };\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/actions/console/playList.js"],"names":["ACTIONS","PL_ROOT_REQUEST","PL_LOAD_DIR_REQUEST","PL_PUSH_DIR_CONTENT","PL_PUSH_TRACK_REQUEST","PUSH_TRACK","CALC_BPM","SET_BPM_AND_OFFSET","PL_CREATE_DIR_REQEST","PL_CREATE_DIR","PL_CREATE_PLAYLIST_REQUEST","PL_CREATE_PLAYLIST","PL_SET_SELECTION","PL_SET_PLAYLIST_CONTENT","PL_RESET_CURRENT_PLAYLIST_CONTETN","PL_LOAD_PLAYLIST_REQUEST","PL_OPEN_CURRENT_PLAY_LIST","PL_TOGGLE_DIR_REQUEST","PL_TOGGLE_DIR","PL_RENAME_SELECTED_REQUEST","PL_RENAME_SELECTED","PL_DELETE_SELECTED_REQUEST","PL_DELETE_SELECTED","PL_DELETE_TRACK_REQUEST","PL_DELETE_TRACK","PL_SWAP_TRACK_ON_CURRENT","PL_UPDATE_TRACK_POSITION_REQUST","PL_COPY_TRACK_TO_LIST","PL_MOVE_TO_REQUEST","PL_MOVE_TO","PLAY_LIST_ACTIONS","pushTrackToList","track","playlist","type","startCalcBpm","setBpmAndOffset","id","bpm","offset","rootDirRequest","loadDirRequest","path","open","pushDirContent","dirContent","isRoot","createDirRequest","name","createDir","renameMode","toggleDirRequest","toggleDir","createPlaylistRequest","createPlaylist","setCurrent","openPlaylistRequest","openCurrentPlaylist","setPlaylistContent","playlistContent","resetCurrentPlaylistContent","list","setSelection","renameSelectedRequest","renameSelected","deleteSelectedRequest","deleteSelected","deleteTrackRequest","index","deleteTrack","updateTrackPositionRequest","tracksPositions","swapTrackOnList","from","to","pushTrackToListRequest","copyTrackToList","moveToRequest","pathFrom","pathTo","moveTo"],"mappings":"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","sourcesContent":["// ---------- PlayList---------------------\r\n\r\nconst ACTIONS = {\r\n    PL_ROOT_REQUEST: \"Call to api for root dir content\",\r\n    PL_LOAD_DIR_REQUEST: \"call to api for dir conent\",\r\n    PL_PUSH_DIR_CONTENT: \"Push  director contetn loaded  from api\",\r\n\r\n    PL_PUSH_TRACK_REQUEST: \"Call to api and add track to current playlist\",\r\n\r\n    PUSH_TRACK: \"Push track on end of list\",\r\n    //\"Affter append track to list is fire calculating Bpm, after witch is seting bpm to track on list\"\r\n    CALC_BPM: \"Start calculating bpm for track\",\r\n    SET_BPM_AND_OFFSET: \"Update Bpm and Offset track on playlist\", // bpm is rounded\r\n\r\n    //---play list explorer\r\n    PL_CREATE_DIR_REQEST: \"Call to api and create dir\",\r\n    PL_CREATE_DIR: \"Create dir in current\",\r\n    PL_CREATE_PLAYLIST_REQUEST: \"Call to api to create playlist in current selected dir of name\",\r\n    PL_CREATE_PLAYLIST: \"Create play list in current selected dir of name\",\r\n\r\n    PL_SET_SELECTION: \"Set current selected dir and playlist if is selected playlist\",\r\n    PL_SET_PLAYLIST_CONTENT: \"Settinng content of current playlist from api\",\r\n    PL_RESET_CURRENT_PLAYLIST_CONTETN : \"Resetting playlist content after changing position from unsuccess dragging\",\r\n\r\n    PL_LOAD_PLAYLIST_REQUEST: \"Call to api to get current playlist content\",\r\n    PL_OPEN_CURRENT_PLAY_LIST: \"Open/explore current play list\",\r\n\r\n    PL_TOGGLE_DIR_REQUEST: \"If is not loade load and then open\",\r\n    PL_TOGGLE_DIR: \"Open if is closed an vice versa by path\",\r\n\r\n    PL_RENAME_SELECTED_REQUEST: \"Call to api to rename current selected\",\r\n    PL_RENAME_SELECTED: \"Rename current selected element\",\r\n\r\n    PL_DELETE_SELECTED_REQUEST: \"Call to api and delete current selected element\",\r\n    PL_DELETE_SELECTED: \"Remove current selected element\",\r\n\r\n    PL_DELETE_TRACK_REQUEST: \"Call to api to delete trac of given id from current plalist\",\r\n    PL_DELETE_TRACK: \"Remove track of given index from current playlist\",\r\n\r\n    PL_SWAP_TRACK_ON_CURRENT: \"Swap elements on current play list\",\r\n    PL_UPDATE_TRACK_POSITION_REQUST : \"Update track position in database after swaping\",\r\n\r\n    PL_COPY_TRACK_TO_LIST: \"Add track to list (from drag and drop)\",\r\n\r\n    PL_MOVE_TO_REQUEST: \"Call to api and move element from pathFrom to pathTo\",\r\n    PL_MOVE_TO: \"Move element of pathFrom to pathTo (from drag and drop)\",\r\n}\r\nexport { ACTIONS as PLAY_LIST_ACTIONS }\r\n//***------------------- */\r\n\r\n\r\nexport function pushTrackToList(track, playlist) {\r\n    return { type: ACTIONS.PUSH_TRACK, track, playlist }\r\n};\r\n\r\nexport function startCalcBpm(track, playlist) {\r\n    return {\r\n        type: ACTIONS.CALC_BPM,\r\n        track,\r\n        playlist\r\n    }\r\n}\r\n\r\n\r\nexport function setBpmAndOffset(id, playlist, bpm, offset) {\r\n    return {\r\n        type: ACTIONS.SET_BPM_AND_OFFSET,\r\n        id,\r\n        playlist,\r\n        bpm,\r\n        offset,\r\n    }\r\n}\r\n\r\n//-------------\r\n\r\nexport function rootDirRequest() {\r\n    return { type: ACTIONS.PL_ROOT_REQUEST }\r\n}\r\n\r\nexport function loadDirRequest(path, open) {\r\n    return { type: ACTIONS.PL_LOAD_DIR_REQUEST, path, open }\r\n}\r\n\r\nexport function pushDirContent(dirContent, isRoot, path, open) {\r\n    return { type: ACTIONS.PL_PUSH_DIR_CONTENT, dirContent, isRoot, path, open }\r\n}\r\n\r\n\r\n\r\nexport function createDirRequest(name) {\r\n    return { type: ACTIONS.PL_CREATE_DIR_REQEST, name }\r\n}\r\n\r\nexport function createDir(name, id, renameMode) {\r\n    return { type: ACTIONS.PL_CREATE_DIR, name, id, renameMode }\r\n}\r\n\r\nexport function toggleDirRequest(path) {\r\n    return { type: ACTIONS.PL_TOGGLE_DIR_REQUEST, path }\r\n}\r\n\r\nexport function toggleDir(path) {\r\n    return { type: ACTIONS.PL_TOGGLE_DIR, path }\r\n}\r\n\r\n//-------------\r\n\r\nexport function createPlaylistRequest(name) {\r\n    return { type: ACTIONS.PL_CREATE_PLAYLIST_REQUEST, name }\r\n}\r\n\r\nexport function createPlaylist(name, id, renameMode, setCurrent) {\r\n    return { type: ACTIONS.PL_CREATE_PLAYLIST, name, id, renameMode, setCurrent }\r\n}\r\n\r\nexport function openPlaylistRequest(path) {\r\n    return { type: ACTIONS.PL_LOAD_PLAYLIST_REQUEST, path }\r\n}\r\n\r\nexport function openCurrentPlaylist() {\r\n    return { type: ACTIONS.PL_OPEN_CURRENT_PLAY_LIST }\r\n}\r\n\r\nexport function setPlaylistContent(playlistContent, path) {\r\n    return { type: ACTIONS.PL_SET_PLAYLIST_CONTENT, playlistContent, path }\r\n}\r\n\r\nexport function resetCurrentPlaylistContent(list) {\r\n    return { type: ACTIONS.PL_RESET_CURRENT_PLAYLIST_CONTETN, list }\r\n}\r\n//--------------\r\n\r\nexport function setSelection(path) {\r\n    return { type: ACTIONS.PL_SET_SELECTION, path }\r\n}\r\n\r\nexport function renameSelectedRequest(name) {\r\n    return { type: ACTIONS.PL_RENAME_SELECTED_REQUEST, name }\r\n}\r\n\r\nexport function renameSelected(name) {\r\n    return { type: ACTIONS.PL_RENAME_SELECTED, name }\r\n}\r\n\r\nexport function deleteSelectedRequest() {\r\n    return { type: ACTIONS.PL_DELETE_SELECTED_REQUEST }\r\n}\r\n\r\nexport function deleteSelected() {\r\n    return { type: ACTIONS.PL_DELETE_SELECTED }\r\n}\r\n\r\n//--------------\r\n\r\nexport function deleteTrackRequest(index, id) {\r\n    return { type: ACTIONS.PL_DELETE_TRACK_REQUEST, index, id }\r\n}\r\n\r\nexport function deleteTrack(index) {\r\n    return { type: ACTIONS.PL_DELETE_TRACK, index }\r\n}\r\n\r\n//--------------\r\n\r\nexport function updateTrackPositionRequest(tracksPositions){\r\n    return { type: ACTIONS.PL_UPDATE_TRACK_POSITION_REQUST, tracksPositions}\r\n}\r\n\r\nexport function swapTrackOnList(from, to) {\r\n    return { type: ACTIONS.PL_SWAP_TRACK_ON_CURRENT, from, to }\r\n}\r\n\r\n//----------------\r\n\r\nexport function pushTrackToListRequest(track, playlist) {\r\n    return { type: ACTIONS.PL_PUSH_TRACK_REQUEST, track, playlist }\r\n}\r\n\r\nexport function copyTrackToList(track, path) {\r\n    return { type: ACTIONS.PL_COPY_TRACK_TO_LIST, track, path }\r\n}\r\n\r\n//----------------\r\n\r\nexport function moveToRequest(pathFrom, pathTo) {\r\n    return { type: ACTIONS.PL_MOVE_TO_REQUEST, pathFrom, pathTo }\r\n}\r\n\r\nexport function moveTo(pathFrom, pathTo) {\r\n    return { type: ACTIONS.PL_MOVE_TO, pathFrom, pathTo }\r\n}"]},"metadata":{},"sourceType":"module"}