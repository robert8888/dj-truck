{"ast":null,"code":"import _objectSpread from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nexport var createBaseAudioContextConstructor = function createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, _decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) {\n  return (\n    /*#__PURE__*/\n    function (_minimalBaseAudioCont) {\n      _inherits(BaseAudioContext, _minimalBaseAudioCont);\n\n      function BaseAudioContext(_nativeContext, numberOfChannels) {\n        var _this;\n\n        _classCallCheck(this, BaseAudioContext);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseAudioContext).call(this, _nativeContext, numberOfChannels));\n        _this._nativeContext = _nativeContext;\n        _this._audioWorklet = addAudioWorkletModule === undefined ? undefined : {\n          addModule: function addModule(moduleURL, options) {\n            return addAudioWorkletModule(_assertThisInitialized(_this), moduleURL, options);\n          }\n        };\n        return _this;\n      }\n\n      _createClass(BaseAudioContext, [{\n        key: \"createAnalyser\",\n        value: function createAnalyser() {\n          return new analyserNodeConstructor(this);\n        }\n      }, {\n        key: \"createBiquadFilter\",\n        value: function createBiquadFilter() {\n          return new biquadFilterNodeConstructor(this);\n        }\n      }, {\n        key: \"createBuffer\",\n        value: function createBuffer(numberOfChannels, length, sampleRate) {\n          return new audioBufferConstructor({\n            length: length,\n            numberOfChannels: numberOfChannels,\n            sampleRate: sampleRate\n          });\n        }\n      }, {\n        key: \"createBufferSource\",\n        value: function createBufferSource() {\n          return new audioBufferSourceNodeConstructor(this);\n        }\n      }, {\n        key: \"createChannelMerger\",\n        value: function createChannelMerger() {\n          var numberOfInputs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;\n          return new channelMergerNodeConstructor(this, {\n            numberOfInputs: numberOfInputs\n          });\n        }\n      }, {\n        key: \"createChannelSplitter\",\n        value: function createChannelSplitter() {\n          var numberOfOutputs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;\n          return new channelSplitterNodeConstructor(this, {\n            numberOfOutputs: numberOfOutputs\n          });\n        }\n      }, {\n        key: \"createConstantSource\",\n        value: function createConstantSource() {\n          return new constantSourceNodeConstructor(this);\n        }\n      }, {\n        key: \"createConvolver\",\n        value: function createConvolver() {\n          return new convolverNodeConstructor(this);\n        }\n      }, {\n        key: \"createDelay\",\n        value: function createDelay() {\n          var maxDelayTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return new delayNodeConstructor(this, {\n            maxDelayTime: maxDelayTime\n          });\n        }\n      }, {\n        key: \"createDynamicsCompressor\",\n        value: function createDynamicsCompressor() {\n          return new dynamicsCompressorNodeConstructor(this);\n        }\n      }, {\n        key: \"createGain\",\n        value: function createGain() {\n          return new gainNodeConstructor(this);\n        }\n      }, {\n        key: \"createIIRFilter\",\n        value: function createIIRFilter(feedforward, feedback) {\n          return new iIRFilterNodeConstructor(this, {\n            feedback: feedback,\n            feedforward: feedforward\n          });\n        }\n      }, {\n        key: \"createOscillator\",\n        value: function createOscillator() {\n          return new oscillatorNodeConstructor(this);\n        }\n      }, {\n        key: \"createPanner\",\n        value: function createPanner() {\n          return new pannerNodeConstructor(this);\n        }\n      }, {\n        key: \"createPeriodicWave\",\n        value: function createPeriodicWave(real, imag) {\n          var constraints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n            disableNormalization: false\n          };\n          return new periodicWaveConstructor(this, _objectSpread({}, constraints, {\n            imag: imag,\n            real: real\n          }));\n        }\n      }, {\n        key: \"createStereoPanner\",\n        value: function createStereoPanner() {\n          return new stereoPannerNodeConstructor(this);\n        }\n      }, {\n        key: \"createWaveShaper\",\n        value: function createWaveShaper() {\n          return new waveShaperNodeConstructor(this);\n        }\n      }, {\n        key: \"decodeAudioData\",\n        value: function decodeAudioData(audioData, successCallback, errorCallback) {\n          return _decodeAudioData(this._nativeContext, audioData).then(function (audioBuffer) {\n            if (typeof successCallback === 'function') {\n              successCallback(audioBuffer);\n            }\n\n            return audioBuffer;\n          }).catch(function (err) {\n            if (typeof errorCallback === 'function') {\n              errorCallback(err);\n            }\n\n            throw err;\n          });\n        }\n      }, {\n        key: \"audioWorklet\",\n        get: function get() {\n          return this._audioWorklet;\n        }\n      }]);\n\n      return BaseAudioContext;\n    }(minimalBaseAudioContextConstructor)\n  );\n};","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js"],"names":["createBaseAudioContextConstructor","addAudioWorkletModule","analyserNodeConstructor","audioBufferConstructor","audioBufferSourceNodeConstructor","biquadFilterNodeConstructor","channelMergerNodeConstructor","channelSplitterNodeConstructor","constantSourceNodeConstructor","convolverNodeConstructor","decodeAudioData","delayNodeConstructor","dynamicsCompressorNodeConstructor","gainNodeConstructor","iIRFilterNodeConstructor","minimalBaseAudioContextConstructor","oscillatorNodeConstructor","pannerNodeConstructor","periodicWaveConstructor","stereoPannerNodeConstructor","waveShaperNodeConstructor","_nativeContext","numberOfChannels","_audioWorklet","undefined","addModule","moduleURL","options","length","sampleRate","numberOfInputs","numberOfOutputs","maxDelayTime","feedforward","feedback","real","imag","constraints","disableNormalization","audioData","successCallback","errorCallback","then","audioBuffer","catch","err"],"mappings":"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","sourcesContent":["export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet = (addAudioWorkletModule === undefined) ?\n                undefined :\n                {\n                    addModule: (moduleURL, options) => {\n                        return addAudioWorkletModule(this, moduleURL, options);\n                    }\n                };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData)\n                .then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            })\n                .catch((err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/base-audio-context-constructor.js.map"]},"metadata":{},"sourceType":"module"}