{"ast":null,"code":"import { ACTIONS, addRecordToFavorite, removeRecordFromFavorite } from \"../../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../../apis/apiProvider\";\nexport default function* requestAddToFavorite() {\n  console.log(\"handle request\");\n  const {\n    queries\n  } = getApi(\"UserAssets\");\n  const handelAdd = handel.bind(null, {\n    query: queries.addToFavoriteQl,\n    resultRoot: 'addToFavorite',\n    successAction: addRecordToFavorite,\n    failMessage: \"Can't add to favorite in database\"\n  });\n  const handelRemove = handel.bind(null, {\n    query: queries.removeFromFavoriteQl,\n    resultRoot: 'removeFavorite',\n    successAction: removeRecordFromFavorite,\n    failMessage: \"Can't remove record from favorite in database\"\n  });\n  yield takeEvery(ACTIONS.RECS_REQ_ADD_FAVORITE, handelAdd);\n  yield takeEvery(ACTIONS.RECS_REQ_RM_FAVORITE, handelRemove);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* handel({\n  query,\n  resultRoot,\n  successAction,\n  failMessage\n}, action) {\n  const token = yield select(getToken);\n\n  try {\n    const {\n      callQuery\n    } = getApi(\"UserAssets\"); // const query = queries.addToFavoriteQl;\n\n    const {\n      recordId\n    } = action;\n    console.log(recordId, query);\n    const response = yield callQuery(query, token, {\n      recordId\n    });\n    let result = response === null || response === void 0 ? void 0 : response.data; //[responseRoot];\n\n    console.log(result);\n    console.log('resposne', !response.errors);\n    console.log('result', result);\n    console.log('root', result[resultRoot]);\n\n    if (!response.errors && result && result[resultRoot]) {\n      yield put(successAction(recordId));\n    } else {\n      throw new Error(failMessage);\n    }\n  } catch (e) {\n    console.log(\"TO DO display error from saga !!! \" + e.message);\n  }\n} // addToFavoriteQl\n// removeFromFavoriteQl","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/records/favorite/reqFavorite.js"],"names":["ACTIONS","addRecordToFavorite","removeRecordFromFavorite","takeEvery","select","put","getApi","requestAddToFavorite","console","log","queries","handelAdd","handel","bind","query","addToFavoriteQl","resultRoot","successAction","failMessage","handelRemove","removeFromFavoriteQl","RECS_REQ_ADD_FAVORITE","RECS_REQ_RM_FAVORITE","getToken","state","user","token","action","callQuery","recordId","response","result","data","errors","Error","e","message"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,mBAAlB,EAAuCC,wBAAvC,QAAuE,kBAAvE;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAwC,oBAAxC;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAEA,eAAe,UAAUC,oBAAV,GAAiC;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAM;AAACC,IAAAA;AAAD,MAAaJ,MAAM,CAAC,YAAD,CAAzB;AACA,QAAMK,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAY,IAAZ,EAAkB;AAChCC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,eADiB;AAEhCC,IAAAA,UAAU,EAAE,eAFoB;AAGhCC,IAAAA,aAAa,EAAEhB,mBAHiB;AAIhCiB,IAAAA,WAAW,EAAE;AAJmB,GAAlB,CAAlB;AAOA,QAAMC,YAAY,GAAGP,MAAM,CAACC,IAAP,CAAY,IAAZ,EAAkB;AACnCC,IAAAA,KAAK,EAAEJ,OAAO,CAACU,oBADoB;AAEnCJ,IAAAA,UAAU,EAAE,gBAFuB;AAGnCC,IAAAA,aAAa,EAAEf,wBAHoB;AAInCgB,IAAAA,WAAW,EAAE;AAJsB,GAAlB,CAArB;AAOA,QAAMf,SAAS,CAACH,OAAO,CAACqB,qBAAT,EAAgCV,SAAhC,CAAf;AACA,QAAMR,SAAS,CAACH,OAAO,CAACsB,oBAAT,EAA+BH,YAA/B,CAAf;AAGH;;AAED,MAAMI,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUd,MAAV,CAAiB;AACbE,EAAAA,KADa;AACNE,EAAAA,UADM;AACMC,EAAAA,aADN;AACqBC,EAAAA;AADrB,CAAjB,EAEGS,MAFH,EAEW;AACP,QAAMD,KAAK,GAAG,MAAMtB,MAAM,CAACmB,QAAD,CAA1B;;AAEA,MAAI;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAgBtB,MAAM,CAAC,YAAD,CAA5B,CADA,CAGD;;AACC,UAAM;AAACuB,MAAAA;AAAD,QAAaF,MAAnB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,QAAZ,EAAsBf,KAAtB;AACA,UAAMgB,QAAQ,GAAG,MAAMF,SAAS,CAACd,KAAD,EAAQY,KAAR,EAAe;AAACG,MAAAA;AAAD,KAAf,CAAhC;AACA,QAAIE,MAAM,GAAGD,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,IAAvB,CAPA,CAO2B;;AAC3BxB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,MAAZ;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,CAACqB,QAAQ,CAACG,MAAlC;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBsB,MAAtB;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBsB,MAAM,CAACf,UAAD,CAA1B;;AACA,QAAI,CAACc,QAAQ,CAACG,MAAV,IAAoBF,MAApB,IAA8BA,MAAM,CAACf,UAAD,CAAxC,EAAuD;AACnD,YAAMX,GAAG,CAACY,aAAa,CAACY,QAAD,CAAd,CAAT;AACH,KAFD,MAEO;AACH,YAAM,IAAIK,KAAJ,CAAUhB,WAAV,CAAN;AACH;AACJ,GAjBD,CAiBE,OAAOiB,CAAP,EAAU;AACR3B,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuC0B,CAAC,CAACC,OAArD;AACH;AAIJ,C,CACD;AACA","sourcesContent":["import { ACTIONS, addRecordToFavorite, removeRecordFromFavorite } from \"../../../actions\";\r\nimport { takeEvery, select, put, } from \"redux-saga/effects\";\r\nimport { getApi } from \"./../../../apis/apiProvider\";\r\n\r\nexport default function* requestAddToFavorite() {\r\n    console.log(\"handle request\")\r\n    const {queries } = getApi(\"UserAssets\");\r\n    const handelAdd = handel.bind(null, {\r\n        query: queries.addToFavoriteQl,\r\n        resultRoot: 'addToFavorite',\r\n        successAction: addRecordToFavorite,\r\n        failMessage: \"Can't add to favorite in database\" \r\n    })\r\n    \r\n    const handelRemove = handel.bind(null, {\r\n        query: queries.removeFromFavoriteQl,\r\n        resultRoot: 'removeFavorite',\r\n        successAction: removeRecordFromFavorite,\r\n        failMessage: \"Can't remove record from favorite in database\"\r\n    })\r\n\r\n    yield takeEvery(ACTIONS.RECS_REQ_ADD_FAVORITE, handelAdd)\r\n    yield takeEvery(ACTIONS.RECS_REQ_RM_FAVORITE, handelRemove);\r\n\r\n\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nfunction* handel({\r\n    query, resultRoot, successAction, failMessage\r\n}, action) {\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        const { callQuery } = getApi(\"UserAssets\");\r\n        \r\n       // const query = queries.addToFavoriteQl;\r\n        const {recordId} = action;\r\n        console.log(recordId, query)\r\n        const response = yield callQuery(query, token, {recordId});\r\n        let result = response?.data//[responseRoot];\r\n        console.log(result)\r\n        console.log('resposne', !response.errors);\r\n        console.log('result', result);\r\n        console.log('root', result[resultRoot])\r\n        if (!response.errors && result && result[resultRoot] ) {\r\n            yield put(successAction(recordId))\r\n        } else {\r\n            throw new Error(failMessage)\r\n        }\r\n    } catch (e) {\r\n        console.log(\"TO DO display error from saga !!! \" + e.message)\r\n    }\r\n\r\n    \r\n\r\n}\r\n// addToFavoriteQl\r\n// removeFromFavoriteQl"]},"metadata":{},"sourceType":"module"}