{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\TrackInfo\\\\TrackInfo.js\";\nimport React, { useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./track-info.scss\";\nimport track_thumbnail from \"./../../../assets/img/track_thumbnail.png\";\nimport { calcBmp } from \"./../../../utils/bmp/converter.js\";\nimport { stripHtml } from \"./../../../utils/html/htmlHelper.js\";\nimport { formater } from \"./../../../utils/time/timeFromater\";\n\nconst TrackInfo = props => {\n  var _track$details$thumbn, _track$details$thumbn2;\n\n  let track = useMemo(() => ({ ...props.track\n  }), [props.track]);\n  console.log(track);\n  return React.createElement(\"div\", {\n    className: \"track-info \" + \"deck-\" + props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"track-info-thumbnail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"track thumbnails\",\n    src: ((_track$details$thumbn = track.details.thumbnail) === null || _track$details$thumbn === void 0 ? void 0 : (_track$details$thumbn2 = _track$details$thumbn.default) === null || _track$details$thumbn2 === void 0 ? void 0 : _track$details$thumbn2.url) || track_thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"track-info-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"track-info-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, stripHtml(track.details.title))), React.createElement(\"div\", {\n    className: \"track-info-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"time-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, track.state.timeLeft || formater.ytToStr(track.details.duration)), React.createElement(\"span\", {\n    className: \"track-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, formater.ytToStr(track.details.duration))), React.createElement(\"div\", {\n    className: \"track-bmp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"track-bmp-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, calcBmp(track.details.bmp, track.state.pitch)), React.createElement(\"span\", {\n    className: \"tarck-bmp-pitch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, track.state.pitch + \"%\"), React.createElement(\"span\", {\n    className: \"track-bmp-init\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, track.details.bmp)));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  track: {\n    details: state.console.deck[ownProps.name].track,\n    state: state.console.deck[ownProps.name].state\n  }\n});\n\nexport default connect(mapStateToProps)(TrackInfo);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/TrackInfo/TrackInfo.js"],"names":["React","useMemo","connect","track_thumbnail","calcBmp","stripHtml","formater","TrackInfo","props","track","console","log","name","details","thumbnail","default","url","title","state","timeLeft","ytToStr","duration","bmp","pitch","mapStateToProps","ownProps","deck"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mBAAP;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AAEA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,QAAT,QAAyB,oCAAzB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,MAAIC,KAAK,GAAGR,OAAO,CAAC,OAAK,EACrB,GAAGO,KAAK,CAACC;AADY,GAAL,CAAD,EAEf,CAACD,KAAK,CAACC,KAAP,CAFe,CAAnB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACI;AAAK,IAAA,SAAS,EAAE,gBAAgB,OAAhB,GAA0BD,KAAK,CAACI,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,GAAG,EAAC,kBADJ;AAEA,IAAA,GAAG,EAAE,0BAAAH,KAAK,CAACI,OAAN,CAAcC,SAAd,0GAAyBC,OAAzB,kFAAkCC,GAAlC,KAAyCb,eAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACME,SAAS,CAACI,KAAK,CAACI,OAAN,CAAcI,KAAf,CADf,CADJ,CANJ,EAWI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMR,KAAK,CAACS,KAAN,CAAYC,QAAZ,IAAwBb,QAAQ,CAACc,OAAT,CAAiBX,KAAK,CAACI,OAAN,CAAcQ,QAA/B,CAD9B,CADJ,EAII;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMf,QAAQ,CAACc,OAAT,CAAiBX,KAAK,CAACI,OAAN,CAAcQ,QAA/B,CADN,CAJJ,CAXJ,EAmBI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMjB,OAAO,CAACK,KAAK,CAACI,OAAN,CAAcS,GAAf,EAAoBb,KAAK,CAACS,KAAN,CAAYK,KAAhC,CADb,CADJ,EAII;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMd,KAAK,CAACS,KAAN,CAAYK,KAAZ,GAAoB,GAD1B,CAJJ,EAOI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMd,KAAK,CAACI,OAAN,CAAcS,GADpB,CAPJ,CAnBJ,CADJ;AAiCH,CAvCD;;AAyCA,MAAME,eAAe,GAAG,CAACN,KAAD,EAAQO,QAAR,MAAsB;AAC1ChB,EAAAA,KAAK,EAAG;AACJI,IAAAA,OAAO,EAAGK,KAAK,CAACR,OAAN,CAAcgB,IAAd,CAAmBD,QAAQ,CAACb,IAA5B,EAAkCH,KADxC;AAEJS,IAAAA,KAAK,EAAGA,KAAK,CAACR,OAAN,CAAcgB,IAAd,CAAmBD,QAAQ,CAACb,IAA5B,EAAkCM;AAFtC;AADkC,CAAtB,CAAxB;;AASA,eAAehB,OAAO,CAACsB,eAAD,CAAP,CAAyBjB,SAAzB,CAAf","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./track-info.scss\";\r\nimport track_thumbnail from \"./../../../assets/img/track_thumbnail.png\";\r\n\r\nimport { calcBmp } from \"./../../../utils/bmp/converter.js\";\r\nimport { stripHtml } from \"./../../../utils/html/htmlHelper.js\";\r\nimport { formater } from \"./../../../utils/time/timeFromater\"\r\n\r\nconst TrackInfo = props => {\r\n    let track = useMemo(()=>({\r\n        ...props.track\r\n    }), [props.track]);\r\n\r\n    console.log(track)\r\n    return (\r\n        <div className={\"track-info \" + \"deck-\" + props.name}>\r\n            <div className=\"track-info-thumbnail\">\r\n                <img \r\n                alt=\"track thumbnails\"\r\n                src={track.details.thumbnail?.default?.url || track_thumbnail}></img>\r\n            </div>\r\n            <div className=\"track-info-description\">\r\n                <span className=\"track-info-title\">\r\n                    { stripHtml(track.details.title)}\r\n                </span>\r\n            </div>\r\n            <div className=\"track-info-time\">\r\n                <span className=\"time-left\">\r\n                    { track.state.timeLeft || formater.ytToStr(track.details.duration) }\r\n                </span>\r\n                <span className=\"track-duration\">\r\n                    { formater.ytToStr(track.details.duration) }\r\n                </span>\r\n            </div>\r\n            <div className=\"track-bmp\">\r\n                <span className=\"track-bmp-current\">\r\n                    { calcBmp(track.details.bmp, track.state.pitch) }\r\n                </span>\r\n                <span className=\"tarck-bmp-pitch\">\r\n                    { track.state.pitch + \"%\"}\r\n                </span>\r\n                <span className=\"track-bmp-init\">\r\n                    { track.details.bmp }\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    track : {\r\n        details : state.console.deck[ownProps.name].track,\r\n        state : state.console.deck[ownProps.name].state,\r\n    }\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(TrackInfo);"]},"metadata":{},"sourceType":"module"}