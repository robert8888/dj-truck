{"ast":null,"code":"import { ACTIONS } from \"../actions\";\nimport { setUserProfileWithToken } from \"./../actions\";\nimport { put, call, select, takeEvery } from 'redux-saga/effects';\nimport { getToken } from \"./../auth0/getToken\";\nimport { getApi } from \"./../apis/apiProvider\";\n\nconst getLogged = state => state.user.logged;\n\nexport default function* watcher() {\n  //action dispatched in auth0/react-auth0-spa.js\n  yield takeEvery(ACTIONS.SET_USER_PROFILE, setUserProfile);\n}\n\nfunction* setUserProfile(action) {\n  var _result$data;\n\n  const logged = yield select(getLogged);\n\n  if (logged) {\n    return;\n  }\n\n  const {\n    callQuery,\n    queries\n  } = getApi(\"UserAssets\");\n  const query = queries.myIdQl;\n  const token = yield call(getToken);\n  const result = yield callQuery(query, token);\n  const user = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.me;\n  console.log(user);\n\n  if (!result.errors && user) {\n    //   action.user.dbId = result?.data?.me?.id;\n    action.user = {\n      dbId: user.id,\n      ...user\n    };\n  }\n\n  yield put(setUserProfileWithToken(action.user, token));\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/setUserSaga.js"],"names":["ACTIONS","setUserProfileWithToken","put","call","select","takeEvery","getToken","getApi","getLogged","state","user","logged","watcher","SET_USER_PROFILE","setUserProfile","action","callQuery","queries","query","myIdQl","token","result","data","me","console","log","errors","dbId","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,uBAAT,QAAwC,cAAxC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,oBAA7C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,MAAtC;;AAEA,eAAe,UAAUC,OAAV,GAAoB;AAC/B;AACA,QAAMP,SAAS,CAACL,OAAO,CAACa,gBAAT,EAA2BC,cAA3B,CAAf;AACH;;AAED,UAAUA,cAAV,CAAyBC,MAAzB,EAAiC;AAAA;;AAC7B,QAAMJ,MAAM,GAAG,MAAMP,MAAM,CAACI,SAAD,CAA3B;;AACA,MAAIG,MAAJ,EAAY;AACR;AACH;;AACD,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBV,MAAM,CAAC,YAAD,CAArC;AACA,QAAMW,KAAK,GAAGD,OAAO,CAACE,MAAtB;AACA,QAAMC,KAAK,GAAG,MAAMjB,IAAI,CAACG,QAAD,CAAxB;AACA,QAAMe,MAAM,GAAG,MAAML,SAAS,CAACE,KAAD,EAAQE,KAAR,CAA9B;AAEA,QAAMV,IAAI,GAAGW,MAAH,aAAGA,MAAH,uCAAGA,MAAM,CAAEC,IAAX,iDAAG,aAAcC,EAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;;AACA,MAAG,CAACW,MAAM,CAACK,MAAR,IAAkBhB,IAArB,EAA0B;AACzB;AACGK,IAAAA,MAAM,CAACL,IAAP,GAAc;AACViB,MAAAA,IAAI,EAAGjB,IAAI,CAACkB,EADF;AAEV,SAAGlB;AAFO,KAAd;AAIH;;AAED,QAAMR,GAAG,CAACD,uBAAuB,CAACc,MAAM,CAACL,IAAR,EAAcU,KAAd,CAAxB,CAAT;AACH","sourcesContent":["import { ACTIONS } from \"../actions\";\r\nimport { setUserProfileWithToken } from \"./../actions\";\r\nimport { put, call, select, takeEvery } from 'redux-saga/effects';\r\nimport { getToken } from \"./../auth0/getToken\";\r\nimport { getApi } from \"./../apis/apiProvider\";\r\n\r\nconst getLogged = state => state.user.logged;\r\n\r\nexport default function* watcher() {\r\n    //action dispatched in auth0/react-auth0-spa.js\r\n    yield takeEvery(ACTIONS.SET_USER_PROFILE, setUserProfile);\r\n}\r\n\r\nfunction* setUserProfile(action) {\r\n    const logged = yield select(getLogged);\r\n    if (logged) {\r\n        return\r\n    }\r\n    const { callQuery, queries } = getApi(\"UserAssets\");\r\n    const query = queries.myIdQl;\r\n    const token = yield call(getToken);\r\n    const result = yield callQuery(query, token);\r\n    \r\n    const user = result?.data?.me;\r\n    console.log(user)\r\n    if(!result.errors && user){\r\n     //   action.user.dbId = result?.data?.me?.id;\r\n        action.user = {\r\n            dbId : user.id,\r\n            ...user,\r\n        }\r\n    }\r\n\r\n    yield put(setUserProfileWithToken(action.user, token))\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}