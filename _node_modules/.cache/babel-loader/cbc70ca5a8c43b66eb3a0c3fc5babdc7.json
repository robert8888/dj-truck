{"ast":null,"code":"import{produce}from\"imer\";import{ACTIONS}from\"./../../actions\";import{LOG_TYPES}from\"./../../utils/logger/logger\";var initState={// shape of logs:\n// logs:[{\n//     createdAt: \"timestamp\",\n//     type: \"log/ debug / error\",\n//     path: [],\n//     message: {\n//         public: \"For user view, in logbox component\",\n//         protected: \"Only for administrator/ developer view\",\n//     },\n//     error\n// }],\n//\nlogs:[],// last: {\n//     message: \"Hello this is error message\",\n//     type: LOG_TYPES.ERROR,\n//     path: ['controler', 'conosle', 'deck', 'knob']\n// }\nlast:null};export default function loggerReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;// console.log(action)\nswitch(action.type){case ACTIONS.LOG_PUSH:{var log=action.log;if(!log){return state;}log.createdAt=new Date().getTime();return produce(state,function(draftState){var logs=state.logs;logs.push(log);draftState.logs=logs;if(log.message.public){draftState.last={message:log.message.public,type:log.type};}if(log.path&&(log.type===LOG_TYPES.DEBUG||log.type===LOG_TYPES.WARNING)){draftState.last.path=log.path;}});}default:return state;}}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/reducers/logger/loggerReducer.js"],"names":["produce","ACTIONS","LOG_TYPES","initState","logs","last","loggerReducer","state","action","type","LOG_PUSH","log","createdAt","Date","getTime","draftState","push","message","public","path","DEBUG","WARNING"],"mappings":"AAAA,OAASA,OAAT,KAAwB,MAAxB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,SAAT,KAA0B,6BAA1B,CAEA,GAAMC,CAAAA,SAAS,CAAG,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAI,CAAE,EAbQ,CAcd;AACA;AACA;AACA;AACA;AACAC,IAAI,CAAE,IAnBQ,CAAlB,CAsBA,cAAe,SAASC,CAAAA,aAAT,EAAkD,IAA3BC,CAAAA,KAA2B,2DAAnBJ,SAAmB,IAARK,CAAAA,MAAQ,2CAC7D;AACA,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKR,CAAAA,OAAO,CAACS,QAAb,CAAuB,IACXC,CAAAA,GADW,CACHH,MADG,CACXG,GADW,CAEnB,GAAI,CAACA,GAAL,CAAU,CACN,MAAOJ,CAAAA,KAAP,CACH,CACDI,GAAG,CAACC,SAAJ,CAAiB,GAAIC,CAAAA,IAAJ,EAAD,CAAaC,OAAb,EAAhB,CAEA,MAAOd,CAAAA,OAAO,CAACO,KAAD,CAAQ,SAAAQ,UAAU,CAAI,CAChC,GAAMX,CAAAA,IAAI,CAAGG,KAAK,CAACH,IAAnB,CACAA,IAAI,CAACY,IAAL,CAAUL,GAAV,EACAI,UAAU,CAACX,IAAX,CAAkBA,IAAlB,CAEA,GAAIO,GAAG,CAACM,OAAJ,CAAYC,MAAhB,CAAwB,CACpBH,UAAU,CAACV,IAAX,CAAkB,CACdY,OAAO,CAAEN,GAAG,CAACM,OAAJ,CAAYC,MADP,CAEdT,IAAI,CAAEE,GAAG,CAACF,IAFI,CAAlB,CAIH,CACD,GAAIE,GAAG,CAACQ,IAAJ,GACAR,GAAG,CAACF,IAAJ,GAAaP,SAAS,CAACkB,KAAvB,EACAT,GAAG,CAACF,IAAJ,GAAaP,SAAS,CAACmB,OAFvB,CAAJ,CAEqC,CACjCN,UAAU,CAACV,IAAX,CAAgBc,IAAhB,CAAuBR,GAAG,CAACQ,IAA3B,CACH,CACJ,CAhBa,CAAd,CAiBH,CAED,QAAS,MAAOZ,CAAAA,KAAP,CA3Bb,CA6BH","sourcesContent":["import { produce } from \"imer\";\r\nimport { ACTIONS } from \"./../../actions\";\r\nimport { LOG_TYPES } from \"./../../utils/logger/logger\";\r\n\r\nconst initState = {\r\n    // shape of logs:\r\n    // logs:[{\r\n    //     createdAt: \"timestamp\",\r\n    //     type: \"log/ debug / error\",\r\n    //     path: [],\r\n    //     message: {\r\n    //         public: \"For user view, in logbox component\",\r\n    //         protected: \"Only for administrator/ developer view\",\r\n    //     },\r\n    //     error\r\n    // }],\r\n    //\r\n    logs: [],\r\n    // last: {\r\n    //     message: \"Hello this is error message\",\r\n    //     type: LOG_TYPES.ERROR,\r\n    //     path: ['controler', 'conosle', 'deck', 'knob']\r\n    // }\r\n    last: null,\r\n}\r\n\r\nexport default function loggerReducer(state = initState, action) {\r\n    // console.log(action)\r\n    switch (action.type) {\r\n        case ACTIONS.LOG_PUSH: {\r\n            const { log } = action;\r\n            if (!log) {\r\n                return state;\r\n            }\r\n            log.createdAt = (new Date()).getTime();\r\n\r\n            return produce(state, draftState => {\r\n                const logs = state.logs;\r\n                logs.push(log);\r\n                draftState.logs = logs;\r\n\r\n                if (log.message.public) {\r\n                    draftState.last = {\r\n                        message: log.message.public,\r\n                        type: log.type,\r\n                    }\r\n                }\r\n                if (log.path &&\r\n                   (log.type === LOG_TYPES.DEBUG ||\r\n                    log.type === LOG_TYPES.WARNING)) {\r\n                    draftState.last.path = log.path;\r\n                }\r\n            })\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}