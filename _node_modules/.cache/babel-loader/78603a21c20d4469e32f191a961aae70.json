{"ast":null,"code":"//to do implement rquest record \nimport { ACTIONS, setRecData } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nexport default function* requestUserRecord() {\n  console.log(\"handle request\");\n  yield takeEvery(ACTIONS.RECS_REQ_DATA, handel);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* handel(action) {\n  const token = yield select(getToken);\n\n  try {\n    const {\n      callQuery,\n      queries\n    } = getApi(\"UserAssets\"); // const query = queries.recordQl(action.recId);\n    // const result = yield callQuery(query, token);\n    // console.log(result)\n    // const recordData = result?.data?.record;\n\n    if (!result.errors && recordData) {\n      yield put(setRecData(recordData));\n    } else {\n      throw new Error(\"Can't load record data from database\");\n    }\n  } catch (e) {// yield put(recReqFails(e.message))\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/records/reqRecord.js"],"names":["ACTIONS","setRecData","takeEvery","select","put","getApi","requestUserRecord","console","log","RECS_REQ_DATA","handel","getToken","state","user","token","action","callQuery","queries","result","errors","recordData","Error","e"],"mappings":"AAAA;AACA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,eAApC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAwC,oBAAxC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,eAAe,UAAUC,iBAAV,GAA8B;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAMN,SAAS,CAACF,OAAO,CAACS,aAAT,EAAwBC,MAAxB,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUJ,MAAV,CAAiBK,MAAjB,EAAyB;AACrB,QAAMD,KAAK,GAAG,MAAMX,MAAM,CAACQ,QAAD,CAA1B;;AAEA,MAAI;AACA,UAAM;AAAEK,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyBZ,MAAM,CAAC,YAAD,CAArC,CADA,CAGA;AACA;AACA;AACA;;AAEA,QAAI,CAACa,MAAM,CAACC,MAAR,IAAkBC,UAAtB,EAAkC;AAC9B,YAAMhB,GAAG,CAACH,UAAU,CAACmB,UAAD,CAAX,CAAT;AACH,KAFD,MAEO;AACH,YAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;AACJ,GAbD,CAaE,OAAOC,CAAP,EAAU,CACR;AACH;AACJ","sourcesContent":["//to do implement rquest record \r\nimport { ACTIONS, setRecData } from \"../../actions\";\r\nimport { takeEvery, select, put, } from \"redux-saga/effects\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n\r\nexport default function* requestUserRecord() {\r\n    console.log(\"handle request\")\r\n    yield takeEvery(ACTIONS.RECS_REQ_DATA, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n\r\n    try {\r\n        const { callQuery, queries } = getApi(\"UserAssets\");\r\n\r\n        // const query = queries.recordQl(action.recId);\r\n        // const result = yield callQuery(query, token);\r\n        // console.log(result)\r\n        // const recordData = result?.data?.record;\r\n        \r\n        if (!result.errors && recordData) {\r\n            yield put(setRecData(recordData))\r\n        } else {\r\n            throw new Error(\"Can't load record data from database\")\r\n        }\r\n    } catch (e) {\r\n        // yield put(recReqFails(e.message))\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}