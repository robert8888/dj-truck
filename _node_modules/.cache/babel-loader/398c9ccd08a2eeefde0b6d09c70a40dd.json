{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Carousel-slider\\\\Slider.js\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport UUID from \"uuidjs\";\nimport style from \"./slider.scss\";\n\nconst rmLast = (arr, direction) => {\n  let last = arr.length - 1;\n  let _arr = [...arr];\n\n  while (last >= 0) {\n    if (direction === \"next\" && arr[last] < 0) break;\n    if (direction === \"prev\" && arr[last] > 0) break;\n\n    _arr.pop();\n\n    last--;\n  }\n\n  return _arr;\n};\n\nconst sumLastSameDirection = arr => {\n  let _arr = [...arr];\n\n  if (arr[arr.length - 1] * arr[arr.length - 2] > 0) {\n    let last = _arr.pop();\n\n    let prev = _arr.pop();\n\n    _arr.push(last + prev);\n  }\n\n  return _arr;\n};\n\nconst Slider = ({\n  slides: initSlides,\n  next: nextHandle,\n  prev: prevHandle,\n  minSlideWidth = style.minSlideWidth,\n  onStepDragging = false\n}) => {\n  const slider = useRef();\n  const [active, setActive] = useState(false);\n  const [overLapRatio] = useState(5);\n  const [animationDuration] = useState(parseInt(style.animatioDuration) * 1000);\n  const [_containerRect, setContainerRect] = useState(null);\n  const [slideWidth, setSlideWidth] = useState(null);\n  const [visibleSlides, setVisibleSlides] = useState(null);\n  const [slides, setSlides] =\n  /* useState(initSlides);*/\n  useState([...initSlides, ...initSlides, ...initSlides]);\n  const [actionQueue, setActionQueue] = useState([]);\n  const [isTransitionRunning, setTransitionRunning] = useState(false);\n  const transitionActive = useRef();\n  const shift = useRef();\n  const balancedShift = useRef();\n  const translate = useRef();\n  const containerRect = useCallback(() => {\n    if (!slider.current) return 0;\n    let rect = _containerRect;\n\n    if (!rect) {\n      rect = slider.current.parentElement.getBoundingClientRect();\n      setContainerRect(rect);\n    }\n\n    return rect;\n  }, [_containerRect, setContainerRect]);\n  const updateTransition = useCallback(value => {\n    if (!slider.current) return;\n\n    if (value) {\n      slider.current.classList.add('slider-transition--active');\n      transitionActive.current = true;\n    } else {\n      slider.current.classList.remove('slider-transition--active');\n      transitionActive.current = false;\n      setTransitionRunning(false);\n    }\n  }, [slider, transitionActive, setTransitionRunning]);\n  const updateTranslate = useCallback(target => {\n    if (!slider.current) return;\n    slider.current.style.transform = `translateX(${target}px)`;\n    translate.current = target;\n  }, [slider, translate]);\n  const updatePosition = useCallback(position => {\n    if (!slider.current || isNaN(position) || !active) return;\n    updateTranslate(position * slideWidth);\n    transitionActive.current && setTransitionRunning(true);\n  }, [slider, slideWidth, setTransitionRunning, updateTranslate, transitionActive, active]);\n  useEffect(() => {\n    console.log(\"in visible\", visibleSlides, initSlides.length);\n    if (!visibleSlides || visibleSlides > initSlides.length) return;\n    setActive(true);\n    let slides = [].concat(Array(overLapRatio * 2 + 1).fill(1).map(() => initSlides)).flat();\n    setSlides(slides);\n  }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio]);\n  useEffect(() => {\n    if (!containerRect || !minSlideWidth || !slider.current) return;\n    const containerWidth = containerRect().width;\n    const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\n    setVisibleSlides(visibleSlides);\n  }, [containerRect, minSlideWidth, slider, setVisibleSlides]);\n  useEffect(() => {\n    if (!slides) return;\n    shift.current = -initSlides.length;\n    balancedShift.current = shift.current;\n    updatePosition(shift.current);\n  }, [slideWidth, updatePosition, shift, balancedShift, initSlides, slides]);\n  useEffect(() => {\n    const resetSize = () => setContainerRect(null);\n\n    window.addEventListener(\"resize\", resetSize);\n    return () => window.removeEventListener(\"resize\", resetSize);\n  }, [setContainerRect]);\n  useEffect(() => {\n    if (!visibleSlides || !containerRect) return;\n    const slideWidth = containerRect().width / visibleSlides;\n    setSlideWidth(slideWidth);\n    slider.current.style.width = slideWidth * slides.length + \"px\";\n  }, [containerRect, visibleSlides, slides]);\n  const appendSlides = useCallback(amount => {\n    console.log(\"append\", amount);\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.shift();\n\n        _slides.push(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const prependSlides = useCallback(amount => {\n    console.log(\"prepend\", amount);\n    setSlides(slides => {\n      const _slides = [...slides];\n\n      for (let i = 0; i < amount; i++) {\n        const slide = _slides.pop();\n\n        _slides.unshift(slide);\n      }\n\n      return _slides;\n    });\n  }, [setSlides]);\n  const balance = useCallback(() => {\n    const diff = balancedShift.current - shift.current;\n\n    if (!diff) {\n      return;\n    }\n\n    diff < 0 ? prependSlides(Math.abs(diff)) : appendSlides(diff);\n    updateTransition(false);\n    shift.current = balancedShift.current;\n    updatePosition(shift.current);\n  }, [shift, balancedShift, prependSlides, appendSlides, updateTransition, updatePosition]);\n  const inAction = useRef();\n  const action = useCallback(() => {\n    if (!actionQueue.length) {\n      return;\n    }\n\n    inAction.current = true;\n    const queue = [...actionQueue];\n    const direction = queue.shift();\n    console.log(\"doing - \", direction);\n    updateTransition(false);\n    direction > 0 ? appendSlides(direction) : prependSlides(Math.abs(direction));\n    updatePosition(shift.current + direction);\n    setTimeout(() => {\n      updateTransition(true);\n      updatePosition(shift.current);\n      setTimeout(() => {\n        setTransitionRunning(false);\n        inAction.current = false;\n      }, animationDuration);\n    }, 0);\n    setActionQueue(queue);\n  }, [updateTransition, setTransitionRunning, updatePosition, actionQueue, setActionQueue, balance, animationDuration, appendSlides, prependSlides]);\n  useEffect(() => {\n    console.log(\"call action\", isTransitionRunning);\n\n    if (!isTransitionRunning && !inAction.current) {\n      action();\n    }\n  }, [isTransitionRunning, action, inAction]);\n  const next = useCallback(() => {\n    setActionQueue(queue => {\n      const _queue = rmLast(queue, \"prev\");\n\n      return sumLastSameDirection([..._queue, 1]);\n    });\n  }, [setActionQueue]);\n  useEffect(() => nextHandle && nextHandle(next), [next, nextHandle]);\n  const prev = useCallback(() => {\n    setActionQueue(queue => {\n      const _queue = rmLast(queue, \"next\");\n\n      return sumLastSameDirection([..._queue, -1]);\n    });\n  }, [setActionQueue]);\n  useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle]);\n  const endDraging = useCallback(() => {\n    let next = Math.round(translate.current / slideWidth);\n\n    if (onStepDragging) {\n      next = next > shift.current ? shift.current + 1 : shift.current - 1;\n    }\n\n    shift.current = next;\n    updatePosition(shift.current);\n    setTimeout(() => {\n      setTransitionRunning(false);\n      balance();\n    }, animationDuration);\n  }, [translate, updateTranslate, shift, slideWidth, setTransitionRunning]);\n  const mouseMove = useCallback((shiftX, event) => {\n    const clientX = event.type === \"touchmove\" ? event.touches[0].clientX : event.clientX;\n    updateTranslate(clientX - shiftX);\n  }, [updateTranslate]);\n  const mouseDown = useCallback(event => {\n    const sliderContainer = event.target.closest(\".carousel-slider-container\");\n    if (!sliderContainer) return;\n    const rect = sliderContainer.getBoundingClientRect();\n    const clientX = event.type === \"touchstart\" ? event.touches[0].clientX : event.clientX;\n    const shiftX = clientX - rect.left - shift.current * slideWidth;\n    const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\n\n    const mouseUp = () => {\n      window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\n      window.removeEventListener(\"mouseup\", mouseUp);\n      window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\n      window.removeEventListener(\"touchend\", mouseUp);\n      updateTransition(true);\n      endDraging();\n    };\n\n    window.addEventListener(\"mousemove\", mouseMoveWithArgs);\n    window.addEventListener(\"touchmove\", mouseMoveWithArgs);\n    window.addEventListener(\"mouseup\", mouseUp);\n    window.addEventListener(\"touchend\", mouseUp);\n    updateTransition(false);\n  }, [updateTransition, shift, slideWidth, endDraging]);\n  return React.createElement(\"div\", {\n    className: \"carousel-slider-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"carousel-slider\",\n    ref: slider,\n    onMouseDown: mouseDown,\n    onTouchStart: mouseDown,\n    onDrag: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, slides && slides instanceof Array && slides.map(slide => React.createElement(\"li\", {\n    key: UUID.genV1(),\n    className: \"slide\",\n    style: {\n      width: minSlideWidth || \"initial\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, slide))));\n};\n\nexport default Slider;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Carousel-slider/Slider.js"],"names":["React","useCallback","useEffect","useRef","useState","UUID","style","rmLast","arr","direction","last","length","_arr","pop","sumLastSameDirection","prev","push","Slider","slides","initSlides","next","nextHandle","prevHandle","minSlideWidth","onStepDragging","slider","active","setActive","overLapRatio","animationDuration","parseInt","animatioDuration","_containerRect","setContainerRect","slideWidth","setSlideWidth","visibleSlides","setVisibleSlides","setSlides","actionQueue","setActionQueue","isTransitionRunning","setTransitionRunning","transitionActive","shift","balancedShift","translate","containerRect","current","rect","parentElement","getBoundingClientRect","updateTransition","value","classList","add","remove","updateTranslate","target","transform","updatePosition","position","isNaN","console","log","concat","Array","fill","map","flat","containerWidth","width","resetSize","window","addEventListener","removeEventListener","appendSlides","amount","_slides","i","slide","prependSlides","unshift","balance","diff","Math","abs","inAction","action","queue","setTimeout","_queue","endDraging","round","mouseMove","shiftX","event","clientX","type","touches","mouseDown","sliderContainer","closest","left","mouseMoveWithArgs","bind","mouseUp","e","preventDefault","genV1"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport UUID from \"uuidjs\";\r\nimport style from \"./slider.scss\"\r\n\r\nconst rmLast = (arr, direction) => {\r\n    let last = arr.length - 1;\r\n    let _arr = [...arr];\r\n    while (last >= 0) {\r\n        if (direction === \"next\" && arr[last] < 0) break;\r\n        if (direction === \"prev\" && arr[last] > 0) break;\r\n        _arr.pop();\r\n        last--;\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst sumLastSameDirection = arr => {\r\n    let _arr = [...arr];\r\n    if (arr[arr.length - 1] * arr[arr.length - 2] > 0) {\r\n        let last = _arr.pop();\r\n        let prev = _arr.pop();\r\n        _arr.push(last + prev);\r\n    }\r\n    return _arr;\r\n}\r\n\r\nconst Slider = ({\r\n    slides: initSlides,\r\n    next: nextHandle,\r\n    prev: prevHandle,\r\n    minSlideWidth = style.minSlideWidth,\r\n    onStepDragging = false\r\n}) => {\r\n    const slider = useRef();\r\n    const [active, setActive] = useState(false);\r\n    const [overLapRatio] = useState(5);\r\n    const [animationDuration] = useState(parseInt(style.animatioDuration) * 1000);\r\n    const [_containerRect, setContainerRect] = useState(null);\r\n    const [slideWidth, setSlideWidth] = useState(null);\r\n    const [visibleSlides, setVisibleSlides] = useState(null);\r\n    const [slides, setSlides] = /* useState(initSlides);*/ useState([...initSlides, ...initSlides, ...initSlides]);\r\n    const [actionQueue, setActionQueue] = useState([]);\r\n    const [isTransitionRunning, setTransitionRunning] = useState(false);\r\n    const transitionActive = useRef();\r\n    const shift = useRef();\r\n    const balancedShift = useRef();\r\n    const translate = useRef();\r\n\r\n    const containerRect = useCallback(() => {\r\n        if (!slider.current) return 0;\r\n        let rect = _containerRect\r\n        if (!rect) {\r\n            rect = slider.current.parentElement.getBoundingClientRect()\r\n            setContainerRect(rect);\r\n        }\r\n        return rect;\r\n    }, [_containerRect, setContainerRect])\r\n\r\n    const updateTransition = useCallback(value => {\r\n        if (!slider.current) return;\r\n        if(value){\r\n            slider.current.classList.add('slider-transition--active')\r\n            transitionActive.current = true;\r\n        } else {\r\n            slider.current.classList.remove('slider-transition--active')\r\n            transitionActive.current = false;\r\n            setTransitionRunning(false);\r\n        }\r\n    }, [slider, transitionActive, setTransitionRunning])\r\n\r\n    const updateTranslate = useCallback(target => {\r\n        if (!slider.current) return;\r\n        slider.current.style.transform = `translateX(${target}px)`\r\n        translate.current = target;\r\n    }, [slider, translate])\r\n\r\n    const updatePosition = useCallback(position => {\r\n        if (!slider.current || isNaN(position) || !active) return;\r\n        updateTranslate(position * slideWidth);\r\n        transitionActive.current && setTransitionRunning(true);\r\n    }, [slider, slideWidth, setTransitionRunning, updateTranslate, transitionActive, active])\r\n\r\n    useEffect(()=>{\r\n        console.log(\"in visible\", visibleSlides, initSlides.length)\r\n        if(!visibleSlides || visibleSlides > initSlides.length) return;\r\n        setActive(true);\r\n        let slides = [].concat(Array(overLapRatio *  2 + 1).fill(1).map( () => initSlides)).flat();\r\n        setSlides(slides);\r\n    }, [visibleSlides, setActive, initSlides, setSlides, overLapRatio])\r\n\r\n\r\n    useEffect(()=>{\r\n        if (!containerRect || !minSlideWidth || !slider.current) return;\r\n        const containerWidth = containerRect().width;\r\n        const visibleSlides = ~~(containerWidth / parseInt(minSlideWidth));\r\n        setVisibleSlides(visibleSlides);\r\n    }, [containerRect, minSlideWidth, slider, setVisibleSlides])\r\n\r\n    useEffect(() => {\r\n        if(!slides) return;\r\n        shift.current = -initSlides.length;\r\n        balancedShift.current = shift.current;\r\n        updatePosition(shift.current);\r\n    }, [slideWidth, updatePosition, shift, balancedShift, initSlides, slides])\r\n\r\n    useEffect(() => {\r\n        const resetSize = () => setContainerRect(null);\r\n        window.addEventListener(\"resize\", resetSize);\r\n        return () => window.removeEventListener(\"resize\", resetSize);\r\n    }, [setContainerRect])\r\n\r\n    useEffect(() => {\r\n        if(!visibleSlides || !containerRect) return;\r\n        const slideWidth = containerRect().width / visibleSlides\r\n        setSlideWidth(slideWidth);\r\n        slider.current.style.width = slideWidth * slides.length + \"px\";\r\n    }, [containerRect,  visibleSlides, slides]);\r\n\r\n    const appendSlides = useCallback(amount => {\r\n        console.log(\"append\",amount)\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.shift();\r\n                _slides.push(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const prependSlides = useCallback(amount => {\r\n        console.log(\"prepend\",amount)\r\n        setSlides(slides => {\r\n            const _slides = [...slides];\r\n            for (let i = 0; i < amount; i++) {\r\n                const slide = _slides.pop();\r\n                _slides.unshift(slide)\r\n            }\r\n            return _slides;\r\n        })\r\n    }, [setSlides])\r\n\r\n    const balance = useCallback(() => {\r\n        const diff = balancedShift.current - shift.current;\r\n        if(!diff) {\r\n            return;\r\n        }\r\n        (diff < 0) ? prependSlides(Math.abs(diff)) : appendSlides(diff);\r\n        updateTransition(false);\r\n        shift.current = balancedShift.current;\r\n        updatePosition(shift.current);\r\n    }, [shift, balancedShift, prependSlides, appendSlides, updateTransition, updatePosition])\r\n\r\n    const inAction = useRef();\r\n    const action = useCallback(() => {\r\n        if (!actionQueue.length) {return;}\r\n        inAction.current = true;\r\n        const queue = [...actionQueue];\r\n        const direction = queue.shift();\r\n        console.log(\"doing - \", direction);\r\n        updateTransition(false);\r\n        (direction > 0) ? appendSlides(direction) : prependSlides(Math.abs(direction));\r\n        updatePosition(shift.current + direction);\r\n        setTimeout(() => {\r\n            updateTransition(true);\r\n            updatePosition(shift.current);\r\n            setTimeout(()=> {\r\n                setTransitionRunning(false);\r\n                inAction.current = false;\r\n            }, animationDuration);\r\n        }, 0);\r\n\r\n        setActionQueue(queue);\r\n    }, [updateTransition, setTransitionRunning, updatePosition, actionQueue, setActionQueue, balance, animationDuration, appendSlides, prependSlides])\r\n\r\n    useEffect(() => {\r\n        console.log(\"call action\", isTransitionRunning)\r\n        if (!isTransitionRunning && !inAction.current) {\r\n            action();\r\n        }\r\n    }, [isTransitionRunning, action, inAction])\r\n\r\n    const next = useCallback(() => {\r\n        setActionQueue(queue => {\r\n            const _queue = rmLast(queue, \"prev\");\r\n            return sumLastSameDirection([..._queue, 1])\r\n        })\r\n    }, [setActionQueue])\r\n\r\n    useEffect(() => nextHandle && nextHandle(next), [next, nextHandle])\r\n\r\n    const prev = useCallback(() => {\r\n        setActionQueue(queue => {\r\n            const _queue = rmLast(queue, \"next\");\r\n            return sumLastSameDirection([..._queue, -1])\r\n        })\r\n    }, [setActionQueue])\r\n\r\n    useEffect(() => prevHandle && prevHandle(prev), [prev, prevHandle])\r\n\r\n    const endDraging = useCallback(() => {\r\n        let next = Math.round(translate.current / slideWidth);\r\n        if(onStepDragging){\r\n            next = next >  shift.current  ? shift.current + 1 : shift.current - 1;\r\n        }\r\n        shift.current = next;\r\n        updatePosition(shift.current);\r\n        setTimeout(()=> {\r\n            setTransitionRunning(false);\r\n            balance();\r\n        }, animationDuration);\r\n    }, [translate, updateTranslate, shift, slideWidth, setTransitionRunning])\r\n\r\n    const mouseMove = useCallback((shiftX, event) => {\r\n        const clientX = (event.type === \"touchmove\") ? event.touches[0].clientX : event.clientX;\r\n        updateTranslate(clientX - shiftX);\r\n    }, [updateTranslate])\r\n\r\n\r\n    const mouseDown = useCallback(event => {\r\n        const sliderContainer = event.target.closest(\".carousel-slider-container\");\r\n        if(!sliderContainer) return;\r\n        const rect = sliderContainer.getBoundingClientRect();\r\n        const clientX = (event.type === \"touchstart\") ? event.touches[0].clientX : event.clientX;\r\n        const shiftX = clientX - rect.left - shift.current * slideWidth;\r\n        const mouseMoveWithArgs = mouseMove.bind(null, shiftX);\r\n\r\n        const mouseUp = () => {\r\n            window.removeEventListener(\"mousemove\", mouseMoveWithArgs);\r\n            window.removeEventListener(\"mouseup\", mouseUp);\r\n            window.removeEventListener(\"touchmove\", mouseMoveWithArgs);\r\n            window.removeEventListener(\"touchend\", mouseUp)\r\n            updateTransition(true);\r\n            endDraging();\r\n        }\r\n\r\n        window.addEventListener(\"mousemove\", mouseMoveWithArgs);\r\n        window.addEventListener(\"touchmove\", mouseMoveWithArgs);\r\n        window.addEventListener(\"mouseup\", mouseUp);\r\n        window.addEventListener(\"touchend\", mouseUp);\r\n        updateTransition(false);\r\n    }, [updateTransition, shift, slideWidth, endDraging])\r\n\r\n    return (\r\n        <div className=\"carousel-slider-container\">\r\n           <ul className=\"carousel-slider\" ref={slider} onMouseDown={mouseDown} onTouchStart={mouseDown} onDrag={ e => e.preventDefault()}>\r\n                {slides && slides instanceof Array && slides.map(slide => (\r\n                    <li key={UUID.genV1()} className={\"slide\"} style={{width: minSlideWidth || \"initial\"}}>{slide}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}