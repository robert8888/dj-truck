{"ast":null,"code":"import STATUS from \"./../STATUS\";\nexport default function checkPitchChange(prev, current) {\n  prev = prev.console;\n  current = current.console;\n  let response = null;\n\n  for (let channelName of Object.keys(prev.channel)) {\n    const prevReady = prev.channel[channelName].playBackState.ready;\n    const prevBpm = prev.channel[channelName].track.bpm;\n    const currentReady = current.channel[channelName].playBackState.ready;\n    const currentBpm = current.channel[channelName].track.bpm;\n    const currentOffset = current.channel[channelName].track.offset;\n    console.log(\"chacking bpm ready\");\n    console.log(\"prevReady, current ready\", prevReady, currentReady, prevReady !== currentReady && currentReady);\n    console.log(\"prevBpm, currentBpm\", prevBpm, currentBpm, prevBpm !== currentBpm && currentBpm);\n    console.log(\"currentOffset\", currentOffset);\n\n    if (prevReady !== currentReady && currentReady && prevBpm !== currentBpm && currentBpm !== 0 && currentOffset !== 0) {\n      console.log(\"bpm and offset ready\");\n      return {\n        status: STATUS.BPM_AND_OFFSET_READY,\n        channel: channelName,\n        currentValue: {\n          bpm: currentBpm,\n          offset: currentOffset\n        }\n      };\n    }\n  }\n\n  return response;\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/core/console/observer/comperators/bpmAndOffset.js"],"names":["STATUS","checkPitchChange","prev","current","console","response","channelName","Object","keys","channel","prevReady","playBackState","ready","prevBpm","track","bpm","currentReady","currentBpm","currentOffset","offset","log","status","BPM_AND_OFFSET_READY","currentValue"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,OAAhC,EAAyC;AACtDD,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAZ;AACAD,EAAAA,OAAO,GAAGA,OAAO,CAACC,OAAlB;AACA,MAAIC,QAAQ,GAAG,IAAf;;AACA,OAAK,IAAIC,WAAT,IAAwBC,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACO,OAAjB,CAAxB,EAAmD;AACjD,UAAMC,SAAS,GAAGR,IAAI,CAACO,OAAL,CAAaH,WAAb,EAA0BK,aAA1B,CAAwCC,KAA1D;AACA,UAAMC,OAAO,GAAGX,IAAI,CAACO,OAAL,CAAaH,WAAb,EAA0BQ,KAA1B,CAAgCC,GAAhD;AAEA,UAAMC,YAAY,GAAGb,OAAO,CAACM,OAAR,CAAgBH,WAAhB,EAA6BK,aAA7B,CAA2CC,KAAhE;AACA,UAAMK,UAAU,GAAGd,OAAO,CAACM,OAAR,CAAgBH,WAAhB,EAA6BQ,KAA7B,CAAmCC,GAAtD;AACA,UAAMG,aAAa,GAAGf,OAAO,CAACM,OAAR,CAAgBH,WAAhB,EAA6BQ,KAA7B,CAAmCK,MAAzD;AACAf,IAAAA,OAAO,CAACgB,GAAR,CAAY,oBAAZ;AACAhB,IAAAA,OAAO,CAACgB,GAAR,CAAY,0BAAZ,EAAwCV,SAAxC,EAAmDM,YAAnD,EAAkEN,SAAS,KAAKM,YAAd,IAA8BA,YAAhG;AACAZ,IAAAA,OAAO,CAACgB,GAAR,CAAY,qBAAZ,EAAmCP,OAAnC,EAA4CI,UAA5C,EAAyDJ,OAAO,KAAKI,UAAZ,IAAyBA,UAAlF;AACAb,IAAAA,OAAO,CAACgB,GAAR,CAAY,eAAZ,EAA6BF,aAA7B;;AACA,QACER,SAAS,KAAKM,YAAd,IACAA,YADA,IAEAH,OAAO,KAAKI,UAFZ,IAGAA,UAAU,KAAK,CAHf,IAIAC,aAAa,KAAK,CALpB,EAME;AACAd,MAAAA,OAAO,CAACgB,GAAR,CAAY,sBAAZ;AACA,aAAO;AACLC,QAAAA,MAAM,EAAErB,MAAM,CAACsB,oBADV;AAELb,QAAAA,OAAO,EAAEH,WAFJ;AAGLiB,QAAAA,YAAY,EAAE;AACZR,UAAAA,GAAG,EAAEE,UADO;AAEZE,UAAAA,MAAM,EAAED;AAFI;AAHT,OAAP;AAQD;AACF;;AACD,SAAOb,QAAP;AACD","sourcesContent":["import STATUS from \"./../STATUS\";\r\n\r\nexport default function checkPitchChange(prev, current) {\r\n  prev = prev.console;\r\n  current = current.console;\r\n  let response = null;\r\n  for (let channelName of Object.keys(prev.channel)) {\r\n    const prevReady = prev.channel[channelName].playBackState.ready;\r\n    const prevBpm = prev.channel[channelName].track.bpm;\r\n\r\n    const currentReady = current.channel[channelName].playBackState.ready;\r\n    const currentBpm = current.channel[channelName].track.bpm;\r\n    const currentOffset = current.channel[channelName].track.offset;\r\n    console.log(\"chacking bpm ready\")\r\n    console.log(\"prevReady, current ready\", prevReady, currentReady, (prevReady !== currentReady && currentReady));\r\n    console.log(\"prevBpm, currentBpm\", prevBpm, currentBpm, (prevBpm !== currentBpm &&currentBpm))\r\n    console.log(\"currentOffset\", currentOffset)\r\n    if (\r\n      prevReady !== currentReady &&\r\n      currentReady &&\r\n      prevBpm !== currentBpm &&\r\n      currentBpm !== 0 &&\r\n      currentOffset !== 0 \r\n    ) {\r\n      console.log(\"bpm and offset ready\")\r\n      return {\r\n        status: STATUS.BPM_AND_OFFSET_READY,\r\n        channel: channelName,\r\n        currentValue: {\r\n          bpm: currentBpm,\r\n          offset: currentOffset\r\n        }\r\n      };\r\n    }\r\n  }\r\n  return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}