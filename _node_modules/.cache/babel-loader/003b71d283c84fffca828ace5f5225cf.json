{"ast":null,"code":"import { ACTIONS } from \"../../actions\";\nimport { takeEvery, select, fork } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nexport default function* renameSelectedRequestSaga() {\n  yield takeEvery(ACTIONS.PL_UPDATE_TRACK_POSITION_REQUST, handel);\n}\n\nfunction* handel(action) {\n  yield fork(sendDataToApi, action);\n}\n\nconst getToken = state => state.user.token;\n\nfunction* sendDataToApi(action) {\n  const token = yield select(getToken);\n\n  if (token) {\n    try {\n      console.log(action.tracksPositions);\n      const {\n        callQuery,\n        queries\n      } = getApi(\"UserAssets\");\n      const result = yield callQuery(queries.updateTracksPositionsQl, token, {\n        tracksPositions: action.tracksPositions\n      });\n      console.log(result);\n\n      if (result.errors) {\n        throw new Error(JSON.stringify(result.errors));\n      }\n    } catch (err) {\n      console.log(\"Can't update positon in database\");\n      console.log(err.message);\n    }\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/updateTrackPositioRequestSaga.js"],"names":["ACTIONS","takeEvery","select","fork","getApi","renameSelectedRequestSaga","PL_UPDATE_TRACK_POSITION_REQUST","handel","action","sendDataToApi","getToken","state","user","token","console","log","tracksPositions","callQuery","queries","result","updateTracksPositionsQl","errors","Error","JSON","stringify","err","message"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA6BC,IAA7B,QAAyC,oBAAzC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,eAAe,UAAUC,yBAAV,GAAsC;AACjD,QAAMJ,SAAS,CAACD,OAAO,CAACM,+BAAT,EAA0CC,MAA1C,CAAf;AACH;;AAED,UAAUA,MAAV,CAAiBC,MAAjB,EAAwB;AACpB,QAAML,IAAI,CAACM,aAAD,EAAgBD,MAAhB,CAAV;AACH;;AAED,MAAME,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,UAAUJ,aAAV,CAAwBD,MAAxB,EAAgC;AAC5B,QAAMK,KAAK,GAAG,MAAMX,MAAM,CAACQ,QAAD,CAA1B;;AACA,MAAGG,KAAH,EAAS;AACL,QAAG;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,eAAnB;AACA,YAAM;AAAEC,QAAAA,SAAF;AAAcC,QAAAA;AAAd,UAA0Bd,MAAM,CAAC,YAAD,CAAtC;AACA,YAAMe,MAAM,GAAG,MAAMF,SAAS,CAACC,OAAO,CAACE,uBAAT,EAAkCP,KAAlC,EAA0C;AACpEG,QAAAA,eAAe,EAAER,MAAM,CAACQ;AAD4C,OAA1C,CAA9B;AAGAF,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;;AACA,UAAGA,MAAM,CAACE,MAAV,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeL,MAAM,CAACE,MAAtB,CAAV,CAAN;AACH;AACJ,KAVD,CAUE,OAAOI,GAAP,EAAW;AACTX,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACC,OAAhB;AACH;AACJ;AACJ","sourcesContent":["import { ACTIONS } from \"../../actions\";\r\nimport { takeEvery, select,  fork } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\n\r\nexport default function* renameSelectedRequestSaga() {\r\n    yield takeEvery(ACTIONS.PL_UPDATE_TRACK_POSITION_REQUST, handel)\r\n}\r\n\r\nfunction* handel(action){\r\n    yield fork(sendDataToApi, action)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nfunction* sendDataToApi(action) {\r\n    const token = yield select(getToken);\r\n    if(token){\r\n        try{\r\n            console.log(action.tracksPositions)\r\n            const { callQuery , queries } = getApi(\"UserAssets\");\r\n            const result = yield callQuery(queries.updateTracksPositionsQl, token , {\r\n                tracksPositions: action.tracksPositions,\r\n            })\r\n            console.log(result);\r\n            if(result.errors){\r\n                throw new Error(JSON.stringify(result.errors));\r\n            }\r\n        } catch (err){\r\n            console.log(\"Can't update positon in database\")\r\n            console.log(err.message);\r\n        }\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}