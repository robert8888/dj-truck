{"ast":null,"code":"import { ACTIONS, loadRecords, recReqFails } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport { format } from 'date-fns';\nexport default function* requestUserRecords() {\n  yield takeEvery(ACTIONS.RECS_REQ_USER, handel);\n}\n\nconst getToken = state => state.user.token; //const getCurrentUserId = state => state.user.dbId;\n\n\nfunction* handel(action) {\n  const token = yield select(getToken);\n  console.log('actio load ');\n\n  if (token) {\n    try {\n      const {\n        callQuery,\n        queries\n      } = getApi(\"UserAssets\");\n      const query = queries.userRecQl(action.userId);\n      const result = yield callQuery(query, token);\n      console.log(result);\n      const records = result.data.records;\n\n      if (!result.errors && records) {\n        yield put(loadRecords(records));\n      } else {\n        throw new Error(\"Can't load reacords from database\");\n      }\n    } catch (e) {\n      yield put(recReqFails(e.message));\n    }\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/records/reqUserRecords.js"],"names":["ACTIONS","loadRecords","recReqFails","takeEvery","select","put","getApi","format","requestUserRecords","RECS_REQ_USER","handel","getToken","state","user","token","action","console","log","callQuery","queries","query","userRecQl","userId","result","records","data","errors","Error","e","message"],"mappings":"AAAA,SAAUA,OAAV,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,eAApD;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAyC,oBAAzC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,UAAUC,kBAAV,GAA+B;AAC1C,QAAML,SAAS,CAACH,OAAO,CAACS,aAAT,EAAwBC,MAAxB,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC,C,CAEA;;;AAEA,UAAUJ,MAAV,CAAiBK,MAAjB,EAAyB;AACrB,QAAMD,KAAK,GAAG,MAAMV,MAAM,CAACO,QAAD,CAA1B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,MAAGH,KAAH,EAAS;AACL,QAAG;AACC,YAAM;AAAEI,QAAAA,SAAF;AAAcC,QAAAA;AAAd,UAA0Bb,MAAM,CAAC,YAAD,CAAtC;AAEA,YAAMc,KAAK,GAAGD,OAAO,CAACE,SAAR,CAAkBN,MAAM,CAACO,MAAzB,CAAd;AACA,YAAMC,MAAM,GAAG,MAAML,SAAS,CAACE,KAAD,EAAQN,KAAR,CAA9B;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACA,YAAMC,OAAO,GAAGD,MAAM,CAACE,IAAP,CAAYD,OAA5B;;AACA,UAAG,CAACD,MAAM,CAACG,MAAR,IAAmBF,OAAtB,EAA8B;AAC1B,cAAMnB,GAAG,CAACJ,WAAW,CAACuB,OAAD,CAAZ,CAAT;AACH,OAFD,MAEO;AACH,cAAM,IAAIG,KAAJ,CAAU,mCAAV,CAAN;AACH;AACJ,KAbD,CAaE,OAAOC,CAAP,EAAU;AACR,YAAMvB,GAAG,CAACH,WAAW,CAAC0B,CAAC,CAACC,OAAH,CAAZ,CAAT;AACH;AAEJ;AAEJ","sourcesContent":["import {  ACTIONS,  loadRecords, recReqFails } from \"../../actions\";\r\nimport { takeEvery, select, put,  } from \"redux-saga/effects\";\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport { format } from 'date-fns'\r\n\r\nexport default function* requestUserRecords() {\r\n    yield takeEvery(ACTIONS.RECS_REQ_USER, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token\r\n\r\n//const getCurrentUserId = state => state.user.dbId;\r\n\r\nfunction* handel(action) {\r\n    const token = yield select(getToken);\r\n    console.log('actio load ')\r\n    if(token){\r\n        try{\r\n            const { callQuery , queries } = getApi(\"UserAssets\");\r\n\r\n            const query = queries.userRecQl(action.userId);\r\n            const result = yield callQuery(query, token);\r\n\r\n            console.log(result)\r\n            const records = result.data.records;\r\n            if(!result.errors  && records){\r\n                yield put(loadRecords(records))\r\n            } else {\r\n                throw new Error(\"Can't load reacords from database\")\r\n            }  \r\n        } catch (e) {\r\n            yield put(recReqFails(e.message))\r\n        }\r\n\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}