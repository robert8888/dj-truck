{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\PlayList\\\\PlayList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ACTIONS } from \"../../actions/actions\";\nimport \"./play-list.scss\";\n\nconst Row = props => {\n  let {\n    title,\n    duration: time,\n    source = \"Youtube\",\n    bmp,\n    quality\n  } = props.item;\n  return React.createElement(\"tr\", {\n    className: \"track-list-table-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"track-list-table-col source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, source), React.createElement(\"td\", {\n    className: \"track-list-table-col title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, title), React.createElement(\"td\", {\n    className: \"track-list-table-col quality\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, quality), React.createElement(\"td\", {\n    className: \"track-list-table-col time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, time), React.createElement(\"td\", {\n    className: \"track-list-table-col bmp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, bmp), React.createElement(\"td\", {\n    className: \"track-list-table-col btn-a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"A - btn\"), React.createElement(\"td\", {\n    className: \"track-list-table-col btn-b\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"B - btn\"));\n};\n\nconst Table = props => {\n  return React.createElement(\"table\", {\n    className: props.classNames,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.headers && props.headers.map((text, index) => React.createElement(\"th\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, text)))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.children));\n};\n\nclass PlayList extends React.Component {\n  constructor() {\n    super();\n    this.headers = ['Source', 'Title', 'Quality', 'Time', 'Bmp', 'Destination'];\n  }\n\n  render() {\n    return this.props.playList && React.createElement(\"div\", {\n      className: \"play-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Table, {\n      headers: this.headers,\n      classNames: \"play-list-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.playList && this.props.playList.map(item => React.createElement(Row, {\n      item: item,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  playList: state.playList.list\n});\n\nexport default connect(mapStateToProps)(PlayList);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/PlayList/PlayList.js"],"names":["React","connect","ACTIONS","Row","props","title","duration","time","source","bmp","quality","item","Table","classNames","headers","map","text","index","children","PlayList","Component","constructor","render","playList","id","mapStateToProps","state","list"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ACTIONS } from \"../../actions/actions\";\r\n\r\nimport \"./play-list.scss\";\r\n\r\nconst Row = (props) => {\r\n    let {title, duration:time, source=\"Youtube\", bmp, quality} = props.item;\r\n    return (\r\n        <tr className=\"track-list-table-row\">\r\n            <td className=\"track-list-table-col source\">{source}</td>\r\n            <td className=\"track-list-table-col title\">{title}</td>\r\n            <td className=\"track-list-table-col quality\">{quality}</td>\r\n            <td className=\"track-list-table-col time\">{time}</td>\r\n            <td className=\"track-list-table-col bmp\">{bmp}</td>\r\n            <td className=\"track-list-table-col btn-a\">A - btn</td>\r\n            <td className=\"track-list-table-col btn-b\">B - btn</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst Table = (props) => {\r\n    return (           \r\n        <table className={props.classNames}>\r\n            <thead>\r\n                <tr>\r\n                    {props.headers && props.headers.map( (text, index) => <th key={index}>{text}</th>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { props.children }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nclass PlayList extends React.Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    headers = ['Source', 'Title', 'Quality', 'Time', 'Bmp', 'Destination']; \r\n\r\n    render(){\r\n        return (\r\n            (this.props.playList && <div className=\"play-list\">\r\n                <Table headers={this.headers} classNames=\"play-list-table\">\r\n                    {this.props.playList && this.props.playList.map( item => \r\n                    <Row item= {item} key={item.id}/>\r\n                    )}\r\n                </Table>\r\n            </div>)\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    playList : state.playList.list\r\n})\r\n\r\nexport default connect(mapStateToProps)(PlayList);"]},"metadata":{},"sourceType":"module"}