{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\DjTruck\\\\djtruck\\\\src\\\\components\\\\Deck\\\\Deck.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setPitch } from './../../actions/actions';\nimport \"./deck.scss\";\nimport apiProvider from \"./../../apis/apiProvider\";\nimport Player from \"./Player/Player\";\nimport TrackInfo from \"./TrackInfo/TrackInfo\";\nimport PlayBackControls from \"./PlayBackControls/PlayBackControls\";\nimport PitchControl from \"./PitchControl/PitchControl\";\n\nclass Deck extends React.Component {\n  render() {\n    let api = apiProvider.getApi(this.props.track.source);\n    let url = api && api.getUrl(this.props.track.id) || null;\n    return React.createElement(\"div\", {\n      className: \"deck deck-\" + this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(TrackInfo, {\n      name: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Player, {\n      name: this.props.name,\n      url: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(PitchControl, {\n      name: this.props.name,\n      onChange: pitch => this.props.setPitch(pitch),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(PlayBackControls, {\n      name: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  track: state.console.channel[ownProps.name].track,\n  state: state.console.channel[ownProps.name].playBackState\n});\n\nconst mapDispachToProps = dispach => ({\n  setPitch: value => dispach(setPitch(value))\n});\n\nexport default connect(mapStateToProps, mapDispachToProps)(Deck);","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/components/Deck/Deck.js"],"names":["React","connect","setPitch","apiProvider","Player","TrackInfo","PlayBackControls","PitchControl","Deck","Component","render","api","getApi","props","track","source","url","getUrl","id","name","pitch","mapStateToProps","state","ownProps","console","channel","playBackState","mapDispachToProps","dispach","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAwB,yBAAxB;AACA,OAAO,aAAP;AAKA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAKA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AAE/BC,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAGR,WAAW,CAACS,MAAZ,CAAmB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAApC,CAAV;AACA,QAAIC,GAAG,GAAIL,GAAG,IAAIA,GAAG,CAACM,MAAJ,CAAW,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,EAA5B,CAAR,IAA4C,IAAtD;AAEA,WACI;AAAK,MAAA,SAAS,EAAG,eAAe,KAAKL,KAAL,CAAWM,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAG,KAAKN,KAAL,CAAWM,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,KAAKN,KAAL,CAAWM,IAA1B;AAAiC,MAAA,GAAG,EAAEH,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAe,MAAA,IAAI,EAAG,KAAKH,KAAL,CAAWM,IAAjC;AAAwC,MAAA,QAAQ,EAAGC,KAAK,IAAI,KAAKP,KAAL,CAAWX,QAAX,CAAoBkB,KAApB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAMI,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAG,KAAKP,KAAL,CAAWM,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUC;;AAhB0B;;AAoBnC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CT,EAAAA,KAAK,EAAGQ,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACJ,IAA/B,EAAqCL,KADH;AAE1CQ,EAAAA,KAAK,EAAGA,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBF,QAAQ,CAACJ,IAA/B,EAAqCO;AAFH,CAAtB,CAAxB;;AAKA,MAAMC,iBAAiB,GAAGC,OAAO,KAAK;AAClC1B,EAAAA,QAAQ,EAAI2B,KAAD,IAAWD,OAAO,CAAC1B,QAAQ,CAAC2B,KAAD,CAAT;AADK,CAAL,CAAjC;;AAIA,eAAe5B,OAAO,CAACoB,eAAD,EAAkBM,iBAAlB,CAAP,CAA4CnB,IAA5C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {setPitch } from './../../actions/actions';\r\nimport \"./deck.scss\";\r\n\r\n\r\n\r\n\r\nimport apiProvider from \"./../../apis/apiProvider\";\r\nimport Player from \"./Player/Player\";\r\nimport TrackInfo from \"./TrackInfo/TrackInfo\";\r\nimport PlayBackControls from \"./PlayBackControls/PlayBackControls\";\r\nimport PitchControl from \"./PitchControl/PitchControl\";\r\n\r\n\r\n\r\n\r\nclass Deck extends React.Component {\r\n\r\n    render() {\r\n        let api = apiProvider.getApi(this.props.track.source);\r\n        let url = (api && api.getUrl(this.props.track.id)) || null;\r\n\r\n        return (\r\n            <div className={ \"deck deck-\" + this.props.name } >\r\n                <TrackInfo name={ this.props.name } />\r\n                <div className=\"flex-container\">\r\n                    <Player name={ this.props.name } url={url} />\r\n                    <PitchControl  name={ this.props.name } onChange={ pitch => this.props.setPitch(pitch)} />\r\n                </div>\r\n                <PlayBackControls name={ this.props.name } />\r\n            </div>\r\n            )\r\n        }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    track : state.console.channel[ownProps.name].track,\r\n    state : state.console.channel[ownProps.name].playBackState,\r\n})\r\n\r\nconst mapDispachToProps = dispach => ({\r\n    setPitch : (value) => dispach(setPitch(value)), \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Deck);"]},"metadata":{},"sourceType":"module"}