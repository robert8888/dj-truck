{"ast":null,"code":"import STATUS from \"./../STATUS\";\nexport default function checkTrackLoaded(prev, current) {\n  prev = prev.console;\n  current = current.console;\n  let response = null;\n\n  for (let channelName of Object.keys(prev.channel)) {\n    const prevValueSource = prev.channel[channelName].track.source;\n    const prevValueId = prev.channel[channelName].track.id;\n    const currentValueSource = current.channel[channelName].track.source;\n    const currentValueID = current.channel[channelName].track.id;\n\n    if (prevValueSource !== currentValueSource || prevValueId !== currentValueID) {\n      response = response || [];\n      response.push({\n        status: STATUS.TRACK_LOADED,\n        channel: channelName,\n        prevValue: prev.channel[channelName].track,\n        currentValue: current.channel[channelName].track\n      });\n    }\n  }\n\n  return response;\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/DjTruck/djtruck/src/pages/app/core/console/observer/comparators/trackLoaded.js"],"names":["STATUS","checkTrackLoaded","prev","current","console","response","channelName","Object","keys","channel","prevValueSource","track","source","prevValueId","id","currentValueSource","currentValueID","push","status","TRACK_LOADED","prevValue","currentValue"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,OAAhC,EAAyC;AACtDD,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAZ;AACAD,EAAAA,OAAO,GAAGA,OAAO,CAACC,OAAlB;AACA,MAAIC,QAAQ,GAAG,IAAf;;AACA,OAAK,IAAIC,WAAT,IAAwBC,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACO,OAAjB,CAAxB,EAAmD;AACjD,UAAMC,eAAe,GAAGR,IAAI,CAACO,OAAL,CAAaH,WAAb,EAA0BK,KAA1B,CAAgCC,MAAxD;AACA,UAAMC,WAAW,GAAGX,IAAI,CAACO,OAAL,CAAaH,WAAb,EAA0BK,KAA1B,CAAgCG,EAApD;AACA,UAAMC,kBAAkB,GAAGZ,OAAO,CAACM,OAAR,CAAgBH,WAAhB,EAA6BK,KAA7B,CAAmCC,MAA9D;AACA,UAAMI,cAAc,GAAGb,OAAO,CAACM,OAAR,CAAgBH,WAAhB,EAA6BK,KAA7B,CAAmCG,EAA1D;;AACA,QACEJ,eAAe,KAAKK,kBAApB,IACAF,WAAW,KAAKG,cAFlB,EAGE;AACAX,MAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACAA,MAAAA,QAAQ,CAACY,IAAT,CAAc;AACZC,QAAAA,MAAM,EAAElB,MAAM,CAACmB,YADH;AAEZV,QAAAA,OAAO,EAAEH,WAFG;AAGZc,QAAAA,SAAS,EAAElB,IAAI,CAACO,OAAL,CAAaH,WAAb,EAA0BK,KAHzB;AAIZU,QAAAA,YAAY,EAAElB,OAAO,CAACM,OAAR,CAAgBH,WAAhB,EAA6BK;AAJ/B,OAAd;AAMD;AACF;;AACD,SAAON,QAAP;AACD","sourcesContent":["import STATUS from \"./../STATUS\";\r\n\r\nexport default function checkTrackLoaded(prev, current) {\r\n  prev = prev.console;\r\n  current = current.console;\r\n  let response = null;\r\n  for (let channelName of Object.keys(prev.channel)) {\r\n    const prevValueSource = prev.channel[channelName].track.source;\r\n    const prevValueId = prev.channel[channelName].track.id;\r\n    const currentValueSource = current.channel[channelName].track.source;\r\n    const currentValueID = current.channel[channelName].track.id;\r\n    if (\r\n      prevValueSource !== currentValueSource ||\r\n      prevValueId !== currentValueID\r\n    ) {\r\n      response = response || [];\r\n      response.push({\r\n        status: STATUS.TRACK_LOADED,\r\n        channel: channelName,\r\n        prevValue: prev.channel[channelName].track,\r\n        currentValue: current.channel[channelName].track\r\n      });\r\n    }\r\n  }\r\n  return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}