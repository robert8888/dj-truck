{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\common\\\\components\\\\Pagin\\\\Pagin.js\";\nimport React, { Fragment, useCallback } from \"react\";\nimport Button from \"react-bootstrap\";\n\nconst Pagin = ({\n  current,\n  all,\n  wide = 2,\n  call\n}) => {\n  const button = useCallback((index, text) => {\n    return React.createElement(Button, {\n      className: \"pagin-btn\" + (index === current) ? \" current\" : \"\",\n      onClick: call(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, text || index);\n  }, [call]);\n  const buttons = useMemo(() => {\n    let curr = button(current);\n    let pre = [];\n    let next = [];\n\n    if (current > 0) {\n      let i;\n\n      for (i = current - 1; i > 0; i--) {\n        pre.unshift(button(i));\n      }\n\n      if (i > 0) {\n        pre.unshift(button(0, \"<<\"));\n      }\n    }\n\n    if (current < all) {\n      let i;\n\n      for (i = current + 1; i <= all; i++) {\n        next.push(button(i));\n      }\n\n      if (i <= all) {\n        next.push(button(all, \">>\"));\n      }\n    }\n\n    return [...pre, curr, ...next];\n  }, [current, all]);\n  return React.createElement(\"div\", {\n    className: \"paggin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, buttons.map);\n};\n\nexport default Pagin;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/common/components/Pagin/Pagin.js"],"names":["React","Fragment","useCallback","Button","Pagin","current","all","wide","call","button","index","text","buttons","useMemo","curr","pre","next","i","unshift","push","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,GAAV;AAAgBC,EAAAA,IAAI,GAAG,CAAvB;AAA0BC,EAAAA;AAA1B,CAAD,KAAqC;AAE/C,QAAMC,MAAM,GAAGP,WAAW,CAAC,CAACQ,KAAD,EAAQC,IAAR,KAAe;AACtC,WAAO,oBAAC,MAAD;AACK,MAAA,SAAS,EAAE,eAAeD,KAAK,KAAKL,OAAzB,IAAoC,UAApC,GAAiD,EADjE;AAEK,MAAA,OAAO,EAAEG,IAAI,CAACE,KAAD,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGWC,IAAI,IAAID,KAHnB,CAAP;AAKH,GANyB,EAMxB,CAACF,IAAD,CANwB,CAA1B;AAQA,QAAMI,OAAO,GAAGC,OAAO,CAAC,MAAI;AACxB,QAAIC,IAAI,GAAGL,MAAM,CAACJ,OAAD,CAAjB;AACA,QAAIU,GAAG,GAAG,EAAV;AACA,QAAIC,IAAI,GAAE,EAAV;;AACA,QAAGX,OAAO,GAAG,CAAb,EAAe;AACX,UAAIY,CAAJ;;AACA,WAAIA,CAAC,GAAGZ,OAAO,GAAE,CAAjB,EAAoBY,CAAC,GAAG,CAAxB,EAA4BA,CAAC,EAA7B,EAAgC;AAC5BF,QAAAA,GAAG,CAACG,OAAJ,CAAYT,MAAM,CAACQ,CAAD,CAAlB;AACH;;AACD,UAAGA,CAAC,GAAG,CAAP,EAAS;AACLF,QAAAA,GAAG,CAACG,OAAJ,CAAYT,MAAM,CAAC,CAAD,EAAI,IAAJ,CAAlB;AACH;AACJ;;AACD,QAAGJ,OAAO,GAAGC,GAAb,EAAiB;AACb,UAAIW,CAAJ;;AACA,WAAIA,CAAC,GAAGZ,OAAO,GAAG,CAAlB,EAAqBY,CAAC,IAAIX,GAA1B,EAAgCW,CAAC,EAAjC,EAAoC;AAChCD,QAAAA,IAAI,CAACG,IAAL,CAAUV,MAAM,CAACQ,CAAD,CAAhB;AACH;;AACD,UAAGA,CAAC,IAAIX,GAAR,EAAa;AACTU,QAAAA,IAAI,CAACG,IAAL,CAAUV,MAAM,CAACH,GAAD,EAAM,IAAN,CAAhB;AACH;AACJ;;AAED,WAAO,CAAC,GAAGS,GAAJ,EAASD,IAAT,EAAe,GAAGE,IAAlB,CAAP;AACH,GAxBsB,EAwBpB,CAACX,OAAD,EAAUC,GAAV,CAxBoB,CAAvB;AA0BA,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBM,OAAO,CAACQ,GAAjC,CADJ;AAGH,CAvCD;;AAyCA,eAAehB,KAAf","sourcesContent":["import React, { Fragment, useCallback } from \"react\"\r\nimport Button from \"react-bootstrap\";\r\n\r\nconst Pagin = ({current, all , wide = 2, call}) => {\r\n\r\n    const button = useCallback((index, text)=>{\r\n        return <Button \r\n                    className={\"pagin-btn\" + (index === current) ? \" current\" : \"\"} \r\n                    onClick={call(index)}>\r\n                        {(text || index)}\r\n                </Button>\r\n    },[call])\r\n\r\n    const buttons = useMemo(()=>{\r\n        let curr = button(current);\r\n        let pre = [];\r\n        let next =[]\r\n        if(current > 0){\r\n            let i;\r\n            for(i = current -1; i > 0 ; i--){\r\n                pre.unshift(button(i))\r\n            }\r\n            if(i > 0){\r\n                pre.unshift(button(0, \"<<\"))\r\n            }\r\n        }\r\n        if(current < all){\r\n            let i;\r\n            for(i = current + 1; i <= all ; i++){\r\n                next.push(button(i))\r\n            }\r\n            if(i <= all ){\r\n                next.push(button(all, \">>\"))\r\n            }\r\n        }\r\n\r\n        return [...pre, curr, ...next]\r\n    }, [current, all])    \r\n\r\n    return (\r\n        <div className=\"paggin\">{buttons.map}</div>\r\n    )\r\n}\r\n\r\nexport default Pagin"]},"metadata":{},"sourceType":"module"}