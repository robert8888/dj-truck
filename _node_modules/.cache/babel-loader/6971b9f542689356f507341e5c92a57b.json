{"ast":null,"code":"const fader = {\n  setFader(value) {\n    //in procent from -50%  to + 50% (not 0.01) but 1\n    let faderVolumeNodeA = this.audioNodes.channels[\"A\"].faderVolumeNode;\n    let faderVolumeNodeB = this.audioNodes.channels[\"B\"].faderVolumeNode;\n    let audioCtxA = this.channels.getChannel(\"A\").backend.ac;\n    let audioCtxB = this.channels.getChannel(\"B\").backend.ac;\n\n    if (!faderVolumeNodeA || !faderVolumeNodeB || !audioCtxA || !audioCtxB) {\n      throw new Error(`Fader value not set. Mising auiodContext or AudioNode ref\n                            .Checkout funtion setFader in mixer object`);\n    }\n\n    const {\n      a: volA,\n      b: volB\n    } = equalPowerFader(value);\n    faderVolumeNodeA.gain.setTargetAtTime(volA, audioCtxA.currentTime, 0.01);\n    faderVolumeNodeB.gain.setTargetAtTime(volB, audioCtxB.currentTime, 0.01);\n  }\n\n};\nexport default fader;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/console/core/console/mixer/fader.js"],"names":["fader","setFader","value","faderVolumeNodeA","audioNodes","channels","faderVolumeNode","faderVolumeNodeB","audioCtxA","getChannel","backend","ac","audioCtxB","Error","a","volA","b","volB","equalPowerFader","gain","setTargetAtTime","currentTime"],"mappings":"AAAA,MAAMA,KAAK,GAAI;AACXC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AAAC;AACb,QAAIC,gBAAgB,GAAG,KAAKC,UAAL,CAAgBC,QAAhB,CAAyB,GAAzB,EAA8BC,eAArD;AACA,QAAIC,gBAAgB,GAAG,KAAKH,UAAL,CAAgBC,QAAhB,CAAyB,GAAzB,EAA8BC,eAArD;AACA,QAAIE,SAAS,GAAG,KAAKH,QAAL,CAAcI,UAAd,CAAyB,GAAzB,EAA8BC,OAA9B,CAAsCC,EAAtD;AACA,QAAIC,SAAS,GAAG,KAAKP,QAAL,CAAcI,UAAd,CAAyB,GAAzB,EAA8BC,OAA9B,CAAsCC,EAAtD;;AAEA,QAAI,CAACR,gBAAD,IAAqB,CAACI,gBAAtB,IAA0C,CAACC,SAA3C,IAAwD,CAACI,SAA7D,EAAwE;AACpE,YAAM,IAAIC,KAAJ,CAAW;uEAAX,CAAN;AAEH;;AAED,UAAM;AAAEC,MAAAA,CAAC,EAAEC,IAAL;AAAWC,MAAAA,CAAC,EAAEC;AAAd,QAAuBC,eAAe,CAAChB,KAAD,CAA5C;AAEAC,IAAAA,gBAAgB,CAACgB,IAAjB,CAAsBC,eAAtB,CAAsCL,IAAtC,EAA4CP,SAAS,CAACa,WAAtD,EAAmE,IAAnE;AACAd,IAAAA,gBAAgB,CAACY,IAAjB,CAAsBC,eAAtB,CAAsCH,IAAtC,EAA4CL,SAAS,CAACS,WAAtD,EAAmE,IAAnE;AACH;;AAhBU,CAAf;AAmBA,eAAerB,KAAf","sourcesContent":["const fader  = {\r\n    setFader(value) {//in procent from -50%  to + 50% (not 0.01) but 1\r\n        let faderVolumeNodeA = this.audioNodes.channels[\"A\"].faderVolumeNode;\r\n        let faderVolumeNodeB = this.audioNodes.channels[\"B\"].faderVolumeNode;\r\n        let audioCtxA = this.channels.getChannel(\"A\").backend.ac;\r\n        let audioCtxB = this.channels.getChannel(\"B\").backend.ac;\r\n\r\n        if (!faderVolumeNodeA || !faderVolumeNodeB || !audioCtxA || !audioCtxB) {\r\n            throw new Error(`Fader value not set. Mising auiodContext or AudioNode ref\r\n                            .Checkout funtion setFader in mixer object`);\r\n        }\r\n\r\n        const { a: volA, b: volB } = equalPowerFader(value)\r\n\r\n        faderVolumeNodeA.gain.setTargetAtTime(volA, audioCtxA.currentTime, 0.01);\r\n        faderVolumeNodeB.gain.setTargetAtTime(volB, audioCtxB.currentTime, 0.01);\r\n    }\r\n}\r\n\r\nexport default fader;"]},"metadata":{},"sourceType":"module"}