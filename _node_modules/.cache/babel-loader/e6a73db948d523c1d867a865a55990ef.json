{"ast":null,"code":"import { toggleDir, ACTIONS, pushDirContent } from \"../../actions\";\nimport { takeEvery, select, put } from \"redux-saga/effects\";\nimport { getApi } from \"./../../apis/apiProvider\";\nimport requestDirContetQuery from \"./../../qlQueries/requestDirContent\";\nimport { get } from \"lodash/object\";\nexport default function* loadDirRequest() {\n  yield takeEvery(ACTIONS.PL_LOAD_DIR_REQUEST, handel);\n}\n\nconst getToken = state => state.user.token;\n\nconst getCurrentSelection = state => state.playList.currentSelection;\n\nconst getCurrent = (state, path) => get(state.playList, path);\n\nfunction* handel(action) {\n  console.log(\"aciotn open\", action.open);\n  const {\n    callQuery\n  } = getApi(\"UserAssets\");\n  const token = yield select(getToken);\n  const currentSelection = yield select(getCurrentSelection);\n  const current = yield select(getCurrent, currentSelection);\n\n  if (!current._loaded) {\n    let dirContent = yield callQuery(requestDirContetQuery(current._id), token);\n\n    if (!dirContent.data.dir) {\n      return;\n    }\n\n    dirContent = dirContent.data.dir;\n    const isRoot = false;\n    yield put(pushDirContent(dirContent, isRoot, action.path, action.open));\n  }\n}","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/sagas/playlists/loadDirRequestSaga.js"],"names":["toggleDir","ACTIONS","pushDirContent","takeEvery","select","put","getApi","requestDirContetQuery","get","loadDirRequest","PL_LOAD_DIR_REQUEST","handel","getToken","state","user","token","getCurrentSelection","playList","currentSelection","getCurrent","path","action","console","log","open","callQuery","current","_loaded","dirContent","_id","data","dir","isRoot"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,cAA7B,QAAmD,eAAnD;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,eAAe,UAAUC,cAAV,GAA2B;AACtC,QAAMN,SAAS,CAACF,OAAO,CAACS,mBAAT,EAA8BC,MAA9B,CAAf;AACH;;AAED,MAAMC,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArC;;AAEA,MAAMC,mBAAmB,GAAGH,KAAK,IAAIA,KAAK,CAACI,QAAN,CAAeC,gBAApD;;AAEA,MAAMC,UAAU,GAAG,CAACN,KAAD,EAAQO,IAAR,KAAiBZ,GAAG,CAACK,KAAK,CAACI,QAAP,EAAiBG,IAAjB,CAAvC;;AAEA,UAAUT,MAAV,CAAiBU,MAAjB,EAAyB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAAM,CAACG,IAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBnB,MAAM,CAAC,YAAD,CAA5B;AACA,QAAMS,KAAK,GAAG,MAAMX,MAAM,CAACQ,QAAD,CAA1B;AACA,QAAMM,gBAAgB,GAAG,MAAMd,MAAM,CAACY,mBAAD,CAArC;AACA,QAAMU,OAAO,GAAG,MAAMtB,MAAM,CAACe,UAAD,EAAaD,gBAAb,CAA5B;;AAEA,MAAI,CAACQ,OAAO,CAACC,OAAb,EAAsB;AAClB,QAAIC,UAAU,GAAG,MAAMH,SAAS,CAAClB,qBAAqB,CAACmB,OAAO,CAACG,GAAT,CAAtB,EAAqCd,KAArC,CAAhC;;AACA,QAAI,CAACa,UAAU,CAACE,IAAX,CAAgBC,GAArB,EAA0B;AACtB;AACH;;AAEDH,IAAAA,UAAU,GAAGA,UAAU,CAACE,IAAX,CAAgBC,GAA7B;AACA,UAAMC,MAAM,GAAG,KAAf;AACA,UAAM3B,GAAG,CAACH,cAAc,CAAC0B,UAAD,EAAaI,MAAb,EAAqBX,MAAM,CAACD,IAA5B,EAAkCC,MAAM,CAACG,IAAzC,CAAf,CAAT;AACH;AACJ","sourcesContent":["import { toggleDir, ACTIONS, pushDirContent } from \"../../actions\";\r\nimport { takeEvery, select, put } from \"redux-saga/effects\"\r\nimport { getApi } from \"./../../apis/apiProvider\";\r\nimport requestDirContetQuery from \"./../../qlQueries/requestDirContent\";\r\nimport { get } from \"lodash/object\";\r\n\r\nexport default function* loadDirRequest() {\r\n    yield takeEvery(ACTIONS.PL_LOAD_DIR_REQUEST, handel)\r\n}\r\n\r\nconst getToken = state => state.user.token;\r\n\r\nconst getCurrentSelection = state => state.playList.currentSelection;\r\n\r\nconst getCurrent = (state, path) => get(state.playList, path);\r\n\r\nfunction* handel(action) {\r\n    console.log(\"aciotn open\", action.open)\r\n    const { callQuery } = getApi(\"UserAssets\");\r\n    const token = yield select(getToken);\r\n    const currentSelection = yield select(getCurrentSelection);\r\n    const current = yield select(getCurrent, currentSelection);\r\n\r\n    if (!current._loaded) {\r\n        let dirContent = yield callQuery(requestDirContetQuery(current._id), token);\r\n        if (!dirContent.data.dir) {\r\n            return;\r\n        }\r\n\r\n        dirContent = dirContent.data.dir;\r\n        const isRoot = false;\r\n        yield put(pushDirContent(dirContent, isRoot, action.path, action.open));\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}