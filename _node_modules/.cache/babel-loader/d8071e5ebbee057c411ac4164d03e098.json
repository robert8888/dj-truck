{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJEKTY\\\\APKI\\\\dj-truck\\\\src\\\\pages\\\\introduction\\\\Content\\\\Content.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./content.scss\";\nimport usePath from \"../Hooks/usePath\";\nimport mention from \"./../MarkDonwExtesnion/mentions\";\n\nconst getMarkups = () => require.context('./../markups', true, /\\.*md/).keys();\n\nconst load = module => import(`./../markups/${module}`).then(module => module.default);\n\nconst Content = () => {\n  const [currentPath] = usePath();\n  const [md, setMd] = useState(null);\n  useEffect(() => {\n    var _getMarkups$filter$;\n\n    if (!currentPath.length) return;\n    let pattern = \"\";\n    currentPath.forEach(slug => pattern += \"\\\\/?\\\\d?\\\\.\" + slug);\n    pattern += \"\\\\.md\";\n    let regex = new RegExp(pattern);\n    let file = (_getMarkups$filter$ = getMarkups().filter(path => regex.test(path))[0]) === null || _getMarkups$filter$ === void 0 ? void 0 : _getMarkups$filter$.replace(\"./\", \"\");\n    if (!file) return;\n    load(file).then(md => fetch(md)).then(response => response.text()).then(md => setMd(md));\n  }, [currentPath, setMd]);\n  return React.createElement(\"main\", {\n    className: \"introduction__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ReactMarkdown, {\n    source: md,\n    plugins: [mention],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), md);\n};\n\nexport default Content;","map":{"version":3,"sources":["D:/PROJEKTY/APKI/dj-truck/src/pages/introduction/Content/Content.js"],"names":["React","useEffect","useState","ReactMarkdown","usePath","mention","getMarkups","require","context","keys","load","module","then","default","Content","currentPath","md","setMd","length","pattern","forEach","slug","regex","RegExp","file","filter","path","test","replace","fetch","response","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,iCAApB;;AAEA,MAAMC,UAAU,GAAG,MAAMC,OAAO,CAACC,OAAR,CAAgB,cAAhB,EAAgC,IAAhC,EAAsC,OAAtC,EAA+CC,IAA/C,EAAzB;;AAEA,MAAMC,IAAI,GAAIC,MAAD,IAAY,OAAQ,gBAAeA,MAAO,EAA9B,EAAiCC,IAAjC,CAAuCD,MAAM,IAAIA,MAAM,CAACE,OAAxD,CAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,WAAD,IAAgBX,OAAO,EAA7B;AACA,QAAM,CAACY,EAAD,EAAKC,KAAL,IAAcf,QAAQ,CAAC,IAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAAA;;AACV,QAAG,CAACc,WAAW,CAACG,MAAhB,EAAwB;AACxB,QAAIC,OAAO,GAAG,EAAd;AACAJ,IAAAA,WAAW,CAACK,OAAZ,CAAqBC,IAAI,IAAIF,OAAO,IAAI,gBAAgBE,IAAxD;AACAF,IAAAA,OAAO,IAAI,OAAX;AACA,QAAIG,KAAK,GAAG,IAAIC,MAAJ,CAAWJ,OAAX,CAAZ;AACA,QAAIK,IAAI,0BAAGlB,UAAU,GAAGmB,MAAb,CAAqBC,IAAI,IAAIJ,KAAK,CAACK,IAAN,CAAWD,IAAX,CAA7B,EAA+C,CAA/C,CAAH,wDAAG,oBAAmDE,OAAnD,CAA2D,IAA3D,EAAiE,EAAjE,CAAX;AACA,QAAG,CAACJ,IAAJ,EAAU;AACVd,IAAAA,IAAI,CAACc,IAAD,CAAJ,CACKZ,IADL,CACUI,EAAE,IAAIa,KAAK,CAACb,EAAD,CADrB,EAEKJ,IAFL,CAEUkB,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFtB,EAGKnB,IAHL,CAGUI,EAAE,IAAIC,KAAK,CAACD,EAAD,CAHrB;AAIH,GAZQ,EAYP,CAACD,WAAD,EAAcE,KAAd,CAZO,CAAT;AAcA,SACI;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAED,EAAvB;AAA2B,IAAA,OAAO,EAAE,CAACX,OAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EACqDW,EADrD,CADJ;AAKH,CAvBD;;AAyBA,eAAeF,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport \"./content.scss\";\r\nimport usePath from \"../Hooks/usePath\";\r\nimport mention from \"./../MarkDonwExtesnion/mentions\";\r\n\r\nconst getMarkups = () => require.context('./../markups', true, /\\.*md/).keys()\r\n\r\nconst load = (module) => import(`./../markups/${module}`).then( module => module.default);\r\n\r\nconst Content = () => {\r\n    const [currentPath] = usePath();\r\n    const [md, setMd] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(!currentPath.length) return;\r\n        let pattern = \"\";\r\n        currentPath.forEach( slug => pattern += \"\\\\/?\\\\d?\\\\.\" + slug)\r\n        pattern += \"\\\\.md\";\r\n        let regex = new RegExp(pattern);\r\n        let file = getMarkups().filter( path => regex.test(path))[0]?.replace(\"./\", \"\");\r\n        if(!file) return;\r\n        load(file)\r\n            .then(md => fetch(md))\r\n            .then(response => response.text())\r\n            .then(md => setMd(md))\r\n    },[currentPath, setMd])\r\n\r\n    return (\r\n        <main className=\"introduction__content\">\r\n            <ReactMarkdown source={md} plugins={[mention]}/>{md}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}